(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    625967,      12373]
NotebookOptionsPosition[    617871,      12119]
NotebookOutlinePosition[    618209,      12134]
CellTagsIndexPosition[    618166,      12131]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cos Vs Gauss Tunneling", "Title",
 CellChangeTimes->{{3.5758331410376663`*^9, 3.5758331512456284`*^9}}],

Cell[CellGroupData[{

Cell["Numbers:", "Subsection",
 CellChangeTimes->{{3.575834085268341*^9, 3.575834088019985*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.57583412522272*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[HBar]", "=", 
   RowBox[{"1.05457", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"852.0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "short", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kl", "=", 
    FractionBox["\[Pi]", "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "long", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    FractionBox["\[Lambda]", "2"]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"short", " ", "lattice", " ", "spacing"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amu", "=", 
   RowBox[{"1.6605", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "27"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mRb", "=", 
    RowBox[{"86.909", "*", "amu"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"mass", " ", "or", " ", "Rb87"}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"Er", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["ks", "2"]}], 
     RowBox[{"2", "mRb"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Recoil", " ", "energy", " ", "of", " ", "the", " ", "short", " ", 
    "lattice"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"as", "=", 
    RowBox[{"5.3", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"approximate", " ", "s"}], "-", 
    RowBox[{
    "wave", " ", "scattering", " ", "length", " ", "for", " ", "Rb87", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "meters"}], ")"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.512483112781426*^9, 3.512483147522606*^9}, {
  3.512483180808468*^9, 3.512483205446816*^9}, {3.512483393869198*^9, 
  3.512483393993453*^9}, {3.512496829473072*^9, 3.512496829989369*^9}, {
  3.512497177873698*^9, 3.512497353482342*^9}, {3.5617412038970118`*^9, 
  3.56174120458295*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"852.0", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ks", "=", 
     FractionBox[
      RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Er", "=", 
     RowBox[{"N", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        SuperscriptBox["ks", "2"]}], 
       RowBox[{"2", "mRb"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"btwn", "=", 
     RowBox[{".9", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"waist", "=", 
     RowBox[{".75", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.575843583225069*^9, 3.575843589450079*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vt", "=", 
  RowBox[{
   RowBox[{"Er", "/", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"(", 
       RowBox[{"mRb", "*", 
        SuperscriptBox["waist", "2"]}], ")"}]], ")"}]}], "//", 
   "N"}]}]], "Input"],

Cell[BoxData["15.295831061993779`"], "Output",
 CellChangeTimes->{3.5758341411079407`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Density Plot", "Subsection",
 CellChangeTimes->{{3.57583413566888*^9, 3.575834137588172*^9}}],

Cell[BoxData["15.295831061993779`"], "Output",
 CellChangeTimes->{3.5758340949636602`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"First", ",", " ", 
   RowBox[{
   "show", " ", "how", " ", "the", " ", "tunneling", " ", "rates", " ", "of", 
    " ", "the", " ", "sinusoid", " ", "depend", " ", "on", " ", "things"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575833183257682*^9, 3.575833236785583*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"Log10", "[", 
    RowBox[{"SinTunnel", "[", 
     RowBox[{"V", ",", "\[Lambda]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", 
     RowBox[{".2", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", 
     RowBox[{".9", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "66"}]}], "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxl3X3wvHtd1/GLNWEV22w9IIKaN3S4M1pBEAaRbTSgnDCPSllohUgkJTGj
Jw2dYZrAEVER9ZBHAVEhTOIm7xg1bQgwnTSaCHSwMi1aDB3EidbJss7X1+P1
mffJccZ5dO31Ob/vtdvzr53XfvLTn3PbV+y2bfv4P75td/1f//PkN/z0nR98
94s++1e+6eW//P/+9wnTl/rLH3T70x90+wfvdv1af/773/qU97/1/9zt9bsz
v+Ku07/pw8/z/n19y+Pe9DGPe9O9z/O8Q/22p9z1//DR53n+sb7HzV9zS/3K
m//eferH33X8x3xs/Z6b//796q97+l0H3r/+2Jt/zwPqH7vr9sd9Qv2FN/++
T6y/9ub+T6p/7ubfu3zfm/M+uf6Km3//p9Q/enP+p9YfdvP3PLC+7ea/t/yq
m7/vT9YfuOvyU26tn3Dz9z6o/tabt3f5P9z8/Q+uP+2uf87TH1I/7+bveWj9
Czd/z/LH3fw9D6ufdfP3fFr9Ezd/z5+q73nz9zy8/uKbv2f5B2/+nj99t/fj
VH/fzfXT3Z7v8m/f/P2fXt/n5t+3/Fk3z+MRd/v8LL/o5vks37z8cY+sb/7z
L1/+g5v/Wb715vl9Rv0Xbv6+5a+++XseVX/PzYHLb7n5e5bfd/P3PLr+6Ju/
Z/kzb/6Bn1l/2c3fs/yCm79n+XU3f89j6n938/cs/2ENHns3b9u9Xv0db/m9
P/fi9mH6UuvDvH6t9WG+fndmfZj372t9mOcdan2Y5x9rfWB9YH1gfWB9YH1g
fWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9
mO/HqdaH+XyX9YH1gfVhfn6W9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1
gfWB9YH1YXrb3n7nV/7m9tPf0j5MX2p9mNevtT7M1+/OrA/z/n2tD/O8Q60P
8/xjrQ+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP
rA+sD6wPrA+sD6wPrA+sD/P9ONX6MJ/vsj6wPrA+zM/Psj6wPrA+sD6wPrA+
sD6wPrA+sD6wPrA+sD6wPrA+sD6wPkxv2wte8meO+4d/W/swfan1YV6/1vow
X787sz7M+/e1PszzDrU+zPOPtT6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6w
PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPsz341Trw3y+y/rA+sD6
MD8/y/rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+jC9bZ/yOR/1
8nv9xZe0D9OXWh/m9WutD/P1uzPrw7x/X+vDPO9Q68M8/1jrA+sD6wPrA+sD
6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPr
A+vDfD9OtT7M57usD6wPrA/z87OsD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D6wPrA+sD6wP09t2j5/5n6d7f8S3tw/Tl1of5vVrrQ/z9bsz68O8f1/rwzzv
UOvDPP9Y6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPr
A+sD6wPrA+sD6wPrA+sD6wPrw3w/TrU+zOe7rA+sD6wP8/OzrA+sD6wPrA+s
D6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD9Pb9muP+Y23Ht6y+jB9qfVhXr/W
+jBfvzuzPsz797U+zPMOtT7M84+1PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6w
PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+zPfjVOvDfL7L+sD6
wPowPz/L+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6ML1tP/sj
v/SXj897afswfan1YV6/1vowX787sz7M+/e1PszzDrU+zPOPtT6wPrA+sD6w
PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+
sD6wPsz341Trw3y+y/rA+sD6MD8/y/rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6
wPrA+sD6wPrA+jC9ba94+E++/z6f8R3tw/Sl1od5/Vrrw3z97sz6MO/f1/ow
zzvU+jDPP9b6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6
wPrA+sD6wPrA+sD6wPrA+sD6wPow349TrQ/z+S7rA+sD68P8/CzrA+sD6wPr
A+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+vD9LZ9ww+9+vkf91urD9OXWh/m
9WutD/P1uzPrw7x/X+vDPO9Q68M8/1jrA+sD6wPrA+sD6wPrA+sD6wPrA+sD
6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+vDfD9OtT7M57us
D6wPrA/z87OsD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP09v2
tAd++y2f8JrvbB+mL7U+zOvXWh/m63dn1od5/77Wh3neodaHef6x1gfWB9YH
1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfW
B9YH1gfWh/l+nGp9mM93WR9YH1gf5udnWR9YH1gfWB9YH1gfWB9YH1gfWB9Y
H1gfWB9YH1gfWB9YH6a37XGv/PrXftJf+672YfpS68O8fq31Yb5+d2Z9mPfv
a32Y5x1qfZjnH2t9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1g
fWB9YH1gfWB9YH1gfWB9YH1gfWB9YH2Y78ep1of5fJf1gfWB9WF+fpb1gfWB
9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfVhetvuf/9nfdYD73dH+zB9
qfVhXr/W+jBfvzuzPsz797U+zPMOtT7M84+1PrA+sD6wPrA+sD6wPrA+sD6w
PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+zPfjVOvD
fL7L+sD6wPowPz/L+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6
ML1tv/edX/iOB/3b1YfpS60P8/q11of5+t2Z9WHev6/1YZ53qPVhnn+s9YH1
gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9YH1Yb4fp1of5vNd1gfWB9aH+flZ1gfWB9YH1gfWB9YH1gfWB9YH
1gfWB9YH1gfWB9YH1gfWh+lt++U/9oRnPOxFL2sfpi+1Pszr11of5ut3Z9aH
ef++1od53qHWh3n+sdYH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH
1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1of5fpxqfZjPd1kfWB9YH+bnZ1kf
WB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB+mt+0nXvTQ68M/5x+1
D9OXWh/m9WutD/P1uzPrw7x/X+vDPO9Q68M8/1jrA+sD6wPrA+sD6wPrA+sD
6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+vDfD9O
tT7M57usD6wPrA/z87OsD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D6wP09t2x4ff98WP+P3Vh+lLrQ/z+rXWh/n63Zn1Yd6/r/Vhnneo9WGef6z1
gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9YH1gfVhvh+nWh/m813WB9YH1of5+VnWB9YH1gfWB9YH1gfWB9YH
1gfWB9YH1gfWB9YH1gfWB9aH6W37muff45Me/WPf3T5MX2p9mNevtT7M1+/O
rA/z/n2tD/O8Q60P8/xjrQ+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP
rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD/P9ONX6MJ/vsj6wPrA+zM/P
sj6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPkxv2xf9r/f/yGO/
6s72YfpS68O8fq31Yb5+d2Z9mPfva32Y5x1qfZjnH2t9YH1gfWB9YH1gfWB9
YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH2Y
78ep1of5fJf1gfWB9WF+fpb1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfVhetseefsvP+nxD/qe9mH6UuvDvH6t9WG+fndmfZj372t9mOcdan2Y
5x9rfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1g
fWB9YH1gfWB9YH1gfWB9mO/HqdaH+XyX9YH1gfVhfn6W9YH1gfWB9YH1gfWB
9YH1gfWB9YH1gfWB9YH1gfWB9YH1YXrbjr/zL99z/rXVh+lLrQ/z+rXWh/n6
3Zn1Yd6/r/Vhnneo9WGef6z1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfVhvh+nWh/m813WB9YH1of5
+VnWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9aH6W37nWe/4Tmf
+93f2z5MX2p9mNevtT7M1+/OrA/z/n2tD/O8Q60P8/xjrQ+sD6wPrA+sD6wP
rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D/P9ONX6MJ/vsj6wPrA+zM/Psj6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6w
PrA+sD6wPkxv2zvee+eHPfm2l7cP05daH+b1a60P8/W7M+vDvH9f68M871Dr
wzz/WOsD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPr
A+sD6wPrA+sD6wPrA+sD68N8P061Psznu6wPrA+sD/Pzs6wPrA+sD6wPrA+s
D6wPrA+sD6wPrA+sD6wPrA+sD6wPrA/T2/aGv/HCl33evV/RPkxfan2Y16+1
PszX786sD/P+fa0P87xDrQ/z/GOtD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP8/041fown++yPrA+
sD7Mz8+yPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+TG/bt/7q
cx/2+W9dfZi+1Powr19rfZiv351ZH+b9+1of5nmHWh/m+cdaH1gfWB9YH1gf
WB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9Y
H1gf5vtxqvVhPt9lfWB9YH2Yn59lfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1g
fWB9YH1gfWB9mN62v/OXvvRnb/uGV7YP05daH+b1a60P8/W7M+vDvH9f68M8
71Drwzz/WOsD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD
6wPrA+sD6wPrA+sD6wPrA+sD68N8P061Psznu6wPrA+sD/Pzs6wPrA+sD6wP
rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA/T23br3/rBhzzsAd/XPkxfan2Y
16+1PszX786sD/P+fa0P87xDrQ/z/GOtD6wPrA+sD6wPrA+sD6wPrA+sD6wP
rA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP8/041fown++y
PrA+sD7Mz8+yPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+TG/b
Hbfe+buv+3urD9OXut+vHtevdb9fPV6/O3O/Xz3u39f9fvU471D3+9Xj/GPd
71fH/X513O9Xx/1+ddzvV8f9fnXc71fH/X513O9Xx/1+ddzvV8f9fnXc71fH
/X513O9Xx/1+ddzvV8f9fnXc71fH/X513O9Xx/1+ddzvV8f9fnXc71fH/X51
3O9Xx/1+ddzvV4/341T3+9Xj+S73+9Vxv18d9/vV4/Oz3O9Xx/rA+sD9fnXc
71fH/X513O9Xx/1+ddzvV8f9fnXc71fH/X513O9Xx/1+ddzvV8f9fnWsD9Pb
ds//8m3//OHvXH2YvtT6MK9fa32Yr9+dWR/m/ftaH+Z5h1of5vnHWh9YH1gf
WB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9Y
H1gfWB9YH+b7car1YT7fZX1gfWB9mJ+fZX1gfWB9YH1gfWB9YH1gfWB9YH1g
fWB9YH1gfWB9YH1gfZjetttf9YJvfOPpVe3D9KXWh3n9WuvDfP3uzPow79/X
+jDPO9T6MM8/1vrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6
wPrA+sD6wPrA+sD6wPrA+sD6wPrA+jDfj1OtD/P5LusD6wPrw/z8LOsD6wPr
A+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD68P0tr33y573BY/4ltWH6Uut
D/P6tdaH+frdmfVh3r+v9WGed6j1YZ5/rPWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9WG+H6daH+bz
XdYH1gfWh/n5WdYH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1ofp
bXvqxz/3AT/6vtWH6UutD/P6tdaH+frdmfVh3r+v9WGed6j1YZ5/rPWB9YH1
gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9WG+H6daH+bzXdYH1gfWh/n5WdYH1gfWB9YH1gfWB9YH1gfWB9YH
1gfWB9YH1gfWB9YH1ofpbXv7rzzzvz7qid+/fr97+FL397vH9Wvd3+8er9+d
ub/fPe7f1/397nHeoe7vd4/zj3V/vzvu73fH/f3uuL/fHff3u+P+fnfc3++O
+/vdcX+/O+7vd8f9/e64v98d9/e74/5+d9zf7477+91xf7877u93x/397ri/
3x3397vj/n533N/vjvv73XF/vzvu73fH/f3uuL/fHff3u8f7car7+93j+S73
97vj/n533N/vHp+f5f5+d6wPrA/c3++O+/vdcX+/O+7vd8f9/e64v98d9/e7
4/5+d9zf7477+91xf7877u93x/397lgfprft0S972ht+4vtXH6YvtT7M69da
H+brd2fWh3n/vtaHed6h1od5/rHWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfW
B9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9aH+X6can2Yz3dZH1gf
WB/m52dZH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfprftNV90
29c99g9WH6YvtT7M69daH+brd2fWh3n/vtaHed6h1od5/rHWB9YH1gfWB9YH
1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfW
B9aH+X6can2Yz3dZH1gfWB/m52dZH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9Y
H1gfWB9YH1gfprftvscnf85P/dUfaB+mL7U+zOvXWh/m63dn1od5/77Wh3ne
odaHef6x1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfW
B9YH1gfWB9YH1gfWB9YH1gfWh/l+nGp9mM93WR9YH1gf5udnWR9YH1gfWB9Y
H1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH6a37YX/5vF/9PFvXn2YvtT6MK9f
a32Yr9+dWR/m/ftaH+Z5h1of5vnHWh9YH1gfWB9YH1gfWB9YH1gfWB9YH1gf
WB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH+b7car1YT7fZX1g
fWB9mJ+fZX1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfZjetg+9
+JHv/plbfrB9mL7U+jCvX2t9mK/fnVkf5v37Wh/meYdaH+b5x1ofWB9YH1gf
WB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9Y
H1gfWB/m+3Gq9WE+32V9YH1gfZifn2V9YH1gfWB9YH1gfWB9YH1gfWB9YH1g
fWB9YH1gfWB9YH2Y3rZn/vmHvOr83NWH6UutD/P6tdaH+frdmfVh3r+v9WGe
d6j1YZ5/rPWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfWB9YH1gfWB9YH1gfWB9WG+H6daH+bzXdYH1gfWh/n5WdYH1gfWB9YH
1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1ofpbXvXvf7Es9/yi6sP05daH+b1
a60P8/W7M+vDvH9f68M871Drwzz/WOsD6wPrA+sD6wPrA+sD6wPrA+sD6wPr
A+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD68N8P061Psznu6wP
rA+sD/Pzs6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA/T2/bE
t93yqM996Kvbh+lLrQ/z+rXWh/n63Zn1Yd6/r/Vhnneo9WGef6z1gfWB9YH1
gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB9YH1gfWB
9YH1gfVhvh+nWh/m813WB9YH1of5+VnWB9YH1gfWB9YH1gfWB9YH1gfWB9YH
1gfWB9YH1gfWB9aH6W378X/wkX/wtheuPkxfan2Y16+1PszX786sD/P+fa0P
87xDrQ/z/GOtD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D6wPrA+sD6wPrA+sD6wPrA+sD6wP8/041fown++yPrA+sD7Mz8+yPrA+sD6w
PrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+TG/breft55/0G6sP05e6+w/j
+rXu/sN4/e7M3X8Y9+/r7j+M8w519x/G+ce6+w9x9x/i7j/E3X+Iu/8Qd/8h
7v5D3P2HuPsPcfcf4u4/xN1/iLv/EHf/Ie7+Q9z9h7j7D3H3H+LuP8Tdf4i7
/xB3/yHu/kPc/Ye4+w9x9x/i7j/E3X+Iu/8w3o9T3f2H8XyXu/8Qd/8h7v7D
+Pwsd/8h1gfWB+7+Q9z9h7j7D3H3H+LuP8Tdf4i7/xB3/yHu/kPc/Ye4+w9x
9x/i7j/E+jC9bXf87//x0p9/wmvW/sPwpe7+w7h+rbv/MF6/O3P3H8b9+7r7
D+O8Q939h3H+se7+Q9z9h7j7D3H3H+LuP8Tdf4i7/xB3/yHu/kPc/Ye4+w9x
9x/i7j/E3X+Iu/8Qd/8h7v5D3P2HuPsPcfcf4u4/xN1/iLv/EHf/Ie7+Q9z9
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
9x9ifZjetts///Fvf9+/WH2YvtTdfxjXr3X3H8brd2fu/sO4f193/2Gcd6i7
/zDOP9bdf4i7/xB3/yHu/kPc/Ye4+w9x9x/i7j/E3X+Iu/8Qd/8h7v5D3P2H
uPsPcfcf4u4/xN1/iLv/EHf/Ie7+Q9z9h7j7D3H3H+LuP8Tdf4i7/xB3/yHu
/kPc/Yfxfpzq7j+M57vc/Ye4+w9x9x/G52e5+w+xPrA+cPcf4u4/xN1/iLv/
EHf/Ie7+Q9z9h7j7D3H3H+LuP8Tdf4i7/xB3/yHWh+lte+9HPfIlz/6Ef7r2
H4YvdfcfxvVr3f2H8frdmbv/MO7f191/GOcd6u4/jPOPdfcf4u4/xN1/iLv/
EHf/Ie7+Q9z9h7j7D3H3H+LuP8Tdf4i7/xB3/yHu/kPc/Ye4+w9x9x/i7j/E
3X+Iu/8Qd/8h7v5D3P2HuPsPcfcf4u4/xN1/iLv/EHf/Ybwfp7r7D+P5Lnf/
Ie7+Q9z9h/H5We7+Q6wPrA/c/Ye4+w9x9x/i7j/E3X+Iu/8Qd/8h7v5D3P2H
uPsPcfcf4u4/xN1/iPVhetue+gsP/iu/9XWrD9OXuvsP4/q17v7DeP3uzN1/
GPfv6+4/jPMOdfcfxvnHuvsPcfcf4u4/xN1/iLv/EHf/Ie7+Q9z9h7j7D3H3
H+LuP8Tdf4i7/xB3/yHu/kPc/Ye4+w9x9x/i7j/E3X+Iu/8Qd/8h7v5D3P2H
uPsPcfcf4u4/xN1/iLv/MN6PU939h/F8l7v/EHf/Ie7+w/j8LHf/IdYH1gfu
/kPc/Ye4+w9x9x/i7j/E3X+Iu/8Qd/8h7v5D3P2HuPsPcfcf4u4/xPowvW1v
/8ZPfOBz3rX6MH2pu/8wrl/r7j+M1+/O3P2Hcf++7v7DOO9Qd/9hnH+su/8Q
d/8h7v5D3P2HuPsPcfcf4u4/xN1/iLv/EHf/Ie7+Q9z9h7j7D3H3H+LuP8Td
f4i7/xB3/yHu/kPc/Ye4+w9x9x/i7j/E3X+Iu/8Qd/8h7v5D3P2HuPsP4/04
1d1/GM93ufsPcfcf4u4/jM/PcvcfYn1gfeDuP8Tdf4i7/xB3/yHu/kPc/Ye4
+w9x9x/i7j/E3X+Iu/8Qd/8h7v5DrA/T2/bpf/aW3/7AI17fPkxfan2Y16+1
PszX786sD/P+fa0P87xDrQ/z/GOtD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+s
D6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wP8/041fown++yPrA+
sD7Mz8+yPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+sD6wPrA+zP//+a+e
8OCHvvbhH3rJN7cX/Jt3/ft+6THnef2xtfu//pkf9xFv/COv7/3s/rv77v/9
J7/hp+/84Ltf1Ovs+t3//c77w+tvfsKb//Y/e8ZXf8Y3f/bX3PX8/9tjzuz6
u/79Hc97xwNe3+vs33v3++d//83/33/f/a57vevOc/7d//vO+7+uLJ2f
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1: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
PwWxjh8tiuKAd/Kvc+xrFuUMa38X5AM1f7k/898Kco/r+NV9mPN/AEwf/CgU
5QMecD+wDpulopzBg3JRkX8mVyxqL2vVonyA8awoH7imtKgzWIuK6oMf+aIi
/epFeYITtaLOYN4oKsdZLYu6b94Jzxs/ub5WReXgultRrMDFSkW5gRPtioow
vkJRbuBEm6IinLYu6gzW2hblBvUrF1UH7x2KcgMPuhTFMXx1LCoH46sUtRcP
2hflBjWrFpVjvmJRPenROfz5vYLOWq2o8/Cge1H3AY9rFxVhfM2inMGDtYqK
fA/WKMoZ1tYpai+M9yzq2813ff2i3GDON4Xfcfh9ZfWielK/blF1uNKjqIgf
6xUVqe9aVE+edaUoFngfGxTVB1c2LCriyhZ2Aye2LCrC5qZFcQ+PmxUV4XST
otxgbfOi/KF+q6LqYHzbojyB352LcgNG+hSVg7Wti9qLQ9sU5Qw1vYvKMe9V
VE969HUdbPZzxInti+Kee+1fFPc4McCRtYH+BsD7Dt4Lp4Ocw4/BRfEN78OL
8pbr3s59OHdoUdzj0BDvZT7MOWp28nmctXFR3xSe1wg/A5zYpSim4X1qUW7A
1O5F+QDXezjC7KiifIDN3RzxYFefwdpY74XlvYpiFw8mhtHJ842Keudc00hf
C9cxznU4sacjPo13xKExRXnL9fE7B7+P87v4aF8La/sU5QnMTi7KAXjctygH
8GM/R9am+b5xaIr38iymO4crM4riHt5nF+UMLE9yH849oCgHcGim9zKf5Rw1
+/s8ztrbz4Zr5e9J/HMF/pnCHJ+NH/P8vHiHhxXlCX4c7gjvBxXlCX4c7Aiz
84vyhLVDi/KE+iNcB/vHFOUJTpxTlCcwcqxz8H6k9+LE0UV5Qs1RzjE/xD3p
scB1+HGcI/yeVJQnsH9CUZ7gx4mOrJ1alCc4cbL38vPzNOfg+oyiPIH9s4vy
hOs+3n0496yiPMGJM72X+ULnqDnd53HWnWHM9fM+xT25jnP9POD0hqI8gZdL
ivIEPy51hP0Li/IEPxY5wuYFRXnC2sVFcUz9Za6D/auL8gRvznNPHF3sHLxc
7r34cVUYE1xzhXO4cpF70uMa1+HEEkeYXVaUG/B+XVFu4MRSR9Zu9L3iwfXe
y/3f5Bws31KUG/C+vCg34Pda9+Hc24pyAw9u9V7mtztHzc0+j7PO933zvP7x
u7krjDt8Nu/pb89Ze7AoN3DiIUcYv7coN3DiPkc4vacoN1h7oCg3qH/YdfD+
eFFu4MGbRbkBC084B+OPeC8ePFaUG9Q86hzz+92THk+6DieecoTZ54pyA96f
KcoNnHjWkbUXi3IDD573Xjh9yTlYfqUoN+D9jaLc4Lqfdh/Ofa0oN/DgVe9l
/rpz1Lzs8zjr7jAO9PPiHczz/C0/Dzj9qSg34OWjotzAiY8dYfy9otzAifcd
4fTdotxg7cOi3KD+E9fB+5dFuYEHb7snjHzlHIx/6r148EVRblDzeRhXev6B
e9Lja9fhxDeOMPtDUW7A+3dFuYET3zuy9rPvFQ9+9F7u/xfnYPm3otyA97+K
cgNev3Ufzv2jKDfw4HfvZf6nc9T86vM46x3fN8/rX78P3s9/jnC9ayn8LAmj
TRjlknyA60pJEWZLJTnDGv9PdtThSlRSxJV8SRF+ayVxD79pSazjR/uSOOCd
VEvKsW/VkpxhLSnJB2rikvozL5bkHtdRKKkP83pJffCjWZIPeMD9wDpstizJ
GTxoVVJ8IYwWJe1lrW1JPsD4KiX5wDWtWNIZrDVK6oMfWUmRfu1K8gQnVirp
DOYrl5TjrA4l3TfvhOeNn1xfx5JycL1JSazAxRoluYETa5YUYbxzSW7gRJeS
Ipx2KukM1lYvyQ3q1yqpDt7XKckNPFivJI7ha92ScjDeLfz5s6I8WLskN6jp
XlKO+Wol9aRHj5LqOGv9ks7Dg01Lug943KykCOMbluQMHmxUUuR7sEFJzrDW
q6S9ML51Sd9uvutbleQG86PDn7cJY9swepbUk/rNS6rDlS1KivixZUmR+o1L
6smzbl0SC7yP3iX1wRXOJuLK9nYDJ3ZwhM1+JXEPj9s5wmnfktxgbUBJ/lC/
o+tgfHBJnsDvniW5ASNDnIO1gd6LQzuV5Aw1g5xj3t896THUdbA5zBEnRpbE
Pfe6c0nc48QIR9ZG+RsA77t4L5zu5hx+jCmJb3gfV5K3XPdw9+HcPUriHod2
917mY52jZrTP46w+JX1TeF7j/QxwYmJJTMP7/JLcgKn9SvIBrqeE0bUkZvcu
yQfY3McRD/byGaxN9V5YnlkSu3gwoyQHmMPTf/7OTfC1cB3TXIcT0x3xaX9H
6vctyVuuD6b4ecvP4Em+FtZmleQJzM4ryQF4nFOSA/gx15G1g3zfOHSg9/Is
DnYOVw4tiXt4P7IkZ2B5tvtw7uElOYBDh3kv8yOco+YQn8dZB/jZcK38/Obv
E/zd4CifjR+nlQOLYewUxkkleYIfJzvC+3EleYIfxzvC7IKSPGHtxJI8of4U
18H+GSV5ghNXlOQJjJzpHLyf6r04cXpJnlBzmnPMT3BPepzlOvxY6Ai/55Xk
CeyfU5In+HGuI2sXluQJTpzvvfz8XOQcXF9ckiewf3lJnnDdZ7sP515akic4
cYn3Mr/MOWou8nmc9VhJ37tjwrjAPbmOK/084PSekjyBl2VhTC7Jj+sdYf+a
kjzBjyWOsLm4JE9Yu64kjvHsBtfB/i0leYI3V7knjt7qHLzc6L34cXNJblBz
k3PMr3VPetzmOpy43RFm7yrJDXi/oyQ3cOJOR9bu9b3iwd3ey/3f5xwsP1CS
G/D+SEluwO9y9+Hch0pyAw8e9F7mDztHzf0+j7Ou9n3zvNKy3s3jYTzqs3lP
SVlz1p4ryQ2ceN4Rxp8qyQ2ceNoRTp8syQ3Wni3JDepfcB28v1KSG3jwWUlu
wMKrzsH4i96LBy+X5AY1LznH/Bn3pMdrrsOJ1x1h9u2S3ID3N0tyAyfecmTt
vZLcwIN3vBdO33cOlj8syQ14/7QkN7juN9yHcz8uyQ08+Mh7mX/iHDUf+DzO
eiKMY/28eAfHeP65nwec8j8IgRvw8kNJbuDEj44w/nVJbuDEN45w+lVJbrD2
fRhLXf+T6+D9t5LcwIMv3BNGfncOxn/2Xjz4tSQ3qPnFOebfuif+/eE6nPjT
EWb/LckNeP+7JDdw4h9H1qKy7hUP/vNe7j9fVg6Wi2W5Ae9xWW7A61/uw7nl
stzAg1JZe5lXyspRUyjrPM760vfN86qW9T54P7WyIlzvFf7cOYwuYbQqywe4
bl1WhNmWZTnDWr2sOlxplBVxJSsrwu9KZXEPvyuWxTp+dC+LA95J27Jy7OtW
ljOstSnLB2pWKKs/8xZlucd1NMvqw7xdWX3wY9WyfMAD7gfWYbNDWc7gQcey
4rthtC9rL2url+UDjHctyweuabWyzmBt5bL64McqZUX6rVmWJzixRllnMF+r
rBxnrV3WffNOeN74yfWtU1YOrvuWxQpcbFiWGzixUVkRxnuU5QZOrFdWhNN1
yzqDtQ3KcoP6jcuqg/deZbmBB1uWxTF8bV5WDsY3KWsvHmxWlhvUbFpWjnnP
8OfvSuqxRVl1nLVVWefhQT/fBzxu5wjj25TlDB5sW1bke9C7LGdY6++9MD6w
rG833/Udy3KDOd8Ufk/l95Wty+pJ/QDX4cr2jvixgyP1fcrqybPuVBYLvI9B
7lP1709EXBlpN3BiF0fYHFYW9/A43BFOh5blBmsjyvKH+l1dB+NjyvIEfqeV
5QaM7O4crI3yXhwaXZYz1OzmHPOd3ZMee7gONsc64sSEsrjnXvcsi3ucGO/I
2t5lOQPvE70XTvdxDj/2LYtveJ9alrdc9zj34dzJZXGPQ/t5L/MpzlEzyedx
1pCyvik8r+l+Bjgxoyym4X1BWW7A1LyyfIDrAx1hdlYY65fF5mxHPJjpM3Bl
vvfC8mFlsYsHh5blAPPBfudc0/6+Fq7jINfhxMGO+HSII/Vzy/KW6+Pn3rZm
dI6vhbUjyvIEZo8pywF4PKosB/DjaEfWjvN949Cx3suzON45XDmxLO7h/dSy
nIHlI92Hc08uywEcOsl7mZ/iHDUn+DzOOtzPhmvln9Xy7zH4dxinl+UGz+n3
Svh5GsZtYZxXlif4cb4jvC8syxP8ONsRZs8qyxPWzi3LE+ovcB3sX1yWJzhx
Y1mewMglzsH7hd6LExeV5Qk1i5xjfo570uNS1+HHZY7we1VZnsD+FWV5gh9X
OrJ2TVme4MTV3svPzyXOwfV1ZXkC+zeU5QnXfbn7cO6ysjzBiaXey/x656i5
1udx1stlPfczwljsnlzHTX4ecPpkWZ7Ay11leYIfdzvC/u1leYIfyx1h87Yw
DvDanWVxTP09roP9B8ryBG9udk8cfdA5eLnXe/Hj/rLcoOY+55jf4Z70eMh1
OPGwI8w+XpYb8P5oWW7gxGOOrD3le8WDJ7yX+3/aOVh+tiw34P3Fstzg78eP
uA/nPl+WG3jwnPcyf8E5ap7xeZx1i++b78qKFb2bV8J4yWfzntpUNGft7bLc
wIl3HGH89bLcwIk3HOH0tbLcYO2tstyg/l3XwfuHZbmBBz+X5QYsfOQcjL/n
vXjwQVluUPO+c8zfdE96fOw6nPjEEWa/KMsNeP+sLDdw4nNH1r4uyw08+NJ7
4fQb52D5u7LcgPefynKD6/7UfTj3h7LcwIPvvZf5j85R863P46xXwzjTz4t3
cIbnv/h5wGm9Ijfg5d+y3MCJ/xxh/M+y3MCJvxzh9I+y3GDtn7LcoJ7/wTzq
4L1YkRt48Kt7wkipohyMRxXtxYNCRW5Qk68ox/xv96RHuaI6nKhUFGG2WpEb
8J5U5AZOpBVF1hoV3Sse1Cray/1nFeVguUVFbsD7ChW5Aa9xRX04t1VFbuBB
y4r2Mm9dUY6aZkXncdbvYdzq59W2ovfB+1mpogjXM8Ofe4SxXhgdK/IBrjtV
FGG2Q0XOsNauojpcWbmiiCurVBThd42KuIff1SpiHT82rYgD3snqFeXYt0lF
zrDWpSIfqOlcUX/m7Styj+tYtaI+zNesqA9+dKvIBzzgfr4xm2tX5AwerFNR
/CqM7hXtZa1nRT7A+MYV+cA1rV/RGaytVVEf/OhaUaTfhhV5ghMbVHQG840q
ynFWr/Dn3/xOeN74yfVtXlEOrodWxApcbFORGzixbUURxresyA2c2KqiCKdb
VHQGa70rcoP6PhXVwXv/itzAgx0q4hi+BjgH4329Fw+2q8gNavo5x3zrinrS
Y3vXcdaOPg8Phvk+4HG4I4zvVJEzeDDYke/BoIqcYW1n74XxURV9u/mu71qR
G8wvCmN0GGPCGOie1I9wHa6MdMSPXRypH+KePOt1K2KB97Gb+7T12URcmWA3
cGKiI2yOrYh7eBznCKd7VOQGa+Mr8of6vVwH4/tW5An8HhzGZhUxsp9zsLa3
9+LQpIqcoWYf55jv6Z70mOw62JziiBP7V8Q99zqtIu5xYrojawdU5Ay8z/Be
OJ3lHH7MqYhveJ9fkbc4PdV9OHdeRdzj0FzvZX6gc9TM9nmctXtF3xSe1yF+
BjhxWEVMw/tZFbkBU8dU5ANcH+sIs0dU5ANsHumIB4f7DNYWeC8sn1QRu3hw
YkUOMB/jd841Hepr4TqOcx1OHO+ITyc4Un90Rd5yfTDFz1t+Bh/la2HtlIo8
gdkzKnIAHk+ryAH8ON2RtYW+bxw603t5Fmc7hyvnVsQ9vF9YkTOwfKr7cO75
FTmAQ+d5L/MLnKPmHJ/HWSf72XCt/Pzm74T83WCRz8YPfrYP9tpVFXmCH1c7
wvtlFXmCH5c7wuylFXnC2pUVeUL9YtfB/nUVeYIT91XkCYwsdQ7er/FenLi2
Ik+oWeIc8yvckx7LXIcf1zvC780VeQL7N1bkCX7c5Mgaf6fCE5y4xXv5+Xm7
c3B9R0WewP69YRzk677BfTj3roo8wYk7vZf53c7h1nKfx1kfVPS9u7iiv9vN
9HXc7+cBp69V5Am8PF6RJ/jxhCPsP1yRJ/jxiCNsPlSRJ6w9VhHH1D/pOth/
tiJP8OYB98TR55yDl6e8Fz+eqcgNap52jvmj7kmP512HEy84wuwrFbkB7y9V
5AZOvOzI2uu+Vzx41Xu5/zecg+W3KnID3t+ryA34fdF9OPeditzAg7e9l/m7
zlHzps/jrAd93zyv1WK9mw/DeN9n8566xJqz9kVFbuDEl44w/klFbuDEp45w
+nFFbrD2eUVuUP+V6+D9u4rcwIN8LDdg4XvnYPxr78WDbytyg5pvnGP+mXvS
4wfX4cSPjjD7a0VuwPvPFbmBE784svZHRW7gwW/eC6d/OgfLf1fkBrxHsdzg
un9yH879tyI38OAf72XO/4D2PRXV/OXzOOujMC7x8+IdXOx5IdbzgNN2sdyA
l2osN3CiFivCeCWWGzgRx4pwWo7lBmtpLDeor8eqg/cWsdzAg2KsnjDSMlYO
xhux9uJBM5Yb1GSxcsyTWD3p0SpWHU60jhVhtm0sN+C9TSw3cGLFWJG1lWPd
Kx6sFGsv979KrBwst4/lBrx3juUGvK4Qqw/ndozlBh50iLWXeadYOWpWjXUe
Z5Vi3TfPa/VY74P3s0asCNeHhT9vEcaWYawTywe4XjdWhNm1YznD2pqx6nBl
rVgRV7rGivC7QSzu4Xf9WKzjx3axOOCd9IyVY1+/WM6wtl4sH6jpEas/8+6x
3OM6usXqw3zDWH3wY5NYPuAB9/On2dwsljN40CtW5J/JbRprL2tbx/IBxvvG
8oFr2irWGaxtFKsPfmwcK9Jv2/Dn/+xE71hn4E2fWDnO6u/7Lvl54yfXN8A5
uN4jFitwsVMsN3BisCOM7xDLDZzY0RFOt/cZrA2K5Qb1Q1wH7zvHcgMPdonF
MXyNcA7Gh3ovHgyP5QY1w5xjPtA96THSdZy1q8/Dg7G+D3gc5wjjo2M5gwdj
HPke7BbLGdb29F4Y3zvWt5vv+l6x3GDON4XfU/l9ZZR7Uj/edbgywRE/JjpS
v7t78qw3j8UC72Mf98GVSY64sn8sN3BihiNsTonFPTxOdYTTybHcYG16LH+o
n+k6GJ8TyxP4PT6WGzAy1zlYO8B7cWh2LGeomeUc82nuSY95roPNAx1x4pBY
3HOvB8XiHicOdmTt8FjOwPuh3gunRziHH0eHsU0s3o+L5S3XPd99OPfYWNzj
0DHey3yBc9Qc6fNwZb9Y3xSe1wl+BjhxUiym4f3SWG7A1BmxfIDrMx1h9pRY
PsDmqY54cLLPYO0s74Xl82KxiwfnxnKA+b5+51zTib4WrmOh63DibEd8OseR
+tNjecv18XNvjBk9zdfC2gWxPIHZi2M5AI+LYjmAHxc5snaZ7xuHLvFensXl
zuHKlbG4h/drYjkDyxe6D+deHcsBHLrKe5kvdo6aK3weZ53vZ8O1tmoRXAkj
DePaWG7wnJb6/cH7zbE8wY9bHOH9+lie4McNjjC7zHWs3RTLE+pvdR3s3xHL
E5x4OpYnMHKnc/B+m/fixPJYnlBzu3PMb3RPetzlOvy42xF+74/lCezfG8sT
/LjPkbWHYnmCEw94Lz8/H3YOrh+L5QnsPxXLE677Hvfh3CdieYITj3sv8yed
o+bRMI7yWd/Geu7XhfGge3Idz/h5wOnHsTyBl1dieYIfrzrC/guxPMGPFx1h
8/lYnrD2ciyOqX/NdbD/VixP8OZZ98TRt52Dl9e9Fz/ejOUGNW84x/wl96TH
O67DiXcdYfbDWG7A+/ux3MCJDxxZ+8T3igcfeS/3/6lzsPx5LDfg/etYbvC/
kfOe+3Dul7HcwIMvvJf5V85R85nP46znfN88r/UTvZvvwvjGZ/Oe1ks0Z+3X
WG7gxG+OMP5jLDdw4idHOP0hlhus/RLLDep/dx28/x3LDTzIErkBC/84B+N/
eC8e/BXLDWr+dI75z+5Jj39dhxP/OcJsIZEb8B4lcgMn8okia+VEbuBBMdFe
OI3Dnx+JxXKayA14byRyg+vmP6ZDH86tJXIDD6qJ9jKvJ8pRkyQ6j7O+j/UN
WuZ3cJ3nzUTPA07XTOQGvLRN5AZOrJQownjrRG7gxAqJIpy2SuQGaysmcoP6
donq4L19IjfwoEWinjDSIVEOxldOtBcPVk3kBjWrJMoxb5OoJz06JqrDiU6J
IsyunsgNeO+SyA2cWC1RZG2tRPeKB2sk2sv9d02Ug+XuidyA9x6J3IDXzon6
cO46idzAg7UT7WW+bqIcNd0SncdZLRPdN8+rZ6L3wfvZIFGE65PDn3cIY8cw
eiXyAa43TxRhdrNEzrC2YaI6XNkoUcSVjRNF+O2diHv43SoR6/gxPBEHvJOt
E+XYNyyRM6xtmcgHarZI1J/5ponc4zo2SdSH+TaJ+uBH30Q+5H0/sA6b2yVy
Bg/6O5bC6Oe9rA1K5AOMD03kA9c00Gewtm2iPvjRJ1Gk3+BEnuDETj6D+RDn
OGtn33dLP++Kr2+Ec3A9ORErcDE6kRs4McYRxndJ5AZO7OoIpyN9Bmu7JXKD
+t1dB+97JnIDDyYm4hi+xjsH43t4Lx6MS+QGNWOdYz7KPekxwXWctZfPw4Mp
vg94nOoI45MSOYMH+zryPdgnkTOsTfNeGD8g0beb7/rMRG4wXx7G7DDmhLG3
e1I/3XW4sr8jfsxwpH4/9+RZD0jEAt/LWe7T02cTceWQRG7gxKGOsHlgIu7h
cb4jnM5L5AZrByfyh/rDXAfjRyXyBH7PTuQGjBztHKwd7r04dGQiZ6g5wjnm
B7knPY5xHWwe64gTJyTinns9LhH3OHG8I2unJHIG3k8KY/tEnJ7qHH6cnohv
eF+YyFuue4H7cO6ZibjHoTO8l/lZzlFzms/jrLmJvik8r3P8DHDivERMw/uy
RG7A1MWJfIDrSxxh9oJEPsDmhY54cL7PYO1S74XlqxKxiwdXJnKA+Ry/c67p
XF8L13GZ63Dickd8usKR+osSecv1wRQ/b/kZvMjXwtriRJ7A7HWJHIDHJYkc
wI9rHVm73veNQ0u9l2dxg3O4clMi7uH9tkTOwPI17sO5tyRyAIdu9l7mtzpH
zY0+j7Ou9rPhWh9JA39hHBXG7T4bPx4O8yO8dn8iT/DjAUd4vzuRJ/hxjyPM
3pXIE9buS+QJ9Q+6DvYfTeQJTryRyBMYecw5eH/Ie3HikUSeUPOwc8zvdU96
PO46/HjCEX6fDePEROw/lcgT/HjaEYdeSOQJTjznvfz8fNE5uH45kSew/3oi
T7juJ92Hc19N5AlOvOK9zF9zjpqXfB5n/ZXoe3dHGM+7J9fxpp8HnP6QyBN4
+TCRJ/jxkSPsv5vIE/x4zxE230nkCWsfJOKY+o9dB/ufJ/IEb95yTxz9wjl4
+cR78eOzRG5Q86lzzN93T3p86Tqc+MoRZr9L5Aa8f5PIDZz41pG1H32vePC9
93L/PzkHy78kcgPe/0jkBvx+7T6c+1siN/DgV+9l/rtz1Pzs8zjrbd83z2ur
VO/m7zD+9Nm8py1TzVkr2A2cKKaKMP5fIjdwgv8YJRFO/03kBmv5VG5QX0pV
B+9JKjfwYJVUbsBCmioH4+VUe/EgTuUGNZVUOeZRqp70qKaqw4laqgizLVK5
Ae+NVG7gRDP8+ZlEa61TuYEHLVPthdMVUuVgecVUbsD7yqnc4Lrrqfpw7kqp
3MCDtqn2Mm+XKkdNm1TncdY/Ydzp58U7uMPzVVM9DzjdMJUb8LJ6KjdwYo1U
EcY7pXIDJzqninDaMZUbrK2Wyg3q10xVB+/dU7mBB+1T9YSRtVPlYHytVHvx
oFsqN6jpmirHvEuqnvRYJ1UdTqybKsJsz1RuwPt6qdzAifVTRdY2SnWveLBB
qr3c/8apcrC8aSo34H2LVG7Aa49UfTi3Vyo38GCzVHuZb54qR80mqc7jrA6p
7pvntXWq98H76Z0qwvX54c+7hLFrGP1T+QDXAxxhdrtUzrC2Tao6XNk2VcSV
Pqki/A5KxT387piKdfwYl4oD3slA59g3NpUzrO2Qygdqtnd/5v1Sucd19HUf
5ju5D34MCyNL5QH3A+uwuXMqZ/BghGOrMIZ7L2u7pfIBxvdI5QPXNMpnsDbY
ffBjiCP+jUnlCU6M9hnMd3eOs/b0fXfw827t6xvvHFzPS8UKXExK5QZO7OsI
4xNTuYETeznC6QSfwdo+qdygfj/Xwfu0VG7gwYxUHMPXdOdgfLL34sHUVG5Q
M8U55nu7Jz32dx1nzfR5eHCg7wMe5zvC+OxUzuDBHEe+B7NSOcPaQd4L44en
+nbzXT8slRvM+abweyq/rxzgntQf7DpcOcQRPw51pH6ue/KsR5oF3scR7oMr
Rzriygmp3MCJEx1h89hU3MPjAkc4PSaVG6wdn8of6k9yHYyflsoT+L08lRsw
crpzsHay9+LQqamcoeYU55gf5570OMN1sHlWGENTOXFuKu6517NTcY8T5ziy
dkEqZ+D9PO+F0wudw4+LUvEN75el8pbrXug+nHtJKu5x6GLvZX6pc9Qs8nmc
dXSqbwrP6wo/A5y4KhXT8H5XKjdg6rpUPsD1UkeYXZzKB9i8xhEPrvYZrC3z
Xli+ORW7eHBTKgeYH+V3zjVd6WvhOq53HU7c4IhPNzpSf20qb7k+fu7NMaNL
fC2s3ZrKE5i9I5UD8Hh7KgfwY7kja3f7vnHoTu/lWdzjHK7cl4p7eH8olTOw
fJv7cO4DqRzAofu9l/mDzlFzr8/jrFv8bLhW/OB3B36feNTPiPe2bi38HKyG
n09hPJPKE/x41hHen0jlCX486Qizj6fyhLWnU3lC/XOug/2XUnmCE5+m8gRG
XnYO3p/3Xpx4MZUn1LzgHPOn3JMer4ZxZio/XnOE37dSeQL7b6TyBD/edGTt
3VSe4MTb3svPz/ecg+sPUnkC+5+k8oTrft19OPejVJ7gxIfey/xj56h53+dx
1me+b3h8xz25js+dw5V/U3kCL1+l8gEPvkvlDK58mcoH1r5NxStrX3svnH7j
yNr3rsObX1M5Axc/pvIBD37wOvOfnMOJX1J5Rc3PzjH/zWfgwR+pGIX9HQND
cRhJGH+ncgPe+Y+/wzps/pXKDdb+872y9o/3cv9RVXtxIl9VhPdKVX835u/N
f7onZxWqWsePYlURJ0pVRXwqVxWp/8LPm+f4u++De+DaORs/0vDnx1Ix3qIq
H+C6ZVURZutV+QCbjaoiHtSqcoa1pr2ivlVVdXDdNvz5lVQsd6uKD1hYqaoc
XLeuai9OtKnKJbxZoaoc86yqnvRoV1UdnK5cVcSDDlWxDnerVuUDrrSvKrLW
uSoHYLZjVXtxpUtVOZxYvSrWYb9rVT5z3atU1Ydz16zKAbxZo6q9zNeqKkfN
alWdx1nVqp4xzwtuePY89+5VPQ/e1bZVsQJHG1TFNMxuWFWE5R5VOQD761UV
8WPdqlxirWdVLlG/UVV18L5ZVW7A9dpV9cSzXlXlYGTjqvbiwaZVuUHNJlXl
mK9fVU96bF5VHX5sUVWE2d5VsY7rW1XlA65sbWdY61PVveLBNlXt5f77OocT
21XFPbzvUJUb8LtlVX04d0BVDsB+f+9lvr1z1PTzeZy1TlX3zfPi3y/x7735
d94D7TRO7FTVO4PxnatyAydGOML4kKrcwImhjnA62HWsDa/KDepHug7eR1fl
Bh5MrcoNWBjjHIzv4r14sFsYK7pmV+dwZZh70mN31+HEHo4wO74qN+B9XFVu
4MSejqztVZUbeDDBezuFsbdzsDypKjfgfUpVbnDdY92Hc/eryg082Nd7mU92
jpp9fB5nTfN9w+NE9+Q6pjvHuzqmKjfgZWZVDsD+nKo8wY8ZVTnA2uyqHGDt
AO+F2VmOrM11HX4cUpUDsHxgVQ7A+zyvM5/vHE4cXJVL1BzkHPNDfQYeHF4V
o7A/qCqm4OmoqtyA9wVVsQ6bR1blBmvH+l5ZO9p7uf/jvBcnjneE91Oq+pkE
v0e4J2ed4HX8ONERJ05yxKeTHanf38+b53iqz+PaT3PEidMdYfysqriHwXOr
cgPGz6zKDdbOqcof1hZ6L06c7cjaea6D90uq4hh+LwxjVFXsn+912F/kHA5d
XJUz1FzkHPNLfQZsXuYI+5c7wv6VVbkB71c5wuDVjjix2BEPrnGE3yt8BvVL
nMOP66riHg+WVcU9rix1jvn1zuH9ta6j5gbncOJGRzw4w8+bZ3qTc7yrW6ri
Hiduq4p1GL+zKr7h91avs3ZHVc6wdrv34spd3gv7dzvC+wNVMX1YGDe7J/3u
8Trs3+uIE/c54tP9jtQvdx964zc/b/kZ/KDPxpWHq2IXDx6tyhPYf8yRb8Dj
jvjxhCMOPemIH4/4DOqfcg5XnqnKBzx4rioHYP9Z55g/7xw+Pe06al5wDice
8vVyrfz85u8W/N3gRa/jystVecJ7e6sqN2D8bUdYfq0qf3DidUeceLUqf1h7
syp/qH83jAuqcuLDqrjHlZ+rYgUuPnIO9t/zXlz5oCo3qHnfOeZvuCc9PnYd
rnziiCtfVOUGTnxWFfd487kja/ydCjfw4EvvxZtvnIPx76pyAw9+qop1rvtT
9+HcH6pyBj++917mPzpHzbc+j7PahL/TveTn/ZV7ch2/+HnAbK0mVmDkn6rc
gPd/HeH9j6r8wYk/HWH296r8Ye3vqvyh/j/X4UGhJtZx5Vf3xMtiTTkYz9W0
F1fyNXlCTVRTjvlf7kmPUk11sFauKeJHWpMPeBDXxDquJDVF1uo13SvsV2va
y/03asrBdbMmH2C/dU18w2+lpj6c27ImT3CiRU17mbeqKUdNVtN5nPWb75vn
Naqmd7NiGCvUdDbvaVfPWWtfkxs40TH8+Z2qGG9Xkxs4sXJNEU5XqskN1lat
yQ3qO9VUB++r1+QGHmxSkxuwsEZNORjvXNNePFitJjeo6VJTjvkqNfWkx5o1
1eHEWjVFmF27JjfgvVtNbuBE95oiaz1qcgMP1qlpL5yuV1MOlnvW5Aa8b1yT
G1x315r6cO6GNbmBBxvUtJf5RjXlqFm/pvM4q2348ytVPS/eAX4w37Sm5wGn
g2tyA1561+QGTmxTU4TxLWpyAye2rCnC6eY1ucHa1jW5Qf22NdXB+3Y1uYEH
m9XUE0b6OwfjfWraiwf9anKDmr7OMd+qpp70GOA6nNjeEWYH1eQGvO9Ykxs4
MdCRtSG+VzzYyXu5/6HOwfLwmtyA911qcgNed3Afzh1Rkxt4sLP3Mh/pHDXD
fB5n9arpvnleu9kJ3s9oR7i+NYyZYRwQxoSafIDriY4wOz6MDl4b4zpc2d0R
V/ZwhN99a+IefvepiXX8OKgmDngnk5xj3/yanGFt75p8oGYv92c+rib3cHes
+zDfz33wY2pNPnT3/cA6bE6vyRk82N+RfyY3zXtZm12TDzB+YE0+cE2zfAZr
k90HP6Y40m9uTZ7gxByfwXyec5x1sO+7l593D1/fIc7B9Zk1sQIXR9XkBk4c
7Qjjh9XkBk4c7ginh/oM1o6syQ3qj3EdvB9fkxt4cFJNHMPXCc7B+LHeiwfH
1eQGNQucY36Ee9LjRNdx1sk+Dw/O8n3A40JHGD+tJmfw4HRHvgen1uQMa2d7
L4xfUNO3m+/6+TW5wZxvCr/j8PvKKe5J/Tmuw5VzHfHjPEfqz3BPnvUMs8D7
uNB9cGWRI65cVZMbOHG1I2xeWhP38HiZI5xeUpMbrF1Zkz/UL3YdjF9Xkyfw
e29NbsDIUudg7RrvxaFra3KGmiXOMb8ijD3dY5nrYPN6R5y4uSbuudcba+Ie
J25yZO22mpyB91u8F05vdw4/7qiJb3i/pyZvue4b3Idz76qJexy603uZ3+0c
Nct9HmddXNM3hed1n58BTjxQE9Pw/mpNbsDUYzX5ANePO8LsQzX5AJsPO+LB
gz6DtSe8F5afrYldPHimJgeYX+R3zjXd72vhOp50HU485YhPTztS/2hN3nJ9
/M7B7+P8Lv6Ir4W152vyBGZfrskBeHyxJgfw4yVH1l7zfePQK97Ls3jdOVx5
sybu4f3dmpyB5Rfch3PfrskBHHrLe5m/4xw1b/g8znrOz4Zrfc/n4cT7jjyn
Dxx5hx/X5AMefFGTM7jyUU0+sPZ5TT6w9mkYl9fE72eOrH3pOlz5viYf4Prr
mnyA/a+8zvwb5/Dju5q8ouZb55j/4DNw4kdHmP3JESd+qckHXPnVEQ9+c+Tn
5O+OuPKHI3787DOo/9M5GP+7Jmfw4N+a3MCDf5xj/p9z+PSX66jJ1ZXj2xDV
FfGjc13vg/fQpa7IeyjW5Qy8l+vyAQ/SupzBlVJd66wldfHKWqWuvXAa1xVZ
q9ZVhzct6nIGLup1+YAHtbrWmTfqyuFEsy6vqMnqyjFvWdcZeNCqrginreuK
eNCmLgfwY8W6Iuy3rSvyPViprogf7eqKOLFCXWdQv3JdObhetS5PYL9DXT7A
fvu6csw71pXDoVXqqqOmU105nnu+rvfAt6FQV+S5r1bXe/gwjO3qWuOdrBXG
JzXxvnZdbsD4GnW5gTfd63KDta517cWJbnVF1tapqw72N6jLDbjuUZcbeLBu
XevM16srhwc963KDmvXryjHfsK4zcGKjuiJObFxXhOtN63IDJzarK+JEr7oi
TmxeV8SJLeqKeLBJXWdQv2VdORjfui438GCbutzAg9515ZhvW1cOD7aqq46a
PnXlcKKvI+9kr7rcwInV63oPPN/+fg+wv31dbsD7oLrcgPEBXmdtYF1usLaD
9+LEjo6s7eQ62N+5LjfgekhdbuDBYK8zH+ocHgyvyw1qhjnHfITPwImRjjix
iyNcj6rLDZzYzREnRjvixBhHnNjdEQ929RnU7+EcjI+ryw08GF+XG3iwp3PM
JziHB2NdR81E53ju/fwe4H5vvwec2MeRdzLJEfan1+UDXO/vCL+T63IGD6Y4
4sF+YazptWl1OUP9DNfhwey6WMePBXXxwXXNcQ7eZ3ovfsyqywdqDnCO+VT3
pMdc1+HHPEf8OLguH/Bgfl2s48pBjqwdVpcPsH+I9+LK4c7B9ZF1+QD7x9bF
N9d9oPtw7tF1eYITR3kv82Oco+YIn8dZx/m++Q4d6p5cx/HO4cTFdbECIyfV
5Qa8n1aXGzB+Yl1usHZqXW6wdrL34sQpjqyd7jrYP6cuN+D6zLrcwIMzvM78
LOfw4Oy63KBmoXPMz/UZOHF+XT7A8rdhXBvGdWEsqssHPLi0Lr7h9MK6nGHt
Et8raxd5L/d/mffiweWOsL+4rm8KLF/gnpx1hddx5UpH/LjKESeudqT+BD9v
nuM1Pg8nljhO8j3sWxfj19fFPQzeXJcbML6sLjdYu6kuf1i7wXtx4kZH1m5x
HbzfWRfH8HtbXazD/q1eZ367czh0R13OULPcOeZ3+QzYvNsR9u9xhP376nID
3u93hMEHHHHiQUc8eMgRfu/1GdQ/7Bx+PFoX93jweF3c48pjzjF/wjm8f8R1
1DzpHE485YgHS/28eaZPO8e7erYu7nHi+bpYh/GX6+Ibfp/zOmsv1eUMay94
L6684r2w/6ojvL9VF9PnhfGMe9LvNa/D/uuOOPGGIz696Uj9i+5D76/rYgum
3vbZuPJuXeziwft1eQL7HzjyDfjQET8+csShjx3x4z2fQf0nzuHKZ3X5gAdf
1OUA7H/uHPMvncOnT11HzVfOcd3v+Hov8LXjOp5/V5cbvKurGsGvMCaG8WNd
nsD+r3V5Au8/1OUJa7/U5QlrP3kvfvzsyNpvrsODf+ryBMb/qMsTnPjd68z/
dA4n/q7LE2r+co75vz4DP/5zxI9cQxHG8w15gh+FhiJ+FBuK+FFqKOJHuaGI
E1FDZ1BfaSgH70lDnuBEtSFPcCJtKMe81lAOJ+KG6qipN5TDj0ZDESfWC3/+
pq5v7foNRd5Ji4Y8wYNWDXkC+ys25Anst2xonbU2DXnCWuuG9sLvCg1F1to2
VIcr7RvyBJbbNeQGTqzU0DrzlRvK4ceqDblBzSoN5Zh3aOgM+OrYUMSJTg1F
uO7SkBs4sVpDESdWbyjixBoNRZxYs6GIB50bOoP6tRrKwXi3htzAg7UbcgMP
ujeUY75OQzk86NpQHTXrNpTD6ayh98B3otlQ5Ln3bOg9fB/G8IbWeCcb2Q14
36whN2B8w4bcYG3ThtxgbeOG9uLEJg1F1no1VAf7vRtyA663aMgNPNi8oXXm
WzaUw4OtG3KDmq0ayjHfpqEzcGLbhiJO9GkownW/htzAie0ccaK/I04McMSJ
7R3xoK/PoH4H52B8YENu4MFODbmBB4OcYz7YOTzY0XXUDHEOJ4Y68k4OaMgN
nNigoffA893Z7wH2RzbkBrzv1pAbMD7C66yNasgN1nbxXpzY1ZG10a6D/T0b
cgOud2/IDTwY43XmeziHB+MacoOasc4xH+8zcGKCI05MdITrvRtyAyf2ccSJ
SY44sa8jTuzniAd7+QzqJzsH41MbcgMPpjfkBh5Mc475/s7hwRTXUTMzjB5+
7sP8HuB+lt8DTsx25J3McYT9gxvyAa4PcYTfeQ05gwcHOuLBXNexdlBDzlB/
qOvw4MiGWMePsxrig+s6yjl4P8x78eOIhnyg5nDnmM93T3oc7Tr8OMYRP45v
yAc8WNAQ67hynCNrJzXkA+yf4L24crJzcH1qQz7A/pkN8c11H+s+nHt6Q57g
xGney/wM56g5xedx1kLfN9+hE92T6zjbOZy4riFWYOS8htyA90UNuQHj5zbk
BmsXNuQGa+d7L05c4MjaRa6D/SsacgOuL2nIDTy42OvML3UODy5vyA1qLnOO
+ZU+AyeubsgHWMZvfgfhd4slDfmAB8sa4htOr2nIGdaW+l5Zu9Z7uf/rvRcP
bnCE/dsa+qbA8mL35KwbvY4rNznixy1hzGjIiVsdqT/Hz5vneLvPw4nljjhx
hyOM390Q9zB4f0NuwPhdDbnB2n0N+cPaPd6LE/c6svaA6+D9sYY4ht+HGmId
9h/0OvOHncOhRxtyhppHnGP+uM+AzSccYf9JR9h/uiE34P0ZRxh81hEnnnPE
g+cd4fcpn0H9C87hx0sNcY8HrzTEPa687BzzV53D+xddR81rzuHE6454cKef
N8/0Ded4V281xD1OvNMQ6zD+QUN8w+/bXmft/YacYe1d78WVD70X9j9yhPfP
G2Ka353fdE/6fex12P/EESc+dcSnzxypf8996P1nQ2zB1Bc+G1e+aohdPPim
IU9g/1tHvgHfOeLH94449IMjfnztM6j/0Tlc+bkhH/Dgt4YcgP1fw7jZ89+d
w6efXEfNH85x3V/6erlW/hkh/+6Cfz/xl+8JP/7xO8ODQiY3YLyYKcLyfw35
gxO5TBEn/nUda/lM/lBfylSHE0km7nFl5UyswEWaKQf75Ux7cSXO5AY1lUw5
5lGmnvSoZqrDlVqmiCvNTG7gRCMT93iTZYqstcrkBh60yLQXb1pnysF4m0xu
4EG7TKxz3fVMfTi3bSZn8GPFTHuZr5QpR80Kmc7jrK0yPfe/w2iZqSfXsUqm
5wGzG2RiBUZWy+QGvK+eKcJ7x0z+4ESnTBFmO2Tyh7Uumfyhfo1MdXjQLRPr
uLJqpp542T1TDsbXzLQXV7pm8oSatTLlmHfO1JMea2eqg7V1MkX8WD+TD3jQ
IxPruLJepsjahpnuFfZ7ZtrL/W+UKQfXm4Y//9IQ+1tk4hsv183Uh3N7ZfIE
JzbLtJf55ply1Gyc6Tzcap/pvnleR2R6N1uHsWWms3lPh3vO2naZ3MCJ/o4w
vm0mN3CiT6YIp9tkcoO1fpncoH6A6+B9YCY38GCPTG7AwiDnYHx778WDHTO5
Qc0OzjHv65702Ml1ODHYEWaHZ3ID3odmcgMnhjmyNjKTG3iws/fC6S7OwfKo
TG7A++6Z3OC6h7gP547O5AYe7Oa9zMc4R82uPo+zemf6BvG8eAf4wXysnwec
zsnkBrzsk8kNnJjkCOMTMrmBExMd4XR8JjdY2zuTG9Tv6zp4n5rJDTwY554w
Ms05GN/Pe/FgSiY3qJnsHPO93JMe012HE/s7wuysTG7A+8xMbuDEAY6szfW9
4sFs7+X+5zkHywdlcgPeD8vkBrzOcB/OPSSTG3hwsPcyP9Q5auaHsYnP2tP3
zfM6MtP74P0c5QjXb4dxXhjnh3FCJh/g+kRHmD0+kzOsHe06XDnGEVeOdYTf
0zJxD7+nZGIdPy7LxAHv5FTn2HdpJmdYOzmTD9Sc5P7Mj8vkHtexwH2Yn+4+
+HFWJh+G+X5gHTbPzuQMHpzjOCKMhd7L2oWZfIDxSzL5wDVd4DNYO8N98ONM
R/pdlMkTnFjkM5hf7BxnXe773tPPe6Sv7wrn4PrOTKzAxZJMbuDEtY4wflUm
N3Diakc4vdJnsHZNJjeov8518H5DJjfw4OZMHMPXjc7B+FLvxYPrM7lBzTLn
mC92T3rc5DrOusXn4cHdYRyYicd7HGH89kzO4MFyR74Ht2VyhrV7vRfGH8r0
7ea7/mAmN5jHzfB7RIiPhnGre1J/n+tw5X5H/HjAkfo73JNnfW4mFngfD7sP
rjziiCvPZHIDJ551hM0nMnEPj086wunjmdxg7elM/lD/nOtg/KVMnsDvJ5nc
gJGXnYO1570Xh17M5Aw1LzjH/Cn3pMcrroPNVx1x4s1M3HOvr2fiHifecGTt
nUzOwPtb3gun7zqHH+9n4hveP87kLdf9mvtw7oeZuMehD7yX+UfOUfOez+Os
xzJ9U3hen/oZ4MTnmZiG93/DuCsTU99m8gGuv3OE2S8z+QCbXzniwRc+g7Xv
vReWf8nELh78nMkB5o/6nXNNn/lauI4fXIcTPzri00+O1H+TyVuuD6b4ecvP
4K99Laz9lskTmP0rkwPw+EcmB/DjT0fW/vN949Df3st3ItdUDlfyTXEP7+Wm
nIHl392Hc4tNOYBDhab2Mi81laMmauo8zvrVz4ZrrTR1Hk4kTT0j3hs/2/k7
B3/faDblCX60aCrCe60pT/Cj3lSE2WpTnrCWNeUJ9S2bqoP9Nk15ghNrNeUJ
jKzYVA7eWzW1FydWaMoTalo3lWPeaKonPdo2VYcfKzUV4XfVpjyB/ZWb8gQ/
VmkqstaxKU9won1Te/n52ampHFx3acoT2F+zKU+47nZN9eHc1ZvyBCdWa2ov
8zWaylHTuanzOGvHpr53PPsOTfXkOro29TzgdJumPIGX9ZvyBD96NhVhf52m
PMGPdZuKsLl2U56wtl5THFO/QVN1sL9JU57gTbemeuLopk3l4GXDpvbix8ZN
uUHNRk3lmPdoqic9NmuqDid6NRVhdqum3ID3LZpyAye2bCqytm1T94oHvcP4
J9P992kqB8v9mnID3rdvyg1Y3rypPpzbvyk38GA772U+wDlq+vo8zure1H3z
vHbwebybgX4/aRgnN7XGexvclAOwP7wpT/Bjp6YcYG1YUw6wNsR7YXaoI2s7
uw4/dmvKAVge2ZQD8D7C68x3cQ4nRjXlEjW7Osd8tM/AgzGOcLq7Ix6MbcoB
/BjnCPt7OsLjeEf8mOCIE3v4DOonOgfXezflCexPasoH2N/HOeb7OodDe7mO
mv2c43sw2REPBvnZ80ynOAen0/zOYHz/phyA/VlNeYIf073O2gFNOcDaDO+F
2dneixNzHOH9oKYcgOWp7km/uV6H/XmOOHGgIz7Nd6R+pvvQ+5Sm2IGpg302
fhzaFLs4cXhTPuDKkWFs3ZQHRznyPTjaEVeOccSPw3wG9cc6B+PHNeUMHpzQ
lBt4cLxzzE90Dp8WuI6ak5yD+0N8vVwr/51k/hvy/HflT/U98a6+COOqMK4O
45ym+Ibfcx3h+uymnGHt9KacwaczHHHlTEdcWdSUG3B9QVOsw/71TTHB+7nQ
OfYta4oh1s5vyhlqznN/5gub8pPrOMt9mF/kPnhzaVOsj/X9wDrMXt6UM7hy
hSOuXOa9rF3TlA+wv7QpvrmmxT6DtYvdBy8vcaTftU35gytLfAbz65zjrBt8
39P8vCf4+m50DvYfb4oPWLi9KTfgfbkjvN/clD84cYsjzN7kM1i7rSl/qL/D
dXhwT1Os48r9TfEBy/c6B+N3ei+u3N2UJ9Tc5RzzW92THve5jrMe8Hlw/YTv
AzafdITrR5ryBD8edcSPpIXyD4fxlPfC+/NNfcdx8bmm+GbON4bfffjd5UH3
xMWnXYc3zzjiyrOO1D/mnjzrK80C7+MF98GPFx1PC+PNptzAibccYfPVpriH
x9cc4fSVptxg7Y2m/KH+bdfB+PtNeQK/PzblBox84BysveO9OPReU85Q865z
zF93T3p86DrY/MgRJz5rinvu9ZOmuMeJTx1Z+7IpZ+D9c++F06+cw49vmuIb
3n9oyluu+2P34dzvmuIeh771XubfO0fN1z6Ps15u6pvC8/rJzwAnfmmKaXjn
P2m5fRgDwvirKR/g+m9HmP2tKR9g83dHPPjVZ7D2j/fCcr6F2MWDqIUcYP6S
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
/TPuucbXPpuUJ5517WrvzWw88KL7YfQl5/D9WujVpDzwSujlpDzxqnO4fzOp
v3eAy9fdA7tvuQbfb4fWJuUJzvteUp542fPg/t3QO0l54h333OprqU30Hux7
lZ/TQ6FBjrwTuPzQzwU+fg/9lpQHvgh9nhTTXzrHA+tCnybF5Xrnd3rtk6Q8
Qd9nSfH9lfvh/rvQt0kx8XHoo6SY/t41uP/aPXN97TdJeeIb12Z6b2bjgR/c
D6M/OofvX0O/JOWBn0M/JeWJX5zD/R++5/t93/TA7p+uwfdfoQ1J8Qqn/yTl
iZ88D+43hv5OyhN/u2eVr6X2gPdg32l+Th/7PdSl5A3eTyKlvEHorNCZKXGc
j5hLidFCSjneYC2bkg+SKfXjjVRKObymU8rhtRqxkhLj5YillN7BDhG3T8kP
1KnBxHYRt03JB1xbTMkPRM6B55ifSckfRObhh1pK8+B+04ibpMRiQ98f3G8e
cbOUfFA/pRyvsEYPTG8ZsVFKPuAs26TENWvshR/qpTQPfzCHHA9szT9fkJI/
iOyFP9iDGu9gx5TuH+9xri1Sej87pVSDgyMiHp6SB/aIuHtKTO+ZUo4Hdom4
c0pc7ppSjidYYy88Qd9uKfG9V0r9cL9fxH1T4unAiAekxPT+KdXgfu+UevAE
1+6TkieI1PAEezMbD7AH/XB6UEr7wt+RKd0PPB6VUg73h0Y8JCUfHJZSjldY
Ozglphun1MM3+9iITVPyBLFJSr+f8q0ZZI/Rx2w8cXRK/fjhmJRy/EEfOT7k
GTOb7yPvASbwxnEpzcMbzZzjgRNDrc3iSc7hr2Wohbls5TzlteYp+Ya+E8z0
ye6H11NDp5iJ80LdzdZpruGDNu6p+Nq2KXmmrWtZ793KLLZzP2y2d869nRHq
mBLvHUKnp+SBjs7hu1NK3wKex5nugf2zXYPrzqFzUvIw5z03Jf+c7nnw3jXU
JSXuu7gHP3VzbUvvwb5JP6fjU/LA+X4WsNwjdEFKDA0OXZUSx31CvVNi9GLn
sHhR6MKU2OzpfBevsRfsXuIemL0ydEVK7BIvT+m7drzf/U6ez5lg/1L344nL
nO/nPvI9fK5eKf15BTYH2ou9fCYY7RfqmxJ/g0IDU2J/QKh/Sn4Y6BzPDPH9
H+5nQA/eGOoafA8LXZ0Su6NCI1PyRH/Pg/0RoeEpeWC4e5r6WmqNvQf7Hugz
8ozwwGjvy7O5NqV/pqpfLn72hFbmxP2Y0PUpeWNc6MaUfMDadSn5gLWxKfF6
g3tO8Bo53rjJ/XA8OTQpJdYnhMan5Ifxvg4f3Ozaqb52YkpemegaHrjFe8Ho
rc5h9jbn+OD20JSUuJ/qHB/c4RxvTHOOH+503sF97AXT012D+5mhGSlxPzs0
KyVPzHIN/9wduislT8xwP96a4xp+uMc57+HZ0DN+B885h+95oXtT4n5+6L6U
vLE4tCglH9zn63p7bWFKXC5wTy+vkeOT+90PBytCy1PifmloSUp+WOLr8MAy
167wtQ+k5I8HXIOpld4LLlc5h9PVzmH/wdCalFh/yDnsP+wcPzziHA886nyA
+9gLjh9zDdafCD2eEutPhZ5MyQdPuoYPnnbtal9L/yg/b2p8C+b6fVzg502O
J573+2Dtu9C3KfH9UujFlJh+LfRqSp5g7YWUPMHaKyl54GX3jPUaOay/7n44
fif0dkrcvxl6IyVPvOHr4P4t1yb52rUpeWKta3jgXe+FB95zDsfvO8cDH4Y+
SMkDHznHAx87xwOfOIf7T51PcR97wfQ61+D+s9D6lLj/MvRFSp743DW4/8q1
Gb6WfjzwtWu8g2+c44FSOn7GpvWtecHvA9a/9/uA7x9DP6TE9K+hX1LyxA++
bpHXfk7JAz+5Z6HXyGH9N/fD8d+hv1Li/o/Q7yl54ndfB/d/urbc125IyRMb
XMMDG70XHvjHORz/6xwP8D/a+y8lD9SlleOBRFo5HkimlcN9Kq0cT/znvWA6
nVYN7rMRM2lxn4+YS8sTRGpwX0irhie4ln48wfOmhge+9fvAA+W03gfvoJJW
zjupppXD8eYRN0uL1/pp5XBfL2ItLe43SSvHK6zRj1fo2zQt3rdIqx/Gt4zY
KK1z7BNx77T43iqtGn5okFYPPuDahmn5gUgNz7E3s/HD1mn144dt0srhfoeI
26fF+HYRt03LG6yRw/rOEXdKyxs7ptUDx7ukVYP13SLumhbHnHevtDzDfszD
A3tG3CMtnxB3T8sDXEsNf7AH+/Ie9k3r/vEh85mNB/ZLqwYTzUPHp8X3gREP
SIvpQyMekpYnWNs/LU+wdnBaHjgorR48wRo5rB+WVj8cHx2xcVrcHxHx8LQ8
QeQ6uD8yrRqe4Nqj0vIEkRoeOCatvWC3acQmoVNCE0M3m/tmoePMZctQi7S8
wdqxZr2F7znh+6YHllu5B9ZPcA67bUInp+Ub9mA2nmjt6/DDic7xwEnOi+4j
55vC8+O544G23rfieyCH6VOdw1z7ULu0mD4j1DEtD7B2Wlo+Ya1DWpye7p7N
vEYO32e6H167hDqnxXin0FlpsX6Wr8MHZ7u2la89Jy3PnOMaLHb1XrDZzTms
n+scvs8LdU+LufOdw+AFzuG+h3N4vdD59u5jL1i+yDV47x3qlRbvF4f6pMV9
H9fwzSWu7e5re6blgUtdg/vLnNf8LE/1u7ncNXi/MnRFWkz3C/VNi9dBoYFp
cd/X1x3qtQFp+aC/e2D8KvfA92DnsDw8NCwtLq7wbFgf4utgf6hzPHG186Pd
R36IZzIPhvDBhLS8McIzYHZUaGRarF8TGp0W+9c6xw/XOccf1zvHD2OcH+c+
9sIbN7gG9zeGxqbF+k2hcWl5YJxr+GC8ayf4Wvrb+LzUmvqMnJufc038nHg3
k9LyeSETM0InZsT6raFb0uKbfwcJ/y6Sdl6bnJY/WJuSlh9uc08Hr5HD/R3u
h+lZoZlpeeDO0LS0/DHN1+GB6a519rUz0vLHDNfww2zvhR/ucg7TdzvHD/eE
5qTlh7nO8cO9zvHDPOd44D7n3d3HXvC9IDQ/LQ8sCi1MywP3hxan5Y/FruGB
Ja718rX044elruGBZc5h6q3Qm34Ha53D/YrQ8rRYXxVamRbrD4UeTMsfK33d
QK+tSYvX1e4Z4DVyvPGw+2H3ydATaXng0dAjaXnjEV+HHx5zbZivfTwtbzzu
Gjw95b3g62nncPyMczzwXOjZtDzwvHM88IJzPPCic7h/yflo97EXTL/sGty/
GnolLe5fD72Wlidecw3u33BtrK+lf4KfNzW+Cw/4fVzh502OJ972+2Dtr9CG
tPh+L/RuWkx/lNa/p+cWr72TlidY+yAtD7zvnileI4f1j90Px5+HPkuL+09D
n6TliU98Hdyvc22mr12flifWu4YHvvBeeOBL53D8lXM88E3o67Q88K1zPPCd
czzwvXO4/zH0Q1qe+Np7wfRPrsH9L6Gf0+L+t9CvaXniV9fg/nfXFvpa+vHA
H67xDv50jgcaxneoQUbfmnf8PmD9b78P+P4ntDEtpuv4l45k5ImNvg5PsPZf
Wh741z144j/nsJ7IqB+OcxGzGXGfipjMyBNEroP7dEY1PMG1mYw8QaSGB/IZ
7YUH+LaSw3ExoxwPlCOWMvJAJaMcD1QzyvFALaMc7utllOMJ+tgLpjfJqAb3
m0XcNCPu60fcPCNPEKnB/RYZ1fAE19KPJ3je1PDABr8PPNAoo/fBO9gyo5x3
slVGORzvEHH7jHjdMaMc7reJuHVG3G+bUY5XWKMfr9C3XUa875RRP4zvFnHX
jM5xZMQjMuJ794xq+GHnjHrwAdfukpEfiNTwHHszGz/skVE/ftgzoxzu9424
T0aM7x1xr4y8wRo5rB8Y8YCMvLFfRj1wfFBGNVg/JOLBGXHMeQ/PyDPsxzw8
cFjEQzPyB5EePMC11PAHe7Av7+GojO4fHzJ//4w80DijGkycFjo1I76bRDzG
TDcLHZeRJ1g72j5h7diMPNA0ox48wVpTs368++G4deiEjLhvEWqekSea+zq4
b+la1te2ysgTrVzDAyd6L9g9OaPfOfg9EZ9Psg9OCbU1l+1D7TLyBmttMmK9
ne+56vumB5ZPdw+sd3AOu51CZ2XkmzaejSc6+jr8cIZzPHCm8wbuI+ebwvPj
ueOBs70vHjjHOUx3dg5z3UJdM2L6/NB5GXmAtS4Z+YS17hlxeq57tvcaOXxf
4H547R3qlRHjF4Z6ZMR6D1+HDy5ybXdf2zMjz/R0DRb7eC/YvNg5rF/iHL4v
C12aEXNXhC7PiMErncN9X+fw2s/5Pu5jL1ju7xq8DwwNyIj3q0KDMuJ+kGv4
ZrBrh/ha+vHAENfgfqjzrf0sO/vdXO0avA8PDcuI6ZGhERnxem3omoy4H+Hr
mnltdEY+GOUeGL/OPfB9vXNYHhe6MSMuhnk2rI/xdbB/g3M8MdZ5a/eRH+eZ
zIOh6aE7M/LGTZ4BsxNC4zNifWLo5ozYn+QcP0x2jj9ucY4fbnXe1n3shTdu
cw3ubw9NyYj1O0JTM/LAVNfwwTTXOvha+jv5vNRO9hk5N/+9E39XyN/d4ocZ
vjfe1azQzIyYnhu6JyN273WOB+4Kzc7IA3c77+o1+s9z35yM2J/nfnhfGFpg
Dh4LPZoR64tcwxv3uaenr52fkTfmu9bdezMbbyx2P9643zkeWB56ICPel4aW
ZOQT1pZlxP2q0MqMfLLCPTC92jW4fzC0JiOmOe8jGflniefhh4dDD2XklYfc
M9jXUhvgPVb7ea8PrcvIkys9G0Yf93OBiXdD72TE9/Oh5zLi+wXneODp0FMZ
MfqM8xFeezIj39D3bEbcv+h+GH819EpG/njCs2H6NdfwxkvuGetrX87IJy+7
Ntp7Mxu2Xnc/rL3hHO7fDq3NiPG3Qm9m5I21zmH9Pd/zZN83PXD8vmuw/mHo
g4y4/jT0SUaeedPz8MDHoY8y8sdH7pnma6lN8R7sO9zP6Qm/k12z8f3Oyg/r
PIPI2s5ZeeDb0DcZMf2dczzwZeiLjLj8yvlsr32ekSfo+zojvr93P9z/HPrJ
7z4dc1JZMf2La3D/g3sW+NofM/LEj67N8d7MxgO/uh9Gf3MO33+FNmTkgT9D
f2TkiQ3O4f6f0MaMuPzbPbD7r2vwzb9U77+MPMF5k1l54nfPg/tErNVl5Qki
PXiCa6nhif+87yw/p88y+gZ95ncCl5msngt8bB1xq6w8UIlYzorpalY5HihE
zGfFZTGrHE+wlsvKE/SVsuK7llU/3G8WcdOsmMhmNRumN8+qBvf1surBE1y7
SVaeIFLDE+zNbDxQP6t+GN0iqxy+t4zYKCsPNIzYICtPsEYO99tkdc94gvum
B3a3zaoG39tH3C4rXuF0p6w8wX7Mg/sdI+6QlSeI9OAJrqWGJ9iDffEEz4n7
5z3slpU3eD+7Z5U3CY0IDc+K4/0i7psVo/tnleMN1vbJygd7ZNWPN/bMKofX
vbLK4fWQiAdnxfhBEQ/0O2gVapmVH6gfZCZYa5GVD7j2gKz8QOQceI75e2fl
DyLz8MOhWc2D+yMjHpEVi019f3DfOOJRWfng6KxyvMLakWb6uNCx9i1naZ4V
16yxF344LKt5+I05h9sDx4eaZeWPZt4r6T2O9zs4wfeP9zjXMea4tWtw0DXU
JSsPnBJqmxXTpzrHAyeFTjSXJzvPe429yu5rkxXfp7kf7juETjdPZ4bOyIrp
jq7BfTv3bOpr22flifaulbw3s+t7D/rh9CzvC3/dfD/weK5zuD8ndHZWPujs
vJHXOmXFdHf38M2+MNQjK08QLwj1DC0Izc/KY508G0+c5378cL7zndxHvrWf
MbP5PvIeYAJvXOR5u3kGOR64PHRZVixe4Rz+Lg71yYrHS5zv6bXeWfmGvkuz
YvlK98PrgFD/rJi4ITQmK7YGuoYP+rrnYF/bLyvP9HNtH+/NbFi8KjQoKzYH
O+fehoWuzor3oaEhWXngaufwPTKrbwHPY7h7YH+Ua3B9TWh0Vn7lvNdn5Z8h
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
3xTliS9Cnxflky+dw+5XzmH3l9DPRfH+U+hHz9k15u9Skjd+dg1WUrGWLMkT
XPtDUd74wee4x/O/LsorX3se3vjV8/DAH6Hfi+Lyn6L+LIUHNoT+LMoTfzlf
5jV64Pu/0L9FeYKzJEpi/F/vhTd+87wlnkOOH+ri2v+V5BUie+EV9qAGf+mS
7nOlz8U7gelsrGVK4mDriFuVxHclYrkkXqsl5fiEtVJJnsiV1I9P8iXlMFoo
KefdbxZx05IY3yRivZLew0WhC0vyDXVqeIWzcFb8wLW1knxC5Bz4g/nFkjxB
ZB6sbV7SPLhvEHGLkljcpqR7g/tGERuW5IMtS8rxCmv0wPT2EbcryQc7R9yp
JG+wtm1Jfqhf0jz8wRxyPLBjxB1K8geRvfAHe1DDhzxjZu8W6ulnscLvBD4+
K6rGc8ID+0XctyQW9y8pxxOs7VOSB/aIuHtJHtizpBxG9yoph9FDIh5cEvcH
RTywJC/t7rPgCeoHmZUWoeYleYJrDyjJE0TOgSeYv3dJniAyD0YPLWkefB8R
8fCSOG5S0t8v4IGjIh5Z0j3zbSDHE6wdYY6PjdjU/uQsx5fkCdbYCw8cVtI8
PMGcw8x9s9BxJXmCyF4J79HMnLX0ffIN4tuws5k+IdTK3HQJdS7JA6eE2prF
U52XvdamJA+0dj8eONE5jJ7kHEY7hE4vifv2oXYlzccTPUryxOmuZXwWzlrP
155WkidO8zlKnn9ySZ442fNgtKPnwfdZoTNL4rhbqGtJHjg71KkkLs9x3tBr
9MBx99C5fkac8YKSPHGu98IDZ3jeFp5DDvfnh84ryRPnea+dvAe1rfyMmQ2P
vUryxvDQk6EnQiNCTzmHvytCl5fE2YBQ/5K8wdplJXHfJ9S7JK+wdmlJ3ujt
GQe7r19JjPcNXennfUNoTEl+6OdaS69dX5IPrvQ5WnjtupI8cLFn7+OZl5Tk
j0tca+L74f7gclRoZEncDw5dVZIPhjjHG0OdN/eca0vywUjvdbzXrinJDwP9
XPDDIOeHe2/yZr52dEn+GO1zwO5Y3z++vNqzeT8zQzP8nojTS/LAxNDNJbE4
yXlbr00oyQM3el88MM45jN7kHEanhG4riftbQ7eU9PvUZ/4Zfrrr1GBrauj2
kjzBtZNL8sRkn6ON548vyRPjPa+j+5gHv3eH7iqJyznOu3ltdkk+uDM0rSRv
THeOX+8LzSvJE8R7S+KaOLckH9zhs/K76ue+n7O8HzU8cY9nn+8+8q6eP6uk
7ya8DCvp96lhfjf8/Jjvc8Di8tADJbG5wvnlXltWEpeLQ4tKYvF+57C5xDms
PBhaU5I/VodWleQb+haWxNYa1/DES6EXS/IK164syTMrfY7LPH9pSZ5Y6nmw
+JDnwfejoUdK4vrpkjzPfT4eesz3/YTzoV6jB36fDT1Tkhc5ywslMf2M94L9
hz1vsOeQ45vnQ8+V5InnvNd13oMafnjZ9wm7r4Ze8fv5IvR5Sbx86Rz+3g6t
LYnHd5xP9NpbJXH/mveCy9edw+aHoQ9KYpT4fknsE98r6fu4wO++l98J+Vif
i7PiiXc9+1b3keODNzyPP6Py84/fd272ud4sidePfA5Y/zT0SUne+Mr3yTdg
fWhdSYzyDD4ryR/r3APH34S+LonRH0Lfl8T6194LD3zsedM8hxwPfRf6tiRP
fOu95nkPahN8Xu6HfzaE/06D/z6W5/Kj5/FcfnKODzaE/izJG385h/vfQr+W
xOXvzhd77ZeS+KXvj5KY/tv9+OC/0L8l8VGvHD+fy2L6f2XV8MFG96z2tf+U
5JV/XFvqvZkNo3Vl9cNooqwc7jMR02Vxn4qYLMsHrJHjmXzEXFleyZbVgwcK
ZdXguxSxWJZXOG+1LE+wH/PgvhKxXJYniPTgCa6lhrfYg315xgdFPLCsn9PM
ZzYsblLWc8Ebe0TcvSwfNIrYsCxvbFlWDpf1I25e1nvdoqwcb7C2WVmc0teg
LL63Kqsfr2wXcduyfLBpWbPhePuyanhg67J68BPXblOWP4jUYIq9mQ2XO5TV
D5c7lpXD+m4Rdy2L9Z0j7lQW+7uUleOTPcu6Z/zBfdMD93uVVYPpfSLuXRav
B0TcvywfsB/zYH2/iPuW5QMiPfiAa6nhJ/ZgX74pPCfun3fSL9S3LA/wfg7w
e2LtyrI8cFTEI8tiunFZOR44LOKhZXF5eFk5nmDtkLI8Qd8RZfF9dFn9cH9s
xKZ+9+1Cp5np48qqwf0xZfXgCa5tUpYniNTwBHszGw80cz+MHu8cvluFWpbl
gRah5mV5oqVzuD8x1NpcnuAe2D3JNfhuEzq5LE9w3lPL8kRzz4P7U0Jty/JE
W/dUfS21ovdgX74dPKeDQz+XFHkncNnezwU+eod6leWBs0OdymL6HOd44IxQ
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
3oNaMz9jZsPjzVV5Y27o29A3oXtD3zmHv9tDU6ribHrozqq8wdptVXE/KTSx
Kq+wdmtV3pjoGZ3cN60qxu8ITfXzXhK6vyo/THPtYq8trsoHU32OPl5bVJUH
Jnt2e8+8pSp/3OLaBb4f7g8u7wvNq4r72aFZVfngLud4427nvT1nYVU+mOe9
enltQVV+mOHngh9mOu/ivcl7+tr5Vfljvs8Bu0t9//hyjmfzfp4LPev3RHym
Kg+sCa2uisUHneOJVaGVVXlgmffFAw84h9HlzmH0sdCjVXH/SOjhqv7ZkJ/9
z0AMcZ0abD0RerwqT3DtQ1V54iGfo6/nr6jKEys872r3MQ9+Xwy9UBWXLzm/
zmvPV+WDp0NPVeWNZ5zj19dDr1XlCeKrVXFNfKUqHzzps74ZahC/72xRk6+e
cg1PvOzZY91Hfq3n89z5bsLLPaHzHHk3/Px4w+eAxQ9DH1TF5kfOp3jt/aq4
fDu0tioW33EOm+86h5X1oXVV+ePT0CdV+Ya+t6pia51reOK30K9VeYVrP67K
Mx/7HLd5/ntVeeI9z4PFzzwPvr8MfVEV199X5Xnu8+vQV77vb5zf7TV64PfH
0A9VeZGz/FIV0z94L9j/3PNmew45vvk59FNVnvjJey3yHtTww+++T9j9M/SH
308l3me5Jl6qNeXw97+I/1XFY11NOd5g7d+quN/gveDyL+ewmYlr0zUxSkzV
xD4xWdP38U2/+5v9TsiX+lycFU8kapqNZ+gjxwd/ex6/D8IWTK32uf6pitds
TeeA9ULEfE3eqNV0n3wDShGLNTHKMyDHH6zRA8ebRKxXE6P1I25eE+ussRce
yNU0D08whxwPbRZx05o8QWQvfMYe1PD3Rt/PDr6P7n4u+Ix5PJuGNXkPP2wf
cbuauNyhphx/sLZtTX7YMmKjmvywVU05vG5dUw6vu0bcpSYP7BxxJ884K3Rm
Tf6gTg1uDot4aE3+4Noda/IHkXPgD+ZvU5M/iMyD191qmgfre0bcoyam94+4
X01+2DviXjX5Y5+acvzBGj0wfWDEA2ryB2c5pCZ/sMZe+GH3mubhD+aQ44GD
Ix5Ukz+I7IU/2IMazB1e033iW87Fn/Pg+8iIR5ibU0On2A/HhY41o82c4w/W
mtbkh6Nq6ofXxjXlvO+ja8phtFWopX3SItTc72Fa6I6aPNTSNfzBWThr0tce
X5M3jvc58AHzm9TkB+IxZvQEz4Pvk0InmuPTfG94oE3o5Jo80dZ50Wv0wHH7
ULuaGD0j1LEmT7TzXnigteflPYcc7juETq/JE6d7r829B7WKnzGz+Z2J9wAT
eOJMz8MTnfycYP/cULea/NDdOax3Dp1TE4tdnG/ptbNrYpa+rjVxfJ77Yf/C
UA8zMSg0sCaOL3IN9s93z86+9oKa/HGBa9t4b2bDZU/3w2Uv57B+Sejimljv
E+pdE/sXO4fHy2v6eweexaXugfsrXIPpvqEra/IH5x1Qkw96ex6s9w/1q8kH
/dxziK+ldoD3YN9Gfk48a5i7ys8CpoeEBvtdTQzdXBP7o0Ija/LDaOewfnVo
aE0sDg8Nq8kPQ70X7F7jHhi9ITSmJvaJ1/v944mpNflgsM8E+9e6H09c57yF
+8ib+lwjfD931uSxJl7jTDB6Y2hsTdxPCI2vifubQuNq8sF453hmku+/rZ8B
PXhgsmvwfWvolprY5ey31+SJcZ4H91NCt9Xkidvc09HXUmvnPdj3BJ+RZ8S/
z/5B/3ugeVfTfW/LQ3+FNtTE6D2hOTXxNz90X02ss3Z3Td6YGZpRk39Yu6sm
r8zwvhe6b15NjN8bmuv38Ejo4Zp8MM+1q7z2UE1+mOtzDPLagzV5Y5Znd/PM
2TX5ZrZrV/h+HqiJ15WhFTV5Y3FoUU1eud853ljifKDnrKmJ6xXea4DXVtfk
wwV+LvhkofPe3pu8v69dVZNvVvkcsPuo7x9fLvVsmFgbeqsmLohv1sT3s6Fn
auL1OeejvPZ0TZ54zPtuWi++16F8PTH6ZOgJv/uXQy/VxPiLoRdq+ntc/i6G
vzsc4zo1OHs19EpNfuDa52vyyfM+x0jPf6omTzzleWPdxzwYfDf0Tk2Mvud8
stferskfb4Rer8kPbzrHux+HPqrJB8QPa2Kc+EFNnnjNZ+V3dr5BfO9v8n7U
8Mf7nj3FfeSTPJ/nzjcRXpbV9N1c5neD5z/xOWDxm9DXNbH5rfM5XvuqJi4/
C62vicXPncPmF85h5afQjzX544fQ9zX5hr51NbH1o2t4IhHvs66evMK139Xk
me98jrs9/8uaPPGl58Hiz54H37+Ffq2J679r8jz3+Ufod9/3n86XeI0e+P0n
tLEmL3KW/9UT0xu9F+z/4nmLPYcc3/wX+rcmT/zrvfAZe1DDD8l6us96oXIo
HarWE9PwXAttFip6nTXYzpt5fkYMd85/Pu5/2qNZxM29byZUP7RJqOIZzEr8
T/uW6ukcfBM/9buf7ndCXnQdrz3mnP+8mXuL3jcbavo/MbXBz5S1XGhkrG/h
+6r6TPV8lq18jynvs4n32tLXPx77NPL6sf9TrP///nMjz2A/7rku1ht4T55f
Q9dYZ62BZ7H3Ft6/nq/juYz4n+aP9PVb+T7/D4HXeT8=
          "]]]}, {}, {}, {}, {}},
       VertexColors -> CompressedData["
1:eJwUnGk4VV0YhpUSRWUoJZkaCCEZyrQMGZKhSCnDR0klEZUoRagQQkKKJCEk
YyQqlQhlJipDSTp7b1FChnyPX11dOXvvtdb73s/9nnMkfsDd4tBcNjY2YV42
Nnb8GTbqLb5aZJDcuNk0YTOXIUX3F/86m8siksNmNQErB4nWnM+czWwMGRsw
aQ/NZ5ELu1KvnxAYJHyhJ1ZLzNBk5eGgEw2FLHLv8gqOPUsGSaaUoIvbNE0k
faTerCxmkdXtVa+VFg4Sr4nrZ0smaaJt6CXs/IRFzvH7mfPMHySL5C/5sE3Q
5NNjWbWipywyP6frT/cMQ7o8vC8ajNNEL+rOJMczFtFjl53InmDID50rGaGj
NJm0F9GzecEipj9Hbp76w5BCzy3s70Zoopy07E/eSxaxfNy9VHWIIfu1Ttzn
+U2TtVp1owsrWeSa5NObIyyGxMyvTTEZpgkp/LHRuYpFNObSbg+/MeROTcXi
0J80WTyxzf/VWxYRfBFb49jDkN9iJVOVDJ6/pbFZoo5F0jwz+3k/MiSnbsaP
jabJg5Fbi4Pes4i576ep8laGBFq1Z21l0eRlX/Xy7w0sEhF128C5gSGZHM7X
PQZocuRQYtOOZhZxfj1vemEtQ2puP96e0U+TopggqfxWFvG7W2WdXcmQJeZ5
vZ/7aGI1LDiz8gOL5F5ZHW38giG7Ype58X2lydHHkpqBnSxykM7r+VbKkF7m
5ByDXpqwyKu3zCcWeTsVee5CEUOMCiRzvLtpEqqvE7avm0Xmflt2UyCXIfaa
uy5nfqaJfK2h65teFpEb7HDLyGQIu3rDrY8fabI5r3mXUh+LZMakblK7z5Bs
Jy027k6aHGwl6+71s4j+Q9tlNXcYohTMeq3+gSaFpTvq+X6wyP6MCRPrBIaI
jTRPuLTR5E2u+NZAikXI1LmF32LwPPpp+TdbcN8ztiYjDItMPm2/cOIaQ7Li
i6aqmmiisp/796EhFjlvM9IxEcKQJvHJgT8NNDlT/VTwwy8WYUtOMg4KYoju
Or4ra+ppsurAyfvGf1jEs+TiP24/1LGVcv/OdzRxDCy/Uj7GIuNnxCRu+DCE
LVpj2YVamqiZPshUmGCRN5n1PcKnGCI155ZE1luauMq/m7g3xSJLffOcUt0Y
Eh5iJ/yhiiYW40aHBGdYpOFLXpvMUYY8urNh6fw3NOl2q2oPnUORr1xB9gUH
GdJ4RGOR4muaLPH10/7HTpFj6ckS6vaow40uQv+9pIn4D6UIDw6KZKroG72y
Zkj1chHjsBc02VuyJbePkyKaC0793mHJkKdK+9OePKOJtMjR2L2LKLJS4I9B
qylD8l8Xq30vo8mQ2KZNNTwU6Y7Z6/SfEUPaig/zLXtKE5FvVzw0llKkRH3k
GEuXITaem7foPaHJmuyfRjl8FFHnG/L10mTI4PPzjz2KabI67NQD0WUUWThA
iti3MCRtXC8uuYgmCv2ZlyIFKTKqn70pWpEhWhaiffUFNIm9+7CBTYgiPR9a
eSQ24tz3GaTN5NHkl4LwhRPCFBE2UnMqkGRIaXhEv3wuTS4fXhHQLUIR5WNb
zQwkGOIv5vbQIYcmuWu2NZqKU6S5WaivUxj7XDs9NzqbJvnNzxyerqFIUTK/
pocgQ1xeTQy+yqRJSYfEeqn1FAm+ZuLOxceQ3eXV3qMZ6K/mAMEYKYrc0xu4
do+bIfMWnErfkE6TulpnmRlpiiSXcBWQBQwRf1hw0e4+Tax3v7U+upEiPB86
qc9zGOLwkOKJvoe+viEQ1yRPEUXp6yYXpmiSvUneououTZxMRLvUFClyKuFC
v9gYTXoadXdP36FJROWG9SlKFNllNK+mEhzJ7khaqZREk4d1nYc5VSnyyv4h
x3FwITHSI/3YbZpoJWrcPr6VIn8omazl32liEHB3bmoCTQIbn5Q1qlNErtCx
8iX6tu51vfzneJp8txR6paRFkZEJ5wMen3AeGvs3C8Zhvbv9H8RqU2SVVlSE
RDv6/IMdr8UNmrgYHHIZ06VIZ5ePVVsjTbwbSt6FXwc3emPZ9urjOYvmvQyr
o0nbe27XmiiadG1SOlxkSJHQq85d+qjvHNGKnwsiacKTl3mTzxjneF6mcA7q
1ef9PFuDCJrcPlpw3c2EIq+dxY5Igtu6K6w2coHbyyV0Qx6A29d4P/L+A7fj
u3qu7gS3z3WcvPC3nEWOWdn57ge3vx40Xe8Obu9N7FH1B7eVew3MHo4wpMow
KDwU3N4z2qm56BWLfH7TIjQ+yBDFR9OG935hn23LPt4Et4/M4XVX/8GQRVMV
QU+GaBJvZ9UkU80iAv/mPjzzlSHb2y46vRukSb/W0z8valikOfiv9MPPDIna
Nn9eN84hIFxPdN87Fun/qKn+qR1cHS+7MAg+uy/jlR6pZxEVrity85sYwn/5
+s9J8Fnr3cRwVBP4YN65W6qOITqqWzwW4NxKrSQtFcHnbaRjWv8NQ1SXbxXh
/TbLhx8bWttZJO58s7c9+Pz4EyfvSvC5L7fU4iz4TO8tF/AEny3eTx4UxTnf
P6yWKf6ZRZxOrxS7WMiQYCPtTWvB575BDZ5a8Jnf69PA1RyGcJu0RkuCz5VP
Wq29vrCI+l/TsugMhnhK+adsAJ9flh1yWfONRbp+DfTfSEFu0hU+0h00OZD4
QLTpO65zXKPwxm08z1TdJmnUS1Re1Z4AFotwHXznFh3LEPm5575KtaKu/e0G
N4PDcmsn/guLBN8O6qWvb6YJe2xYZf9PnO+V7vrAUHiApeKNNaivA/4cZQng
8CoR7fk+4HBmWM9rUXC4bkgw3xwcdr54XN/1AkP4yo+ZrgKHf3/ND54/ziK/
6ze32HkzpCHfXX85OKzRfEa8DBy2sK/6berJkF9abK+WznJ4oNz+5DSL9N0u
7NNwZYhm+72PC1GnJ5US1siwUYRPtumbtDND3g+bpc6rpMkE9c3y61yK3ORX
VlrhwJDFgg6b/qF+u3P0Wm7Np4gZj+Si+fvB//u3Y8fA25jeNaG7wdtHDSKp
w+DtCU2570PgbZ1YtQ0PeLtte6lKF3j7oz1ZmQXeqnToK7wBb8WTS8drDBly
wL33+tdSmsxdHPzzAnj7+N8ckRIdhgjpafJ/LoEP7NsZoMoPbg9Ff7ivzpCH
dx1ftz2myXxl1aaf4O3ktijrGGWGCCrbFjcUor+jst6mr6DIYvttdYHy4O2b
W5M1+TRpbRi2/G8VRQ68EHI4tQGcdBu+UwmupmyUsFsOrvq352g5r2GIhFx0
/gtw9Wbs+qY6MYrseVsXuW81Q/Z8XqFTBq6m8ZckB4CrOdo+583A1bMngq1L
wNWWUptiVXA1k//vBn1ehjBBZvOLwNVPuv/Np8HVN9kdTzQXMWSZvIFlfhpN
MrRaz96Rocj71RNmW+YzhHPOU9PcVOwndxSnhRxF7lfGcCnDC9fpus7kpNCE
LUgimX0TzsVzO6fSX/jEzkjPnGSaCBxr3Fy4mSLZtOQRZfiZ2poPuTngZ295
/OODKjivltJtW+Fbroznq0fgZ3m9uDAf+HnyFV8JQR+aNvIW5IGfX8yeWz8H
P7WTGzuN0FcGGdSVQvCzadMRx2PgJ8Or8no3+uRxy4vtJbHg+Y18meU6FEnh
kgw9iLrPEOqeKYuhyWDU+4fP9ShywYLonEYdfz27Lu9lNE1EeS52HTagiMDq
jqkQ1GUQN6fTW3CSLUKkaPF2itDnVtbffUWT8MbrIo3gZKTg5Q2FOyhysWqy
uqycJrsDPfs7wsCZxcJK1mYUiey1nehE7k5ZDr74Gopc3lj5bmInRZR2cnhO
IUdvpPzJHwymiUNo789blhS5LP1EUxznV3hHpGLiMk1kCw1j1PdQRLBxi8v2
2fPoyfy54BJNzL6Qog5r8Py4Fftp7G9xd6ju8kCamOv6mXrZUOQ/5VH+2bwR
PuJYvu4i6sF+jTWvPUX8XNektWH9wfTlgyp+uE/Kw4ZMB4oMr136ivsaPLWK
e4vReXjp1L983YMUCXqy5qRBCE3EnF5o2pwDT5IsJz8cosj3OezPAnG/kp1y
Z9x9sM9dWmnHj1Ckd8l76RMMQ8JCbsaIgeeLLsl7bn/DIpxCtmtyv8O7kh/l
K4PnP/dTPz6B521jOXYne9GPdyNUxcFz+zGpbRm14IlJ4QUZ+LbDMMPJBZ4v
1jeN84ZvZ95/L9DZwhA72/Qs5gd82LFLwbSRRSKfHq/we498uR5pVY96iQgK
qV7XwiKsDVEzwtXo666H8jng9gddJcm54LZe5xTJr2DIE+rmf6Hg9pv6fUJf
Oljk7o6lQ+QpQzY3vONyQn2FH5s4UQmvJmGfz70Bt2tPWFqog9vDxVkTWeD2
/s/NZgbg9pvD/2yXgtuj+iZXboDbOR/7m5+nM2S9gI/pV/gzvfBX/0Vw+4+4
/+nNdxliXk8MC+HPv+uHfpwYYJGEtH2Jd+HPOg4xxwPhz2sWUw4H4M8v2M0K
F8Kfu3ndvu6EP5uYfxfeM8giEtNrJdzDGXI0+EitMPy5TPPwzx3DLDJ67T/T
+ssMueqeb/gddc0auJCpN8Iil5zm35LxZ4h30pRPLviccowS04Qncz055RYE
T165xCXQG3wO8JJavwV8NvBQ3tAJPmf2+gcR9AHjERShBD4PFdVLbwSfD0QK
J84Hn8MWbJZXBJ87nNIazh9iyLsjjnQNfHjNqF2XAnw47XTr6Tr48Kc9eZHX
wOcvokonFeDDEY4CJ1fCh505UtItwefLdaOVClzww6u3RQ7tYojT/hFTQfD5
hNj83E3c4M8t/rpHxgzpUQq/0wnvdan/tmjzEork5vjU/dXD9S+7FyfCe18t
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
BMfPFMkxEK7j1IXH3hFZ/TEf9z38qFOgDfPE9Zikm4QmB4efmIs9Rr+8Nq54
/x7XySzIkNWkyVGlp1cOPEHOfsjbfq0Kc4b8v4EKNdTzYrGqu2Xwhy+mz9Ky
MUdzxFVfQv9tW+ZdYA7OH3swfHoklSHGlzY+HwHnXzrWHngJn9/9kbOm7DZD
MmrOqKm206RhVKHlBDif/Cy7/yQ4P3pveuwk+vW0sujUenBe1ysrZhU4byMp
EJkFzr9eO8TTB86f38xNFQYyZMnTqv+64O1XMlLC0sH52pSCb9rw9sfGK55y
g/MGD+0WeMDbF9+Z8nnhyZDDN9p/q4Dzy/4pL9WeZpGUGa5bSi4MOfBzpY3d
G8xrXVpqAnMoIlbkp5bkyJCvUyd1/MED2VWqK5l54K2nvNE/a4a4fe8avfMC
9XwgR6eGEx77yTXPaicD/vjVzL5PWatmsT0Lfp770cDhviFyp9NxYXspTd7M
N6y6Bj+373qmNqjFkNspauw/wfPPPy/uPiNAkTtnuCQ2qTDEnn0N23x4370s
kTBH8Dx6fdew20aG3FngYLwynyarDuUsMgPPc3d2+GWA5/Y+GzfIguevwy6c
1ADPP8/7ldC1CvetvtarCQ7VVrY5y8LDH22ct4iPnyG7X8k+NgPP87M3hq2W
Ql1tcY/UW8gQ79Uy3+3hjy0nd4cvkaXIlYrqryfnMIT3wYp8t3vop+CbgnMV
KBLlm1J0b3z2c6a2XReScb6xXz6ObKbI2Z0Hcprh23IcEf/C4duhx59FfIdv
xx+VcZv3HXWZmsokJtBkL3Ef6IBva/W3hanAG2LGy3flYO7vopnUWkKRssyJ
my6Y62yqn+5/Dv55/ekPLNNDn3RPCd/FuepPvVZuBLf3Pc0zyga37yUq3ujE
OXm1m/P0gdvn3uiWJoDby3ZwnhUEt2vd5LnGr4LPOSvvXZnltqGiujX2cerL
PTMecNvXRKbR05Ii1wL6tBOxL0KUK9tacFuntXqZ7V702+sldD/WuUmvS0sD
nut2MEhfD/6cfuJerDL8eSzhj+Qe+POcAP4tUv9RJP9x0/WQa5iXMjzaPc7T
5K6sQvXCg+hDVVuFr7huFDfL+dpZ1GexdzPLmSKOms35uvBsv7LvTA74zLCZ
q1W7UGRRxQ+bjNPI0fzpiw3g88vtxd0p8OTX10udBeC7Tem9KiPgs/iEyoOz
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
LRW6dV/BZ/Pe3ui3A6gf5z9BK8Fnnh1rX8eCzxzxKo1bZj25ZO04AZ9Tps59
MwWf97HJeKeAz2J7sxo8DeFlm3g2cIHP6+d4R3GMoh9THcbyNCly4ovIlWpu
1EvieclDE+DypzbLafjd69irY1fBU+ugjfrPwFHp8Mt1u+GJvj/qPSw5cP0b
Y3942WliLDBqUCJGkRd5gowI/t4nX6LvAH4fcPucLglvHfq93WEQ9cK3IUP7
wSKarEg1aE7hoYhNPv/LiimKLN9m9ptegnlXIit7wzzM2Y+HOW8iJ4a4PV1k
UJdxWosFZ7+fbn14q8wpPLfG2JICJ/iHyvplf/bNvq9fJSZq+ZsiJvfNOuOR
b54ewhvYB1i4T2Wn8hBFHmueZqqw32eu7bhR3MUie5Yq7RbGftHFX/4OY77p
V09bdaaVReJVXS9yoE77uDh4BDfQZLe0cJJOHYsoxR22HsHcMiixV0l1I/pZ
8RvH4gMMufwkLuT+K5qMp5qyP8VzX3g2fXTvXobM3Tb5i+8FOBPlVXCFiyI/
YgzaFpkw5JTR8Udm8P/A6UnROPj/SAJbUoo2A281DvEH/5coyrYUILdcTl8p
E1FmSEShuN8D8H/SZtHZTyvgpT1j+QHgf2zMM+ca8F/1ueOvJeB/Y2n/cMNq
hsxMHlnal00TQ7//1pmugZ+rze1bxMcQVWkP47EMmuhd6piOlkKdV8xnlDkY
cmxjW8888N8kteJoz0aKbDpg77xrAlzWl7zNc5cmp++n2yihDqIWnLjlMEiT
lT762nzw/AnuQ3Xh8PxNz7nfHPoCz+9TvsoPz288kl9GoZ5C+y0XHWzDuWUt
V+K7QZMXyyJUTPXwPMuW+OyvoYlWhyZrcRR89ZGLWR68Qckoht3sGTw+L2j3
QvC4p058raAZOPJaNojk0yRG5/nS+SE0uWuc9fU8fL534WSxAnw+aLd9wQw4
P516q7IPPv+yYA9ZkzD7+4RbqibA+bv+x5fsAOenP0UnrojA/DZ25t0oOO/q
dYs/F5wvOiKxlQ+cPxCfqjniTZMPrdc28R+lSPlbblteL5p09Ndd+g1vf7vr
ROtJ9GepYJqSIHhdfezlwj/w9tHg2jONmHvnpp5vW2tPEwPvo1J/kQPBa+QS
ZXwwrwqdUVeHB3t+W67IBm+f15vaevEC8t2IXd8GHCx0HPdceAg89lYoaw6k
SEm9W/klNZp08wTJrUBuvMmQHxULoYioida+p+BRYSydvMEO8776K8WjEciX
gsiSKfjfJ4e4Ga3Z93v05aWz4eevuy4eMRbE/PAq2scafr5jj0biD/j5FsPg
vlT0n03Gwi1euzC3PU/YLQ6eG62oieNmw1ywo9Q+Hjx3adwuZgmenzvn3HUR
PA/g3M/9HDxnM5/XfgE8PzKQyzEfnljlx2nDgoe7yxVYpYLnU922FrGf4YFh
OQ5C4Pm+nd8vvIKHKy25OaYMXr5/ZCdvroXnTd+v9gk+HWWyUqLvDfq2IqM1
GOuuXupzarAM/Nq2ZCQZXNfqHrWvwrzy+vvQ6gl4+f0x3iuuueDDnYbmhZvh
pVY7ZGbw+uXOI7QB5oafqZJqlvBtY7GwmOla8HDsqoICcux9bfyNZBmaXHv3
Yfcf+DbL+PAeKcw3P4QffP8FbhuVrHfpR970yXjZyQeBY03T8sbgwpmmny0N
ncjlsHtEH+dZmnvNNQ0ccc1i4gpnc8v8wK+jqIvB0Y6bC8Btlk1ncRS4bVm1
8XAi6qtQfX7BcXDb+o+K+hHsV8TLf1e7Uae5Jxfnf1hGk6V8gtJbBilyZbxo
hwLqPcyddc2IDz8vORw+BzxrSPeNuIa+4RFI21aOuSpJ46TH6zGKrN8grDaN
/tOICKxSwXm+emTT4w+ONiuaKvrAnzlfCiwpAn8j862+q8CLb/vOWLOvpYiU
nCXvFvizt2LH9X74c8bRhIhb8MqDvkWvnuP83Xt4Rq4h7y9YqObrwE8zhnVX
mcDLv/LnLd8MPjv8a737B5wrYlK5P4PPt43+LWxAzuQ0XFUrBp/j01TCPMHn
pVM3e5xnP3dZm2N9eYhF3hnxR3BjPfsLLqSPCc9+jjTefqCfRRLuSnBk/YTf
jFHuAeLoZ7+H100+gdteawdMacwNK/YaL1hPk5fOxc56TSwSnVYq+Qf5Jxdl
Z3hZevb3RipkDKtZRE7dsyQZ88yCjyVnZtAnzw6al+99xiLrT9WG7/xCEYvb
m2lP1EvxlrY/pwpZpO2P9q15OD/+eclFPao459baR0mZLOK83qylDDn9S6O+
z0gDOXnvSWVLMouINp6S9cHcpdIZEjo7VzdL7uATjGMRL3HduK2om0/rQ4o5
0Qec8jYnDoWzyBEOS85/jViXtoevA/rGzLnl5MpdDAlL2sn3rxw8GxCOteSm
iF//E+cIfYYsKZ2fuhaeW+1i7enHS5G/57+EH93KkMHvprTgY5o0VQooDy2H
z7BbCq+Zff/ntQ8bG7hoeGxw3uzve/5w5r/+TIwhqauyF3XB/093ceycFqdI
tPaaeUSAIXbjbAIF8P+0Ys3HsfD/bwfMPNMXMORvbICQP/h/mVe3Sw38f2YY
+WEC/N+4Nnm1AfgvIKfnOaCI/pKpXa8B/m+xWLaCA/yflDsqnoT6I123NNx6
MVdUKsy8gF/r7lyfsl+LIoGWa/qut9AkgFew4kwMfKA8rFB4G3zvi+W7R1Xg
XfomPZnI2XM9uvbrdors3Tsa8hrrT1r00eETPP/zGe7abHj+gIFPaAvW43vW
jHUVni+sURzpbYX9ORq26ksyTRLvfrynFggvjco5rg8fOjTg5/Tz+qy32+j/
uECTgfg/LnyO6JO/1s7/LqNvM7/4xJ+lSaVUcUqXM3JQPmRyKf7OF5rebQTe
v7J31n7gCs88vfmDFHy9r0eIc3L2e9zFd/w94PMinQOhhg7g5NQ670f49zrf
llwV+JymR9V5N0twJzQ0wxmc91erkRs/D3/J7B9LAue7+Ww5xMH5Q6Fjh4vA
+fi5/0Q6t6IOhsN+d+F6i4vefDgOzjsOKf0Vg194coVUJdvSJKujcpE4OOUq
yeN+CtwR0Omod4a3K5rWxr+PoUjSf/tNW9F/uQG1OzfB22e+86/1Au9SeTQN
t6H/tR6vuswGb3dmd7ATTEYOugqOV8DvXrYl3GvBnJEwl38mD9ws5vP6ZgYO
uXU3tj40pImVh/U7ffix0ed+f6qXIkLtSbphejQR59p1own8dfUt3RCPurco
qeE6AT/PMN0uaw0/nz/1UM4KHh2/L05/H/x808CEWxs4PvHkbL1EObj+btsi
I/SbgE+Htil4nj+1Q2sOfN9kPPyYBvqzbOuxq2XgufE8obtDqRSx2yF8UgU8
N/V/qLm2DvcbYvENI8f2vf0lrQKep00F7QhCn3krTaTOhYdvC2uIVwfPN9ls
ffgJHm6fWPXfOsxPu9dffW4AD7fpnLTf+IkiaYJLtu07jdfpOt7ZKzr7PSxv
By+scyg0c0cS8v/8H30Vt1Xo/073wmJ4n4jsfy4jdhQRVlnnH4pcHVtj5zBM
UcQrNy7CxgJ5MSJ+JhvnsLJUzHUNfFukhjul2QD7seM9fwu4Wf2oqNcUXLQ3
tQu1xXxssMXedA58W9SdqTsxSRFbi7gNo/KYd2xbVypxgl/bFdXDwOPLsQX2
yeA2Lazg5gpuX1fcqZ4Mbluaz+OwAbe9bwZrZeLnKgT1PmeD261h8X/XwStv
NqheYJAHh20XKubj/stUb/DOYce5mPwWVQG3Yyb8d+TCq7MSg9bSYywSmvV9
WdAfitzp2qqRjrwqPZ+44DvNIpfNGna1Yz33ljkIxolg/3bOvTbcyyI8XtyV
8qiXhR4JQ36z+3r3b/iidha5vyjfIRz+LL3910dHKfiHiFi7EvxZ0zJp2RD2
cfvSckYD9V09GaNxvIJFMp4Etez9Ci90C1bjVYT/G4lHFj5mkbyhyfDX4PPa
VM72LuR/ZNr+ewuzWaQ8KERRBecXNsn54T7qK3uowtD9Lot84M/OzwafORfb
WziDz0+lu8y+xLKItnHfP8nW2c/dO/aLgc89krtDD4axyK/XZQsyUDcNB7U5
WsDnpWqTtb8uskjuWEO57Hvk3gw5etGMJoPqP79dO8MiAwrNvI8xd9rmHI6X
Qp9raSRnqh1nEZfmqBG9KvhBt1jG27002bOoh/51APz/OLmn7RVFFqs+yHZC
Hzf2MX4l1iyy/OVa6dnPf8huntK/6Hveo/6qV81YRLbR8D9O9IfIvrV9weDE
65fLVUsxF7QMtxwOxlyQ7Fmp8wBzQfX56hELJYZkC8SEHsJcoNu+rlIVdRCw
7GqKiSRDXn4xT+HBXFCaP+8qjyjq8ob1YTEhhoifLFj2IIsmx88VmIygntR0
/jvcxM2QPVe2G2xNp8lhNw15Fua6PdfYDzjP0GQ4k+3U85TZ7+c3BDEK4EVq
5YKeYfBWqKFDI4km6sfM0qZU0IdpNdO6feBk5recfPh/ilfG8DL4v+iq1+3R
8P8wm8S1EvD/SJ3UOlV4TMPPC0ubq8FzAQ6nsNnf3+zZmOEA/ne965274ClN
zgdcvfoL/HftOcd+DfyvLfn2dRP4n3z0d7YV+K/w9KVbBfhv3lNSvucOTWyP
Pqt9DH93fnAgfBT836mx3NUbc8X9Jz8/Lgf/3dddFdx4AN7lWX3zJnJitGhL
hZcP/HOP9ceDR+BVMrrPy06Dw7S/WTs8f4vSqfKb8DkNMzmJvsPwuY4X+lvh
+VtijJ68OwXvPdLWyrsfHsSz1jrxGHzevLHn31mK3GpWLzM0oQk37bx+Hl63
yUjEVhbcOfT4xZUr8F1FFycdtwPoB64bR6yugKcNpLxJgSa9xdXSn+Dzg4/Z
rH3AL8/RU4+l0U+6bV1WZvD54q/nr8XB5+Wyb6VGwhcVVE9IVYLz/OJmlx/d
hGfNyF6fD15w1OZMaoPzYlGJr1/cwTxy74FLKDhvsGbN6pfgvNSk7pcacP5z
p8NvUcy91kE3643AeW7zi5fegfMW3FIf3qDf3Du5TFrh7SMcDY7V4LJ43d8M
P3j7Hv8zLw9jHYcu56jMfk4578npz8aVFLG682Y/G7w90/PS+/uo39w7Gu1S
JRRRTrukfEd59nP2+Okr6IPRdev7VuI+3dQD122bkL/POO46IicM0sy0RTB/
uCwiAkOyNJG/8TVRsZ4i2XOnBVWiKHK2n1M9BRwRCLXumWihiNlSxxBH+HlN
4ApqP/w8LLx7fyn8XKtLJi35DHxLebe0EHJy6NbV+R49FAkPYz89+3taJvG/
J7rBc2OpA59FwKEvhS2/9s2+/7diyCYbPC/9/errK/D8zXV2gZZdFFn02GW7
H3iuuLdvNUBPylT9Kh314UeVC8qtwVPFSdOY3+C57UwJM3f2/5Pw1cnZAg8/
MXbS4gK4O3I/4HixLEXYpvL4RJHDPtZmzmxzMe8uahXzEwOP4q26FrHTZAXf
nB4f/PvS6ovd+wTg1fxv2Gf+oR9OhDWykA/ClxrPG3LiOsfcT43jPOukL5tZ
Yj7I/7b0neEUi9xpeiY2juco1Ow8VoB1HHzCc3s/fHvCy2R8+hdFuDuiySLM
JQ7sl4v9+ljkTQAbiwu+vSc5rWc/5kZ/g1DW4w/gf//mvlVYf9LdOucU5Kef
U8u/GXC7bue7ls3fkZ8uVqxenM+MtkD5fnA7uGz/g13gNkc+Z9BKcDtCYzPz
pgicHJY0P406EhddYLodOS938dqebfDqSBOLgiR49ZrHj+w94NWdcxReNCWx
SCFf58t37ajXiOCmKB1wb2x4yOM6i7gm57nMxXlLuEu/zIQ/3b6e+0g8GDmS
WhOngflNeJG8YRnqOvjy4Ve9vixieU9c1Rd+MBIofu4N+kD6z87feR4sojta
pVxRDS7M8TjzFnNwoPUMR7Qzi2i40P6LUL8BKw5ZVaKf5SpOvrlowyKJD7/M
t4GX7Gjmlyv9jyaP+xUm/Hci77I25D9CfVPr9gllONHkxX87jl3TZxGJXydO
cpXOel694jV4X+beM1+z1ZBT2xNVj8CHfl2ouebuBj9bKLCxQ55F/IPq6FrM
w9ardm7ffhLzq4kyv8A6Ful+aH1R6RFFVvItPyPsDZ/eleVoJ8Qijvc6v95F
34xfO6/wwxdz0wjnt8IlLOIpI8sugDmcMyIy7NFF+MBlc8d+BYbE/prZqlNA
k+2NBT4vhCjSuOaL2K01DJFU22zVlEOT0Chu8SLUH9vG9mVZyxjy5u12X9lM
8Fhp9Nbv9RQ5HRN1MhJzgWfqCXdvzAULuwNk9DEXOJf9ktj5lyaq92oai+Hd
nhWJt9M347nuqefN/v8dSaG0JH0L6/TV+rZCDecmd+/WiU80+dvOO7w8DvOs
WtjcOG2KSCqrmnW+o0kXX3na1mia7FC1/ytqiLnQWUdI4TlNdj0LfGIVThOR
0yGdeabwm/OLZb2QZ3ZP7oe7BmNu5TpdZbybIjr5TRdzMZ+8KGX39gPX6zPk
Rgf2w18Ob+r7gusuvn336TXwP9PuVWEo/P8HiehZGgS/kK24kgT+a+2pPSYH
/vdbSVRqgv8lb6+PZs9+T1JCJrkJ/H9WXJzk6kwT2Vpv7jJ3mnyrEhw5DV9U
ONKlmoycz33/pLjOhSb0Iw9JQV/sz59DKz8aIUf1Cxq6kd8DmyIEiwIo0uT/
9aoo+LghaI/QKPKebg1+ZgbPb7rPneAOf33Y8Et3Kfzgibqy4ld4vvhoPv87
zMePJzd/k8N9lJa+TfGIBW9bFaK2Yv6PfGsQYmEBXm2x3Pf3NkUuXxU583gG
PDmxLO2c6ezvF/M99rlHkaAvshPbwK1z8ZEpmXiuSsMyuV8P4NsszjX9mIcD
3SfbuuHz0ovKTQ7A52siFJsS0G8J5psjVsHnQ69dzHqL+n3zrfDVQfi4mSXD
YY91sEXWjkqiDwJ7C6J1wPnNud9OpYPzTnuFfviC8wpf35QpZVJEasG/OePI
t8xV0sbV4PzXMaH7mnjeZJZRvTk4sj4ujOFCH4/y74+zjQC/iueM5oA7v5ba
5unA23fe31MT5U+RFaEngpchD9NEuc67w/tsrX0PfMYctj6mNDoQPkq/0tW+
jvVMzec8RQ5RJCTgzqq/8NeRv2PD2QMU0Q7iml+yF3nesnadF/JzdYjHtTJ4
6+toxSWGxhRhtio8nFiKukgOWPVyBH3h5HWR1qDImCRfzmXwd/HD94nl4C6n
03mdDPh5RsMcUSHkrfY7CYlH8G6nz0OyZyXgBWVXRwrB83z13uJYDvQTR4rQ
/xydeTxU/RuG7UuWNsmWKEq2SnbxSCUJIVuSLUmpUAhJQpStSJEtCaUk4bWl
EkISskdEycw5cyalEln6PfP76/30zTtmzvk+133d05kz7qsw51V/ydjj+dkq
e8HPHx/P6OO1IRfk+bGAxBQ29P4lu7k9WO/3dCy2652dIyHFcInBU1ZPUKkt
WCGGPpVox5n5jYRbzMolx5HnT+xrrbuR59Kd5dMf0MNXNTdObMTX82Hf/YhY
PE7assX9yr0k5PH4PmcSmOtHna21N2EupbQcTWkhodFdJ7jmKwOUTBpHPqri
/Jg3OS+rJYH5kZ8rEftPyNLo3UHq+Dixyy7mPMHfe8Z+j9cw5qojI28Jnv87
S1ZF7LpHgtiuXcp7PyDHzhRJpuB+yTmZum4efdvxv+qMLejbAR/etYigb9f3
/JFojiXBdPFimDT6tnJu+Nt4Uwoi5H3l88MwX1Ksn694x4BiDt6d8/txf42Y
zN88Q4JS+w9DIdw3jvmZFkeQ22kZPI63kdvfBNSmhJDbr3a7C9Ujt4vXJM0W
O5IQ8YKvRgS5La1pli2Gc6adbHOrD72auph6SRb3q5P/SpljOJcTg4eppTtJ
2HZJQ029Gufwn8LTxzjH/MfOVDlqYQ6GnfvP7D8GDG165EPh3M8pyVVVKJEg
66X5+wT6UMA9p+D1yItDmp8L18uQEEVPGUp8zAD15VkM6xCcV0Me87siJARR
nAeqcN6W/Hb/EnIR98OjT26b+UnYYmZsTEMPU23QvJCBPBpVry18t0AA+fRs
jmQuAy7Oq/aWX6Xgc+G3ifNTBAz2/TWzRT/qVmbyNCdS4Pal+6MOjQBV5Xta
Kdjzfz/JUOm6gV4Jfft5PxJQwploNoC8UFtPHelLQ89948M93onrJlpBsuiR
gydFG7uzKNAvfjOTIssE3Z1psfKYCx4M451Zsgzoc1JnHl7JhM4wUy6vQjxe
/jsT5jZivh3sHznPxYQqvW+BfqzP1T6W8C9QxX2dcVHpxG8K2Ie28Xijj1cZ
q5Z5amB/ftxVwPoc+A3OK/fs0ilYd2d7sQ7O1QGV4s527AWeAsfkNLEXcD+P
/yaFvUCBo2yVZTM+L54v9gLYCy6SnDzCOJ/CtkEtlZUUtKq6cA3Eor+XbE1e
gn62QSZjpcADCggG8TnrMh7fS4lGyxyQP6u3Uhb4uhX/VKY7h6OnDSWMSLkw
sCdZ8FzB/OAutnwueZ51fVS9qaon+laRVFsN5m15UUpDH57XtH8f441OMcC7
LM6e4YXn806eQBL6v+vysHZ79P+TildPr0EvJ8Yz+/eh/3ffJ5xPnsdew+l7
yQZ7pGPpMnM+zI2c5uqyMOR/4lavRzd0KBga2BTQjPsytLHMKwH5n6bpVD6M
cznOZ6kfe4iChASaQep1fF15KiIaEvg8TusGWdlRYCFuKJmRir3Ptm86A/s9
2w7LT2uscN+/KuRKw31RUKi8QwQ5sv0R+jP6UGvGpGwC7i8PGYFbd9Dnaof+
y21Bf5Lac7IyuAh73M2CQ4AcDcrawPEAfSv3Y77c4TIGHG+h1/1Cf5pxvZma
iH72epI2poleU59ZXF+H8yMyYFMZij53Woe8wMN630a8a0teMfJ5/X8FZ9D/
DIsTM95iD3bxniy9g/3DfyE9yxd7/q3zLyYvY5921R9sK8PXt8RxvjkQfd69
/ARoICemE55/HsWetC7EcM9l5BdlUXb4A3piyMCX7RvPoqe3RGzLRM4v8dJQ
PIOcf2KkIBDjgbwor8p8hpyfCQu/9g85Pxe20ovNjgGhJ5/FfRHB5+n/9NIl
9NyDIQ8O3UC/kBvR5BRBztsFbV348xu9tfPrMKC3p2VfZDNHb1/26Bb3EfT2
+AvsH7iVsDdfswpNRI5LLd7Lq0dvb4r2UPoqhR68Kdh7gB3ntvkoIcpPwaLW
ycJhYewre4+/VFzAPnPRi+aC/SA0blp6kg396+hLz8szOHfyvBVZmD/qv19Y
iv8kYexDpTn9J/Yk7g6fTuwl7FHXFw59JUH63w3nA/i8c69Ob52RxX3KsPpU
0U+CcuLPS00kHkeVr5Kr8Pg9Kpx8tKkVH6ds3Z0d2Gemk1stNiLPuSQURMuR
5xprnTMbked8YjuZqshzwW/b222R53GbhV32I88nD/BJKiPPu+QTIoRzSVA1
//t2bIABf6WK5qUNsUfaSIwOp5Ag5xjQfB69IKjHqZIX99Hnh3PJDTEk1CyN
0liD+S348anvBO67DzyvjF+GkMDPszj7+i3mguZFi2e4T3t/NBd0niKBW+jh
TADuj3i/J4HR6DX7HKKc/7iS8NDbbpUKekOUyPqlJtiDzUJfiG+zQZ5fYW5j
vGDA4nCKPut6B4fw5qjIPSRs8InRLsF9maMbsfEJzqdYbb4ZHX27Ki2INxR9
5bXX6ikb9O1Sms5aN1USOK2cL1ugb2e9l67/gb6ttsT5EVOWhBW8m1I34v59
ofLz2WX0Qce/izkJq0hwaJdbx4v+Yijmz7kcuW2hsPWpIXLbzpxNkIlzlfli
/tkN5Lbo/h2JPMjtGosu3Q930b88nfiEkU9H018xRr4TULte+ubbLOTOlc4l
4dco4Ht2I+zNOAH5bP3sjdjb1SzYvhIpFNBsvs+/HiBg2Tl3r/qbmMv6s5X7
kJen5E5K97QRsFMlvaQJezAXXTkvH/nKpjqX8bOOgJXf2uo7E5D/l3ze/EEe
0/SnNsv9R8C0wsuYUeRLrNofYyP0+poZnltHCwk4++ch/fdl9AFhJ73LT1if
q7SIq8wigKiGjmXIKe3MtMa6cgq8tba3iycT8PDQXfmtYQzof7+E7Xc1BQqS
7wefr8B+sXX1PTXMBfYjcTt3KiAnt9Sp3eBkwou68U/r8Xl0ezeUCKMnSY2d
f1vxE3PYN7XvQzYF7yVcX27SRF4Nr7fK/0LB2GUnibDbOFeO8ylO+nichJUe
H+3GvuC5a3YFHpf/eD6L5e3C/m575Dzr/nGbD4beT8f8016xznZhH56HpU4G
gaX4Z+3XlqsxL818pV2OHkDe7ciz6sZeMOs0sjIOe0GkUOnhD9gLTkWk9Ekm
IW+vrZn/c4EC3TVtSXbu2POcRnNtMSfMP2XPuWAOvHcA58HjDDh6L0ktGvOf
+Jo60XiGgp5Kfgt3PwZcYbzPKnWmoI+Y9GH9+0D0S5oYFcSAlPxTyZ/Qv1XY
RDfGH0Nu3NpeEID+2vjhueVyfQrWRs0G/nCjwFrIX3ghhnU9T+SjfejBH8oX
8g+i/+vuXpkRjv6f1K20JBl5wMVX2/ca+a+SVfZ6EfM8ew3bKRryv+nvMX4t
nKumJ3Kagcj/8sEnZyzQTx+mFK4pxjmM+fDt5Vfcp6MLXc5v0P9yjVp6lHBu
b3UcdzFDTzEc+SPjiN7mr8vdU4Jz/tfxhmZhOQNWBEwe4kDfkr6w5L6+HgWc
rq1X557hvp5cfaoBPV/R9GB9F3r+2/zYWiOc18j6gLPZ2D/LVjy47Iue39Ni
YBHWijkhG2yXksaAsCtyBqux35Tna/U/Ru/LFzzYln+FAZrqyQrN8hRs8e7m
fo+8yYucdunG41e7dMfZcBnsQ0cGM2ifMPe9dwSuwfOQxz0IO/F4GO8XOfkD
OVdnIH0g6iByhJM9f6kocu25qMM3Jnr5uY41fOgLfOnvnnxFzles2Gcx8ot1
nSJ9/AH20WJ+qaOvkfNBLzaZvMK8FJntuOuJnJfYUl1fjJzvNrlvkoqcj3Ub
0dvBup5Q8mTdXeT8+7gOR1fkfPpf8ThtIfTFLaOW2ZgTHOvjrkvh73mfnuNo
toh87jrjnveHAZxycext+LxEoOFE6CQJA660T2Xo7VOm9q2n0dtrhIbPtIyS
rH9Hf9qGz1vsT4gAtxwFWRuZ67Z0keD/RvLZN8yzv0nv6ImKuF92/ZUrayCh
3TxiTHwcvRG6rwhupSDznLG01X8k3DH7zW2Bx6vur5pIGObzxzGHEv77JKxp
+MkXN8iAb0nw3xfcf0sCPgd/TCNhMWpJayfmrtCGpFT9XRQsPRGx+g36+czL
VQpr8Txt2fSYFod+fv3CabmOUBL4RIPZA9ELnP/VdLVbsq5j4tD7dpqEwMj9
6r3I82P5O6N5kOfiDN3f8m4kjMikZG/H/XFm8u/mbcjzyteSzIADmDslu6SL
kOcja5IWbJDnud18z4d3k6DwJixpPfJcpzhOivU5QsMSYbbD2iSE2Kb15aKH
5/rJ1QThHJboylj/VCThNb962yb08NJlqpzn0dfIgL2WOWtIWHC0tqpCv3lq
uLD+LPqdw+EPaUeWkdDp57LbAvfpOh47E7dLOK/MyLfbOUmQijK4wsCeHBLg
lLE7hoKygAtXlaYJWP7D+u819BeBwCt7ZBIoaFt/PWAzgTz0jQnVy0A/lsgM
/JFMgWamsroJ+rZy5oHvTJzPxG2ZVtXonacPBHoHdBBwQbBO634ynq/GVrYg
5N+ksVlDRT3mhdFxjWPYd7Ok7j1SQV6OZ1t8FagggOPqpTaVWAZ8tO4PGkS+
hhaPhfojtx9MvR/9i9xuIC0Sw5Dbz6pVtb5nEqCWXWPXjt7kcWHDcon/cH1w
XUPYdQI47dVWPriAuaZVIv+4hoITViffr40i4OuT13MxwehfSwMmteqQdxGB
It3nCJB4fHP6VAADlsZrJtW8xuc/5GGY5k1A+DI78iDy7j+RH8qs+9FI9QgK
+LgQYH5w34t96Mc6mSNf7neir6lOKtkfIOBklInjTpzXwAfBfSvQ75n5xXcP
Yl+Q7ZgT8MTXWaj9pfU/7AsOhGPMtl+sz4Fz+3Bing3PUcM/sC/MRGR52mAu
pCVkSx/BXPDjWdkbjrng9lPGQ7cL+VgUrfQEe85MEKgo7sYe5pX5hImvQ/Fb
uiWJ54nulqRHmiHnm4Q3B+JxCvRZv2U1+r51imrgcxsGbIs/nD+EvceMXuaq
HUHBXrtp9xwnPD8W6zPl43F9yeujlqHI1adn7l5Dv8yZUzI9hH1O3kHtvlsg
BRIPjadjTjKgxDjvQiR6h3/vz+OnsRdckfllE429QGUsOi4PeX1dJbU1CPuk
wU0TWkwoep9V2K5GnLOilNjqCA+cTz2HFbFR2Kfyxr/R0Js1A6VmEzBPwkE1
ODaeAWY6hrtF0PuE7f5KZTqg5+uELESnMID9flCQOXpl3lZmbDHruvq1N15c
yGTArZu/1FPRO3P2JYY2mVGQ6Ke8+lQeA7zCPhT+Qv9P4Spl/4r8fzAimn4A
5+ObSU2SF3LBjd+cUwD9f+6yk/AW5D/JJbX9dwvOGz3HWAf5v9R64QR7LQP4
b9qkZlZiLhRE+/oi/x/wRHY14Xx//O6u61qAOa9Uyfd0M3JYNS3xInqf+0Tw
6R3oMcEjs6Fz2G8aX7wSUOpmQPuMgPYOfN1JlIKcJfIu+7ZVbws+D+UebRdX
9HyFZ2w7nqDnO7LlJDmg5xdOxJ67g/k8XFXOJY6eH9VzY/ED5lnRscWJRex/
RaZ7kljXn//NCf1m9gPz8as1FbYDe7hG/pygMAW7v+vvfore/f7z47y1Wxlg
9yTaPJWPgmscb37zsFGw4lbasjEZBvwIEY9R5sQ/u4z+M+fF/Jz3EGtYhlxe
GZTTtsC6H9Da09Gs6258eK+/Rp9vtJuKPYePm/3ayKYEfX7F1jO69O8kZCop
q6mwrj88du/dWykKqkXC2xTHSOAKFb3ARM6/ZzLmBrDfPGgLmYx/j7ytbbKo
Qs6rK/3mHkDOy0eY7BSuJ6H005aYhC+Yr9Vtom+Q864++1yLS5F7hs2cp0bQ
w6VHnIq0MUdUFgZO3iPhRydnjh3meWOMLn8EoDedstDbi94u7DKsYcr63IPO
nIUpnn+Twa7lOy+TYHBbKXtPB3rgtmfurM/JveCqGz8YSILj0vkSC8zvnkW5
kLIDFIR4vNZNOEZCtu7gbpfXDDhET3pr44hzUll/+6MDPn8LQfXgOsxBs6oE
AnutzRG3mD2m6OduTdaZ6A02I55//NCDuL6kXH2nRwKHrm1wC/r54Pp98A29
ybmWe+NpFfRwDqOLC09Z1/m+ynD2pyBF6ARNYS0JVIvPdj30lda8x0YNOIdp
lu0HFpDn8y3brl5CnkPDweNSyPOpjM5pkgOfz6bjBp3Icx1Np10nkOeD9p1O
P34RcJ0I19iIPK/ljeB9jJw4IS4isoxGgN75RJPodAbUsL34Oo5csRGnFRl/
ICAow8qaifv3b4Dk8hXprOt8n1SnvEXe1uurOqGH8+wpr1HPwXnuX2yffU7A
6esXq7pwbrfeKFxhXoCe+ikzMqCEgPYrbO2W6Ds/q6VNDhVhv/8v0Zf3HgEb
7Y+b9UXi/JtqXnVBfy34LL71yU0CWsbWrThykQHdt5ZxOlZRMB/T6H7yCgHD
dnaL0yHoqVlvx0xfULBj0Trf4DwBE67U96RA9FHpKEvWfe4fODSky58m4O79
uNZtZ3C/ZdkHL2ulQElpD03GjYDbtbdOfkRuX1E6dvlrB3JnQm/rFhsCXiVu
qo5Dbt98P5j5tBe9XGid7IE9BMSHit7YcRTPV8TXCf8h7M2Xb7hd1SXAZfWX
4QVXBlj4v7m6eYyCFjmdO10qBFx92HihDnnq0Pzx4dgE5l3dyyuqsgQ8Ts60
v+qAfumfeDqOouB8W1t7pggBSmd/WToglxXcvGeUpyh4yR6Y6DZNgaWkx+Xn
mAv5rn9G/qgz4DR3+Ebtr+iFSjt8ufB88C4JknqwnQGiawbGzLEvRKyc5RfA
vrDqaOurYuwL17iexK17hRz8uOXHHJ5v7XWaCV2YC8WrDr1n3W8ux6vMZRD3
x5UC201LbZGDeUdEN2dS4DPHea4Q99PaDDc318PY440t44OxV0gEz+45iT6x
ZnJGtB6PR2wKrHiAeXD0wmSzPPrHt3/5lltOY//uZRNpQK9pf/bu9QD2T622
DJP7eH5GjoT7sO7nYquiNBaDuaE2nRW0Hs+zrugXt2H0su6t7FEa7tjr4s/l
3sVeMHRJI5REHqglfx35cgh9qEmwV/o68uAOlf1vNQVDibG0FFt8fb3Op9PQ
s+N51s3JcuMcHFA4aLqfgn7NRQlB7KMuYCdmh945n+1Vwb0Xc0Q9sPtcIQMu
V8YM30FfnK86bdbC+pzUad2BDzh/WRuvZHK8w+PNdkfzxnbkP9eNoi3oZWPh
udKX8L9Xivrcj2liXrBPLTtfj8//RefTNTiHEvHdN3ej/wdb8S2wrsvXvs3U
GMT5KTqa7qOKr8M06uPtiS7sr3cDN1Xhvh+QrvJZh/wfubNyO88Q+sizm/9V
oWc8sN09K4v8L0iPdxZF/gWI7a7+6MKAX6ey7FTE8HGeuGeJYp45ewZ2y1ng
fB54VbtrBQVXma5PeZC7FTKaJ5NwX1y4dcTCS5CC45qk9wT2Is/DHbXr0PPj
Te9Ip6HnJ5ceKPsPPX/Tkvm+AXH0p8rD23owD1YfLbroz7rucb/aozI+BlCH
fGOksCe8cSH71+HvOXNgnXAZ6z4BlUcF/X4zIGPOv6MOc2kgIeh53wQJEklr
i95PMkCLnzPKAvM79uXMEek+EiJ8t5oakNhn5hsk2xQoWGzhyrr6moS2J0Kv
K9Dnh/zeNujg8Vttf/fPavT5sA28f3Tx/BgsqSxORZ+nfeSbbckjoYRQrmxF
zpuoxqycMMBeWzUknYmcF1zNPcj6fNuIdJ6yPHJ+4s3f0etRJMiIKakJIudF
7fm1bJHzc3piZQX+JIjs7b3+HHue4L8kv0AbzLUuPp5hDxJE/Xc3BTdiHne4
SV3FfXezfsRkmy0J59dvzDV8iX3uoGdQAu7TT2Qv8QC9ff7YyM/luC/yNJhN
kejtMzpi9vqaJPTZvYllok8Uc5ntPYl+JCLl+m9yAwnO6oGa3U8wh4tSDfec
w8dZvGBdt5qEJX87muofYh+N9mKKhKG37Xj96jEfCRYPjQRrscfCjcJrvVHo
F3s96ipnCeAvGeh/kcOAKE4/z6txFMiSDxuGSQI8D1rPtaKfOzwefbIF/Vxg
dMfOtejnQvbae0fRz+vVhArfop+vvW9bff4d/jwPmbKIPF/RQSY4Im9CKypy
p14QULTlQal8AuYazeD2cD4FRm+/h0Uiz8M7Ms/ZIs9Vb9/kskWeR1U6dqrk
EuBvPVqdgPtauFCX7xXyfHpyrdSPGwTktodatocxYI+WxpBsNfa18V1k22UC
yv18Vq5Gnht27C4795LV8++/rkMPN4t6MHQMPfz9kYnGevTwF3tm9dqOE1C7
fUlknS/O2fi+nZxt2INuPx/+doiAxDTPcRn00T/Sx1110I/HFbcbKFgQ0OYd
OnTlGAN2V0yZHR2goCEv6Oc5QwJ43v3cNYM+5cE8oh0zQoHvN/lbw2oEcLE5
Lp52Rk+U57K6M04B3/O0Vw7yBJT9lZqgsGd//Uw1PCYp2La9eiWxmoDuzOgh
P+SmmM6y56XfKdjA/0s5cQkBLx9XvliwZMCaaDhWjBw3Llcs2bNAh9dPc32v
I3/5jqhROfMUfPhxz2jVdzqcy+Pp3mTCAL3qBP9YDib03ZmLm/5Mh4q84y1v
djLgA0lu9OZjwlj1Ck1GLx0a01eq+wIDJDk/Ke8UZoK20GJAB50CDt9yNq0M
nNvdBjsF9dCPpMy/pGP/kNx8olvuJv63fmarOj7e3a5rHFkNOP/XxqM6Eiko
daDvr9iH80SribQvoWDXVV8bd+wLIZLhkaxcSj8f1NaLuUCr5Vo6hrmQnnbv
6SrMhemWhOl1mAsXX5t47cdcWBGuOUbHXIiY2NGzF/OA+UdwvgQ9pnNgvc47
zIXFxpoGGzecj+ZjwI+5ULTvsMiLc8iJxtzL5jiXmWGMM4fQk+j9biKV4dhT
VxWu0dfBPNSRT3uIXnXSynFz+VUGRBeNPVeSp+CUYu2J2YMUKPTZVT/Ffml2
yaVWZjn24F+zTqbobdy7/3gV4RzQx3OS1qG//hPZlXoHe4GCiIzD3TzW+4hL
RzTRo91ifsz+3Y1cOxTJzvr3q19Jb/zde7E3Ep9lnNEjxcvb9HzR1yqEF48X
vkLfrTL3akXvFL20ZZsx8mCLW+D6pcUMkH9nMGWIPaaIj9tdGPuDtMmKE7fQ
qzbf8SmqV0IfdaKuNHcyYNlX+/M7MN+CzsraWeLrsLCYLvBFnmme85FYgf2p
VqP5Mon89yrgmuJD/z9wXSqH3w17idTB4iTkf+Pmex3XkKNyJ87wb0L+w6ye
nDFymdrn186F/N/1fh23H55/NuunsnyszzHdV8o5hvw2fOryb0wB+8qjd639
mJPXsw6KVHGyPgfsoBwqir4482fLf/8wX3emr5wWwPx5dTQJuDAvumZsc2Yx
D1WuZMiKoLcs5RBSniLB1CpX9Tb+vlE5hWe66PlzIfmHd4yS+Pwl8u+g58s8
6L22A/PN9XfhxovtJJjEdKaX0dAnSu8YaSqjZy5a/h2vJYF+VJnsGUPO3+Pj
EVfHvjfDa3PmEet95pljnB+RS1+kREjsYR8tuAo2pJNwaOetcYM+BpR/7Ckq
3EnBDU8Le/arJGincarE4PG9xFcl4rAPj1/N/mb2IBKq+MoEPmIea45W3viN
fVFSeXr/RvT5iB079+qjzxs91vWPQJ/31Ard42dHQhrb6scP8bxKKOzn+If7
dfbBF/ZPyPlJl+4F1vszu9o54ryR8x9uq3b5aJBwWr2FnfW+ocKj3kMtyPnx
JleB9fKYCyO7L+og51cI76lfFUQBO92KfUaEBCm/L9t70T9eWJwTsLmIPuzp
wP+Ni4TY9Er2UNyXD62HIiOj0Xuqu0K4fhPgcS76pgp6+zPOf4F56HEjNSlP
dL8ScIZnoo64zQArG5vNleh9fJH6XNd7Cbj3xtG8BHsy7Y3g9DPkgVxK8ABn
EwFf+09xX7qG89A3t6IsF33ujvq1mxUE+AQ8Lz8Ui35wLbwtsxB75+3nibvu
Yy5I8SsYXmaAb1jAsWDWdZSBnwyXpSG3n+moqOJ8HkiW37i3Ev3x/PcVM+jn
P7s8b8ifZ8B52G0uiH5u0/YhYC6YgKk/A4ob0P+M1kyKN6Cf/7sjNiLuTUDT
9iWvN6PvtDnde3vqLQVgUNNg7YRc/ZCnboQ890/Ze0cQea7WfCA335wAXt9w
88PI8+TT6p13kOf2qdMzy4GAF5uyx8NZ9zH/uCFt4ycKDGZlTVO3EBD2e31n
EXLq1iXHzXnozYI1pZIa6wjQFrSnjaKHN/LHtK1CD9+15v00uZKAK9RNjjXI
u/mdZF4oevj11OFjVdwEPGBazbnux/VXltTADPLuvtNi5h86UNF8RUWs7yUa
le5V/EfB25WfzdIIOrQf2f79H+s+8ssdr5/hZsL42zl64RAdCh1O5zliL3d1
KDUvEWDCpdtS3u/f0aFnj2hBLfqaVHuc3vhyJih1RJ8WrqNDFXdmt7w2A0q2
8cUIi7Hui6SV5FpKh4LdloK3tjFgtd8yp83STLhv23G2OY8OFrePbhHazIDe
hcNfjeWYkL81otoolQ72VwmZOEUG2G6MMrNVZMK5stCSLOwxqzVlMjpv4Xm9
dyD8tyF6zZyMsF0L9qp9ouXu1ynQY9MsTNuLr4N2e/n2cgq+55+9X4y8z9Gj
hNOtGdCvURjfjb7g1RlzYjSCgo4qj3svDiG/PrWPbUIfcTCeOTuPubDQk3CM
DXPh5OyetWbYF05utZLmxXxof7Qq4iDmwt/iUaaxG+v73kxzuTAX6j2k9jRi
LnjVfLLdgLwOebaKc9aTAp65R9Z6lxjQ6bUj/jf699TUyQWaC+bOaOCdatb7
hczg9hfomw86Ls71OFDg7SKSqotzcC9HwTwOOWjQ0C/UYIUecDZOsiaLARv0
9OSO/GEAsbaaXm5KwZILA7Hq91nXd8g7s+7XwlGh8bUI+fLPOvR5QQkDqhnR
//ZjL3A/spT7MfYCQ/ld7MLIA92yEjHfKgYkxl2bqdCgQMXbd7lXAwMmoxoG
n2IPZzNKlm9TRc8IMBAqa2NASPW1YjGcw3jmhifMjeh/WwpPMTFvXtu92Xcf
feiTovkF1v3bvkxzzq1C/12WEt/h4olcljq366AEPh+h8XolOuZ1WPT7nXge
JKpT4/NW4vniLBBW/YG5+efQORsDPE4bMyoX8XW7+9c6SqH/y1yWjk7GfbB5
TpvXC/1/iH/EYhr9Pzu00W8R+d/aJpU7ivwvs1xd+Qz5L1dcdiKNE3PH5ESa
F/K//EH1hZPI/56GC8ddv5NQL3yf9g97VbCleAHfGjy+VtPadsMkTNSuDiug
sF/l8plcx3zbfaQ9LLiVhJuvs/WdJtCTv8zHceLxcHw5Vv+mkoSeJqVFmVHM
z/6W++54Xgs0XQOM80lwuPrm2i/Mxb8Sg0OP0fN93f/+/JaMPt9oX9vXjXlc
RPNlvZ9n6q2RWB9OQnL0vEkznp/pHPYKfux/8UncV+tOk+D10f7P62b0pYGf
ixL2uO8s38rSnUgY/RUR3YV5bqQ5mSuO++iZ9dvr2vtIqPn0uYx6hvMQfXqO
m/W+zVJNgac6yO3eXj0R9IDtJeZHRnGfSsx0NloqIP8XDQdNcH9MbhfQLMT9
XeRj+UMUfV69h3NfLPq89iGVDlf0eWtfn9ccPCSUu9qaDiDn+W42XuVFzkcM
dZxbiZy/Lrj0phpyPteaty4LOc/MK9phMk7AEn46PQ05/5yP4+169LjWO0dd
croJqP52j0sA9/efWw4crO/H+HmWsUyygYDO55oPriTivJGratnyKOhVX55e
WUqAw8rRlOXoT66+MWYOjyg4saXFKAC9nU0SEvLR23+ZruO5i94u2L7X/kAy
ATGXXW13obfLXPPVGUJvf1aqpmAVQUDvzeZSZhD2LEluDd5XFMwPJi05fYYA
GcWzJ++exXzs898tjxypmWDaF7oTIBr+ydQF51zU1OY/jQ4K/AONTnMcIKD9
ALfYxuPozwPa77TRUwMU/jwJ2onHYcTuzswR3Fcva7tVh9E3w99HCqgTcG39
s8fd6OdWpy8LiY2zuPPZpkaOAAtazPIq9PO6zH3Pf6GfH+E4mxy1igDzrJD0
fOQ50Ta+nvV9ePO8xJPjPAQMxZWIZyLPdwyah19Fnt+//FTuOPK8/2C2Wwby
3NK6YqkR8lwK5E5G0OkwuJXX+B7yvNUpXmgSea5c7MX93wc6yGf/zChDbmpy
Xi27LohclXQ8y/aWDim6D3Ta0L82Pq3V2biSCRfCvLd71NIh6UDmNKWJPfpd
Rl+pOBNU3OPIT48xF6J9H61SY4D3AYGX22SY0POHV+DsHTqEnPm61VgFe5P1
qQ0PNzDhcsRZ1TVJdNgc1eURhh73aN9jA1EVJuxSv0ofjqDDFCkl82I9eqej
mXbQNiao3VzRWe5PB5vqYkPutchlyVNGnTpMkP1qzX3Vkw5j61Y3imPvXztm
fq4KmDBiPnH1lx0dYqauuS9nQ05whcQexnWdWQeB5nYKKo5Npl3BPplSZ03+
Z4w9qcDX16OGgkdmNJta5P1D9YiBfjyu9T8l38ljX4z53V9SgH2V81fTQSc8
P/lD+w+z7lv0fZO2r/8F3Gfukvt48TwzR2TfVgRjz76wt00R54c+MXf/PeZ/
6z6Zw/lH8P//LDXcjvMmfON8Wnkg636nzW+9sS/wcx6JO4rz6TxvHVWIPjKQ
fOf3ai30L781537iPLtLj6o/xFwwHjTLrZBBv/tj/iUUc+HdGr/vLD9ytjVy
PLCEAruMqAfcmAu77G3iq7IZsD7ptPUMei2Xprhq0l7sK4FTAbUPkP85a44X
DzNgVlX2+DojCroU1curStHjrjtuuYB8OfD466dnuhQ43R76XFjLgMzgv+ze
Txmg+Ci5xGUbBbceXt2U0IR94VyH+AXsJR8Sft5m3femx5J9C+u+N9PcomWV
6FsrDuzkfofevCRtZpnsIPr1zMAGaey9/81aLLuNnA3UO2/W/oUBRb6P+Msc
cZ51XVL9RSnIOnK7xhO9Oz84f08Q7teu2gQD16X4uunDYcQ0A/xE2Q18tiC/
nu4PcWK9/9/YM2/Lhvw8s6QrTRLzgk8q9Tg7zptD47tH/BQkzVpd/s2DfSd+
Y10M5sei1t1KEnvGi9eaMZfR/5XNDbgr8Tg991fLX4H+rzj2p8FkhIRF5huX
P8h/g2SrO+uR/6IPYn4YIP9/XRerNEH+TyUpNa9B/tcHuKUfqyDhRcvsl4eY
c3EOnlbseP5ak+9uqM8lwXeiqWwN8v91o1BEO/aw8PmML+bXSKD1kWROF/qh
tUrhZRPsPZGbliwJJaFg+byxOubrjlMLazfi+awY/9jw24uERPng8H70/BSt
ROMy7Iuip/dtXoaeP3hK0yyW5fn6Hy8purO+X+LaEYedJKTEXnUyq8Y+Lmug
m3ACe7XMurPvtpBgc1rffU0Z7ps6qcGhM+jhnVtOn5bGn9dyEFooYsDcEaJN
FH1HWf6ch64g9pG7NUKMAgY4Xd8TZhDJuh75peeWvwRYpd9ZScth3e/A7eAB
nBu7qRVX9tMJeBjN3vkd++LkPdcW2xsUbDEtGLnVR4BxPfGL9yb6fAO7ujH6
vLR2ShT3awJSDIo1lNEjHu7eySl/j4IW0+Np6WUEFHjL7DmMnC/Kkc+Yeoiv
KzNe3xY5/1ik5FM6cj72XqjzExbnP8RmqicR4OoRVTl+gQFqA+8eH8J5/qi+
94tWOK6Px1/RRc4LFuvQ/iDnjcfldjv7EED9jRPOPIP71e2UZ9Qb9LN3HHMF
zgQsbpDi5T+FHvY7I4r9PfI2yXrncgsC4jifbr2E3h7SE5rmg96eEcrrnqlP
wAQjZT8XevuOeYvpdvR2Hr+rOXtUCKj6/WV9shMDlrz8NLmWhh6edsd8xRr0
856os4r2DGjan9LjzvpeTV2753OCBMzJyHC/s8J5DQn4kfob+xo1asK5QIez
x0TvBpsx4MrC9qSX8xR8FgqxUGDS4bxlwPItexjAv9Zj/gMnE0h7w60nhulg
IE/Jfkc/t1m1LZi2hAnZyisPtqCf36a9vFONfv6N9/0+Ovr5W8nTakYv6BCq
8PJgvBbOq6dNxUf080GRXar9xXR4+EpDxkuNdZ1090zjWiYcujX4Khp5Pps4
2miGPN8b7G91F3lOk873tLxOh536YxK6yHPXV2HzfsjzpeKy6dsu0eGMUen0
ZuR5ofwJdS11JjCOlQ5vPkOHFQKSqqrS2BdgcusPXSbYPmi+2upOh7++++pW
rcT5r76VlYvcfm4ZUW9iTYcohzHx6zMkdNR83WOE6+07N9uO7cBckz7Qqo7z
2rJxMe6zARPuhtQ03thKB8aFQj7ORhKsBXiOReJ6Xm9JqossHfgev1r+t5CE
3VnafXK4LtUt7bBrOR1Uv65WEL9Ognn4174mfSZU/PhQa1yP/JA84nY4ET1s
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
R6riCRes+vO71R0ZKHO9nZUjxkD+gL2j46QveFUqD6gzcKVM/OOLJ3Tca1MI
1iRcuPflruEp4hWilMyvf47QobK2ZXiKygDqJCSXZRFfENMSaDkSX1gT4xEx
OdeuomHmnmuECwstkzx7X9FwNWXaghLCheSBEy9nH6Mjrazb+aQnDYIdZRfi
CReCxt92GWnTUa5q/N+3RTTc22EVNrkfoTa6Qkz1Hw39hYc3mlZTEb8maujX
NOILJmZuNuR5o/2fLUyzpUI9Yn02PVeIJZeVmBaBNDwydnGNaOqHmkx9TL+l
EBKzK2+M69PQ2X504uQIBW0MgQjrF7lPA61YJ8eoqHN961ChSME8E4cm3l0B
bBwPVwe/oeLQ8n0657b2IXjssSPLTIBv9gEexqFUSLzOtwzy6oWj+PvIxm98
9Ph92P9gOxXLh40K3qT2IKgtNyXjDh/uotWWj2dSMe7paqRR243KiwtM9+3k
Y2KN6mB8Wj+GKP6sgn9dcPr8Orv7Bw8PruduGFfrR6Cg6+Rm7S503whYuiGL
5H//y9TIYgo8LJfbvD7RiZ++vPAj+3hQ3Po1TxMUDAxIia2+04GXxaVUc3Kf
P1e8eIxV14c1w+aBfu3tGHGxivpdyMWvJ9tnPTjch826X9xvzGrHmTaN5ceO
kvWDNV5ugl7McpBScdnTho96dtEhs/6v6LzjqXrjOF4oVAopZWY1pEIiSp8y
SoNCIamESoWQCkklCmmgaCmk8tMwEtlbMiL7cnH31tJC6ff0133d8TrneZ3z
fL/vz/vee87Dg9GxP+cXh1GxPnnjmR9xndA9t63ProaLt2PbH1BlqOhxHOOs
aOnAVk9n98aT/+6L/+fwuVTChbWvtkvN6gBv1p6M4cVc9A731U4z6kfp9XGl
kw7tyGNr7M2ncvBRVjQQ3NCHzncnNXySP2BifPy4UjwH+yavVqrd2wfTd4lP
mQNtCHVqGVbeyMHcWwbK3BEK5m52c27XaUPt/hjZ1+NsZPnuLaLGUlB2Ve/k
vsH3uJHUs5qRy8YnSvrkVE0KrJPX+jBPtODxI33RQ2821k76YqBX0ovYTZpS
WjOakVMZ0S5QZ6PoJKUgbGcvFj+y2C/ztBEz7kfkV/SwsHqx15KrH3vQuytV
M9HqHf5EaYcq32CBo3x92+6YHtSuXnLrMestbp7sWzxuQ+p2+xXpAe0ebFiY
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
       "]], {}}, 
    AspectRatio -> 1, Frame -> True, Method -> {}, 
    PlotRange -> {{0, 25}, {2.*^-7, 9.*^-7}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, ColorFunction -> (Blend[{
              RGBColor[0.293416, 0.0574044, 0.529412], 
              RGBColor[
              0.563820859082933, 0.527565423056382, 0.909498741130694], 
              RGBColor[0.762631, 0.846998, 0.914031], 
              RGBColor[0.941176, 0.906538, 0.834043]}, #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -108.28125}, 
                   Offset[{4., 0}, {7.5, -108.28125}]}, {{
                   7.5, -52.03124999999999}, 
                   Offset[{4., 0}, {7.5, -52.03124999999999}]}, {{7.5, 
                   4.218750000000007}, 
                   Offset[{4., 0}, {7.5, 4.218750000000007}]}, {{7.5, 
                   60.46875000000001}, 
                   Offset[{4., 0}, {7.5, 60.46875000000001}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -94.21875}, 
                   Offset[{2.5, 0.}, {7.5, -94.21875}]}, {{7.5, -80.15625}, 
                   Offset[{2.5, 0.}, {7.5, -80.15625}]}, {{7.5, -66.09375}, 
                   Offset[{2.5, 0.}, {7.5, -66.09375}]}, {{
                   7.5, -37.96874999999999}, 
                   Offset[{2.5, 0.}, {7.5, -37.96874999999999}]}, {{
                   7.5, -23.906249999999993`}, 
                   Offset[{2.5, 0.}, {7.5, -23.906249999999993`}]}, {{
                   7.5, -9.843749999999993}, 
                   Offset[{2.5, 0.}, {7.5, -9.843749999999993}]}, {{7.5, 
                   18.281250000000007`}, 
                   Offset[{2.5, 0.}, {7.5, 18.281250000000007`}]}, {{7.5, 
                   32.34375000000001}, 
                   Offset[{2.5, 0.}, {7.5, 32.34375000000001}]}, {{7.5, 
                   46.40625000000001}, 
                   Offset[{2.5, 0.}, {7.5, 46.40625000000001}]}, {{7.5, 
                   74.53125}, 
                   Offset[{2.5, 0.}, {7.5, 74.53125}]}, {{7.5, 88.59375}, 
                   Offset[{2.5, 0.}, {7.5, 88.59375}]}, {{7.5, 102.65625}, 
                   Offset[{2.5, 0.}, {7.5, 102.65625}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  RowBox[{"-", "4"}], 
                  Offset[{7., 0.}, {7.5, -108.28125}], {-1, 0.}, Automatic, {
                  1, 0}], 
                 InsetBox[
                  RowBox[{"-", "2"}], 
                  Offset[{7., 0.}, {7.5, -52.03124999999999}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["0", 
                  Offset[{7., 0.}, {7.5, 4.218750000000007}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox["2", 
                  Offset[{7., 0.}, {7.5, 60.46875000000001}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
         AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.293416`", ",", "0.0574044`", ",", "0.529412`"}], "]"}],
                     ",", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.563820859082933`", ",", "0.527565423056382`", ",", 
                    "0.909498741130694`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.762631`", ",", "0.846998`", ",", "0.914031`"}],
                     "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.941176`", ",", "0.906538`", ",", "0.834043`"}],
                     "]"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "4.153527100128586`"}], ",", 
                 "3.854902650586592`"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.5758332527758913`*^9, 3.5758459656030483`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.575833249035028*^9, 3.575833256031255*^9}}],

Cell["\<\
One can use the function SinTunnel to plot the cos tunneling rates in the \
following way:\
\>", "Text",
 CellChangeTimes->{{3.5758332634063187`*^9, 3.5758332825422983`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", "[", 
   RowBox[{"SinTunnel", "[", 
    RowBox[{
     RowBox[{"V", " ", 
      RowBox[{"(", 
       RowBox[{"in", " ", "units", " ", "of", " ", "Er"}], ")"}]}], ",", " ", 
     
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"in", " ", "SI", " ", "units"}], ")"}]}]}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575833285045266*^9, 3.575833330803056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".9", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.575833333000741*^9, 3.575833375091854*^9}, {
  3.575833423844782*^9, 3.575833448550126*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
rbSa8D+JSdNM
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"V/Er\"", TraditionalForm], 
    FormBox["\"J (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 10}, {0., 20.52456168789604}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5758333675184107`*^9, 3.575833375440377*^9}, 
   3.575833449138113*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".9", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".85", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".6", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".4", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".3", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"SinTunnel", "[", 
    RowBox[{"V", ",", 
     RowBox[{".2", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J (Hz)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.57583346645045*^9, 3.575833491447661*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "I", " ", "hope", " ", "this", " ", "is", " ", "what", " ", "you", " ", 
    "wanted"}], ",", " ", 
   RowBox[{
    RowBox[{"Cindy", ".", " ", "Here"}], " ", "are", " ", "some", " ", 
    "plots", " ", "that", " ", "will", " ", "show", " ", "you", " ", "the", 
    " ", "tunneling", " ", "rates", " ", "for", " ", "different", " ", 
    "values", " ", "of", " ", 
    RowBox[{"b", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.575833486510092*^9, 3.57583348745706*^9}, {
  3.57584599839018*^9, 3.57584602892107*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  StyleBox[
   RowBox[{"Additionally", ",", " ", 
    RowBox[{
    "I", " ", "can", " ", "try", " ", "to", " ", "fit", " ", "this", " ", 
     "to", " ", "the", " ", "cos", " ", "as", " ", "discussed", " ", "in", 
     " ", "the", " ", "group", " ", "meeting"}]}], "Text"]}]], "Input",
 CellChangeTimes->{{3.575833516780332*^9, 3.575833537700412*^9}}],

Cell["\<\
First, I define a function that will find the bump height of the well, as \
well as define a function that is my gaussian potential:\
\>", "Text",
 CellChangeTimes->{{3.5758335506780233`*^9, 3.5758335668642273`*^9}, {
  3.575833598080464*^9, 3.5758336081289873`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting Sins to Gaussians", "Section",
 CellChangeTimes->{{3.575834150292769*^9, 3.5758341579725103`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"x_", ",", "V_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "V"}], "*", "Vt", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "b"}], ")"}], "2"]}], "]"}]}], "-", 
   RowBox[{"V", "*", "Vt", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "+", "b"}], ")"}], "2"]}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vscale", "[", "b_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "b"}], ")"}], "2"]}], "]"}]}], "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "+", "b"}], ")"}], "2"]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", " ", "=", 
      RowBox[{
       RowBox[{"F", "[", "0", "]"}], "-", 
       RowBox[{
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"F", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1.1"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input"],

Cell["Now, I will test it out.", "Text",
 CellChangeTimes->{{3.575833571745998*^9, 3.575833576528246*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vscale", "[", "1.1", "]"}]], "Input",
 CellChangeTimes->{{3.575833998751021*^9, 3.575834002693543*^9}}],

Cell[BoxData["0.8222193244670273`"], "Output",
 CellChangeTimes->{3.575834003219006*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.57584345224371*^9, 3.575843462821271*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V0", "=", "0.8222193244670273`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "100", ",", "1.1"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "100", ",", "1.1"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Vscale", "[", "1.1", "]"}], "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", 
             RowBox[{"2", "*", "1.1"}]], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5758336760255203`*^9, 3.575833714594116*^9}, {
  3.575833746481352*^9, 3.575833784415615*^9}, {3.575833957789172*^9, 
  3.575834066429982*^9}, {3.575845004756938*^9, 3.575845024745001*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUl3c8Vf8fx+29772UZEtJlKisjqISkoQkqRQlKmRlh4xEsq4QIlJmlNU9
5/POXgkhRPoiWclWVr/7++s83o/P+Xze83PO6ylle8fUjomBgcGBjYHh/8+r
RTG///0TgSQDVXvdd7o08proDs11EUBaZOf7SsdotcezrT3+iID1zOGsrJrj
tB3fKpumZ0XA4tvSrf9OGtAmeUay+v4TgRjgckoJOUNzvqlmWVojAtcLbu2e
4LhE85frB/swEZD5sNXt4lYvWnKKTOxHPhE4NX8Rr/+eR3u99+nzci4R+Kgp
fWQLRyGtqo7vzXM2Ebg4EfmFplhM6//995P7pjBkkwz1XteU0ET12nnFZ4RB
fLyy8q9mJc0qKcewflAY/vJvrddbAFrKtG/E7Y/CMO7NeSEO1dPy788nWTYJ
Qw33PRd+n0YaTfhG7tE6Yfh6neQ8cq6ZNqBztkEYF4a0iYwPOQFttPWbh8cm
3wrDNU1vWbecDppYwi5WlC8MLLa3CkKcumhaiCwb90IYNMrjgzMyvtCsJ/4d
vZ4qDLfzecjUs19pvqSpK5rxwuDF8dkBJQ3RUrV7AvkfCcMDPZqAou4wjXb9
Q/pIMN1/Tn3+qugP2sCTfKLcRxh63H1MAmzHadM7pNueewqDWt/xB+Zqk7T1
99TByLvCwJ50OjFdYZq2fSxo/ZKjMLTncNJsdWdpSj5/uA2u0/fvlr7+9N4c
7bDA7W2qV4XhxM93o2n18zTj7BEF8UvCkNDnlCSquEiz0TivwXFBGEYYpHd1
5i3Rbn9qOzlvIQye5tcy806s0Pyv6Z0fMBWGX+KN74sY/9LSopW9ig2EwTe8
oVO4b51WKJMdlnxcGPb7lVw9vbZJIypEqSFHheHN/CH0JpMBbzsVk3P7sDDU
eWu+3DLIiH8bZi2z1BCG52f2htkpMeMznj51Rw8Iw78vF8y1k1jwTZ65LkUV
YShcP9NpK8aGix8cWGBQEIbYfUvXdX04caXWM8xTcsLwyT7loqIVN374SoNQ
t5Qw2Bw5nlVzgRc3XtaSRtuFoXc9VSA4iB+3iSzZ92qrMAyqP44IHxfAb0vu
PBJHEQbjKPNhKTkh3P/dMxM/QXq8QSvbYr1IePpQ+J0znMIgGBPoHndTGL/M
zfEpkFUYtvjlG0rMiuDSB8OUihnp83NfJAE93oqP2rJFD21QgEsmcErRcBue
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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
P4nj06sWmWpw0P++bwf//77dfwEahtkk
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-1529.6786611164466`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.575833703173942*^9, 3.57583371511193*^9}, {
   3.5758337501793213`*^9, 3.575833766153555*^9}, {3.575833972009707*^9, 
   3.5758340673942966`*^9}, {3.575845007117072*^9, 3.57584502605763*^9}, 
   3.575845177967598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"This", " ", "is", " ", "working", " ", "well"}], ",", " ", 
   RowBox[{
   "up", " ", "to", " ", "an", " ", "energy", " ", "constant", " ", "offset", 
    " ", "that", " ", "we", " ", "can", " ", 
    RowBox[{"ignore", ".", " ", "Now"}]}], ",", " ", 
   RowBox[{
   "we", " ", "can", " ", "use", " ", "this", " ", "to", " ", "plot", " ", 
    "tunneling", " ", "rates"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.575834185764817*^9, 3.575834196648634*^9}, {
  3.575843471351346*^9, 3.575843481912475*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tunneling Rates:", "Section",
 CellChangeTimes->{{3.575834240933998*^9, 3.575834252357136*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["b", "Subsubsection"], 
   StyleBox["=", "Subsubsection"], 
   RowBox[{
    StyleBox[".9", "Subsubsection"], "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]], " ", "m"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.575834256552635*^9, 3.5758342853841677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{".9", "*", 
   SuperscriptBox["10", 
    RowBox[{"-", "6"}]]}]}]], "Input",
 CellChangeTimes->{{3.575834350272951*^9, 3.575834356088159*^9}}],

Cell[BoxData["9.`*^-7"], "Output",
 CellChangeTimes->{3.5758343566454973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bscale", "=", 
  RowBox[{"b", "/", "waist"}]}]], "Input",
 CellChangeTimes->{{3.575834295543902*^9, 3.575834303543782*^9}}],

Cell[BoxData["1.2`"], "Output",
 CellChangeTimes->{3.575834304005115*^9, 3.575834358246344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "100", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "100", ",", "bscale"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Vscale", "[", "bscale", "]"}], "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", 
             RowBox[{"2", "*", "bscale"}]], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.575834373535894*^9, 3.575834374607996*^9}, {
  3.575834468913*^9, 3.5758344787212353`*^9}, {3.575834509442154*^9, 
  3.5758345320332203`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
uFcV26l2g5tLWOL0xkV93KvmTaGl1tNL2D713Kn2jzSIxpwnV4aXMEOfR8jW
AA2evjARu/t+Cat049MaHabB1xptS94XS5i0yfqoB+5VtgqFvPtlS9i1K5l/
X+FeVS7b90UhYwnborNJbMC9alHI9t+byCXs28zGXSfcg7E5q8aXvJewPQS+
/h7cq8+oY9Rv1ktY4bdi91+4H78ndfW5GC1h/+1rMvq/V4mx9aR/p5cw0ehn
/gq4R4/dLdFPUF7CXl349eX/Xr0ZlJKwV3wJU+Re99fB43jfwI5yXnz8WpnR
N3z889v2bGqMS1hb8azrQTwedzLSaV9axBglxz9I4/Nx2mpGmIwvYmstPX6f
8fxUbx5+96t3EUsdl/VHca/eMhVi8H2ziO3OTRkxxr2aaMSMslQvYlzJ7eUH
cK/W6y/eoRUsYpE2bVv3ca9O6o6+lEhexCrtH30ewL3PfbptozZ4EWvZqbFo
7MN9ijw7dtp1EXPiNii4invVWrXQs+/GInbN/b9nxZ00SFZMqLG6uIjdOtj5
ovQ9DRoO+S0saixiQrW6782acD+KGjjx7FvElG0Xo6de0kB9j8ajfI5FbEko
J+jFMxrY8sv8kvu7gJm/5mQ7+YQGr9gYKHojC5hrUusd52Ia/GKcK/zSvoB5
rOc08Obh3v43/M3x5QLWYWNwwjUD9+TSE9PYrAUs8ffr+jMxNMg8unDCJmYB
O7vbqOdHKO5RX/n/TvktYN0+H3JRfxqI01UOb15bwOyNfinvdaDBN2K5kb3g
AnZt7r/iqDN4ffV/K2uzLmDnBWm1y+p4vqkyfKIb85hV3U+z/5RokCX44OPw
0Dxm29gYkylMgysSJfpnM+YxcGW6aLlEhXC7STnxqHnsT9Qrtoc/qFBdfoCL
3mce++d+9HnlZypwK97vfH51HlOcoqgsvaFCO5KvKyUwj+WekrS6lUCFkGql
aE7ZPxhn5e7xk4JUGFWpOdPM/gcjmt/sDGelghp2hDnw9xyWJbvwLGYjHVbb
D4fNPpzD+IN0z3wfSgfHSak7HdJzmPH+vOWmtHQw3r3XLUZyFhvnG7szSJ8O
z3Kz5TR3zWL8zHLCoXNpQBYXmtuYmsEuifd5rn1Kg64jAg52JTOYdU4vRasm
DU6d46HoiM9gJTf/pXhZpsHhQKZrzGK/MaUDjXX1T1NBqL6b9pPxN9Zv6dfV
n5cKTKvZA21T01hxRsLttphUGHFSMEx8OI2laBXbalqkQozZjYu7FaaxBLZi
OX/WVPih9uK0zMlfmHvuz9DwKymQv+WooHfjB1a+t+P868EkIPv2sVOzxzGl
RAljD91YWP+3wfPHbxzjoNXWdvDEwmiE8G4dk3Hs11R7lshwDJSl2R/Y3D2O
zcofvNBiEwMaVXTq5tQxrCnYL+Hw3Wiw+yHrLJH8HdPlCFnsfB0JgY/YCpw4
vmLSVo3B2hfC4eyLK4+FO0axaVWqzHGBcOBtyX/REzOKAYlP2vR7GDwYO9qr
zDKKHa84e+CIVxj0CVoRdhi+YDPibq06haEgE/WSkrD+CZt07wvwZgqBwVuO
MpXjA1j4fY8Nb0IAvPqif+xZyQAmv5P1ILrCH0qMlLUa7QYw7fvCY6om/uCh
s2PW/qcfO43qCAXW+AG3bFLyj60+bGLpD3uXky+cXapZF+b9iGmnKRaeJHiD
vGMGk+RgLyZ/1aZb6oUX7tMA0uGsXuz8oPONThcvmBo4Lau2vxc7fehRw5Wv
nhBaP3jDWLYH085XPJrW4gGehLV4keguTGkp2VrjlTtorWClclxdGD3rBG9L
sDuQfkS9Vk/vxL//Om9JarlDRZvQyrWCDizIKqfVo9MNppI1TFNetGF66leT
7add4WnYLq98pA07ELlpOVSD94ue3YkVTe+xlScxu6QDXUH42s23bT2tWKVy
I8GHzxWM90fIEKabMc6Be91f7zmDBOmiFo9rMzb6V8NMDnGGZcJuc+HVJkxN
W0XVeMwJkn88SD7B0ITFFLUOaxx2graKzvXbQm8xzvqrHDkjDpCRTyWF5r/B
Dm+PPF2McwDrlBuySRJvMPlLIW6KiAMQvBZulCu8xh4xNZf7PbAHbz+ZhPfp
r7C8peK9Bul2oDc3P1BZ0oiZsG1fszOyA4mbdcLUugaMTpc2eEvQDvrPaj25
OVyPjb25q8FZbAvljWybOtMvsFMhdl9fOdlC+JEeTbmt59gJpfvy11RsQVHQ
vG9rTx32jv1+/8WPNsAWf2Dv2KFn2ODJO3cr7tvAGN1vSqtGLTZ6u+XelqcN
JP/0XkuzqMF8s/+hlP02YGuqgfq7VWOtfvfbw9atAe1mjLYMfYJxHxV4ldZr
DaMuYsqmOpWY9Jm1a8lx1hB/tapZyv4x9u7QdnGgozWoIerGK7GPsKPn1nMt
9azht0Tbr9ePH2CZrqvrxxWsIYvzqn/Ch1JsX9dpU3bcV2dXx4nXF4qxJ4xe
lI//KLD+xTVXklyEEQIvF6f+okBp01+5ZaVC7DXbRP75fgoYPY55DUb52JkW
q56dNxRgk5ErEVrIwbq0NYseVlPAdkPnfY1SJibItN9fv4gCza03Z877pGNN
+zoezdMoIJYRwDX1MhnT1NcMjsV9y/BBlrKzE4uFnXhwVOQuBRqdLB7JR4Rj
15f16asDKbCwW2q8ScgPe/rxCbMG7tXu8n1fDQ2sMWqyg2UT7llGy3P7o07p
IWPFWvt18PjB4UJvYr07snteWrvZhwKZPvdWPvYHIy3Fh9uQAAp8GbarLNCL
QmYj42hPQyggeuKonUtLInLoRlH8gWgKKOqFJO/LT0UGX+0EJaZQoD/Qxvmu
KQ3p5LxwdAX3rnflhXMzu7MRwRF7xyu4d4W+KUpd7s9FrFxv9FbW475miWf4
olOAcFXdIDJ2UKByP50bt+R9hAfprr70lQJ0qre/nmIqRq7MnDHIWKbApUtT
F7zHS5AuqxSHQXZrKLS71vDwdRlCJ1lzm1PcGrSykEyewHLEP7Tql6WZNaRX
V+86bVqB0H97z3wnwBpuT5JOqO2tQqQXjrvF37OGd3/vPnDZeoKwsdexx05a
w0w0ZhE9XY3UrhrFexFtgI9/Q+D+cA1iaBf677KyDVgfdowYqKtFvvmlDX2L
s4GE+mL1+ZJnCNMMi1LCSxuo0/66zEqtQ6TeyNtJz9gAyw0DK3WPF4i148O2
A5dt4WGiClok34hwmnztJKrYAeO7vIZdSq8QicHjCjf87eDGOrOqwzEMSU5D
AqfBDmKqpncL5gHy+viF3UUG9qAh+ILnW/EbRPM+x7ZdkgM41Mx8SJZ8i1zU
OFSjO4m/3xf2J5x68BaZs9q6clnNERZDItlKy98hb4fGG3vnHaFk+grBuaYZ
eb6Wb3PqtjN8DI9+Lazcgmg+Lju2d9gZ6IQbg3qetSBFFuyH2E66gMnlA9tK
9a1I3zcx5mh2V+BqWFzegjYk8/ZN1rezruATnzgV3dWF5JL+qGR9d4diybdF
J/Q/IG+k6A0oB25D7+vVm7M9H5Aqe+k+YdvbwL9V4VJm340Yjs1kXV+8Da5y
/DPszj2I1+gn3+c8niCeMTHR6/ER4f8PWE/7eUOCXciARegg0ld5zdlsPACi
2ulrJ14NIj9lNL51qt6B0EOhqbZbgwiRfoSpJ+kOeC+E6rt6DCHmFWy8kWgg
WPiGtwVZDyOf7mSTvUuC4Eh05Ktc3c/IhOyhaydPh0BfWXzJCOkr4gPVHS2X
woFj+fyJ8kvjyMEOAkW+LQa4PylYebuPI7zKd+eFCLHAC7tjNVPHkcs/7lEY
1GJBKG7i01DfOGKQcKXk9eNYkDoQ4MdkPIE8es0MfUlxoGn46IW5+SRibzpu
8PNyAng9ZVXhcfiB9Clqipp/TwLfrD83RmJ/IIuBsgWC20kQENwfWVr+A2Fu
bIip50+GsPMFg+pzPxD1yvG8B+eSIWlCxdve7ScS9JObQ+ppMjzitX321vsX
EsP2i8YQlALfPJqVvMJ/I2af7AXOrOH9RSuTUFnRb8Qv7WrHD2IaDO05/W/4
3W/kxD+fe9dE06D73dv36kwziJtErGbF+TQA3tfmTBEzCP324SL2vDTIe/oy
Ki1yFgl2PEj973g6ZLFsOTWXziLl2q3qsefTgWp6/PJ6yyxiWc9n/NY8HRIY
X+w1ZZlDnm5XzcSEpkOg4bNqseg5JOGgqph9SzqYL1eNVMf8Qfyyda4xaFPB
RGf+9cTDP4iz4lGj14ZUuJIjV8rf/gep2RzMOWlFBQnRQZVGpnnkg9Bdr/Ag
Kuxru0IQ0Z5H7Pk3m1lqqbDHY2VF1WgeSUKl3VpeU0FoX/pPA+t5xFqkylWr
iwr87n2d4RHzyEVtegGfKSpwCl3O+NmMj79Dv95Axj3ybjGGfnAe2Sc1dIyy
D/ePc8odoR/zyLpMoO57Kdxvb3punt+1gJAMX7x/q0YDRke3KxSBBcRK6+mj
a9q4J/l5dAIlF5CksQvnHl6kwY6d/qGqMwtIqcXrN36WNNgmzwu/v7qAXH/E
KLxpR4PNxkTSmM0CMtvbcFLRnQarPB/WyFELiICe5npPCA3mXlx44926gOj7
fL71EvekOGuLh//gAhLHaamSiXvS1BiVDJrC5+c/kqHygAZtqwpxEYyLiNJP
R6+XNTSg1y7XiCEvIt07NrW5z2mgki6+EC+KH8/rpD/VSINixd1G6egiEnT8
tGEX7o+R0GSWzIuLCFLaJFGL+4TUy/Yyx3wRqXmekGeK++WsSLhTvtMiQrNJ
KXuH+zLY9a9wUcAikhp78tAs7ss6zKu3NHYRuXI1TmgA9+Uc53z4o6xFJKd9
zDwI96W4ud2xygeLiIqI8vTPz3j+j8d+VT9fRNallx+TcF+mbl/PedayiMSV
8dzbxj3Wdq5fr35gETHIoysvwb1Gn61H/2pyEWGn1nZz475UmW6peb28iPgO
lDCcwL3nonrSuomwhPzO6zgujnuwJKp+93vSEvLgUsHtD3g8MqjY3iGyhOjG
iTxQxT1Jlnx8p1t+Cfl5tmPo/97U9ZKQ70OWEM3ZQno9PA5uyhsb1FtCGs5I
H1jHx9fxCqZ/NltCUCpF8yYez1mlnPnquISwe367EYfPL17Dvjnmv4RcaisK
8cLzM2W4Wz4Vs4R8LkUq9uP+TL20Yz6duYS4isFsDO7ntnxvnrmyJURVou5s
Lb5++vn5twt1Swi94rHOPNzfKoi910rzEkIR6wvXxf3pkjAutdG/hPz4XBhY
i/uz5Ivp5+2JJWR+VaXtG+7PL7ID8XTLS0izdblPB+5P3oCLKCNhGXHgTM3x
6aJBiJBmMbvIMvI4K4FKasH9bPfyKpf8MqLwSTeT7i2+nudKbGRkGenZaLGv
fIXnf1XSRchsGdH5Wj9+sRbPvyRfZJ/jMlKw+ubtySo8/xXBPhH/ZaToROX4
8kM83zSiqnTmMjI8ef9WHu5Pl/G7v2XLlpFmNV42Wiaer8K/e/J1y8jGrmM+
+ql4fj0LDCr9y0jjpbgzrBE0OLffofbExDJyLH1snSWIBqEuEzbI0jIivCRP
bvemwR+OwQ5tnhWky/KvAs2WBhJm+kG6+1eQkm61tAILPN/y90f05FYQrZll
PhdjPD/dBuqVCytI8l4xTUPcqyWRBRa3oleQrZVsuguiNLB44lRZnrmCnL13
tCJXgAZCn1V3lh+sINHpJ9sfEmmQcLg3+27bCqLmHxu3tEIFr36GwRL2VeTp
iSPi+k1UkP/XJf7nv1UkcWRHNfA5Faalsj2Oya4iQlfcLO0eUcE8QJHUen4V
WSfeNfNJooK22K0Lv+JXkVPaf4rDrlKB7oJ8zpHcVYRl+NpokQ4V6r22p30r
VpEZl4unIlSpcLgtLYrtwyoipjh+MlYI37/cmt4e5F5DYk0fqj0cToepVxLH
nVPWkArHs0L38f03/+di1LPCNYRX5/nBv6rpYELCBneq15DMwbbpfZLp0EW5
6pn4cQ2peyUU+5IO9y0xqqqKdx2hLS2a2D5JgwiTXxJL1HUkxDZAl4M1DcRX
H5F9sjeQMBfNF7XpKbC76ZLoo4cbyPL2mkprYAqwpa3Jj77YQF6eQKLrbVJg
/sgpPa2hDcT6SsEAqpoCDU6forj5NpEFjZSZ8U/JYDjJslOWsIn0HGpMZxRM
htA+ys/hkC3kvTT9xwesiTBaLdx4wvYvMvN4SyLdLwo6VdxlRL3/InPzl9pF
z0RBw6t3NJaIv8jp/eFir8hRkN1m595//y8yuc5eK/o4EozHaiRdvv5FRjrL
K959i4AeHp2UQqMdhLbpxOJ5/i68c3W1YT39DxFVHkuvUA+FmtU3fX8u/0NE
DpYxqnCGQmEAn+bAzX/I5UwPseXREAiJqt9zP/gfkvem8iNLSAho5DP2qjX8
Q8b8Bx3etATDiM35fc8F6VBnlv8U2yEQrtC+Rf1OokN9zk9Fycf6QsKZGg76
TDpULSnxtMlRX2hdu5vCX0CHei3vFJ8Z84HjxgdzTj6hQxnRa4Feaj6wT9Cr
ktZDhwZwZSdabXrBzyz2gVMkevSwY3mVRa4HiJwbNbkmRI8qXx9S7DDyAJOt
qq/OovQor9GS515uD+i4bvQrU4EeZau99tvn7m14sqdg+48BPZprwnJAx98d
/HKPiuWk0qMyqt+yBtJcoUaPtexJNj16+eJonbepK8zsfJZtuU+PRlpX2wuJ
u4L5jZCjizX0aHChyZF+dxc4tb/jrE4fPcoj7OLUOOIEAd25XWYj9GhRo2uZ
fYATPAt2u3x7gh71SM6qPbLPCaS+85vlLtOjI5tX7grYOgKx0NJ1mZcBfRfQ
dzuCzwFOGyitsO5lQM9c/Cd8ptkeAhl2+QmLM6AuN69kKPnaw/zN8jBdZQZU
waP/XO6kHUiTg1gs1BlQ1ws/Evfl2cHNt5fiPU8zoG1fB598NMG9KbZGzb/C
gDq7lKyND9kCZ9/7/56ZMaD3IibKNLNtQSc8J7+dwoDKVJQZfLlhC/UTJx+u
ejKgpyUHdjr+2MBSGq8cMZABDRCM4RHH+3fZ0z9qRCIY0PiZU+pYlA3kFsc1
nqcyoDmxnQaYjA14SJ0vHLzHgJ7MOfcfPYMNnH3EHnmzmAF9vHA3RuOzNew7
3O4wW86AJuwuiPN5Zg3LVTH6Pk8ZUDmZUvqqVGtoU9RVJjQwoFneoY2T7taQ
/4xVKOEtvr7A9UghQ2s41xA1fr+XAY24tCoTvsca9iM6rYc/MaCf8yWN6gnW
sPp61+MX3xnQwHwN5cUZCnRotSRr/WJANaV2XZYdokBhS4TXh3kGNIqL+7Bd
EwV8dLWvm6wzoIoyZSoPnlLgQicTOvmPAX8+Pw/NFOOe02864LqLgG7Ludkq
ZeKe7Q1n3eIkoEqPfioFJ1Cg64rW3F1+AroU6BPUjXvz/hDhI/c+AqroRbwj
HoRf//rbumxxAupno2UUhHtTbzQ0R+IQATVVvy05ivvygKVmyBMlAvrjbC6d
Jh5vjNNbq6kRUKbJgMmHuDe7rF/rtpwioKNXfDp3494s+hUsZ3COgIrvKr8f
i3vTzxHl/WJAQO2Zp7QJuDcv/vm3bmNCQC92lUYH4d484I59WbQkoNh1SQW6
XApsLge+uWNHQBfj9TfDcW92e2uUsrgRUIee5kSOlxQo2fwbm+pDQOv5fqRm
4t4MuNPoui+YgApxtmVLfcN9SXfnyoNIAlreoC1fv0IBiTC140qJBPSOzkrn
BQ5r2Gba3odRCeh/+xQmxySsoTfqJUE3Fz/fROSTj6Y1lLH7/+wrJqCBIdWM
XBbWEJhwvPPGYwK67F9UVRRkDZd5Np9MPyWglePRe1ULrGGH39ef7h0BFaHV
bZlMW0NfpopFbDsB7ZN3r5zisYEHe9a1+D8S0OPOXA+cTtiAoag3p+wYHluO
O9ml2cDDQ54FV+kYUee/KjkbZrYQXKUUMbaLEd13k0XhZLotXFFctnfiYkRz
8jv7/bps/+9ppbB9jKjqj8HWV9p2cFXLraVCjRFl7lA0tNCzB9kW+XJVLUb0
MlWliCvdHhh055PenWNEjdc4+oq+2EPFRReTTyaM6FmX3lFfDwdgvO40y+TL
iCY0h7pkP3eE/84Z7VcMYUQ1k0YGEvmcQOEEctkimhFliE+59NjDCSz+43lR
n8mIOh6s6TRWdYbGz0/DXeoZUcN+2zyxERfoa79Xl/OGEX0vnWLNiu9HMy8j
pt+3MaIRwx842MxcQSjHWP/AZ0bU7bqS5v5uV/Ay3f5veIsRHfq8nun+xg3i
z0/qMTMyocmZtshdencoUusKUSQyobakVwWpJ93h4578H/F7mNCsPXkOOe/c
Qf7LqRpNdSY09ZqWsszAbfhlFqtbHsiExsQ9dAsR9wI6PY87wxFM6MvLG//s
bnvBbg2zKuZEfPyOss/hN16gvU+O3zKPCf1cmKavedMbCkd7v/MBE9oYLu9l
VO4DpjeEfIPomdH1XYfFD1j7Q5fFg1KDcGb09Y9ns/aVwRAqFnR8JZYZLUuW
P+80GgzKU4adtFRmdCa58GI5RwjkONAtjRQyo7SjCmWfHUPAweuqhs1rZpS0
/IDw9VAosMQx9fvvMKNNJ1AxlxdhoFlnyVDsswu9t6xXcHguAmo5hMzWHFnQ
xpc+Bxwj42HqoHbebQ8WVISHeuBzfTzs1nX//sefBd08sKN5bC4eAiLaKD9j
WFDPGie2asME0Prn5zxcxoL23Fw5lLQ/EXrnPwe9nGBBk2QbCe7XkmDu473C
IFNWNMyff/3LSDLsX3w/sWXFiiqwnzU8tZwMBtyrEj4OeNx95lkcewrUntd7
5OrHioo32pm9x/uFgKadGssMVpSBuUjocxreX9TdaDrVx4oKU4Tf/NJKBYks
kZ+7zrOh4yq/JaSj0yBT3NtHwpANfdB4Za3kXhoQn3SwnDZlQztCr5MW8H5m
qcVbOtSRDc3tfDLzYxj37Eqn/XYcG/oXsx/Xx/uh65f8Zuc72dBTzrSLWXV4
fzTy4Q7XABsqL7oyldOaDpq24pyHR9nQ56K6MVZ4vyUV1H3YYY4NLT3ZtOfE
Zjqslku4TnKyo9gllylmvF9LYvm4OHyRHZW7lmVS/ZAKhDSpsPWr7OjMObGf
r+vw/lE4kCxgwY5GvDn3K+EdFcyOSisZurKjrj/7R298oYLMrSDPriR2tH9Z
VLqPnQa5f/qYZjPY0cM2CsNN/DTg8Zehshewo637ec3dRWiwntz/TOcJO5qp
016/qUyDJuzg+psedrSHU3oLruP9+LmQqO/D7Kix3b2gkFs0KB8Y2E03xo42
bAo+3XSkQcpsiKr6IjuqLfUZ4b+D+9Z38P31TXb06ICN+PNwGvgyHjLxYyCi
rvRJgzxxeL/835BfHYmIPnQR7vuN9/MfSw6xDwgRUfVzDQ0O+TTQVgjLXhYl
oiWRNysKS2hw6OzhhiOKRJS78uI/pWoa5PeFndc/QURPjk4Qk+rw/t9ieMT5
FBG1PyYaXNCAe9gr/O+jy0Q01y6Q7QfuUbb+5lnkOhFdnz7m3I97VEiRdfTj
TSIqkFurFYZ7VCb5XJeNPRG9F3vVex73qOqf+FdbbkQ0A2Ff2IN7SOdCd0Wi
LxElnzufy4J7yfgRKU8shIiKNxxwqsE9ast6JbEuioiaxx26sBf3lo8NLehc
EhEtZEqU08Y9FtU07PKVRkQD9tLvOox7LUNsj8XtPCIKze0tfbhHy0LM9XeV
4uerttgcx71X9zUfza4gotIKpqPmuAeb1cfl5Z4RUTrx8AP////qQLa4yNtG
Ilpp/15pAo+nNmx4rjYRUVnLM+yncW+uXn1I/7uDiLaHPSz+//9jmZ/NLAT2
EdEkX3nCKTzm55UbI40Q0X7BsgP///1Twt2tt2SciBrauBHV8Fi5u+bN8d9E
NDnkzisjfH6tw6vVXYtENC1OD5XH8zOMU7l/c5OIsieuZbT+//fPab/UVXoO
tFt7T48wvj4PncawGFYOFFuaX1TG1x9e8u/2Ph4OdHP3cTZ2vD5pjJq3qndz
oDFK5w/k4fUruhluqL2fA7VyYtdfxL1fA81anyQ50MFjv+8x4vV/s49V2VmO
A6XMzwoP4PenN+CcOMMxDnTLseiXNX7/FlW6mWS0OdDieOWHzfj9ZqCRVhsv
cKBcvSsf0l/TgLRiOHXpCgfauqmYfaCRBkeeDDf73uJA7Z9tJoXU0ADl2lPH
4ciBGtU0r16soIG+k3lpwW0OVGw73We0jAau0uOR70M50CN+5VfV7uGejxT3
MYvhQO/vCdxmp9EgadLGdiGZA7U5ZH0+J4kGlQUzOoIFHOi5Mf34f6G4hwVX
We0wDtRJQeVMP/7+7HirbG43c6AnHJ/NVpjSgHPAbzqpiwNd1FAu0TXEn/eU
f23Pv3Cgy+N79r7XpIEjG2scyzYHWrC/8sDPPTQIsD0XkEPgRCXphg2GSDSI
a453lGfnRF80CFyLY8Hfz1DSBWMhTvTA7fgZdIkKvzf/4yxT4UQ5c8q9xnFv
qjVHnh9FOdEvGnIDa7g3E5KXYnjPcqLN6UeEWnFvyku17wq5xokKvIjquod7
0+uKH72JHyf6IamiTer/3qwaWmZv4ET3yjOgQkPpYOCvpaj5jhOVEM0u2tuS
Dve1q9x8OjjRb9lnYbw2HbS/RM5NjHCikb9UuetT0iGW7djPxr+caEvV3O57
Z9OBn5L+2QXhQg1rxFyry9PARp5eqOQMF/rFvFpNOCMNnm85Go9c5EK96HzO
Xw1Lg+spWv06FlwoW4dj4sFraZCPLXWJhHChMqc+2HoypMFBIYM3H99woecS
6uUEz6dCvk1k339i3GjGlsfUcUgGFn/bdjFJblTv1W/Z5pJkcE04++bgQW6U
11pOSDE+GZBa9qoTitzo3SG66qfXkmGUISn2+ilu9H28UIj9QhLsyc3QzLbi
Rj1Ipy+he5Igo+9BlVARNxqdpid9630cJJ3siBMU50FT3XhH7vbfBe1X9xVH
pHhQWwGdmcrCu7B93P9TriwPmnWNtrzmchdslWSkDijxoPpHSl5Msd0FVDLq
7eFTPKiPiVuQhWY4zBO1Nk9Z8qDFdJp+nc9D4eLQSxvnezxo+Fn/sKO0IGC8
ksp5pIAHFWo/+yxGPQjqe+xrl4p40BLewOdWE4Eg0S5I8C3nQSU4V2jlioGw
0+idG/aSBzUovrerbygAKu4r9mcM86CTqtmlKOIHt/azB1z/woMOiLTdG5zz
BaF7Y6L7vvOgRRbnosl5vhBBTXa9/5MH5RxYbg2h9wXz6D/sFWs86HljqVaH
Lm/gdHmk+ZaPhE5114ruivEESiGNe1CQhJp86tfa0PCEhv6w0em9JNQpXPJF
17IH2KmZ+pEkSOjX/570HrTygHesHNWWR0loVYvAxpTubfhPfSPI8zgJvct8
i0V2121wd528EK1BQpcG/ZVv4f2W8GDjryptEnrCJV6/Fu/H/IqcReiuktCt
EPVRoo4b9Aya/CFfJ6GH9ebM9xLdQIr9TKPkDRJ6Q8Zpt1yPK/S7CV+7aENC
f9660mhq7grySHdSrjcJv7UHPguyuUCke4N5tT8J1WuMYCstdIbR4jLZ5iAS
yhItpXdR3RliiSGts5EkVPvWwtltHyeYGj5Cp55BQmWfpZ0lszmCOse+Lv0c
Evp+wfnFuxoHSEPZcm7lk9BbzCv7S244wMnSsWNxZSR0cSNLjOGVPWR86mLK
Lyeh9fGf1ENc7WGO4+XHmioS+sF88oKquD3keKS6fH5OQtOT5/JM0+1gqTRI
/U8DCU294zrWrm8Hup8d2AmvSSjxRNl/AZx2sHZSq1TmPQndMCS/LUmyBT1P
eU+NThJqJGz95MAVWygq23PKoIeEJj5Io07/ZwsGXCujvsMk1O4vJdWwCveC
5vfy+C94PXWVH2zdsQE6r06/gu8ktJXrQPX8BRt4PFLM//4XCeXP8p18v2wN
jNwpEyOzJFSJrimmqt0aTE4FVs8vkFA3zx+7p4usgeWhkd7uTfx+sDyUMzG3
hhtfNPfI7pDQB0YdFSka1vCMW24aYSCjHv81EERFrIGo9d/zy8xk9HmjCB0r
szVYee+KsGEjo6jS2i2dWQrUP1y67M9JRi1LQ8e+DVCAe/SrSCKJjEZEX9r9
8Q0FbHg6/hTyk/9Xw72HQ7mtAQB3qRSl+L75vrYQdqlUUu6ZOi+7JCq2e2mj
mBl3EtqEMiGTUYMxIymVdqlEqETFy5F0sUtSKTmbJNcQIU7b/v4458/1rPWs
9a73Wc9a6/fPC126RllLSzhYteXugztqBAgLzd/UX+CgT0eORZImAXrC0MDM
LA7OjY+rcNIhYHXdZ8WQVA7eUPM21dElIF+UO+Z6jIOO5Va3h1cRcC/k4Z5d
cRyccFpuWL2WgK9dLfudozmYO6xQkrae6c+JXe7P+NQyrU9/rzEBxtUXi4RM
u3tVY6GeORN/deCPKmZ8an2x3nc2AZ22xrNk4jlo4JNR8AgIeH9VWmCfyMGW
mQhdyRYCRF7cf98QMn7Ndbvka0PAes0SLTUpB5eab9Qx3EHAsnkPj4jzOVjX
on5e1oEAibV+pnopB/3DZzReOBFg/leFTCmTD+WFnWfOuRGwdvTQPucWDpZd
r/sp2IOAYf0qS/k+DrrbXJFaeBGwI19Pu0qGiz+6BCxFHwI2fbgcnvgTFy8m
BGW+5RJQ5hiY62LExW2a9ipXAghgachPGvzKxYHK9aciQwgIlXN4yQrjosnY
+AnVKGa+UY+JyTIuvhe1zu2IJmA65W7ut7dcPLr2fnJxHAEXkhZGTc5w8Qk3
gb8jicnfzdSh+c48DJX3lVkiIODS26dJ6gk8JM9bx/cKCRiQ3c7WZ86nZ6tS
TLKYgN9VOoOcSD+Uj/oy4ZxNwLMm72jf7X5YoNoU+XMuASO7R56EH/XDr3aS
A5hPwH895N4ljPlhcpWW/1QpAXIfzS0tx/xxtYf854Y7BCg3OXJJ8wB8MfHJ
V1pJAFuz7OnbIwGotv66t1EtAR8cLEL0iUDm/jR2D2ki4Pv70+Q7hyB0gsWv
2S0E9NW0Zsz6Iwgn26aclFoJWDDuvl1lOgitKLQv+IuAsKhvUw2Fwfg6xXZb
5xAB6ywe6UXohuKPYC8TV2USKp7UzncxO4D7zQZTVVRJiGh4+Etz6AGslzvc
8YxFwi6D1DzdggN4UioR/qJBgnKa79FtS8JRs6ax02ANCaVqb0bslA7iZpJ9
SsmWBM0yZ10tlUjGk4+76neS4Bkqkti4ROKcq24b+b+S4FH3r0H9nEj8c9PB
T5PuJAzI8T/o60ahJ++aRTePhHiP+7WN1ofwSOXiHkwiwSqsP3Xe1WjsSry8
KVZAwoXTAVzryWi0sTfKNE0jwUCWF7/cJgYXddlvLhKTkFtkNlLbG4PnFxwX
n8knQeJAtG01ikX0/gZRNSTU9ZZ8KWfeK1mFl6dX/yDB1Sc6KsGRj3NSIigz
WRZUDB0N4yXzUXEenbllNgvSST2Z5Eo+kkp7hb8tYIHVsyFd3s/HcOXC7vhT
Gizw9ylcmz5xDHfRUz6jm1hQbLhVxC5IwtwVOvr34lmQWmVRFKMlwAsFddce
8VlwvVzrtMRdgJdX8Va8SmaB5Puw4T2RAItXF2oNnmSBnOk6h8WyJ7B2nQmx
NI8FuvqCqfGOE9hrajvJr2ZB9gS3duCiEE1swmttZSgIv3VNO15JhIINSkMq
sygQzLbHJ8tE2KZ+aUmrAgVcmWtfZm8WIX+kJYK3kIJNMu3pW8NE+GeO+YpE
TQqsIF+/tVmEvEEZ4QM2BXazFlg2StIxO+OUi0E0BbOzSdZHhUzsj13Jn4il
oKn/+OIOjUxkMF9UdZSCDGXT+HuGmdhlMaqwM4WClYeL98h7ZaLBJ9dKfykF
SwvaR16UZeJjU82l+bcpGO6Z5I26iFFdp9wuoIKCPaXN3TH+Ygyb7/D7+gcU
hGQGtb2OFSPVkdBUXUeBclGwk2K+GPef+HSsrZmCW+PGNY6DYpxqK+xhfaUg
IOf2XYXoLNwS1CDaOc7E322cKEzNwrTpj2ZJUxT0v7IOfnk2C7XUlgjG5GjQ
ekAH59Vk4TY3wapmgobbU9Pe6+YwHu6+1KS4mIbvninbiygJvovEaCt1Gmad
yFrdpyvBEPHE45JlNAxMHhySWEtQ3MQJEBnT8DlnT0g5X4Lt3gmqDeY0fFNb
sUAlXYIrhnMrZzbRQJRPyyzLk2Cl8ivFUGsaEgsG2RGVEuyws7q+042G/5iE
NpUOMp5+/5tTkgcNXQsdW55+l2BEQPT0fS8aZnJtF52ZLcW5gpt2a/xouObc
8HAP8z/Xr9ccUIymgT2u+9HFmvGgy0axVRwND/uzt9AOUqzpcmHHJNCwKCjf
Trib8ZR8mrBXQEPE6fQ1okDG6xkFRtonaZC+3RCnGSHFHu26NvcMGva39Xt7
xUrxMEyvachh9p8d2DORKsW651TLzDlmfL0nyz6T8YTXhjjTfBouGtR/dsuR
4sU4/8bL12nwPf+pIO6KFAfmJ0W2F9OgkHXAMOcG473c8xrULRpMzqmf4TEe
aqh8E5x0n4abDq5OZBXjJ9tR1gOkoVdV5DhaK8W9rcpVY3U0GB63FPIfSfGy
nx53zWMa/CJufKh5KsWhia3Kvo00qEYc0i15LkWz4/vunGmiYbDnko1DsxT5
VJxncwsN+z6eXZnHeO/ZH9lzlN7RUDq69sZZxoOU8a0iq3YaVPoSq+0YL3rX
PXeN6aQhJNHU7irjyatO/X+XdNMgqwib7zDe/No550pvH5P/V3+nhHdKkR2u
Y689xKz3aKNmO+PVZNnNE+6jNFTc1h6dZDz7QrQ7TzRBQ+tNm5laxrtqWpHb
GqZpoHYWstmMj/9XXwr+X1/qH32thR4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-1529.5982959389814`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.57583447310588*^9, 3.575834479290225*^9}, {
  3.5758345246673517`*^9, 3.575834533807778*^9}}]
}, Open  ]],

Cell["\<\
First, calculate the tunneling rates of the sin potential:\
\>", "Text",
 CellChangeTimes->{{3.575834551617766*^9, 3.57583457503122*^9}}],

Cell[BoxData[
 RowBox[{"V0", "=", 
  RowBox[{"Vscale", "[", "bscale", "]"}]}]], "Input",
 CellChangeTimes->{{3.575834760384783*^9, 3.575834766427137*^9}, {
  3.5758350428627777`*^9, 3.575835045437538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"psin", "=", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"SinTunnel", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "V0"}], "*", "V"}], ",", "b"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.575834635067964*^9, 3.575834641882471*^9}, {
  3.575834951820468*^9, 3.5758350080953407`*^9}, {3.575835055663993*^9, 
  3.5758350559853363`*^9}, {3.575835258067533*^9, 3.575835276127754*^9}, {
  3.575835451058737*^9, 3.575835478740382*^9}, {3.575845031813984*^9, 
  3.57584504090057*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
tnxPees29/5s+X5K/Jc2NsD/BaOh0DQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -25.321535539899},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.11332868530700327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.8020015854720276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.205970806988609, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.4929040961781488`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.7155981082624912`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.8976198599275325`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0515563381903004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1849270495258133`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.11332868530700327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.8020015854720276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.205970806988609, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.4929040961781488`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.7155981082624912`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.8976198599275325`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0515563381903004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1849270495258133`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0, 100}, {-25.321535539899, 5.86808658375447}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.921264251474383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.5172950299578, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.230361740768263`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.00766772868392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.82564597701888, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.671709498756112`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.5383387874206, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.70218187265727, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.013508972492247`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.609539750975665`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.322606461786126`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.099912449701783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.917890698036741`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.763954219773973`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.63058350843846, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.794426593675134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.10575369351011, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.701784471993528, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.414851182803988, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.192157170719646, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.010135419054604, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8561989407918364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.722828229456324, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.11332868530700327`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.8020015854720276, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.205970806988609, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.4929040961781488`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.7155981082624912`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.8976198599275325`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0515563381903004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1849270495258133`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{
  3.575835479467147*^9, {3.575845032928211*^9, 3.5758450419706*^9}, 
   3.575845182896194*^9}]
}, Open  ]],

Cell["\<\
We can compare this to the 1D calculate tunneling rates for the gaussian well:\
\>", "Text",
 CellChangeTimes->{{3.5758353029152184`*^9, 3.575835320908366*^9}}],

Cell[BoxData[
 RowBox[{"gaustunb1", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Er", "/", 
               RowBox[{"(", 
                RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "*", 
              RowBox[{"V", "/", "scalin"}]}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ",", "100"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Er", "/", 
               RowBox[{"(", 
                RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "*", 
              RowBox[{"V", "/", "scalin"}]}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ",", "100"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
       RowBox[{"scalin", "/", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.575835344094061*^9, 3.575835400442808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"psin", ",", 
   RowBox[{"ListLogPlot", "[", "gaustunb1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.575835433881618*^9, 3.575835463648761*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
tnxPees29/5s+X5K/Jc2NsD/BaOh0DQ=
      "]]}}, {{{}, {{}, 
      {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN2R140rTNldYDwRByO1Kdzar8RhfJVHLL8M61s
y0WgfD2Hf1oaIXzXhKB8EweZx5KJb8wEoXxLB4e/f+6c8uaH8u0cul20NQq8
eSD8BkeHm4qTLE1yOKHyLg42jWouq1azQeXdHDgNH/fys7NA5T0dEqeEmd6q
ZoTKeztwvFpw4CX/P3uIvJ/DgvwJRSeCf0L4DgEOXhM6fj04+AXCbwh0cOzs
4N8b9QHCPxDksKXY68h3pxdQ/SEOeR+P3VOyfADVH+qwyahWVC3qIlR/mENe
0/sDphdWQ/WHO8S++52ad/Dgfoj+SIeZl2ydfsVd3g8AsfFdQg==
        
        "]]}, {}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -25.321535539899},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{-25.328436022934504`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
       FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.11332868530700327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.8020015854720276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.205970806988609, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.4929040961781488`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.7155981082624912`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.8976198599275325`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0515563381903004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1849270495258133`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-25.328436022934504`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {-20.609937151639407`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.921264251474383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.5172950299578, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.230361740768263`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.00766772868392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.82564597701888, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.671709498756112`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.5383387874206, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.70218187265727, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.013508972492247`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.609539750975665`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.322606461786126`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.099912449701783`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.917890698036741`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.763954219773973`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.63058350843846, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.794426593675134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.10575369351011, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.701784471993528, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.414851182803988, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.192157170719646, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.010135419054604, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8561989407918364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.722828229456324, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.11332868530700327`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {0.8020015854720276, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.205970806988609, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.4929040961781488`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.7155981082624912`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {1.8976198599275325`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.0515563381903004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {2.1849270495258133`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{0, 100}, {-25.321535539899, 5.86808658375447}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-25.328436022934504`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
      FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.921264251474383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.5172950299578, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.230361740768263`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.00766772868392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.82564597701888, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.671709498756112`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.5383387874206, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.70218187265727, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.013508972492247`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.609539750975665`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.322606461786126`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.099912449701783`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.917890698036741`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.763954219773973`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.63058350843846, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.794426593675134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.10575369351011, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.701784471993528, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.414851182803988, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.192157170719646, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.010135419054604, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8561989407918364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.722828229456324, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.11332868530700327`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {0.8020015854720276, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.205970806988609, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.4929040961781488`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.7155981082624912`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {1.8976198599275325`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.0515563381903004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {2.1849270495258133`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{{3.575835439988571*^9, 3.575835483024785*^9}, 
   3.575845185638801*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"A", " ", "little", " ", "nicer", " ", "plot"}], "*)"}]], "Input",
 CellChangeTimes->{{3.575835521907937*^9, 3.575835528464266*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sintunb1", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{"SinTunnel", "[", 
       RowBox[{
        RowBox[{"V", "*", "V0"}], ",", "b"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "100", ",", "5"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.575835532750222*^9, 3.575835580063347*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "353.5718028920043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4.797630343795607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.24108579980170136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.021800807047638166`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.0027488489175882943`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.00043264210768912016`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.00008004887444602644`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"35", ",", "0.00001678076930917807`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "3.888706582773345`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", "9.789721263749302`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "2.643126062626381`*^-7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "7.578616091871258`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "2.2897459633183072`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "7.244820671097283`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "2.3864107005560197`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "8.156087204431966`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "2.920080604055889`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85", ",", "1.0069243462261686`*^-10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "4.0276973849046744`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95", ",", "1.0069243462261686`*^-11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "1.0069243462261686`*^-11"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.575844816732051*^9, 3.575845203357205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunb1", ",", "sintunb1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5758355851899843`*^9, 3.5758356364695063`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN2R140rTNldYDwRByO1Kdzar8RhfJVHLL8M61s
y0WgfD2Hf1oaIXzXhKB8EweZx5KJb8wEoXxLB4e/f+6c8uaH8u0cul20NQq8
eSD8BkeHm4qTLE1yOKHyLg42jWouq1azQeXdHDgNH/fys7NA5T0dEqeEmd6q
ZoTKeztwvFpw4CX/P3uIvJ/DgvwJRSeCf0L4DgEOXhM6fj04+AXCbwh0cOzs
4N8b9QHCPxDksKXY68h3pxdQ/SEOeR+P3VOyfADVH+qwyahWVC3qIlR/mENe
0/sDphdWQ/WHO8S++52ad/Dgfoj+SIeZl2ydfsVd3g8AsfFdQg==
          "]]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQPGUT0bXleIO0B4Ig5dbtvM2cV/2kP4Kg7OreK7
fh36th/C13PYdDo6wXE23wEI38SBOb7fVnyaOJRv6eC1fVdt3W85KN/OwbF4
Re/Cu0oQfoOjg/LfU5+m/FWFyrs4WJ+tPWHySgMq7+aw/+sf9Zw12lB5T4cl
hzr/XPTSg8p7O5yeOGuVaaoBVN7PQUhcjWPudEMI3yHAofZ5yn3jfUZQ9YEO
CxfKxtbeMobwDwQ55Mh2doS+NYHqD3HInreL1/OLKVR/qEPP5r3vb7KYQ/WH
OUzY5fI9+z2UfyDcQT/ORD0gyBKqPxLOBwBUGGTF
          "]]}, {}}, {}}, {}}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
     AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -25.321535539899}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-25.328436022934504`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-11.512925464970229`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-4.605170185988091, 
         FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
         FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.921264251474383`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.5172950299578, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.230361740768263`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.00766772868392, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.82564597701888, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.671709498756112`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.5383387874206, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-13.70218187265727, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-13.013508972492247`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.609539750975665`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.322606461786126`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.099912449701783`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.917890698036741`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.763954219773973`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.63058350843846, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.794426593675134, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.10575369351011, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.701784471993528, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.414851182803988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.192157170719646, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.010135419054604, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.8561989407918364`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.722828229456324, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.11332868530700327`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8020015854720276, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.205970806988609, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.4929040961781488`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7155981082624912`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.8976198599275325`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0515563381903004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.1849270495258133`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-25.328436022934504`, 
         FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
         FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {-20.609937151639407`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.921264251474383`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.5172950299578, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.230361740768263`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-19.00766772868392, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.82564597701888, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.671709498756112`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-18.5383387874206, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-13.70218187265727, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-13.013508972492247`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.609539750975665`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.322606461786126`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-12.099912449701783`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.917890698036741`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.763954219773973`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-11.63058350843846, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.794426593675134, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-6.10575369351011, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.701784471993528, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.414851182803988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.192157170719646, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-5.010135419054604, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.8561989407918364`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.722828229456324, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.11332868530700327`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8020015854720276, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.205970806988609, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.4929040961781488`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7155981082624912`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.8976198599275325`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0515563381903004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.1849270495258133`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0, 100.}, {-25.321535539899, 5.8680865846313734`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{2., 2.}, {0.6237924424906075, 0.6237924424906075}}, 
    Ticks -> {Automatic, {{-25.328436022934504`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "11"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
          TraditionalForm]}, {-18.420680743952367`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-4.605170185988091, 
        FormBox["0.01`", TraditionalForm]}, {2.302585092994046, 
        FormBox["10", TraditionalForm]}, {-20.609937151639407`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-19.921264251474383`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-19.5172950299578, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-19.230361740768263`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-19.00766772868392, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-18.82564597701888, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-18.671709498756112`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-18.5383387874206, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-13.70218187265727, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-13.013508972492247`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-12.609539750975665`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-12.322606461786126`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-12.099912449701783`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-11.917890698036741`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-11.763954219773973`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-11.63058350843846, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.794426593675134, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-6.10575369351011, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.701784471993528, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.414851182803988, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.192157170719646, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-5.010135419054604, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.8561989407918364`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.722828229456324, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.11332868530700327`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.8020015854720276, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.205970806988609, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.4929040961781488`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.7155981082624912`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.8976198599275325`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0515563381903004`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.1849270495258133`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.575835637139996*^9, 3.5758448188071623`*^9, {3.575845200153201*^9, 
   3.575845205325906*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "b ",
 Cell[BoxData[
  FormBox[
   RowBox[{"==", 
    RowBox[{".65", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Section",
 CellChangeTimes->{{3.575845213311529*^9, 3.5758452233787518`*^9}, {
  3.575846467185647*^9, 3.5758464714430733`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.575845226600782*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{".65", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "enter", " ", "value", " ", "for", " ", "b", " ", "in", " ", "si"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "100"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "basis", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"Rough", ":", " ", 
        RowBox[{
        "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
         " ", 
         RowBox[{"V", "/", "Er"}]}]}]}]}], " ", "=", "100"}], ",", " ", 
    RowBox[{
     RowBox[{"depending", " ", "on", " ", 
      RowBox[{"waist", ".", " ", "For"}], " ", 
      RowBox[{"V", "/", "Er"}]}], " ", "=", "700"}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"bscale", "=", 
  RowBox[{"b", "/", "waist"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "1", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "1", ",", "bscale"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Vscale", "[", "bscale", "]"}], "*", "Vt", "*", 
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", 
             RowBox[{"2", "*", "bscale"}]], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"gaustunu1", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ",", "p"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ",", "p"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
       RowBox[{"scalin", "/", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "p", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"V0", "=", 
  RowBox[{"Vscale", "[", "bscale", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sintunbu1", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{"SinTunnel", "[", 
       RowBox[{
        RowBox[{"V", "*", "V0"}], ",", "b"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "100", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.57584523770487*^9, 3.5758452846816263`*^9}, 
   3.575845358862059*^9, {3.575845405234787*^9, 3.575845409852612*^9}, {
   3.575845600493587*^9, 3.5758456126832523`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
lftexfV9LLzmljmBvfv13YjVa7i1sYSYxCInRFeJn42PDsEjmSrDEiY5AStV
p7LfDsVTZ66rNo1xQpOayorfUhhe3KwzvjXCCQkG3/ffXwjHP93q03br213P
oTQRyROJT9lnr2X3cILovJg524nb+B9N1/y+Tk7gtym8OBAahUtubdLptHBC
z1jFkOiBGPzQYEP1tXecMBp2uaGqKBY3rI5zLUecEEbLnNOiHo/7+om0idZw
wpTBceNDj+7hUWemrpm94oTl+fKD/FWJePreUsX4Mk4gL6htLb28j7+dJ9/d
LOSEMzY+d0pbH+K97xk19+Vzwv2eU1OHFpPwmWc9Sy65nOCXznX2vGQKzuHk
ZNqbxgnTJs/usjWk4ntOKFMyp3DCWkRid5FKOn5YfKNc6wEn3HJK8h0pzcDt
h+9wlcZygozQt6ana1m4f61p42QUJ3ynni+2sMnBo1MFAoQjOKFI6/Z3ydO5
eOn5F30x1znBkSHKYcTsCd6w3/8OBHHCIjnnyTmfp3gfh8bhX36cQOtg1pWe
no/vdHSmOXlwgr7OSKO4ZCHO+eKRYYYrJ1xyHfQjhz/HZWLst7qdOOG/Ewdl
1n4W4ad1V60xG04osd3f7MlfgttL1bEGWnKCNlvxvsiOUtyfMpIoNuME5yOH
kl07yvBMnEdc0JgTCj9UfqlAFXhZxtcuU8PdcT8KQ+3OSrzx6rPwOyd3/eJN
1Xw//wqfP3jk+5rmrt+CK/475tX4DhdVkuIxTmhwXZfwKqjBOVfbdBzUOcE4
44W5GUMtfrTEuuDjXk4Q7D+d+JAex19+5tj3WpET2MR0tr+2Ebj438Y36bKc
MB7abx95HnC6U8ofnMU44ZydmYK8bQN+1W/M3Eho9zx4hTF4XnuHL6Qnj+7j
292Pq9umMc8a8Z7Zvz+32DghsiJU7sThFlyXVHFjjIkTnpOswncet+I1h13o
W+g4ofq/lIBe/jY8606n4IMdEjw4m3CaOPsBJ5Xeehr0hwTZvaG1Qdwf8ci+
Qyo2GyR4/fverFFwF+4una0lt0QC4eUX9wRCe/CRU+faWedIEFxq3xaS9gk3
9ac3+zlJAkPOzj67xl780DtvV2KEBHMcXp+DTfrx53NSq08GSSCmbLtRWz6A
C3MOXI/5TIK3CWutKXJDONUl8r3zH0jgyL+iM2wxggdEr/EffU+C+TC1qS7u
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
98P/D6fIfsY=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-15.333978059759815`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.575845258747383*^9, 3.575845285920882*^9}, 
   3.575845359440363*^9, 3.5758454110417957`*^9, 3.575845614174255*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQN2R140rTNldYDwRBzUXc+0zLCUgfJVHCRyE9IP
9chC+XoOmU9nf1ALloPyTRyEil7aqj6A8S0d1pedubvJVx7Kt3OQ/Pd5TtRy
KL/B0aG0uJnH5TNM3sXB9JPXy14pBai8m0P4FePKBeZQPoOnw4FmO4GVgTB5
bwfjCO811pkweT+H7PBfS4/WQfkOAQ5LNN3EZk2CqQ90mLLWduHPJVD+gSCH
S91+/eLbYPpDHOoX7HWQPQbTH+pge4hrqs5VmP4wB5UN7osSH8P0hzvsXznh
6+UPMP2RDlq/HRun/1VwAADEoVjZ
          "]]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMZ8cf2JwlLOUB4Ig4CrzLjnpgLQ/kqDt8+v9WS
juWC8vUc5E6VTXkqzgDlmzikGppsTlN/Yw/hWzqEsd1T7cw7tB/Ct3M4nXjq
kUPiRwi/wdGh4VHIc4nc/1B5FwdBE6FZrIFsByDybg6CLmpe6yfyQPgMng6H
t9oqPnMShMp7O/Q8tV9/QVoEKu/nkHvu5r+V18UgfIcAhwLO4tt7KyWh6gMd
pGQvrDnEIgPhHwhyeLGnUfNPlRxUf4hD1ts0Na18Baj+UIdPH/fcNpuhCNUf
5nD93YL9ETuVoPrDHeSPBl3SuawM1R/p4Dm5b5fNM5UDAF/pYqI=
          
          "]]}, {}}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -10.449682073501792`}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-11.512925464970229`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-6.907755278982137, 
         FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
         FormBox["10", TraditionalForm]}, {6.907755278982137, 
         FormBox["1000", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.787491742782046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.438079308923196, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.8289456176102075`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.1092475827643655`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.327936783729195, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.507277712385012, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.659293919683638, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.7912214627261855`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.787491742782046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.438079308923196, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.8289456176102075`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.1092475827643655`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.327936783729195, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.507277712385012, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.659293919683638, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.7912214627261855`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0, 100.}, {-10.449682073501792`, 8.495296515755019}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{2., 2.}, {0.3788995717851363, 0.3788995717851363}}, 
    Ticks -> {Automatic, {{-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
        FormBox["10", TraditionalForm]}, {6.907755278982137, 
        FormBox["1000", TraditionalForm]}, {-9.028018815182229, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-8.377431249041079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.986564940354067, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.706262975199909, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.487573774235079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.308232845579262, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.156216638280637, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.024289095238088, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.422848629194137, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.7722610630529876`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.3813947543659757`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.101092789211817, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.882403588246988, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.703062659591171, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.551046452292545, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.419118909249997, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.1823215567939546, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.8329091229351039, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.2237754316221159`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.5040773967762742`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.7227665977411037`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.9021075263969205`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0541237336955462`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.186051276738094, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.787491742782046, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {5.438079308923196, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {5.8289456176102075`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.1092475827643655`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.327936783729195, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.507277712385012, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.659293919683638, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.7912214627261855`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.575845258747383*^9, 3.575845285920882*^9}, 
   3.575845359440363*^9, 3.5758454110417957`*^9, 3.5758456360341454`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunb1", ",", "sintunb1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5758455384084167`*^9, 3.575845538744096*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQMRS50mLQ/XcYDwRBwaMuqMv/zPhfJVHC6/WCu2
63oKlK/ncPHgnR9Ne6KhfBOHTzdCf3+vDYLyLR1Czq4oef7fA8q3c7BjaxW7
rOsI4Tc4Okxcs8th2T9zqLyLw8RDjpxLmQyh8m4OPezTqn4VaUDlPR1O3e5r
0DmlCJX3dtAtc53sry8FlfdzCHb+u0W/ShjCdwhwePngyMatbrxQ9YEOpYJT
M/ZZs0H4B4IcGF1krE2EGaH6QxxExPa35E74ZQ/RH+rw9qlz56rfXyD8hjAH
k63nbFc++QDhHwh3cIi/uPj9rdcQPkOkg5b4q4PTljy3BwABUWHZ
         "]]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQOr+U5JqUmWOUB4Ig5fZjgzHTMQhvJVHB5duuby
7PY5ewhfz+GqrH7q56BpUL6Jw72MGraDLWlQvqWD/A3BLe1RNlC+nUPk4p8G
f3+LQPgNjg6/zy5f3zvjox1E3sUhqW1LW7n/BQi/wc1h6tEKm+U5G6Dyng76
O44o3d4zESrv7RB9XMjuT3gJVN7PQfr2+irGaREQvkOAw+9lp3cdlrWHqg90
yL/2/tTRehUI/0CQg3HmpAnabDxQ/SEO3EYxKfyCX2wh+kMdHku8XDJz7W0I
vyHM4aVwyKsqlWMQ/oFwKH8ZhM8QCecDAH+LYRc=
         "]]}}, {}}, {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
     AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {{0, 100.}, {0, 42.52582686900293}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{2., 2.}, {0.8505165373800585, 0.8505165373800585}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.575845539560399*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TEMPLATE", "Section",
 CellChangeTimes->{{3.575843520020589*^9, 3.575843525684021*^9}, {
  3.575846065749238*^9, 3.5758460673968287`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Note", " ", "on", " ", "scale", " ", 
    RowBox[{"factors", ".", " ", 
     RowBox[{"Adam", "'"}]}], "s", " ", "code", " ", "is", " ", "written", 
    " ", "with", " ", "the", " ", "recoil", " ", "energy", " ", "as", " ", 
    "the", " ", "scaling", " ", "factor"}], ",", " ", 
   RowBox[{
    RowBox[{"Er", ".", " ", "Due"}], " ", "to", " ", "a", " ", "different", 
    " ", "path", " ", "I", " ", "took"}], ",", " ", 
   RowBox[{
    RowBox[{
    "my", " ", "scale", " ", "factor", " ", "looks", " ", "like", " ", "Vt"}],
     "=", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"(", 
       RowBox[{"mRb", "*", 
        SuperscriptBox["waist", "2"]}], ")"}]], ".", " ", "So"}]}], ",", " ", 
   
   RowBox[{"whenever", " ", "you", " ", "see", " ", "an", " ", 
    RowBox[{"Er", "/", "Vt"}]}], ",", " ", 
   RowBox[{
   "I", " ", "am", " ", "simply", " ", "converting", " ", "between", " ", 
    "scale", " ", 
    RowBox[{"factors", ".", " ", "The"}], " ", "ratio", " ", "is", " ", 
    "about", " ", "15", " ", "if", " ", "you", " ", "are", " ", 
    RowBox[{"curious", ".", " ", "So"}]}], ",", " ", 
   RowBox[{
   "when", " ", "Adam", " ", "puts", " ", "a", " ", "well", " ", "depth", " ",
     "of", " ", "100", " ", "Er"}], ",", " ", 
   RowBox[{
   "that", " ", "corresponds", " ", "to", " ", "about", " ", "1500", " ", 
    "Vt", " ", 
    RowBox[{"units", ".", " ", "The"}], " ", "code", " ", "that", " ", "I", 
    " ", "wrote", " ", "needs", " ", "things", " ", "in", " ", "units", " ", 
    "of", " ", "Vt"}], ",", " ", 
   RowBox[{"which", " ", "is", " ", "why", " ", "it", " ", "is", " ", 
    RowBox[{"converted", ".", " "}]}]}]}]], "Input",
 CellChangeTimes->{{3.575846126161968*^9, 3.575846277258356*^9}}],

Cell[BoxData[{
 RowBox[{"b", "=", 
  RowBox[{"(*", 
   RowBox[{
   "enter", " ", "value", " ", "for", " ", "b", " ", "in", " ", "si"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"p", "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Number", " ", "of", " ", "basis", " ", 
       RowBox[{"states", ".", " ", 
        RowBox[{"Rough", ":", " ", 
         RowBox[{
         "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
          " ", "V"}]}]}]}], " ", "=", 
      RowBox[{"100", " ", "Vt"}]}], ",", " ", 
     RowBox[{
      RowBox[{"depending", " ", "on", " ", 
       RowBox[{"waist", ".", " ", "For"}], " ", "V"}], " ", "=", 
      RowBox[{"700", " ", "Vt"}]}], ",", " ", 
     RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", 
      RowBox[{"states", ".", " ", "Converting"}], " ", "into", " ", 
      "recoils"}], ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "V"}], " ", "=", " ", 
      RowBox[{"46", " ", "Er"}]}], ",", " ", 
     RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}], 
     ",", " ", 
     RowBox[{"and", " ", "higher"}], ",", " ", 
     RowBox[{
     "depending", " ", "on", " ", "the", " ", "b", " ", "you", " ", "are", 
      " ", "working", " ", 
      RowBox[{"with", ".", " ", "The"}], " ", "tunneling", " ", "rates", " ", 
      "will", " ", "start", " ", "to", " ", "curve", " ", "up", " ", "when", 
      " ", "it", " ", "stops", " ", "converging"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"bscale", "=", 
    RowBox[{"b", "/", "waist"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "1", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "1", ",", "bscale"}], "]"}], "+", 
       RowBox[{
        RowBox[{"Vscale", "[", "bscale", "]"}], "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", 
             RowBox[{"2", "*", "bscale"}]], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"gaustunu1", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ",", "p"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{
             RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
             ","}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
       RowBox[{"scalin", "/", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "p", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"V0", "=", 
  RowBox[{"Vscale", "[", "bscale", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sintunbu1", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{"SinTunnel", "[", 
       RowBox[{
        RowBox[{"V", "*", "V0"}], ",", "b"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "100", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunb1", ",", "sintunb1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5758435413063307`*^9, 3.575843563418392*^9}, {
  3.575843617593451*^9, 3.575843618396058*^9}, {3.5758436609750643`*^9, 
  3.575843665994628*^9}, {3.575843699587675*^9, 3.575843845415902*^9}, {
  3.575843886724691*^9, 3.575843925679891*^9}, {3.575846075372916*^9, 
  3.575846084749033*^9}, {3.575846120270721*^9, 3.575846124558601*^9}, {
  3.57584628657978*^9, 3.57584641024536*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.575843620902315*^9, 3.5758436357342577`*^9}, {
  3.575843913337002*^9, 3.57584391717839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions:\[LineSeparator]", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.572127540901985*^9, 3.572127543317565*^9}, 
   3.575817698221333*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"1.05457173", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{"1.443161", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "25"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.574185133439817*^9, 3.574185134190959*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", 
   RowBox[{"n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   FractionBox["1", "L"], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "*", "2", 
     FractionBox["\[Pi]", "L"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "*", "x"}], "+", 
       RowBox[{"y", "*", "m"}]}], ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5702150251058083`*^9, 3.5702151013501663`*^9}, {
  3.5702151520355673`*^9, 3.5702151802910624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hp", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570215184883725*^9, 3.570215228654123*^9}, {
  3.5702153656843147`*^9, 3.570215463928651*^9}, {3.570215779092273*^9, 
  3.5702157938471527`*^9}, {3.570218779153079*^9, 3.5702188635205073`*^9}, {
  3.5702269284039097`*^9, 3.5702269306252174`*^9}, {3.5709307596086063`*^9, 
  3.5709307707939215`*^9}, {3.570931186897369*^9, 3.570931197833276*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2p", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5702154106369686`*^9, 3.5702154108509626`*^9}, {
   3.5702154668880014`*^9, 3.570215485975391*^9}, 3.5702155610089054`*^9, {
   3.570218870051346*^9, 3.570218903945597*^9}, {3.5709307108269043`*^9, 
   3.570930774381958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlane", "[", 
   RowBox[{"V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "-", "l"}], ")"}], "2"]}], "8"], "]"}], "*", "\[Pi]", 
    "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"m", "-", "q"}], ")"}], "2"]}], "8"], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570219192838127*^9, 3.570219197234665*^9}, {
  3.5702192436695185`*^9, 3.5702192900733156`*^9}, {3.570219442121977*^9, 
  3.5702194661109934`*^9}, {3.5702195202318*^9, 3.5702195321232705`*^9}, {
  3.570219576136772*^9, 3.570219634658684*^9}, {3.5702266841284084`*^9, 
  3.5702266845615516`*^9}, {3.5702267770386944`*^9, 3.570226779349032*^9}, {
  3.5702270814494915`*^9, 3.5702270844568915`*^9}, {3.570227414095292*^9, 
  3.570227435630989*^9}, {3.5709312774251366`*^9, 3.5709312862704563`*^9}, {
  3.5709884254526167`*^9, 3.570988425836464*^9}, {3.570988497677177*^9, 
  3.570988498140882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlanebtest", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_", ",", "b_"}], 
   "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "had", " ", "some", " ", "trouble", " ", "getting", " ", "the", 
     " ", "factors", " ", "in", " ", "EXp", " ", "right"}], ",", " ", 
    RowBox[{"but", " ", "this", " ", "configuration", " ", 
     RowBox[{"worked", ".", " ", "This"}], " ", "is", " ", "for", " ", "one", 
     " ", "well", " ", 
     RowBox[{"only", "!"}], " ", "This", " ", "is", " ", "the", " ", 
     "generalizating", " ", "of", " ", "HPlane"}], ",", " ", 
    RowBox[{"which", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "worry", " ", "about", " ", 
     RowBox[{"b", ".", " ", "This"}], " ", "basically", " ", "lets", " ", 
     "me", " ", "offset", " ", "my", " ", "one", " ", "well", " ", "wherever",
      " ", "I", " ", "want", " ", "to", " ", "double", " ", "check", " ", 
     "that", " ", "I", " ", "have", " ", "the", " ", "right", " ", "form", 
     " ", "of", " ", "the", " ", "analytics"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4", 
        SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.57093125165367*^9, 3.5709312898272624`*^9}, {
   3.570931341167391*^9, 3.5709313441782713`*^9}, {3.570932250439*^9, 
   3.5709322589567027`*^9}, {3.5709323074822006`*^9, 3.570932308387007*^9}, 
   3.570932577634177*^9, {3.5709335178890133`*^9, 3.57093352824736*^9}, {
   3.5709883475675707`*^9, 3.570988361948283*^9}, {3.5721278186849003`*^9, 
   3.572127906953497*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2Plane", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "b_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"n", ",", "l"}], "]"}], "*", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"m", ",", "q"}], "]"}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "*", 
        FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "2"], "+", 
        SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}], "-", 
    
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}]}], "//",
    "N"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.570680082568841*^9, {3.5706801506789513`*^9, 3.5706802608984394`*^9}, {
   3.5706814558960094`*^9, 3.5706814689845357`*^9}, {3.5709335633165245`*^9, 
   3.5709335716938066`*^9}, {3.5709338675326557`*^9, 3.570933869451476*^9}, {
   3.570988352349019*^9, 3.570988358289434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMatrix", "[", 
   RowBox[{"V_", ",", "L_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"HPlane", "[", 
       RowBox[{"V", ",", "L", ",", "m", ",", "l", ",", "n", ",", "q"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}]}], "]"}], "//", "N"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.572128069191348*^9, 3.5721280745519753`*^9}, {
  3.5721281434915953`*^9, 3.572128143907481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"groundState", "[", 
   RowBox[{"EM_", ",", "L_", ",", "x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Size", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "EM", "]"}], "]"}]}], ",", " ", "i", ",", 
      "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Given", " ", "an", " ", "eigenvector"}], ",", " ", 
      RowBox[{
      "this", " ", "will", " ", "compute", " ", "a", " ", "plottable", " ", 
       "version", " ", "of", " ", "the", " ", 
       RowBox[{"wavefunction", ".", " ", "However"}]}], ",", " ", 
      RowBox[{"there", " ", "is", " ", "little", " ", "sophistication"}], ",",
       " ", 
      RowBox[{
      "the", " ", "user", " ", "must", " ", "still", " ", "change", " ", 
       "the", " ", "index", " ", "conversion", " ", "number", " ", "by", " ", 
       
       RowBox[{"hand", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Note", ":", " ", 
         RowBox[{"there", " ", "was", " ", "a", " ", "problem"}], ":", " ", 
         RowBox[{
         "use", " ", "ky", " ", "for", " ", "calculating", " ", "the", " ", 
          "number", " ", "on", " ", "x", " ", "and", " ", "y"}]}]}]}], ",", 
      " ", 
      RowBox[{
      "as", " ", "the", " ", "kx", " ", "function", " ", "gives", " ", "the", 
       " ", "row", " ", "of", " ", "a", " ", "matrix"}], ",", " ", "but", ",",
       " ", 
      RowBox[{"for", " ", "the", " ", "eigenvector"}], ",", " ", 
      RowBox[{"it", " ", "is", " ", "just", " ", 
       RowBox[{"a", " ", "'"}], 
       RowBox[{"column", "'"}], " ", "vector"}], ",", " ", 
      RowBox[{"so", " ", "just", " ", "use", " ", "ky"}]}], "*)"}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normalize", "[", "EM", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "Size"}], "+", "j"}], "]"}], 
        "]"}], "*", 
       RowBox[{"N", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "2.", "*", 
            FractionBox["\[Pi]", "L"], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "Size"}], "]"}], "*", "x"}], "+", 
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "Size"}], "]"}], "*", "y"}]}], ")"}]}], 
           "]"}], "L"], ",", "8"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "Size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "Size"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.572128189351035*^9, 3.572128241737421*^9}, {
  3.5721323143106318`*^9, 3.572132352087255*^9}, {3.572132390263721*^9, 
  3.5721324988055277`*^9}, {3.572132711589464*^9, 3.572132747301024*^9}, {
  3.5721327948084507`*^9, 3.572132818413868*^9}, {3.5721338657642384`*^9, 
  3.572133926723633*^9}, {3.5721879922029543`*^9, 3.572188001611438*^9}, {
  3.5723693482479753`*^9, 3.572369349644309*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", "HMatrix", "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"HMatrix", "//", "N"}], "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Harmonic Oscillator Functions:
HMV1[1,2,.1,0,.5]\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.572128489356292*^9, 3.572128494635808*^9}, {
  3.573407653101918*^9, 3.573407667661433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "1", ",", ".1", ",", "0", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.573407672423072*^9, 3.573407727825686*^9}}],

Cell[BoxData["0.01039132810647584`"], "Output",
 CellChangeTimes->{{3.573407696376131*^9, 3.5734077282896643`*^9}, 
   3.573570694402162*^9, 3.5752242210311537`*^9, 3.575737648780871*^9, 
   3.575817377749691*^9, 3.575817706253395*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Input",
 CellChangeTimes->{3.573407691626629*^9}],

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Output",
 CellChangeTimes->{3.573407691906547*^9, 3.573570694439014*^9, 
  3.575224221064781*^9, 3.5757376488542347`*^9, 3.575817377862462*^9, 
  3.575817706329053*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMV1", "[", 
   RowBox[{"l_", ",", "m_", ",", "\[Omega]_", ",", "b_", ",", "c_"}], "]"}], ":=",
   " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Sqrt", "[", "\[Omega]", "]"}], 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"l", "+", "m"}]], 
        RowBox[{"Factorial", "[", "l", "]"}], "*", 
        RowBox[{"Factorial", "[", "m", "]"}]}], "]"}]], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["2", "k"], 
         RowBox[{"Factorial", "[", "k", "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"l", ",", "k"}], "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"m", ",", "k"}], "]"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"\[Omega]", "*", 
               SuperscriptBox["c", "2"]}], 
              RowBox[{"1", "+", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"], "\[Omega]"}]}]]}]}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"m", "+", "l"}], ")"}], "2"], "-", "k"}]], "*", 
         RowBox[{"HermiteH", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "l", "-", 
             RowBox[{"2", "*", "k"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             FractionBox["\[Omega]", 
              RowBox[{"1", "+", 
               RowBox[{"2", "*", 
                SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "*", 
            "b"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"m", ",", "l"}], "]"}]}], "}"}]}], "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["b", "2"], 
        RowBox[{"2", 
         SuperscriptBox["c", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "-", "1"}], 
        ")"}]}], "]"}], "*", 
     RowBox[{"Sqrt", "[", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        RowBox[{"2", 
         SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "c"}], ")"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.573407687335093*^9, 3.573407718292557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hx2Anal2", "[", 
   RowBox[{"l_", ",", "m_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "*", "l"}], "+", "1"}], ")"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"l", ",", "m"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"l", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "+", "1"}], ",", 
      RowBox[{"m", "-", "1"}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"m", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "-", "1"}], ",", 
      RowBox[{"m", "+", "1"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       FractionBox[
        RowBox[{"2", "V"}], 
        SuperscriptBox["c", "2"]], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570885920269978*^9, 3.5708859340123653`*^9}, {
   3.570885984099249*^9, 3.570886075990157*^9}, {3.570886223990593*^9, 
   3.5708862621362886`*^9}, {3.570895371759161*^9, 3.570895424848665*^9}, {
   3.57089810518782*^9, 3.570898171012825*^9}, {3.5709835339686947`*^9, 
   3.5709835367828827`*^9}, 3.5709835802714243`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis1Well", "[", 
   RowBox[{"V_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         SuperscriptBox["c", "2"]]}], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "n"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "0", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570898267668626*^9, 3.5708982805480013`*^9}, {
  3.570898960568728*^9, 3.570898981594881*^9}, {3.5708990116585703`*^9, 
  3.570899011963595*^9}, {3.5708990660276012`*^9, 3.570899066203285*^9}, {
  3.570983297935081*^9, 3.5709833033580017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "H_", ",", "V_", ",", "c_", ",", "b_", ",", "size_",
     ","}], "]"}], ":=", " ", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "k", ",", "Em", ",", "M", ",", "HOBasis"}], "}"}], ",",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{"k", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{"n", ",", "x", ",", "V", ",", "c"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"-", "V"}], 
           RowBox[{"c", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]], 
          RowBox[{"Exp", "[", 
           FractionBox[
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], 
            RowBox[{"4.", "*", "V", "*", 
             SuperscriptBox["c", "2"]}]], "]"}]}], "//", "N"}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.57089525831597*^9, 3.570895279711782*^9}, {
  3.570897367385829*^9, 3.570897529953704*^9}, {3.572367062116728*^9, 
  3.572367076496973*^9}, {3.572367132873954*^9, 3.572367134357418*^9}}],

Cell[CellGroupData[{

Cell[BoxData["plotGround"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.570895283855715*^9, 3.57089528638737*^9}}],

Cell[BoxData["plotGround"], "Output",
 CellChangeTimes->{
  3.572131566533577*^9, {3.57219536311866*^9, 3.572195382524304*^9}, {
   3.573570693286043*^9, 3.573570694562139*^9}, 3.573579524206863*^9, {
   3.5752242204868183`*^9, 3.575224221166127*^9}, 3.575737648954505*^9, 
   3.575816603692075*^9, {3.575817376189972*^9, 3.575817378113659*^9}, {
   3.575817704970214*^9, 3.5758177064428263`*^9}, 3.575818790559903*^9, 
   3.575833241092887*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2d", "[", 
   RowBox[{"\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          RowBox[{
           RowBox[{"6", "b", "*", "c"}], "+", 
           RowBox[{"9", 
            SuperscriptBox["c", "2"]}]}]]}], "]"}]}], ",", "HOBasis", ",", 
      "Em"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HOBasis", "[", 
       RowBox[{"V", ",", "b", ",", "c", ",", "size", ",", "\[Omega]"}], "]"}],
       ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"n", ",", "m"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"l", ",", "q"}], "]"}]}], "-", 
           RowBox[{"V", "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
              RowBox[{"-", "b"}], ",", "c"}], "]"}], "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "b", ",", "c"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "size"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Em", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigensystem", "[", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{
          RowBox[{"HOBasis", "[", 
           RowBox[{
            SuperscriptBox["1.5", "2"], ",", "1", ",", ".5", ",", "7", ",", 
            "\[Omega]"}], "]"}], "-", 
          RowBox[{"1000", "*", 
           RowBox[{"IdentityMatrix", "[", "42", "]"}]}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"j", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "*", 
                   RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "17"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "17"}], "}"}]}], "]"}], "]"}], 
           "2"], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.57089533059254*^9, 3.570895347632304*^9}, {
   3.570895446145853*^9, 3.570895467825232*^9}, {3.570895522605443*^9, 
   3.570895560099419*^9}, {3.57089559772987*^9, 3.570895653763194*^9}, 
   3.570895741827547*^9, {3.570895806483992*^9, 3.570895821797204*^9}, {
   3.570895897602663*^9, 3.570895939687346*^9}, {3.5708960985682507`*^9, 
   3.570896117688366*^9}, {3.570896269414405*^9, 3.570896280191505*^9}, {
   3.570896341423107*^9, 3.5708964735857277`*^9}, {3.570896543131679*^9, 
   3.5708965723200207`*^9}, {3.570896614956777*^9, 3.570896645902726*^9}, {
   3.5708967228948307`*^9, 3.570896745810275*^9}, {3.570896796370328*^9, 
   3.570896798411419*^9}, {3.5708968441754827`*^9, 3.57089694268522*^9}, {
   3.57089699795343*^9, 3.5708970388476458`*^9}, 3.570897361581813*^9, {
   3.570897531315144*^9, 3.570897552919519*^9}, {3.570897584404173*^9, 
   3.570897648554591*^9}, {3.5734064731875877`*^9, 3.5734064779188223`*^9}, {
   3.573406542217595*^9, 3.573406566120376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2dT", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_", ",", 
    "Em_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          SuperscriptBox["c", "2"]]}], "]"}]}], ",", "x", ",", "y"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"Em", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", 
            RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Em", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", 
                 RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], "]"}], 
         "2"], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5708977492067337`*^9, 3.570897780689465*^9}, {
  3.5708978643700943`*^9, 3.570897879854721*^9}, {3.5708979105684958`*^9, 
  3.570897916455763*^9}, {3.570898041434421*^9, 3.570898046376409*^9}, {
  3.570988847464078*^9, 3.5709888590488987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HM2Well", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         RowBox[{
          RowBox[{"6", "*", "b", "*", "c"}], "+", 
          RowBox[{"9", 
           SuperscriptBox["c", "2"]}]}]]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], 
         "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
          RowBox[{"-", "b"}], ",", "c"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnGround2wellHO", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"EnGround2wellHO", "[", 
    RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Em", ",", "M"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "=", 
        RowBox[{
         RowBox[{"HM2Well", "[", 
          RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "-", 
         RowBox[{"1000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"size", "+", "1"}], "]"}]}]}]}], ")"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"Em", "=", 
        RowBox[{"Eigenvalues", "[", "M", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.573406922906785*^9, 3.573406929084024*^9}, {
  3.573406970688098*^9, 3.5734070010456753`*^9}, {3.573407201441255*^9, 
  3.573407202800108*^9}, {3.5734080558973*^9, 3.5734080794661493`*^9}}],

Cell[CellGroupData[{

Cell["Sparse Matrices Stuff:", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.5721285859014063`*^9, 3.572128594332904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"deltaK_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R", "[", "deltaK", "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", "deltaK", ")"}], "2"]}], "8."], "]"}], "//", 
    "N"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571000978783464*^9, 3.571000995356388*^9}, {
   3.57100108162978*^9, 3.571001117827796*^9}, {3.571001225972803*^9, 
   3.571001269343255*^9}, {3.571001381201169*^9, 3.571001395328429*^9}, 
   3.571004628985114*^9, {3.571007252187564*^9, 3.5710072677402973`*^9}}],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571004666397975*^9, 3.571004700102571*^9}, {
  3.57100473234347*^9, 3.571004781941791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], " ", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571004907370202*^9, 3.571004924473065*^9}, {
  3.5710054483336563`*^9, 3.5710054492613583`*^9}, {3.571005547198454*^9, 
  3.571005548798235*^9}, {3.571005578974455*^9, 3.571005581518189*^9}, {
  3.571005916080695*^9, 3.571005917216366*^9}, {3.571006207794964*^9, 
  3.571006207937745*^9}, {3.571006840166703*^9, 3.57100684024616*^9}, {
  3.571076210663637*^9, 3.571076210823251*^9}}],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"i", ",", "size", ",", "1"}], "]"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.5710762115073767`*^9, 3.5721253050147667`*^9, 3.57213035834122*^9, 
   3.5721315666206703`*^9, {3.5721953632791653`*^9, 3.57219538266177*^9}, {
   3.573570693423429*^9, 3.5735706947368727`*^9}, 3.573579524299315*^9, {
   3.575224220553619*^9, 3.575224221276437*^9}, 3.5757376492299633`*^9, 
   3.5758166038261967`*^9, {3.575817376324524*^9, 3.5758173786914053`*^9}, {
   3.575817705450605*^9, 3.575817706569316*^9}, 3.575818790637588*^9, 
   3.575833241198072*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571076026372032*^9, 3.57107602933237*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "y", " ", "index", " ", "will", " ", "take", " ", "a", " ", "number", " ",
      "from", " ", "1"}], "-", "n"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "and", " ", "convert", " ", "it", " ", "into", " ", "a", " ", "quantum",
        " ", "number", " ", "for", " ", 
       RowBox[{"ky", ".", " ", "This"}], " ", "will", " ", "be", " ", "an", 
       " ", "integer", " ", "starting", " ", "from"}], " ", "-", "p"}], 
     ".."}], 
    RowBox[{"p", "."}]}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.57107603194378*^9, 3.571076091161105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yIndex", "[", 
  RowBox[{"2", ",", "4"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571005038934815*^9, 3.5710050672733603`*^9}, {
  3.571005382620392*^9, 3.571005387291419*^9}, {3.5710054932604113`*^9, 
  3.571005504204275*^9}, {3.571005555084961*^9, 3.571005607580825*^9}, {
  3.57100564708575*^9, 3.571005649037367*^9}, {3.571005791198532*^9, 
  3.571005816590447*^9}, {3.5710060719045067`*^9, 3.571006073328672*^9}, {
  3.571006203681294*^9, 3.5710062607534933`*^9}, {3.571076215942932*^9, 
  3.5710762331426697`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.5721315666774054`*^9, {3.5721953633743763`*^9, 3.5721953827609253`*^9}, {
   3.573570693466408*^9, 3.573570694803196*^9}, 3.573579524375761*^9, {
   3.575224220603209*^9, 3.57522422135889*^9}, 3.575737649303508*^9, 
   3.575816603921591*^9, {3.575817376560095*^9, 3.575817378810993*^9}, {
   3.575817705567575*^9, 3.575817706656191*^9}, 3.575818790850029*^9, 
   3.575833241277789*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ky", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"yIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5710763687580748`*^9, 3.5710763940246277`*^9}, {
  3.5710765462181892`*^9, 3.571076615531767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.572130355085424*^9, 3.57213156672609*^9, {3.572195363481542*^9, 
   3.572195382827812*^9}, {3.573570693475769*^9, 3.573570694853084*^9}, {
   3.575224220639934*^9, 3.575224221397727*^9}, 3.575737649368555*^9, 
   3.575816603993815*^9, {3.575817376637787*^9, 3.575817378817274*^9}, {
   3.575817705575276*^9, 3.575817706727754*^9}, 3.57581879089436*^9, 
   3.575833241337905*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "this", " ", "will", " ", "convert", " ", "our", " ", "index", " ", 
   "number", " ", "to", " ", "a", " ", "range", " ", "that", " ", "runs", " ",
    "over", " ", "negative", " ", "numbers", " ", "so", " ", "we", " ", "can",
    " ", "get", " ", "backwards", " ", "waves"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5721268972365522`*^9, 3.572126923589943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kx", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"xIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571076590427719*^9, 3.571076619339654*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  FractionBox[
   RowBox[{"i", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], "size"]}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.5710765950937767`*^9, 3.5710766201886*^9}, 
   3.5721252970286217`*^9, 3.572130353784877*^9, 3.5721315667749777`*^9, {
   3.57219536382935*^9, 3.572195382936722*^9}, {3.5735706935200367`*^9, 
   3.573570694900206*^9}, 3.573579524437887*^9, {3.57522422068004*^9, 
   3.575224221439724*^9}, 3.575737649437277*^9, 3.575816604078075*^9, {
   3.575817376797573*^9, 3.575817378954172*^9}, {3.575817705657205*^9, 
   3.575817706793379*^9}, 3.575818790942137*^9, 3.575833241395426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kx", "[", 
  RowBox[{"6", ",", "5"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571076600371318*^9, 3.571076677513527*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.5710766086620207`*^9, 3.5710766778473263`*^9}, 
   3.572130351320689*^9, 3.572131566815014*^9, {3.5721953638982*^9, 
   3.572195383002089*^9}, {3.573570693567792*^9, 3.5735706949483356`*^9}, 
   3.573579524501046*^9, {3.575224220712759*^9, 3.575224221480337*^9}, 
   3.5757376495003443`*^9, 3.575816604148945*^9, {3.5758173768720417`*^9, 
   3.575817379025963*^9}, {3.575817705723372*^9, 3.57581770684501*^9}, 
   3.57581879099172*^9, 3.575833241455241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"i", "-", 
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], ")"}], "size"], "+", 
   "1"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.571004930287951*^9, 3.5710049523452063`*^9}, {
  3.571005317372704*^9, 3.571005318764783*^9}, {3.5710057394878883`*^9, 
  3.571005751535363*^9}, {3.571005930832862*^9, 3.571005931200572*^9}, {
  3.5710060235052032`*^9, 3.5710060497785254`*^9}, {3.571006165012313*^9, 
  3.5710061653792467`*^9}, {3.571006835208407*^9, 3.571006835303487*^9}, {
  3.571076261305995*^9, 3.571076261433284*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"i", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], "size"]}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{
  3.571004952693384*^9, 3.5710053193684464`*^9, 3.571005466457485*^9, 
   3.5710057520114*^9, 3.571006050237624*^9, 3.5710061663504143`*^9, 
   3.571006836195053*^9, 3.571073692860424*^9, 3.571076262340887*^9, 
   3.57212529925669*^9, 3.572130349645472*^9, 3.57213156685341*^9, {
   3.5721953639946547`*^9, 3.5721953830777283`*^9}, {3.573570693897833*^9, 
   3.573570694994968*^9}, 3.573579524566012*^9, {3.5752242207454*^9, 
   3.5752242214850693`*^9}, 3.575737649504718*^9, 3.575816604220639*^9, {
   3.575817376965431*^9, 3.575817379098336*^9}, {3.575817705791737*^9, 
   3.5758177069149323`*^9}, 3.575818791032305*^9, 3.57583324151337*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BuildPlaneMatrix", "[", 
    RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MDense", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
        FractionBox["1", 
         RowBox[{"2", "*", 
          SuperscriptBox["L", "2"]}]], "*", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
           RowBox[{
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"kx", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["p", "2"], ",", 
            SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MDiag", " ", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ky", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
            "2"]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eTcycPqs185KhzsPg2i133KuAqiw7hF74Poy1nn
v4Fol4UHf4Hok/OmGmkA6SKNFWC6ZIrsbRD96fD1xyCaz/L5SxDNYdn+BkSv
qF39EURv0tj3E0R3bU8X0ATSfa+mgWnRuU/kQfQbIUUNEJ0/X1kfRH8xswHT
bF/djEF0Q2eRGYi2OPE4FkR7lrwF03wnTnp4Aukfl+M9QfQiq12nQTST5dQr
IHqOy40FnnNfOZ5yYV4EolW0drwA0deOy78E0aLa5Z9BdNW0LWDa4MsZGx8g
7a14DUwvXrTvKYi+5lrwDEQDAJ4CnhI=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuildPlaneMatrix2D2Well", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "I", " ", "am", " ", "choosing", " ", "the", " ", "wells", " ", "to", 
        " ", "be", " ", "on", " ", "the", " ", "x"}], "-", "axis"}], ",", " ", 
      RowBox[{
       RowBox[{"so", " ", "the", " ", "y"}], "-", 
       RowBox[{"axis", " ", "dynamics", " ", 
        RowBox[{"shouldn", "'"}], "t", "\[IndentingNewLine]", 
        RowBox[{"change", ".", " ", "Notice"}]}]}], ",", " ", 
      RowBox[{
      "the", " ", "R2W", " ", "contains", " ", "b", " ", "information"}], ",",
       " ", 
      RowBox[{
      "and", " ", "will", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       RowBox[{"kx", "'"}], "s"}], ",", " ", 
      RowBox[{"while", " ", "the", " ", "R", " ", 
       RowBox[{"doesn", "'"}], "t"}], ",", " ", 
      RowBox[{
      "and", " ", "can", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       
       RowBox[{"ky", "'"}], "s", " ", "without", " ", "loss", " ", "of", " ", 
       "generality"}], ",", " ", 
      RowBox[{"because", " ", "there", " ", "are", " ", "two", " ", "wells"}],
       ",", " ", 
      RowBox[{
      "there", " ", "is", " ", "another", " ", "term", " ", "in", " ", "our", 
       " ", "MDense"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", "b"}], 
              "]"}], "+", 
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", 
               RowBox[{"-", "b"}]}], "]"}]}], ")"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5721267052277822`*^9, 3.572126705773741*^9}, {
  3.572127033781926*^9, 3.5721272320948067`*^9}, {3.572129464968992*^9, 
  3.5721294673137836`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R2W", "[", 
   RowBox[{"deltaK_", ",", "L_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R2W", "[", 
    RowBox[{"deltaK", ",", "L", ",", "b"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2.", "*", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2.", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", "deltaK", ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4.", "*", 
        SuperscriptBox["b", "2"]}]}], "2."], "]"}], "//", "N"}]}]}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.5721268078315277`*^9, 3.5721268599771137`*^9}, {
  3.5721269456740294`*^9, 3.572126964026145*^9}, {3.5721296396950617`*^9, 
  3.572129651772911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Tunneling", " ", "for", " ", "a", " ", "2", "D", " ", "2", "Well", " ", 
    "case"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Tunneling2DWellListGen", "[", "basisnum_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Need", " ", "to", " ", "double", " ", "check", " ", "that", " ", "L"}], 
     "=", 
     RowBox[{
     "1", " ", "is", " ", "okay", " ", "for", " ", "small", " ", "b"}]}], 
    "*)"}], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EnergyList", ",", "TunnelingList"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EnergyList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BuildPlaneMatrix2D2Well", "[", 
                RowBox[{"10", ",", "8", ",", "basisnum", ",", 
                 RowBox[{"b", "/", "2."}]}], "]"}], "-", 
               RowBox[{"1000.", "*", 
                RowBox[{"IdentityMatrix", "[", 
                 SuperscriptBox["basisnum", "2"], "]"}]}]}], ",", "2"}], 
             "]"}], "+", "1000"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", ".1", ",", "4", ",", ".2"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TunnelingList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"EnergyList", "[", 
             RowBox[{"[", "p", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", 
           RowBox[{"Length", "[", "EnergyList", "]"}]}], "}"}]}], "]"}]}]}]}],
     "\n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.572898683635507*^9, 3.5728988670804653`*^9}, {
   3.572898901199182*^9, 3.572898908059278*^9}, {3.572898958257339*^9, 
   3.572899076096239*^9}, {3.572899111755712*^9, 3.572899116962686*^9}, {
   3.5728991821113167`*^9, 3.5728991835178823`*^9}, {3.572899285183936*^9, 
   3.5728992989466867`*^9}, {3.572899424272739*^9, 3.5728994247352858`*^9}, {
   3.572899523970052*^9, 3.57289954929869*^9}, {3.572899660527895*^9, 
   3.5728996867980127`*^9}, {3.57289972612869*^9, 3.572899729216799*^9}, {
   3.5728997782653093`*^9, 3.572899778496242*^9}, {3.572899830738913*^9, 
   3.572899830980447*^9}, {3.572899887016218*^9, 3.572899911705093*^9}, {
   3.572899942805539*^9, 3.572899943366991*^9}, {3.572899987685001*^9, 
   3.57290000312385*^9}, {3.572900132235516*^9, 3.572900139162187*^9}, {
   3.572901797175879*^9, 3.5729017980865717`*^9}, 3.572902212202299*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "/", "25."}]], "Input",
 CellChangeTimes->{{3.5729021970625763`*^9, 3.572902198714232*^9}}],

Cell[BoxData["0.4`"], "Output",
 CellChangeTimes->{3.572902199044324*^9, 3.573570695535983*^9, 
  3.575224221549406*^9, 3.575737649586453*^9, 3.5758173792079268`*^9, 
  3.575817707366509*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "1", "D", " ", "Functions", " ", "for", " ", "plane", " ", "waves"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5723789053583527`*^9, 3.572378913475903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellH", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["l", "length"]}], ",", 
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["m", "length"]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5747071527500343`*^9, 3.574707154566564*^9}, {
  3.5747137432894573`*^9, 3.5747137631212177`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellBox", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], ")"}]}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], 
         ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "p"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "p"}], "}"}]}], "]"}], "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", "p", "]"}]}]}], ",", "3"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.574707165480566*^9, 3.5747072595388327`*^9}, {
  3.574707552637498*^9, 3.574707559551119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputePlaneWaveEN", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M", ",", "EM"}], "}"}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"kx", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"kx", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"EM", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{"M", "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["p", "2"], "]"}]}]}], ",", "3"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.573404541555847*^9, 3.5734045459797707`*^9}, {
  3.573404580765032*^9, 3.5734046331788597`*^9}, {3.573404814204865*^9, 
  3.573404814542769*^9}, {3.573404896059642*^9, 3.573404922409494*^9}, {
  3.573571238341179*^9, 3.5735712400845823`*^9}, {3.573571293679434*^9, 
  3.573571296611291*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.573404617802964*^9, 3.5734046283493023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "bsep"}], "+", 
     RowBox[{"\[ImaginaryI]", "*", 
      SuperscriptBox["c", "2"], 
      RowBox[{"(", 
       RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.574706402122661*^9, 3.574706409689583*^9}, {
  3.574706447660687*^9, 3.574706449022266*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["bsep", "2"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "l"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["l", "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "m"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["c", "4"], " ", "l", " ", "m"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["m", "2"]}]}]], "Output",
 CellChangeTimes->{{3.574706406720368*^9, 3.574706411096586*^9}, 
   3.574706449668106*^9, 3.575224221623282*^9, 3.575737649698388*^9, 
   3.5758173793308277`*^9, 3.5758177075147467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"k", "-", "l"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "l"}], ")"}], " ", 
      SuperscriptBox["w", "2"]}]}], ")"}]}], "//", "Expand"}]], "Input",
 CellChangeTimes->{{3.574706477055162*^9, 3.574706478734951*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "k"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "l"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"], "+", 
  RowBox[{"k", " ", "l", " ", 
   SuperscriptBox["w", "2"]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["l", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"]}]], "Output",
 CellChangeTimes->{3.57470647932559*^9, 3.57522422165774*^9, 
  3.575737649862588*^9, 3.575817379435689*^9, 3.575817707733026*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tunneling2D", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"En0", ",", "En1", ",", " ", "EnList", ",", "T"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EnList", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BuildPlaneMatrix2D2Well", "[", 
           RowBox[{"V", ",", "L", ",", "p", ",", 
            RowBox[{"b", "/", "2."}]}], "]"}], "-", 
          RowBox[{"1000.", "*", 
           RowBox[{"IdentityMatrix", "[", 
            SuperscriptBox["p", "2"], "]"}]}]}], ",", "2"}], "]"}], "+", 
       "1000"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En1", " ", "=", " ", 
      RowBox[{"EnList", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En0", "  ", "=", 
      RowBox[{"EnList", " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"T", " ", "=", " ", 
      RowBox[{"En1", "-", "En0"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.573571325737472*^9, 3.573571459262435*^9}, {
  3.5735714965490923`*^9, 3.5735715264031076`*^9}, {3.573571872298934*^9, 
  3.573571889803364*^9}, {3.573573308234858*^9, 3.573573316009892*^9}, {
  3.5735735718194237`*^9, 3.573573572316063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2Well", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Compute", " ", "eigenvalues", " ", "for", " ", "the", " ", "gaussian", 
       " ", 
       RowBox[{"well", ".", " ", "Note"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "all", " ", "the", " ", "work", " ", "I", " ", "am", " ", 
        "doing", " ", "c"}], "=", ".5"}], ",", " ", 
      RowBox[{
      "this", " ", "is", " ", "because", " ", "the", " ", 
       "experimentalists"}], ",", " ", 
      RowBox[{"work", " ", "with", " ", "a", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], "]"}]}], ",", " ", 
      RowBox[{"where", " ", "I", " ", "defined", " ", "my", " ", "c", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", ")"}], "2"]}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            SuperscriptBox["c", "2"]}], ")"}]}], "]"}], ".", " ", "Since"}], 
       " ", "I", " ", "work", " ", "in", " ", "units", " ", "of", " ", "the", 
       " ", "waist"}], ",", " ", 
      RowBox[{"c", "=", "1"}], ",", " ", "but", ",", " ", 
      RowBox[{
       RowBox[{"by", " ", "putting", " ", "it", " ", "c"}], "=", ".5"}], ",", 
      " ", 
      RowBox[{
      "I", " ", "get", " ", "to", " ", "pop", " ", "out", " ", "the", " ", 
       "2", " ", "on", " ", "the", " ", 
       RowBox[{"top", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}], "-", 
         RowBox[{"1000000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"p", "+", "1"}], "]"}]}]}], ",", "3"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.575225448791072*^9, 3.575225449138295*^9}, {
  3.575843959070161*^9, 3.575844049089106*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.574614917735589*^9, 3.5746149215112333`*^9}, {
   3.575225666969421*^9, 3.575225667267716*^9}, {3.575392421034246*^9, 
   3.575392424448786*^9}, 3.575843949513698*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "1", "]"}], "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"N", "@", 
       RowBox[{"FindDivisions", "[", 
        RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "1", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.575820525230095*^9, 3.575820525230957*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SinTunnel", "[", 
   RowBox[{"VEr_", ",", "\[Lambda]si_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Et", ",", "Er"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "The", " ", "mathieucharateristic", " ", "function", " ", "will", " ", 
       "give", " ", "the", " ", 
       RowBox[{"value", " ", "'"}], 
       RowBox[{"a", "'"}]}], ",", " ", 
      RowBox[{
       RowBox[{"corresponding", " ", "to", " ", "the", " ", 
        RowBox[{"equation", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "''"}], " ", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", 
             RowBox[{"2", "*", "q", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "*", "z"}], "]"}]}]}], ")"}], "y"}]}]}]}], " ", 
       "=", " ", 
       RowBox[{"0.", " ", "So"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "one", " ", "has", " ", "to", " ", "get", " ", "the", " ", "SWE", " ", 
        "into", " ", "a", " ", "form", " ", "like", " ", 
        RowBox[{"this", ".", " ", "This"}], " ", "is", " ", "why", " ", "the",
         " ", "Et", " ", "factor", " ", "comes", " ", 
        RowBox[{"in", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox["h", "2"], 
            RowBox[{"2", "*", "m"}]], 
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["dx", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "x"}], "]"}]}], "-", 
          "E"}]}]}], "=", 
       RowBox[{
        RowBox[{"0", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["m", 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], 
               SuperscriptBox["\[Chi]", "2"]}]]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "\[Chi]", "*", 
             "\[Theta]"}], "]"}]}], "-", "E"}]}], "=", 
        RowBox[{
        "0", "\[IndentingNewLine]", "where", " ", "\[Chi]", " ", "contains", 
         " ", "the", " ", "units", " ", "and", " ", "scaling", " ", "of", " ", 
         RowBox[{"x", ".", " ", "To"}], " ", "get", " ", "the", " ", "Cos", 
         " ", "term", " ", "to", " ", "look", " ", "right"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"this", " ", 
        RowBox[{"becomes", ":", " ", "\[Chi]"}]}], "=", 
       FractionBox["\[Lambda]", "\[Pi]"]}], ",", " ", 
      RowBox[{
       RowBox[{"and", " ", "the", " ", "equation", " ", 
        RowBox[{"becomes", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["V", "4"], 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               FractionBox[
                RowBox[{"m", "*", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "*", 
                 SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"E", "*", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"m", "*", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], "*", 
               SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}]}]}]}], "=", "0"}], 
      ",", " ", 
      RowBox[{
      "so", " ", "the", " ", "term", " ", "in", " ", "brackets", " ", "is", 
       " ", "the", " ", "scaling", " ", "factor", " ", "Et"}]}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Er", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        SuperscriptBox["ks", "2"]}], 
       RowBox[{"2", "mRb"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Et", " ", "=", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "*", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "*", "mRb", "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Lambda]si", ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{".999", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}], "-", 
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{"0", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}]}], ")"}], "*", 
      RowBox[{"Et", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.57582988377533*^9, 3.575830111603978*^9}, {
  3.575830396726634*^9, 3.575830398582494*^9}, {3.5758304830478477`*^9, 
  3.575830487208008*^9}, {3.575835287322336*^9, 3.5758352903300734`*^9}, {
  3.5758440598942003`*^9, 3.575844465843758*^9}, {3.5758445189049053`*^9, 
  3.575844521607729*^9}, {3.575844649878894*^9, 3.5758446802809763`*^9}, {
  3.575844804666147*^9, 3.575844808136818*^9}, {3.5758450953406763`*^9, 
  3.575845131291162*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.575845163398172*^9, 3.575845164496395*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.57584452966441*^9, 3.57584461152061*^9}, {
  3.575845160977784*^9, 3.575845162368773*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5758445424363422`*^9, 3.575844543548328*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{739, 867},
WindowMargins->{{Automatic, 413}, {Automatic, 42}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 109, 1, 93, "Title"],
Cell[CellGroupData[{
Cell[713, 27, 96, 1, 45, "Subsection"],
Cell[812, 30, 67, 1, 32, "Input"],
Cell[882, 33, 2407, 76, 337, "Input"],
Cell[3292, 111, 987, 31, 221, "Input"],
Cell[CellGroupData[{
Cell[4304, 146, 277, 10, 65, "Input"],
Cell[4584, 158, 90, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4723, 165, 99, 1, 45, "Subsection"],
Cell[4825, 168, 90, 1, 32, "Output"],
Cell[4918, 171, 315, 7, 55, "Input"],
Cell[CellGroupData[{
Cell[5258, 182, 595, 17, 59, "Input"],
Cell[5856, 201, 218583, 3699, 349, "Output"]
}, Open  ]],
Cell[224454, 3903, 92, 1, 32, "Input"],
Cell[224549, 3906, 184, 4, 32, "Text"],
Cell[224736, 3912, 437, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[225198, 3929, 522, 15, 35, "Input"],
Cell[225723, 3946, 9414, 163, 246, "Output"]
}, Open  ]],
Cell[235152, 4112, 2515, 79, 179, "Input"],
Cell[237670, 4193, 577, 13, 77, "Input"],
Cell[238250, 4208, 380, 8, 32, "Input"],
Cell[238633, 4218, 277, 5, 53, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238947, 4228, 112, 1, 82, "Section"],
Cell[239062, 4231, 558, 19, 35, "Input"],
Cell[239623, 4252, 1080, 34, 105, "Input"],
Cell[240706, 4288, 106, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[240837, 4293, 127, 2, 32, "Input"],
Cell[240967, 4297, 88, 1, 32, "Output"]
}, Open  ]],
Cell[241070, 4301, 91, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[241186, 4306, 1075, 29, 169, "Input"],
Cell[242264, 4337, 61423, 1015, 240, "Output"]
}, Open  ]],
Cell[303702, 5355, 559, 12, 77, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304298, 5372, 101, 1, 82, "Section"],
Cell[304402, 5375, 330, 9, 59, "Input"],
Cell[CellGroupData[{
Cell[304757, 5388, 185, 5, 32, "Input"],
Cell[304945, 5395, 78, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305060, 5401, 147, 3, 32, "Input"],
Cell[305210, 5406, 95, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305342, 5412, 951, 27, 126, "Input"],
Cell[306296, 5441, 60197, 995, 240, "Output"]
}, Open  ]],
Cell[366508, 6439, 147, 3, 32, "Text"],
Cell[366658, 6444, 205, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[366888, 6452, 645, 15, 32, "Input"],
Cell[367536, 6469, 16793, 317, 234, "Output"]
}, Open  ]],
Cell[384344, 6789, 170, 3, 32, "Text"],
Cell[384517, 6794, 1601, 43, 165, "Input"],
Cell[CellGroupData[{
Cell[386143, 6841, 196, 4, 32, "Input"],
Cell[386342, 6847, 17260, 325, 234, "Output"]
}, Open  ]],
Cell[403617, 7175, 172, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[403814, 7182, 412, 12, 32, "Input"],
Cell[404229, 7196, 1824, 46, 177, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406090, 7247, 459, 12, 55, "Input"],
Cell[406552, 7261, 18547, 363, 238, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425148, 7630, 335, 11, 83, "Section"],
Cell[425486, 7643, 87, 1, 55, "Input"],
Cell[CellGroupData[{
Cell[425598, 7648, 4003, 114, 501, "Input"],
Cell[429604, 7764, 61244, 1012, 240, "Output"],
Cell[490851, 8778, 18060, 351, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508948, 9134, 454, 12, 55, "Input"],
Cell[509405, 9148, 5758, 128, 248, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[515212, 9282, 144, 2, 81, "Section"],
Cell[515359, 9286, 1815, 41, 272, "Input"],
Cell[517177, 9329, 4781, 126, 545, "Input"],
Cell[521961, 9457, 142, 2, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522140, 9464, 164, 3, 117, "Section",
 InitializationCell->True],
Cell[522307, 9469, 503, 13, 99, "Input"],
Cell[522813, 9484, 588, 17, 55, "Input",
 InitializationCell->True],
Cell[523404, 9503, 1907, 52, 147, "Input",
 InitializationCell->True],
Cell[525314, 9557, 2264, 65, 203, "Input",
 InitializationCell->True],
Cell[527581, 9624, 2018, 56, 149, "Input",
 InitializationCell->True],
Cell[529602, 9682, 2955, 75, 283, "Input",
 InitializationCell->True],
Cell[532560, 9759, 2970, 90, 349, "Input",
 InitializationCell->True],
Cell[535533, 9851, 920, 26, 99, "Input",
 InitializationCell->True],
Cell[536456, 9879, 3300, 79, 407, "Input",
 InitializationCell->True],
Cell[539759, 9960, 1830, 53, 151, "Input",
 InitializationCell->True],
Cell[541592, 10015, 1861, 54, 151, "Input",
 InitializationCell->True],
Cell[543456, 10071, 214, 6, 51, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[543695, 10081, 179, 3, 32, "Input"],
Cell[543877, 10086, 235, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544149, 10094, 148, 3, 32, "Input"],
Cell[544300, 10099, 267, 5, 32, "Output"]
}, Open  ]],
Cell[544582, 10107, 2606, 77, 338, "Input",
 InitializationCell->True],
Cell[547191, 10186, 1043, 36, 151, "Input",
 InitializationCell->True],
Cell[548237, 10224, 1786, 47, 178, "Input",
 InitializationCell->True],
Cell[550026, 10273, 1884, 50, 222, "Input",
 InitializationCell->True],
Cell[551913, 10325, 2074, 56, 232, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[554012, 10385, 128, 2, 32, "Input",
 InitializationCell->True],
Cell[554143, 10389, 445, 7, 32, "Output"]
}, Open  ]],
Cell[554603, 10399, 4918, 117, 440, "Input",
 InitializationCell->True],
Cell[559524, 10518, 3360, 90, 292, "Input",
 InitializationCell->True],
Cell[562887, 10610, 1206, 35, 163, "Input"],
Cell[564096, 10647, 1119, 28, 143, "Input"],
Cell[CellGroupData[{
Cell[565240, 10679, 139, 2, 45, "Subsection",
 InitializationCell->True],
Cell[565382, 10683, 798, 22, 69, "Input",
 InitializationCell->True],
Cell[566183, 10707, 167, 3, 32, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[566375, 10714, 616, 12, 32, "Input",
 InitializationCell->True],
Cell[566994, 10728, 609, 11, 32, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[567618, 10742, 118, 2, 32, "Input",
 InitializationCell->True],
Cell[567739, 10746, 669, 18, 77, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[568433, 10768, 570, 10, 32, "Input",
 InitializationCell->True],
Cell[569006, 10780, 438, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569481, 10792, 426, 12, 56, "Input",
 InitializationCell->True],
Cell[569910, 10806, 623, 14, 55, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[570548, 10823, 432, 8, 55, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[571005, 10835, 371, 11, 56, "Input",
 InitializationCell->True],
Cell[571379, 10848, 744, 15, 55, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[572160, 10868, 171, 4, 32, "Input",
 InitializationCell->True],
Cell[572334, 10874, 552, 9, 32, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[572923, 10888, 729, 17, 56, "Input",
 InitializationCell->True],
Cell[573655, 10907, 860, 16, 55, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[574530, 10926, 3004, 82, 366, "Input",
 InitializationCell->True],
Cell[577537, 11010, 4371, 115, 519, "Input",
 InitializationCell->True],
Cell[581911, 11127, 918, 27, 95, "Input",
 InitializationCell->True],
Cell[582832, 11156, 3333, 79, 377, "Input"],
Cell[CellGroupData[{
Cell[586190, 11239, 120, 2, 32, "Input"],
Cell[586313, 11243, 191, 3, 32, "Output"]
}, Open  ]],
Cell[586519, 11249, 201, 5, 32, "Input"],
Cell[586723, 11256, 3285, 92, 382, "Input"],
Cell[590011, 11350, 5410, 147, 513, "Input"],
Cell[595424, 11499, 3128, 85, 411, "Input"],
Cell[598555, 11586, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[598674, 11591, 396, 12, 37, "Input"],
Cell[599073, 11605, 705, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599815, 11627, 458, 14, 55, "Input"],
Cell[600276, 11643, 559, 15, 56, "Output"]
}, Open  ]],
Cell[600850, 11661, 1435, 34, 195, "Input"],
Cell[602288, 11697, 4953, 135, 548, "Input"],
Cell[607244, 11834, 216, 3, 32, "Input"],
Cell[607463, 11839, 3854, 105, 473, "Input"],
Cell[611320, 11946, 6177, 158, 603, "Input"],
Cell[617500, 12106, 92, 1, 32, "Input"],
Cell[617595, 12109, 139, 2, 32, "Input"],
Cell[617737, 12113, 94, 1, 32, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
