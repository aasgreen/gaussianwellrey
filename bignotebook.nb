(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    427904,       9733]
NotebookOptionsPosition[    417037,       9382]
NotebookOutlinePosition[    417397,       9398]
CellTagsIndexPosition[    417354,       9395]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Adam\[CloseCurlyQuote]s Big Notebook", "Title",
 CellChangeTimes->{{3.577713803937633*^9, 3.577713808065131*^9}}],

Cell["\<\
This document contains a summary of the code/results that I obtained while \
working with the Rey/Regal group in the year 2013. If there are any \
confusions, or typos, please email me at adam.green@colorado.edu. You can see \
the latest version of this notebook at github: \
https://github.com/ringstadd/gaussianwellrey. 

Thank you for a great year, I learned a lot.\
\>", "Text",
 CellChangeTimes->{{3.577713901265915*^9, 3.577714006850313*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.577714016338784*^9, 3.5777140184824123`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[HBar]", "=", 
   RowBox[{"1.05457", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"852.0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "short", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kl", "=", 
    FractionBox["\[Pi]", "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "long", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    FractionBox["\[Lambda]", "2"]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"short", " ", "lattice", " ", "spacing"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amu", "=", 
   RowBox[{"1.6605", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "27"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mRb", "=", 
    RowBox[{"86.909", "*", "amu"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"mass", " ", "or", " ", "Rb87"}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"Er", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["ks", "2"]}], 
     RowBox[{"2", "mRb"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Recoil", " ", "energy", " ", "of", " ", "the", " ", "short", " ", 
    "lattice"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"as", "=", 
    RowBox[{"5.3", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"approximate", " ", "s"}], "-", 
    RowBox[{
    "wave", " ", "scattering", " ", "length", " ", "for", " ", "Rb87", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "meters"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"852.0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Er", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["ks", "2"]}], 
     RowBox[{"2", "mRb"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btwn", "=", 
   RowBox[{".9", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"waist", "=", 
   RowBox[{".75", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Vt", "=", 
  RowBox[{
   RowBox[{"Er", "/", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"(", 
       RowBox[{"mRb", "*", 
        SuperscriptBox["waist", "2"]}], ")"}]], ")"}]}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.577714041047126*^9, 3.577714076936557*^9}},
 Background->GrayLevel[0.85]],

Cell["", "Subsection"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualizations", "Section",
 CellChangeTimes->{{3.5777142044038973`*^9, 3.577714209331665*^9}}],

Cell[CellGroupData[{

Cell["1D Bound States", "Subsection",
 CellChangeTimes->{{3.5777143457971478`*^9, 3.5777144142129917`*^9}, {
  3.577734829463726*^9, 3.577734830759349*^9}}],

Cell[CellGroupData[{

Cell["\<\
Visualize the bound states of a double well: 1D:
\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.577714416481667*^9, 3.577714443205139*^9}, {
   3.5777145798941603`*^9, 3.577714621446278*^9}, 3.577734480487878*^9},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x_", ",", "V_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "V"}], "*", "Vt", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
    RowBox[{"V", "*", "Vt", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC", "[", 
    RowBox[{"x_", ",", "V_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "V"}], "*", "Er", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"b", "/", 
           RowBox[{"(", "2", ")"}]}]}], ")"}], "2"]}], "]"}]}], "-", 
    RowBox[{"V", "*", "Er", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.57771462668651*^9, 3.5777146569421587`*^9}, {
   3.577714757359579*^9, 3.577715198946903*^9}, 3.577715393106946*^9, {
   3.577715466755227*^9, 3.5777154851102743`*^9}, {3.577729413116014*^9, 
   3.577729419388523*^9}, {3.577729931200844*^9, 3.577729934062963*^9}, 
   3.577734480487968*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Documentation F[]", "Text"]], "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.577715365467692*^9, 3.577715369915208*^9}, 
   3.577734480488082*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]", "Subsubsection"], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Vt", " ", "is", " ", "a", " ", "scaling", " ", 
       RowBox[{"factor", ".", " ", "The"}], " ", "original", " ", "equation", 
       " ", "is", " ", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "*", "m"}]], 
       FractionBox[
        SuperscriptBox["d", "2"], 
        SuperscriptBox["dx", "2"]]}], "+", 
      RowBox[{"V", "*", "Exp", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], ")"}]}]}], " ", "=", " ", 
     RowBox[{"E", ".", " ", "However"}]}], ",", " ", 
    RowBox[{
    "because", " ", "functions", " ", "work", " ", "with", " ", 
     "dimensionaless", " ", "things", " ", 
     RowBox[{"(", 
      RowBox[{"avoid", " ", 
       RowBox[{"overflow", "/", "underflow"}], " ", "errors"}], ")"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "we", " ", "can", " ", "work", " ", "on", " ", "length", " ", "scales", 
      " ", "where", " ", "c"}], " ", "=", " ", 
     RowBox[{"1.", " ", "So"}]}], ",", " ", 
    RowBox[{
    "we", " ", "can", " ", "factor", " ", "out", " ", "a", " ", "length", " ",
      "scale", " ", "from", " ", "x"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", 
      RowBox[{"Arg", "[", "Exp", "]"}], " ", "becomes"}], " ", "-", 
     RowBox[{"2", "*", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Chi]", "*", "r"}], "-", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"], "/", 
       SuperscriptBox["c", "2"]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "set", " ", "\[Chi]"}], "=", "c"}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", 
      RowBox[{"Arg", "[", "Exp", "]"}], " ", "becomes"}], " ", "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", 
         FractionBox["b", 
          RowBox[{"2", "*", "c"}]]}], ")"}], "2"]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "the", " ", "rest", " ", "of", " ", "the", " ", "equation", 
      " ", 
      RowBox[{"becomes", ":", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["d", "2"], 
         RowBox[{"2", 
          SuperscriptBox["dr", "2"]}]], "+", 
        RowBox[{"V", "*", "m", "*", 
         FractionBox[
          SuperscriptBox["c", "2"], 
          SuperscriptBox["\[HBar]", "2"]], "*", 
         RowBox[{"Exp", "[", "]"}]}]}]}]}], " ", "=", " ", 
     RowBox[{"0.", " ", "Since", " ", 
      RowBox[{"Adam", "'"}], "s", " ", "code", " ", "works", " ", "with", " ",
       "potentials", " ", "in", " ", "units", " ", "of", " ", "recoil", " ", 
      "energies", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie", ".", " ", "100"}], " ", "Er"}], ")"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "becomes", " ", "expediant", " ", "just", " ", "to", " ", 
      "calculate", " ", "Vt"}], "=", 
     RowBox[{"Er", "/", 
      RowBox[{"E", "'"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", 
      RowBox[{"E", "'"}]}], " ", "=", " ", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], 
       RowBox[{"m", "*", 
        SuperscriptBox["c", "2"]}]], "."}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "V", " ", "is", " ", "the", " ", "prefactor", "*", "recoil", " ", "units", 
    " ", "that", " ", "will", " ", "give", " ", "you", " ", "the", " ", 
    "depth", " ", "of", " ", "your", " ", 
    RowBox[{"potential", ".", " ", "b"}], " ", "will", " ", "be", " ", "the", 
    " ", "interwell", " ", 
    RowBox[{"seperation", ".", " ", "This"}], " ", "will", " ", "construct", 
    " ", "a", " ", "symmetric", " ", 
    RowBox[{"potential", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.577715218526067*^9, 3.577715222833136*^9}, {
   3.577715283939115*^9, 3.577715344736218*^9}, {3.577715494929514*^9, 
   3.577715559696867*^9}, 3.577734480489523*^9}]
}, Closed]],

Cell["", "Text",
 CellChangeTimes->{3.5777344804896927`*^9}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Calculate the enegy levels for a given \
configuration:", "Input"]], "Subsubsection",
 CellChangeTimes->{{3.5777157164454193`*^9, 3.577715756845632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"E", " ", "=", 
    RowBox[{"computePlaneMatrix2Well", "[", 
     RowBox[{"V", ",", 
      RowBox[{"(*", 
       RowBox[{"c", "="}], "*)"}], ".5", ",", "b", ",", 
      RowBox[{"length", " ", "of", " ", "box"}], ",", " ", 
      RowBox[{
      "or", " ", "wavelenth", " ", "of", " ", "largest", " ", "plane", " ", 
       "wave"}], ",", "numberofbasisstates", ",", "numberofstates"}], "]"}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EnergyasB", "[", 
    RowBox[{"V_", ",", "p_", ",", "L_", ",", "n_", ",", "bend_"}], "]"}], ":=",
    " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"computePlaneMatrix2Well", "[", 
          RowBox[{
           RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "L", ",", 
           "p", ",", "n"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "bend", ",", ".1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.577715738443061*^9, {3.577715778735964*^9, 3.577715786496319*^9}, {
   3.577715818225976*^9, 3.5777158706115007`*^9}, {3.577715907747973*^9, 
   3.5777159092012587`*^9}, {3.577715940066036*^9, 3.5777159489624147`*^9}, {
   3.577716037015045*^9, 3.577716122523759*^9}, {3.5777161583801394`*^9, 
   3.577716244396555*^9}, {3.5777287582320127`*^9, 3.577728767111958*^9}, {
   3.577728806678246*^9, 3.5777288107756042`*^9}, {3.577728974634108*^9, 
   3.5777289895300283`*^9}, {3.577729304316409*^9, 3.577729304860202*^9}, 
   3.577730511605157*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Documentation EnergyasB[]", "Text"]], "Subsubsection",
 CellChangeTimes->{{3.577715365467692*^9, 3.577715369915208*^9}, {
  3.577716262640834*^9, 3.577716264976836*^9}}],

Cell["\<\
V is the prefactor * the recoil energy of the well depth. \[OpenCurlyQuote]p\
\[CloseCurlyQuote] is the number of basis states, 200 is usually a good bet, \
but when in doubt use the converg function to test convergence! L is the \
length of the box. As a rule of thumb, your largest wavelength will be L2. \
Your smallest wavelength will be 2L/200, so with p=200, and an L of 10, the \
smallest wavelength you get is .1 in units of the waist. So, you need to make \
sure that your resolution is smaller than the smallest feature you are trying \
to resolve (probably the wannier functions). So, this resolution should AT \
LEAST be as small as the b. However, there are other subtle length scales: \
because of the periodic nature of the boundary conditions, we can get into a \
situation where if you have two wells, that are well seperated, they can \
reach through the periodic boundary conditions to tunnel into each other \
through the boundary. So, you need to make sure that the boundary is far \
enough away that that tunneling rate is negligible. Also, there is one last \
convergence issues: In the analytical calculations that I did, I assumed that \
the length of the box is inifinite. This allowed very easy/fast formulas for \
mathematica. I have checked this, and it is small compared to the other \
factors. Rule of thumb, work with a large box size, but the larger the box \
size, the larger number of basis states you need to take.\
\>", "Text",
 CellChangeTimes->{{3.577716283697279*^9, 3.577716375041794*^9}, {
  3.577716590371317*^9, 3.577716640979539*^9}, {3.577716693780031*^9, 
  3.57771694219764*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.577729144414147*^9, 3.577729146160269*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Visualize Bound States for Given b\
\>", "Subsubsection",
 CellChangeTimes->{{3.577729570833516*^9, 3.5777295716008263`*^9}, {
  3.577731998259098*^9, 3.577732007571043*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"b", "=", "1.1"}], ";", 
   RowBox[{"bound", " ", "=", " ", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{
         RowBox[{"Vt", "*", "100"}], ",", ".5", ",", 
         RowBox[{"b", "/", "2."}], ",", "12", ",", "100", ",", "4"}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"Er", "/", "Vt"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "]"}]}], ";"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"FC", "[", 
        RowBox[{"x", ",", "100", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]], ",", "bound"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "370000"}], ",", 
       RowBox[{"-", "300000"}]}], "}"}]}]}], "]"}],
  Background->GrayLevel[0.85]]}], "Input",
 CellChangeTimes->{{3.577732130282111*^9, 3.5777321336690617`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
e3dd5kRfNfqMvurMgv///83/AXVX2l4=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7WX+ueOqSKHpwGd/s8PR97+D8D/M4
b5+reQvnr1opfqX58Cs437bhvkaexQs4P+96B7fcrqdw/lGJ5AebWR/D+V9V
vwvU1z+A86dbVaQntN2G8+u1jp7wVb8G50tuan24VOUinP9fOmDv5OzjcH48
2w+fpN5dcP7atHxLteWz4Pw1zEW29lfX2sP4Hvv/f1vXdhDO5w69H1pWcAbO
1ymZs2/y5MtwvsKyq7MaJ92A808wr520+O9dOP9+SkembttDOH9LbKf4Yucn
cP7rqyvMg788g/M9m/j+nC17Cec3ujifS9J/A+c/sNrncmjnOzg/8MZqsXWz
P8D58nIPBDu+foTzGerM490tPsP55zLKNgtP+wLn+00+4lD79iuc//C6qcIZ
3e9wfuLyPjaNzh9w/pcJXPaZZ3/C+Za7pm5w5/4N52flcWgap/yB89fbzPvM
vOwvwvyp0kcfMv2H8yezxJUEqTA4wPh897YuYjqC4DPUNoZYFjLC+b9XxK1/
JMQE5+fOWt8rdAjB36HdwSGYxwzn83gV6TTxscD513UvXK7cg+Cvnmev8iSO
Fc6PWG8mKPsPwa9uXdh4ZxUbnL/ihexsPh92OF+hRcSDfRmCP12e++v//wg+
AJSEnpU=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7y19nRPBEix5cxjc7PH3fOzj/wzzO
2+dq3sL5q1aKX2k+/ArOt224r5Fn8QLOz7vewS236ymcf1Qi+cFm1sdw/lfV
7wL19Q/g/OlWFekJbbfh/Hqtoyd81a/B+ZKbWh8uVbkI5/+XDtg7Ofs4nB/P
9sMnqXcXnL82Ld9SbfksOH8Nc5Gt/dW19jC+x/7/39a1HYTzuUPvh5YVnIHz
dUrm7Js8+TKcr7Ds6qzGSTfg/BPMayct/nsXzr+f0pGp2/YQzt8S2ym+2PkJ
nP/66grz4C/P4HzPJr4/Z8tewvmNLs7nkvTfwPkPrPa5HNr5Ds4PvLFabN3s
D3C+vNwDwY6vH+F8hjrzeHeLz3D+uYyyzcLTvsD5fpOPONS+/QrnP7xuqnBG
9zucn7i8j02j8wec/2UCl33m2Z9wvuWuqRvcuX/D+Vl5HJrGKX/g/PU28z4z
L/uLMH+q9NGHTP/h/MkscSVBKgwOMD7fva2LmI4g+Ay1jSGWhYxw/u8Vcesf
CTHB+bmz1vcKHULwd2h3cAjmMcP5PF5FOk18LHD+dd0Llyv3IPir59mrPIlj
hfMj1psJyv5D8KtbFzbeWcUG5694ITubz4cdzldoEfFgX4bgT5fn/vr/P4IP
ABg2fKk=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7dzhXPRH7I3JwGd/s8PR97+D8D/M4
b5+reQvnr1opfqX58Cs437bhvkaexQs4P+96B7fcrqdw/lGJ5AebWR/D+V9V
vwvU1z+A86dbVaQntN2G8+u1jp7wVb8G50tuan24VOUinP9fOmDv5OzjcH48
2w+fpN5dcP7atHxLteWz4Pw1zEW29lfX2sP4Hvv/f1vXdhDO5w69H1pWcAbO
1ymZs2/y5MtwvsKyq7MaJ92A808wr520+O9dOP9+SkembttDOH9LbKf4Yucn
cP7rqyvMg788g/M9m/j+nC17Cec3ujifS9J/A+c/sNrncmjnOzg/8MZqsXWz
P8D58nIPBDu+foTzGerM490tPsP55zLKNgtP+wLn+00+4lD79iuc//C6qcIZ
3e9wfuLyPjaNzh9w/pcJXPaZZ3/C+Za7pm5w5/4N52flcWgap/yB89fbzPvM
vOwvwvyp0kcfMv2H8yezxJUEqTA4wPh897YuYjqC4DPUNoZYFjLC+b9XxK1/
JMQE5+fOWt8rdAjB36HdwSGYxwzn83gV6TTxscD513UvXK7cg+Cvnmev8iSO
Fc6PWG8mKPsPwa9uXdh4ZxUbnL/ihexsPh92OF+hRcSDfRmCP12e++v//wg+
AHwRql0=
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7J4RlH314VOTgMr7Z4en73sH5H+Zx
3j5X8xbOX7VS/Erz4Vdwvm3DfY08ixdwft71Dm65XU/h/KMSyQ82sz6G87+q
fheor38A50+3qkhPaLsN59drHT3hq34Nzpfc1PpwqcpFOP+/dMDeydnH4fx4
th8+Sb274Py1afmWastnwflrmIts7a+utYfxPfb//7au7SCczx16P7Ss4Ayc
r1MyZ9/kyZfhfIVlV2c1TroB559gXjtp8d+7cP79lI5M3baHcP6W2E7xxc5P
4PzXV1eYB395Bud7NvH9OVv2Es5vdHE+l6T/Bs5/YLXP5dDOd3B+4I3VYutm
f4Dz5eUeCHZ8/QjnM9SZx7tbfIbzz2WUbRae9gXO95t8xKH27Vc4/+F1U4Uz
ut/h/MTlfWwanT/g/C8TuOwzz/6E8y13Td3gzv0bzs/K49A0TvkD56+3mfeZ
edlfhPlTpY8+ZPoP509miSsJUmFwgPH57m1dxHQEwWeobQyxLGSE83+viFv/
SIgJzs+dtb5X6BCCv0O7g0MwjxnO5/Eq0mniY4Hzr+teuFy5B8FfPc9e5Ukc
K5wfsd5MUPYfgl/durDxzio2OH/FC9nZfD7scL5Ci4gH+zIEf7o899f//xF8
AOIjutE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -370000.},
  Method->{},
  PlotRange->{{-1, 3}, {-370000, -300000}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{3.577732144569098*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualize Bound States for Range of b\
\>", "Subsubsection",
 CellChangeTimes->{{3.577732337157773*^9, 3.577732345685569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Vt", "*", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberofbasisstates", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"computePlaneMatrix2Well", "[", 
          RowBox[{
           RowBox[{"Vt", "*", "100"}], ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", 
           "numberofbasisstates", ",", "4"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E4", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vmin", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"FindMinimum", "[", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{"x", ",", "100", ",", "b"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1.1"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"E1", ",", "E2", ",", "E3", ",", "E4", ",", "Vmin"}], "}"}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "\"\<Vim\>\""}], "}"}]}],
    ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Energy (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577732530254786*^9, 3.5777325302558613`*^9}, {
   3.57773266739226*^9, 3.577732667567048*^9}, {3.577732704445498*^9, 
   3.577732704525365*^9}, 3.5777327434695683`*^9, {3.577732790112137*^9, 
   3.577732792192513*^9}, {3.5777330279232883`*^9, 3.5777331137337503`*^9}, {
   3.577733147171125*^9, 3.577733171724885*^9}, {3.577733225557268*^9, 
   3.577733226982457*^9}, {3.57773326583261*^9, 3.5777333709991283`*^9}, {
   3.5777334277872543`*^9, 3.5777334389052563`*^9}, {3.577733494476618*^9, 
   3.5777334993521233`*^9}, {3.577733541163731*^9, 3.577733544762032*^9}, 
   3.577733577722715*^9, {3.577734652459668*^9, 3.577734689345056*^9}, {
   3.577736678112549*^9, 3.577736853033051*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1:eJxN0wtIU1EYB/CbKxXxtd20Zdo2zZTKxAdJUt7ro7J0vucz0VVT0alkFsls
saQoFbJEzZETMhU1zQWpC0VnmSaamwi6QEVvU/KR+Sp8MHK4nXs+OBz+3HO+
yw++w7qRHcEzQBAkbG9pd32dceMkXN2wl4srtfUNU3S7Eq5l+qzCgoy45hcK
WHJPD20R2H2rfslyJ0P3/Re2TXf3Gn53TL7f7Q9WyQ/sY4Yc0Z1fx0T+qbuB
AYflqSna+otttPhK711Gdfe3sFXbmBHVGk0+PKStXWzmY8z7ayqarh+Cv8jl
dSeP0nTnD+CNLW2aHgVN15+C58XeEaYr9PcP4tyi6rHEvbz/P0P89XJp63WF
vp8xjuO1WfEgI8h0xkKVJUb6105ZlBjOsYB/x3eFXqlmAn9CVKtC3XEc+Idk
roLMDRvg97k5RV06RPrLJSmoP+T3K/fgw/7eGXX5OORH57oiAyG/8zxnMRby
Z0SlsWWQP2xnU5kG+Qu3VgdiIf/z9LpaDuQPkNCCYiC/yi+8mshnAb84wSu8
9zTp5wUTowJf0l8zayqNk9oBf6SLU1WEN+mPrtMgD+utgb/BIZ1YLkGB/7xR
ZqtXCg34T35Q9ptQSH9SfPGmmKAC/+6o90TfDyrwm05Zv302QQX+nsQyYn6c
Cvwyq8Zp9V7W+wVZjPLf41Tgt5vMFo2BjCBPNXRRczUT+O0d3zg7xjGBH3mV
0ymjM4DfMvLRtkxsC/zNfV8HtvKPAr/bZN5k/UXSf5ezwJt6TvolI8QXJ8gf
HGLd8M+A9IsmzMzyIP/SCRdGMuTvuhSx7gj5b1uwvishv6VzoEMt5L/ilvup
FPIruYO1TZB/VkDpLmQ7AH9/gQ9Xuki+f7Z5Ny5Rku9fpULGHzOYwC+kFD2p
MLYFfs3ZmfZb6eT8D0U3CW1qyPlX24y+FHSQ8y+Oq5IZ8VHgF7La2t05KPAX
YJi/ZygK/D89hmdVbBT4HySZhFawUeBfaT2XU8xGgX9p0GO1kI0CP5+19lmb
/wNlmzHf
       "], {{{}, {}, {
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}]}, {
         
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          
          LineBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
            32}]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          
          LineBox[{33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
            48}]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          
          LineBox[{49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64}]}, {
          RGBColor[0.24, 0.3531726744018182, 0.6], 
          
          LineBox[{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
            80}]}}, {{
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           1], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           2], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           3], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           4], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           5], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           7], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           8], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           9], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           10], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           11], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           12], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           13], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           14], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           15], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           16]}, {
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           17], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           18], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           19], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           20], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           21], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           22], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           23], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           24], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           25], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           26], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           27], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           28], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           29], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           30], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           31], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           32]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           33], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           34], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           35], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           36], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           37], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           38], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           39], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           40], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           41], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           42], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           43], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           44], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           45], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           46], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           47], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           48]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 49], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 50], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 51], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 52], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 53], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 54], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 55], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 56], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 57], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 58], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 59], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 60], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 61], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 62], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 63], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 64]}, {
          RGBColor[0.24, 0.3531726744018182, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 65], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 66], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 67], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 68], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 69], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 70], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 71], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 72], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 73], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 74], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 75], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 76], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 77], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 78], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 79], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 80]}, {}}}], {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
      FormBox["\"Energy (Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -632517.3730734552}, Method -> {}, 
    PlotRange -> {{0, 3.}, {-632517.3730734552, -292324.9320838642}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.06, 0.06}, {6803.8488197918205`, 
     6803.8488197918205`}}],
   TemplateBox[{"1", "2", "3", "4", "\"Vim\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], FontSize -> 
                    10.88, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                  Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #4}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #5}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.3531726744018182`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577733099790951*^9, 3.577733122808341*^9}, 
   3.577733182016979*^9, {3.577733364755391*^9, 3.577733381467082*^9}, 
   3.577733459345333*^9, 3.577733508369637*^9, 3.577733554249566*^9, 
   3.577734698432804*^9, 3.577736777204116*^9, 3.577736836939088*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0026755332946777344`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.577733099790951*^9, 3.577733122808341*^9}, 
   3.577733182016979*^9, {3.577733364755391*^9, 3.577733381467082*^9}, 
   3.577733459345333*^9, 3.577733508369637*^9, 3.577733554249566*^9, 
   3.577734698432804*^9, 3.577736777204116*^9, 3.577736837925828*^9}]
}, Open  ]],

Cell["\<\
This plot shows several features: The blue-triangle is the minimum value of \
the potential (this will be the energy value of the bottom of the well. The \
rest are the bound states of the system.\
\>", "Text",
 CellChangeTimes->{{3.5777347211272182`*^9, 3.5777347676229277`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"FC", "[", 
           RowBox[{"x", ",", "100", ",", "b"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]], ",", 
         RowBox[{"Re", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"computePlaneMatrix2Well", "[", 
             RowBox[{
              RowBox[{"Vt", "*", ".01"}], ",", ".5", ",", 
              RowBox[{"b", "/", "2."}], ",", "12", ",", "33", ",", "4"}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", 
           RowBox[{
            RowBox[{"Er", "/", "Vt"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "1", ",", "2", ",", ".1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.577729152318659*^9, 3.577729169506885*^9}, {
  3.577729370772092*^9, 3.5777293829803467`*^9}, {3.5777294407091208`*^9, 
  3.5777294826477613`*^9}, {3.577729856282619*^9, 3.577729918590865*^9}, {
  3.5777299493914127`*^9, 3.577729981260969*^9}, {3.577730129601234*^9, 
  3.577730153195878*^9}, {3.577730222142578*^9, 3.577730300189336*^9}, {
  3.577730397504489*^9, 3.5777304019073668`*^9}, {3.5777310125202513`*^9, 
  3.577731061525804*^9}, {3.5777336637556553`*^9, 3.5777337134516*^9}, {
  3.57773382854091*^9, 3.577733829243746*^9}, {3.577734398914679*^9, 
  3.5777344139540462`*^9}, {3.5777346340163937`*^9, 3.577734636910857*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell["2D Visualization", "Subsection",
 CellChangeTimes->{{3.577734846839685*^9, 3.5777348695441313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", " ", "=", " ", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberofbasisstates", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lengthofbox", "=", "9"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2d1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BuildPlaneMatrix2D2Well", "[", 
            RowBox[{
            "V", ",", "Lengthofbox", ",", "numberofbasisstates", ",", 
             RowBox[{"b", "/", "2."}]}], "]"}], "-", 
           RowBox[{"10000000.", "*", 
            RowBox[{"IdentityMatrix", "[", 
             SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", 
          "4"}], "]"}], "+", "10000000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d4", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BuildPlaneMatrix2D2Well", "[", 
          RowBox[{"V", ",", "Lengthofbox", ",", "numberofbasisstates", ",", 
           RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
         RowBox[{"10000000.", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", "1"}], 
       "]"}], "-", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BuildPlaneMatrix2D2Well", "[", 
          RowBox[{"V", ",", "Lengthofbox", ",", 
           RowBox[{"numberofbasisstates", "+", "1"}], ",", 
           RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
         RowBox[{"10000000.", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"numberofbasisstates", "+", "1"}], ")"}], "2"], 
           "]"}]}]}], ",", "1"}], "]"}]}], ")"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"E1", ",", "E2", ",", "E3", ",", "E4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Energy (Hz)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.577735330358783*^9, 3.577735337019143*^9}, {
   3.577735372636073*^9, 3.5777353765886374`*^9}, {3.5777354510781593`*^9, 
   3.577735489526629*^9}, {3.5777356021986523`*^9, 3.577735809194354*^9}, 
   3.577735920078041*^9, {3.577736000815256*^9, 3.57773615905602*^9}, {
   3.57773619147118*^9, 3.577736353138027*^9}, {3.577736416639688*^9, 
   3.577736433325315*^9}, {3.5777364778084803`*^9, 3.577736599808432*^9}, {
   3.577736641354583*^9, 3.577736641516571*^9}, {3.577736891818019*^9, 
   3.577736893846919*^9}, {3.577737346120655*^9, 3.5777373465654182`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "8.95263516716659`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.577736483675802*^9, 3.5777366076160316`*^9, 
  3.577736646225564*^9, 3.577737341368452*^9, 3.577737423574831*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQDQM6hqHRnl+UDs6aCQIn7S/s13+sPxXGv2nvzZ7I
Z9OseNDEGAQe21eIHp/3do88VP6l/S8JI/Oza6QPQkz7YD8zx+Oogp84VP1n
+0bn9D8eLiIH09NA4Jv9l3WOG8vchKH6f9p/lAk/f/OT0MGzZ0Dgj/3DreHr
vW4KQc1jcJhYkro/4ZIQVD2jw6p12/4duCAENZ/ZoTKiuC7rAkw/i0Ni9/wr
sUA+xD42hzlvJ2+IuQAzj8PBwWFpXhScz8BwP/vVXAF7hP8/afFPYHumCPf/
b8f3EjOfKsD9Hx2y4cLTHXJw/5/ZqV+d+0UK7n+75HuCb1gR/p82L03YGcn/
TtOMc5D9f+jh02nXkfwv/GxvsAeS/zWeh76OQPJ/dkiG704k/wf8/noxA8n/
XT8/nohA8n9/1rKloUj+d5kn5B2O5P+bToHzH9cowv0/K9o88JA2wv+pPo8v
VTsi/L/4Ec/GyI2ycP8H66rPDbJC+D9s2T+G+uVicP+vVM56/HaCMNz/luy5
G8zThOD+V9t08TgXM8L/8VE9X2c9FoT7/88lqxtHbwnC/c9zT2xJ5w1BuP8P
xE59/Py6INz/O0VX3X8K5MP8X50nP+3ddUG4/2Xv5jdegfMZGDr+STSuna8A
97+S6iIN1UgFuP8ZZhTt2SkhD/e/QHDTr52zZOD+X3v02ImfNZJw/xverby7
3Bbh/9LQV6n3+hH+n3f+8RF1JP/7+Imt/M6E8H/jDV7eSiT/v1HRlU9A8v9e
16DPqkj+L+RXPHcRyf8CGh7KS5H8725Ysmsykv8vJp5auhrIBwADfMRw
       "], {{{}, {}, {
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}]}, {
         
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          
          LineBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
            32}]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          
          LineBox[{33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
            48}]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          
          LineBox[{49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64}]}}, {{
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           1], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           2], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           3], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           4], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           5], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           7], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           8], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           9], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           10], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           11], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           12], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           13], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           14], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           15], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           16]}, {
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           17], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           18], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           19], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           20], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           21], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           22], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           23], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           24], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           25], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           26], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           27], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           28], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           29], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           30], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           31], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           32]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           33], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           34], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           35], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           36], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           37], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           38], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           39], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           40], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           41], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           42], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           43], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           44], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           45], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           46], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           47], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           48]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 49], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 50], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 51], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 52], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 53], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 54], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 55], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 56], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 57], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 58], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 59], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 60], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 61], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 62], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 63], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 64]}, {}}}], {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
      FormBox["\"Energy (Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -621092.678384339}, Method -> {}, 
    PlotRange -> {{0, 3.}, {-621092.678384339, -292324.9320838642}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.06, 0.06}, {6575.354926009496, 
     6575.354926009496}}],TemplateBox[{
     TagBox[
      FrameBox[
       StyleBox["1", StripOnInput -> False, FontSize -> Smaller]], 
      "Placeholder"], 
     TagBox[
      FrameBox[
       StyleBox["2", StripOnInput -> False, FontSize -> Smaller]], 
      "Placeholder"], 
     TagBox[
      FrameBox[
       StyleBox["3", StripOnInput -> False, FontSize -> Smaller]], 
      "Placeholder"], 
     TagBox[
      FrameBox[
       StyleBox["4", StripOnInput -> False, FontSize -> Smaller]], 
      "Placeholder"]}, "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], FontSize -> 
                    10.88, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                  Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.577736483675802*^9, 3.5777366076160316`*^9, 
  3.577736646225564*^9, 3.577737341368452*^9, 3.577737423749008*^9}]
}, Open  ]]
}, Closed]],

Cell["Tunneling", "Section",
 CellChangeTimes->{{3.5777348050636663`*^9, 3.577734806087233*^9}}],

Cell[CellGroupData[{

Cell["1D Tunneling Rates:", "Subsection",
 CellChangeTimes->{{3.5777373721865892`*^9, 3.577737377466237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numbasis", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OneDTunelChangingB", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{"V", ",", ".5", ",", 
             RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
             ",", "4"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{"V", ",", ".5", ",", 
             RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
             ",", "4"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "4", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"OneDTunelChangingB", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<J (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"OneDTunelChangingB", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Log10", "[", "y", "]"}]}], "}"}]}]}], ")"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Log10[J] (Hz)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", "\[IndentingNewLine]", 
  RowBox[{"Convergence", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
          RowBox[{"numbasis", "+", "1"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
          ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.577737407344186*^9, 3.577737502773499*^9}, {
  3.577737548854089*^9, 3.577737647489102*^9}, {3.577737748974976*^9, 
  3.577737780221456*^9}, {3.577737997284216*^9, 3.5777381005647087`*^9}, {
  3.5777381342143908`*^9, 3.5777381594469*^9}, {3.577738208983036*^9, 
  3.577738212128584*^9}, {3.57773831179104*^9, 3.577738361127925*^9}, {
  3.57773840197786*^9, 3.577738402471366*^9}, {3.5777386903102503`*^9, 
  3.5777386932104073`*^9}, {3.577738738505402*^9, 3.5777387473385*^9}, {
  3.5777388152468157`*^9, 3.577738833001874*^9}, {3.577738941181526*^9, 
  3.57773894625285*^9}, {3.577738982238099*^9, 3.57773898315442*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJw10EsoBHEcwPG/ZVnrsS6ruTFx8FgHjwM5/Mbr4CCvspvINl6x2JVVysGW
cuZIqU1bpD1sbpymiNSq1SKKGo88NnkueWzi95+fX03Tt/n/P/+ZEWVnS6+O
MZb/d+H9fzwP9kDUeCQtzOOsgxpzNS+rh9S7kD1j3s6UD6WyUpwwKFO5Qv7s
AT0/AY9NCTw4wpKmqcAKfMrj2z6tvwRFf3PGikJSfx/ONajidEOuEKT9d8Am
s0xLxh1pL4hzD4owLAYjCnlPwKz1ekvaGq1/BjaUo8L5BPmvwNjQRnb0BbT9
0b9m3sKLBtDOe8dW1xKsoHkfeLf5fQOgeZ+8T80joHnf2LeRdjt5Mb6v87iC
vB9saXm3lTyG7+m7WR2l9byZe8VFfhx2rWlulPbrsD8aBSedF48dqpO7yUvA
domWFvJ4M2Wrijw97yahi7xEbC+er3lJ/LxNt4s8A3beQvIAeby93eX95CVL
2v/qJM+IrVyMV5KXgt2U5O8gLxXbfvUlk8c7r6TaQV4atmWm5v9707El59gg
eSbsgKG4h7wM/r3Ni23wC54X5Lc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"J (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 4.}, {0, 22571.823265297804`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.08, 0.08}, {451.43646530595606`, 
   451.43646530595606`}}]], "Output",
 CellChangeTimes->{
  3.577737600960649*^9, 3.5777376480721807`*^9, 3.57773776428438*^9, 
   3.577737804374065*^9, {3.577738028156032*^9, 3.577738049803595*^9}, {
   3.577738126402382*^9, 3.577738147626808*^9}, 3.577738183093854*^9, 
   3.5777382342928953`*^9, 3.5777383834723186`*^9, 3.577738661517652*^9, {
   3.577738707060898*^9, 3.577738749778241*^9}, {3.577738824112471*^9, 
   3.577738838563075*^9}, 3.5777390427695913`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQPm/YviebMEHWbNBIGd9vsW/d+8JQ3GP2mvkrA6
vytG0MHEGAQu23cLaLeoecPkb9qXmr0NPGAo6AAx7YG9zqbKoJ98MPWP7a8V
Pv2Q80DAIT0NBJ7ZCzU7lqxdKADV/9L+aUMHX6OngMPZMyDwxn7trwN+xg38
UPM+2KtqFE/IDOSFqv9o386Rob3nDAvU/M/2Lxp61Rdd3WQP0f/F/s5bo/iv
gRwHIPZ9s+96dmPWrItsByDm/bCvL8haw83JcgBi3k/7CWV5Np+rmA9AzPtt
36Ll/4ZvJusBiHl/7DdsVhCaac0NNe+f/eLlM4xkI9ih5jE49HgknXjymgmq
nsHBQaqwzkqBGWo+o0Peb/FFfz8wQfUzOQjdkLw9PRZmH7NDzfyUTR8ZWaHm
sThUii61ub2YHWoei0O9mfDcKAUuqHmsDus/ebhIHWOFmsfm0LRc+yTIfoh5
7A7Sva2+wtrMUPM4HOp/P77pJ8cCNY/DweBly8TgRJj/OR3m/JP7WvQSZh6X
w7m3FxTXsnJDzeN2aJebpOPEBws/HodzL8xKV4vAwofHYZfUbc9tl2D+5XX4
ds1heSkDM9Q8PoetsWYny97C/Mvv0MQlsHPRXRaoeQIOCuoPt0U8ZDsAAHOQ
Ebc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"Log10[J] (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 4.}, {-3.4041005531530217`, 4.353566641136971}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.08, 0.08}, {0.15515334388579985`, 
   0.15515334388579985`}}]], "Output",
 CellChangeTimes->{
  3.577737600960649*^9, 3.5777376480721807`*^9, 3.57773776428438*^9, 
   3.577737804374065*^9, {3.577738028156032*^9, 3.577738049803595*^9}, {
   3.577738126402382*^9, 3.577738147626808*^9}, 3.577738183093854*^9, 
   3.5777382342928953`*^9, 3.5777383834723186`*^9, 3.577738661517652*^9, {
   3.577738707060898*^9, 3.577738749778241*^9}, {3.577738824112471*^9, 
   3.577738838563075*^9}, 3.5777390429028807`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "4.76837158203125`*^-7", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.577737600960649*^9, 3.5777376480721807`*^9, 3.57773776428438*^9, 
   3.577737804374065*^9, {3.577738028156032*^9, 3.577738049803595*^9}, {
   3.577738126402382*^9, 3.577738147626808*^9}, 3.577738183093854*^9, 
   3.5777382342928953`*^9, 3.5777383834723186`*^9, 3.577738661517652*^9, {
   3.577738707060898*^9, 3.577738749778241*^9}, {3.577738824112471*^9, 
   3.577738838563075*^9}, 3.577739043871313*^9}]
}, Closed]]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.577738734127557*^9, 3.57773931488902*^9}],

Cell[CellGroupData[{

Cell["2D Tunneling:", "Subsection",
 CellChangeTimes->{{3.577738481458289*^9, 3.57773848545809*^9}, {
  3.577738535138115*^9, 3.5777385389622393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"numbasis", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TwoDTunelChangingB", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"Tunneling2D", "[", 
         RowBox[{"V", ",", "LengthofBox", ",", "numbasis", ",", "b"}], "]"}], 
        "*", 
        RowBox[{
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
         "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "2", ",", ".3"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"TwoDTunelChangingB", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<J (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"TwoDTunelChangingB", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Log10", "[", "y", "]"}]}], "}"}]}]}], ")"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Log10[J] (Hz)\>\""}],
      "}"}]}]}], "]"}], "\n", 
 RowBox[{"Convergence", "=", "\n", 
  RowBox[{"Convergence", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
          RowBox[{"numbasis", "+", "1"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
          ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.5777385408369017`*^9, 3.577738540837858*^9}, {
  3.577738590674645*^9, 3.5777386721006317`*^9}, {3.577738884439488*^9, 
  3.5777389333486834`*^9}, {3.5777389717375813`*^9, 3.577738971812562*^9}, {
  3.577739132189596*^9, 3.577739135889667*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{0., 61950.731518645196`}, {0.3, 55717.10081826792}, {0.6, 
     39048.43187939341}, {0.8999999999999999, 17108.314527454775`}, {1.2, 
     2420.144325380774}, {1.5, 3093.838570560557}, {1.7999999999999998`, 
     3083.2314669810357`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"J (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1.7999999999999998`}, {0, 61950.731518645196`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.036, 0.036}, {1239.0146303729039`, 
   1239.0146303729039`}}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739106876429*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{0., 4.792046438922498}, {0.3, 4.745988510275514}, {0.6, 
     4.591603598013558}, {0.8999999999999999, 4.233207225936092}, {1.2, 
     3.3838412659174053`}, {1.5, 3.4904976494590914`}, {1.7999999999999998`, 
     3.4890061296759627`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"Log10[J] (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 3.3838412659174053`},
  ImageSize->{590., Automatic},
  Method->{},
  PlotRange->{{0, 1.7999999999999998`}, {3.3838412659174053`, 
    4.792046438922498}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.036, 0.036}, {0.028164103460101862`, 
   0.028164103460101862`}}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739106893743*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3328521251678467`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739107057926*^9}]
}, Open  ]],

Cell["\<\
Note, the seemingly periodic nature is (I beleive), due to noise/convergence \
issues.When the well\[CloseCurlyQuote]s are well seperated, they will be \
highly localized due to the strong nature of the potential. You could \
calculate the width of the wannier function to see if it exceeds .33, which \
is the current spatial resolution in units of the waist.\
\>", "Text",
 CellChangeTimes->{{3.577739149847639*^9, 3.577739263303409*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Sinusoid Compared to 1D Tunneling:\
\>", "Subsection",
 CellChangeTimes->{{3.577739324680344*^9, 3.577739333479993*^9}, {
  3.5777396107302237`*^9, 3.577739614729981*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Vscale", "[", "b_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", " ", "=", 
      RowBox[{
       RowBox[{"F", "[", "0", "]"}], "-", 
       RowBox[{
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"F", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"b", "/", "2"}]}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.57773970168445*^9, 3.577739710420622*^9}, {
  3.577741321569466*^9, 3.577741324641008*^9}, {3.577742029175948*^9, 
  3.5777420298921623`*^9}}],

Cell["\<\
This function will find the correct height for the sinusoid potential, so \
that it matches up with the bump height of the double gaussian potential.\
\>", "Text",
 CellChangeTimes->{{3.5777396306187*^9, 3.577739670410757*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"beff", "[", "b_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "bef"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", 
              RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bef", "=", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{
           RowBox[{"FindMinimum", "[", 
            RowBox[{
             RowBox[{"F", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1.1"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.5777399858764963`*^9, {3.577740048136257*^9, 3.5777400640776978`*^9}, {
   3.577740609628572*^9, 3.577740613226461*^9}}],

Cell["\<\
This function will find the effective interwell seperation. Because the two \
gaussian wells will interfere with each other, it will change where the \
bottom of each well is. This is important, as we need to be able to fit the \
wavelength of the sinusoid potential to the distance between the bottoms of \
the wells.\
\>", "Text",
 CellChangeTimes->{{3.577739886876011*^9, 3.577739950620606*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["(*Vary the potential depth*)"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"1.1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"1", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "100"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "basis", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"Rough", ":", " ", 
        RowBox[{
        "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
         " ", "V"}]}]}]}], " ", "=", 
     RowBox[{"100", " ", "Vt"}]}], ",", " ", 
    RowBox[{
     RowBox[{"depending", " ", "on", " ", 
      RowBox[{"waist", ".", " ", "For"}], " ", "V"}], " ", "=", 
     RowBox[{"700", " ", "Vt"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", 
     RowBox[{"states", ".", " ", "Converting"}], " ", "into", " ", 
     "recoils"}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "V"}], " ", "=", " ", 
     RowBox[{"46", " ", "Er"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}], 
    ",", " ", 
    RowBox[{"and", " ", "higher"}], ",", " ", 
    RowBox[{
    "depending", " ", "on", " ", "the", " ", "b", " ", "you", " ", "are", " ",
      "working", " ", 
     RowBox[{"with", ".", " ", "The"}], " ", "tunneling", " ", "rates", " ", 
     "will", " ", "start", " ", "to", " ", "curve", " ", "up", " ", "when", 
     " ", "it", " ", "stops", " ", "converging"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"bscale", "=", 
   RowBox[{"b", "/", "waist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vone", "=", 
   RowBox[{"Vscale", "[", "bscale", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bone", "=", 
   RowBox[{"beff", "[", "bscale", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "100", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "100", ",", "bscale"}], "]"}], "+", 
       RowBox[{"Vone", "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "bone"], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaustunu1", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"V", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"computePlaneMatrix2Well", "[", 
              RowBox[{
               RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
               ",", "p", ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"computePlaneMatrix2Well", "[", 
              RowBox[{
               RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
               ",", "p", ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Er", "/", "Vt"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
          "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"V", ",", "0", ",", "25", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sintunbu1", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{"SinTunnel", "[", 
       RowBox[{
        RowBox[{"V", "*", "Vone"}], ",", 
        RowBox[{"b", "*", "bone"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "25", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577740084166637*^9, 3.57774009740186*^9}, {
   3.577740167889823*^9, 3.577740177720357*^9}, {3.577740218025741*^9, 
   3.577740313481461*^9}, {3.577740409993051*^9, 3.577740418918713*^9}, {
   3.577740501943371*^9, 3.577740555440219*^9}, {3.577740644414019*^9, 
   3.577740659911413*^9}, {3.577740701958254*^9, 3.57774073573209*^9}, {
   3.577741124683537*^9, 3.577741149664588*^9}, {3.577741286224058*^9, 
   3.57774128683221*^9}, {3.577741326758973*^9, 3.577741343059312*^9}, {
   3.577741458801704*^9, 3.577741474971052*^9}, {3.577741523155912*^9, 
   3.577741581223626*^9}, {3.5777416222648087`*^9, 3.5777417139400454`*^9}, {
   3.5777417886450777`*^9, 3.577741828243169*^9}, {3.5777418673501463`*^9, 
   3.577741934878277*^9}, {3.577742003316772*^9, 3.577742011678339*^9}, {
   3.577742048489831*^9, 3.5777420743489227`*^9}, 3.577742294956106*^9, {
   3.577742325263598*^9, 3.577742336433667*^9}, {3.577742388020129*^9, 
   3.5777423885943947`*^9}, {3.577742530264449*^9, 3.577742565046805*^9}, {
   3.577742694313477*^9, 3.577742706217038*^9}, {3.577742772799679*^9, 
   3.577742797566413*^9}, {3.577742850521163*^9, 3.57774285170483*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 InterpretationBox[Cell["(*Vary the potential depth*)"],
  TextCell["(*Vary the potential depth*)"]]], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742852864826*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
98/8DwwS5c0=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
OXhb8ywL1lT2v9gRmIH+7/8L4P//v+B/lFSyew==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  ImageMargins->0.,
  ImageSize->{385., Automatic},
  Method->{},
  PlotRange->{{-6, 6}, {-1551.6416085255012`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.5777428528678083`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "58.518103815142965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "17.78610577080341`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5.739853962232182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2.11124583891469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.8617436567600393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.3805034043518047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0.17859418474632255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0.08803684503699619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.04518695913334544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.023996664004846388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.013121138213667026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.007359137095788858`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "0.004220841009754465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "0.0024695297178857407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0.001470904481274659`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.0008903582793250231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0.0005469193524827374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.0003405008684616968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0.00021462534785211422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "0.00013683684213867825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.00008817092961144707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "0.000057376079161270516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0.000037682285724274647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "0.000024962742624477648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.000016671298111507465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.000011219257570383459`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742880228698*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{}, {
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQM+L0o0lofrOEB4H+zv9k9Yxz8lFMpncLjM0jXj
4V0PKJ/DoXCGbNfPcBsoX8ChUuKm2ovFBlC+iAOXd/FjL30VKF/CIWLxZiMx
M0koX8ahPLtjqZSaAJSv4GAg+lA2UIUVyldy0DJjudZl+ccewldxMHp7MOGe
+mcoX83h5YqTGz7EvYLyNRzucn5s1kx5BOVrOfC9Tdzs+P0mlK/jcOib5CGf
SZegfD2HpArv37PWn4LyDR1m7hH2Vq3cA+UbOejV/fVW+bUFyjd2+KDsdnNj
6Hoo38QhYJHIgmSL5VC+qUPFb44fM+YvhPLNHDgtV9ecj5gN5Zs7qL/7e67O
fAqUb+Egl79Mq/RXP5Rv6SB2MVjktW6HPQCMamiC
         "]]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQNpf85ZBjr5OkB4H+y1zgRY2Z00hPIZHHZkvnOb
81UMyudw0Fu8//aVxwxQvoDDZ+tXeemTX9tD+CIOyV65n7WibkD5Eg73HsTN
1rlzDMqXcVB64qY1tXMblK/g0P08dv8+peVQvpKDz7KSO1MmzYDyVRzOrJSJ
cbzfBeWrOUhUFwfNVamD8jUcAhsmJ973LITytRx0W/+t/mWVAuXrOEyfobAy
WzICytdz8JjccOOuji+Ub+BwMPxg7JPXjlC+ocNNMxWJFQFmUL6RQ16ixuaF
ijpQvrHDRU+Rtur3ilC+iUPtwWhOXllxKN/U4URYr+BjET4o38zhtXpr1cKD
zFC+uYPdvtw5j3R+2UH4Fg6VR3491Kr+COVbOjRvecXi3f7cDgCryW3/
         
         "]]}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {{0, 25.}, {0, 15.756536883332844`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.5, 0.5}, {0.3151307376666569, 
     0.3151307376666569}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742880444149*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQMVldyp60xZHSC8D/ZpEowav64IQvkMDhk3ra0f
OPBD+RwOmnzVqWEHuaB8AYcpfhw68+rYoHwRhwOyxU5tdUxQvoSDj/sx150l
f+0hfBmH+t9regxCvkH5Cg6b7s7eJSH5HspXcvCc6Zl6X/MRlK/i8HKB4bt1
XMehfDWHxo7srVcOn9gP4Ws4vMjwa7Hc+RDK13Jw19L5xHTvDZSv43Aj/tP+
M6c/Q/l6DnM9l20QE/sJ5Rs67LS3cLoxkfEAhG/kIL+RnWsyMwuUb+zAav4s
xzOSDco3cQj8sLZXeD8HlG/qYLNkYciLz1xQvplDxZbltot+80D55g6Xu9Pu
BKTxQ/kWDo+KXVYmLxaA8i0dbv7RrV5xUPAAANE6bGs=
          "]]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQP/z1/iZ3AXcIDwPth7Lm0//Z+NHcpncIgVCZCp
/frbHsLlcNg8oZNpy8vnUL6Aw7sjBZGnuQ/vh/BFHARul2fNev0OypdwCIoq
F3/X/xvKl3H4FsF7ZHEB8wEIX8HB6VIQS88xDihfySG/SmzGtmu8UL6Kw/Og
LNHOUEEoX80hdU658aalwlC+hsOB6EcWn+6JQvlaDqJn7NUvMktA+ToO6fv7
FdLFpKB8PQfR8jm7SyVkoHwDh+2Pr+dUcctB+YYOAW+sDfZ8kIfyjRyioj+8
W/VEAco3drC7xsMrf1oRyjdxqNs46bDaGiUo39Rh3dyDlxU7lKF8M4f4K5dS
UuNVoHxzh+BHD6fZGqlC+RYO/Fs+nn/HoAblWzooF6kf23Za7QAAzMZ0Ew==

          "]]}, {}}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -11.397878830256621`}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-11.512925464970229`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-6.907755278982137, 
         FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
         FormBox["10", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0, 25.}, {-11.397878830256621`, 4.457985520426609}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.5, 0.5}, {0.3171172870136646, 
     0.3171172870136646}}, Ticks -> {Automatic, {{-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
        FormBox["10", TraditionalForm]}, {-9.028018815182229, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-8.377431249041079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.986564940354067, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.706262975199909, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.487573774235079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.308232845579262, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.156216638280637, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.024289095238088, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.422848629194137, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.7722610630529876`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.3813947543659757`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.101092789211817, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.882403588246988, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.703062659591171, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.551046452292545, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.419118909249997, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.1823215567939546, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.8329091229351039, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.2237754316221159`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.5040773967762742`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.7227665977411037`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.9021075263969205`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0541237336955462`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.186051276738094, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742880475507*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "3.6954879760742188`*^-6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742880477674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["(*Vary the interwellsep*)"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "100"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "basis", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"Rough", ":", " ", 
        RowBox[{
        "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
         " ", "V"}]}]}]}], " ", "=", 
     RowBox[{"100", " ", "Vt"}]}], ",", " ", 
    RowBox[{
     RowBox[{"depending", " ", "on", " ", 
      RowBox[{"waist", ".", " ", "For"}], " ", "V"}], " ", "=", 
     RowBox[{"700", " ", "Vt"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", 
     RowBox[{"states", ".", " ", "Converting"}], " ", "into", " ", 
     "recoils"}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "V"}], " ", "=", " ", 
     RowBox[{"46", " ", "Er"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}], 
    ",", " ", 
    RowBox[{"and", " ", "higher"}], ",", " ", 
    RowBox[{
    "depending", " ", "on", " ", "the", " ", "b", " ", "you", " ", "are", " ",
      "working", " ", 
     RowBox[{"with", ".", " ", "The"}], " ", "tunneling", " ", "rates", " ", 
     "will", " ", "start", " ", "to", " ", "curve", " ", "up", " ", "when", 
     " ", "it", " ", "stops", " ", "converging"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"x", ",", "100", ",", "bscale"}], "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"0", ",", "100", ",", "bscale"}], "]"}], "+", 
        RowBox[{"Vone", "*", "Vt", "*", 
         RowBox[{"100", "/", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "bone"], "*", "x"}], "]"}]}], ")"}]}]}], 
       ")"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaustunu1", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"computePlaneMatrix2Well", "[", 
             RowBox[{"V", ",", ".5", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
              ",", "p", ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"computePlaneMatrix2Well", "[", 
             RowBox[{"V", ",", ".5", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "12", 
              ",", "p", ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
         "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", ".4", ",", "2", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btable", "  ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Vscale", "[", "b", "]"}], ",", 
       RowBox[{"beff", "[", "b", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", ".4", ",", "2", ",", ".5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sintunbu1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"btable", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"SinTunnel", "[", 
        RowBox[{
         RowBox[{"V", "*", 
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], " ", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "btable", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577742728256281*^9, 3.577742738397813*^9}, {
   3.577742862959629*^9, 3.577743050022099*^9}, {3.577743115185073*^9, 
   3.577743123559214*^9}, {3.577743156101325*^9, 3.577743157042273*^9}, 
   3.577743560537919*^9, {3.5777436044745607`*^9, 3.577743653057329*^9}, {
   3.577743702416944*^9, 3.577743805452799*^9}, {3.577744223100657*^9, 
   3.577744224000914*^9}, {3.577744259425549*^9, 3.57774426044716*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 InterpretationBox[Cell["(*Vary the interwellsep*)"],
  TextCell["(*Vary the interwellsep*)"]]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
98/8DwwS5c0=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
OXhb8ywL1lT2v9gRmIH+7/8L4P//v+B/lFSyew==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-1551.6416085255012`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261653166*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{}, {
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        PointBox[{{0.5, 0.24297875260454474`}, {0.6000000000000001, 
         0.6583817153779972}, {0.7000000000000001, 0.7905805934054344}, {0.8, 
         0.32844525946762637`}, {0.9, 11598.198743448627`}, {1., 
         0.3290244845321635}, {1.1, 0.7910981987822547}, {1.2000000000000002`,
          0.6581845323773038}, {1.3, 0.24279389354139458`}, {1.4, 
         0.24315128773015152`}, {1.5, 0.6586405180664074}, {1.6, 
         0.792614043100086}, {1.7000000000000002`, 0.3285068791553431}, {
         1.8000000000000003`, 11597.627528943493`}, {1.9, 
         0.32864244246831986`}, {2., 0.7905805934054344}}]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        PointBox[{{0.4, 9.049021286900084*^15}, {0.9, 
         1.9281561919449946`*^18}, {1.4, -8.832770326375337*^-10}, {
         1.9, -3.480634229579027*^-8}}]}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, AxesOrigin -> {0.4, 0.}, 
    Method -> {}, 
    PlotRange -> {{0.4, 2.}, {-3.480634229579027*^-8, 28993.704354229823`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.032, 0.032}, {579.8740870852926, 
     579.8740870852926}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744303428286*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[{{0.5, -1.4147812773058792`}, {
          0.6000000000000001, -0.41797040130199475`}, {
          0.7000000000000001, -0.2349876750873651}, {
          0.8, -1.1133850927889866`}, {0.9, 9.358605084299967}, {
          1., -1.1116231099154699`}, {1.1, -0.23433317380954027`}, {
          1.2000000000000002`, -0.4182699426315768}, {
          1.3, -1.4155423702720653`}, {1.4, -1.4140714461144865`}, {
          1.5, -0.4175773894223629}, {1.6, -0.2324188806183317}, {
          1.7000000000000002`, -1.1131975001645784`}, {1.8000000000000003`, 
          9.35855583280976}, {1.9, -1.1127849202213629`}, {
          2., -0.2349876750873651}}]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[{{0.4, 36.741433001680505`}, {0.9, 
          42.10309587921945}}]}, {}}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0.4, -1.4155423702720653`}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
         FormBox["10", TraditionalForm]}, {6.907755278982137, 
         FormBox["1000", TraditionalForm]}, {11.512925464970229`, 
         FormBox[
          
          TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {16.11809565095832, 
         FormBox[
          
          TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {20.72326583694641, 
         FormBox[
          
          TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {25.328436022934504`, 
         FormBox[
          
          TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.787491742782046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.438079308923196, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.8289456176102075`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.1092475827643655`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.327936783729195, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.507277712385012, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.659293919683638, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.7912214627261855`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {9.392661928770137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.043249494911286`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.4341158035983, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.714417768752456`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.933106969717286`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.112447898373103`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.26446410567173, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.396391648714276`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {13.997832114758229`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {14.648419680899378`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.03928598958639, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.319587954740548`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.538277155705378`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.717618084361195`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.86963429165982, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.00156183470237, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.60300230074632, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.25358986688747, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.644456175574483`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.92475814072864, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.14344734169347, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.322788270349285`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.47480447764791, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.60673202069046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {23.208172486734412`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {23.85876005287556, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.249626361562573`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.529928326716732`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.74861752768156, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.92795845633738, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {25.079974663636, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {25.211902206678552`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {16.11809565095832, 
         FormBox["\"\"", TraditionalForm]}, {20.72326583694641, 
         FormBox["\"\"", TraditionalForm]}, {25.328436022934504`, 
         FormBox["\"\"", TraditionalForm]}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.787491742782046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.438079308923196, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {5.8289456176102075`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.1092475827643655`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.327936783729195, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.507277712385012, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.659293919683638, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {6.7912214627261855`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {9.392661928770137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.043249494911286`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.4341158035983, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.714417768752456`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.933106969717286`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.112447898373103`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.26446410567173, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.396391648714276`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {13.997832114758229`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {14.648419680899378`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.03928598958639, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.319587954740548`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.538277155705378`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.717618084361195`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {15.86963429165982, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.00156183470237, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.60300230074632, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.25358986688747, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.644456175574483`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {19.92475814072864, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.14344734169347, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.322788270349285`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.47480447764791, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {20.60673202069046, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {23.208172486734412`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {23.85876005287556, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.249626361562573`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.529928326716732`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.74861752768156, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {24.92795845633738, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {25.079974663636, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {25.211902206678552`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0.4, 2.}, {-1.4155423702720653`, 25.06646722120788}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.032, 0.032}, {0.5296401918295989, 
     0.5296401918295989}}, Ticks -> {Automatic, {{-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
        FormBox["10", TraditionalForm]}, {6.907755278982137, 
        FormBox["1000", TraditionalForm]}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {16.11809565095832, 
        FormBox[
         TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {20.72326583694641, 
        FormBox[
         TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {25.328436022934504`, 
        FormBox[
         TemplateBox[{"10", "11"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {0.1823215567939546, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.8329091229351039, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.2237754316221159`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.5040773967762742`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.7227665977411037`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.9021075263969205`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0541237336955462`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.186051276738094, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.787491742782046, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {5.438079308923196, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {5.8289456176102075`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.1092475827643655`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.327936783729195, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.507277712385012, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.659293919683638, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {6.7912214627261855`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {9.392661928770137, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.043249494911286`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.4341158035983, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.714417768752456`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.933106969717286`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.112447898373103`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.26446410567173, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.396391648714276`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {13.997832114758229`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {14.648419680899378`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {15.03928598958639, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {15.319587954740548`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {15.538277155705378`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {15.717618084361195`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {15.86963429165982, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {16.00156183470237, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {18.60300230074632, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {19.25358986688747, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {19.644456175574483`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {19.92475814072864, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {20.14344734169347, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {20.322788270349285`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {20.47480447764791, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {20.60673202069046, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {23.208172486734412`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {23.85876005287556, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {24.249626361562573`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {24.529928326716732`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {24.74861752768156, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {24.92795845633738, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {25.079974663636, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {25.211902206678552`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744303581191*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3328521251678467`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.5777443035832443`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"btable", "  ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Vscale", "[", "b", "]"}], ",", 
       RowBox[{"beff", "[", "b", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1.2", ",", "2", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5777432011319313`*^9, 3.577743203867547*^9}, {
  3.577743364285911*^9, 3.577743368413209*^9}, {3.577743670431801*^9, 
  3.577743695918125*^9}}],

Cell[CellGroupData[{

Cell[BoxData["sintunbu1"], "Input",
 CellChangeTimes->{{3.577743391670352*^9, 3.577743396504125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.2`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7`", ",", 
     RowBox[{"-", "1.8097011039790347`*^-9"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.577743396825761*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vscale", "[", "1.1", "]"}]], "Input",
 CellChangeTimes->{{3.5777433223035183`*^9, 3.577743356152413*^9}, {
  3.5777434366175537`*^9, 3.577743449225215*^9}}],

Cell[BoxData["0.029111409216322492`"], "Output",
 CellChangeTimes->{{3.57774332701285*^9, 3.577743356806287*^9}, {
  3.57774343511104*^9, 3.577743450036426*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"beff", "[", ".1", "]"}]], "Input",
 CellChangeTimes->{{3.577743034972704*^9, 3.5777430574133368`*^9}}],

Cell[BoxData["7.902001948676389`*^-14"], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430376009283`*^9}, {
  3.577743433522368*^9, 3.57774345248557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vscale", "[", ".2", "]"}]], "Input",
 CellChangeTimes->{{3.577743005979789*^9, 3.577743014037806*^9}, {
  3.577743098904995*^9, 3.577743106489997*^9}}],

Cell[BoxData["2.220446049250313`*^-16"], "Output",
 CellChangeTimes->{3.577743106996296*^9}],

Cell[BoxData["]"], "Input",
 CellChangeTimes->{{3.577743005979789*^9, 3.577743014037806*^9}, {
  3.577743098904995*^9, 3.577743101506147*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.577743014483799*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions\[LineSeparator]", "Section",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572127540901985*^9, 3.572127543317565*^9}, 
   3.575817698221333*^9, 3.5777145227096167`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"1.05457173", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{"1.443161", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "25"}]]}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574185133439817*^9, 3.574185134190959*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", 
   RowBox[{"n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   FractionBox["1", "L"], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "*", "2", 
     FractionBox["\[Pi]", "L"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "*", "x"}], "+", 
       RowBox[{"y", "*", "m"}]}], ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5702150251058083`*^9, 3.5702151013501663`*^9}, {
  3.5702151520355673`*^9, 3.5702151802910624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hp", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570215184883725*^9, 3.570215228654123*^9}, {
  3.5702153656843147`*^9, 3.570215463928651*^9}, {3.570215779092273*^9, 
  3.5702157938471527`*^9}, {3.570218779153079*^9, 3.5702188635205073`*^9}, {
  3.5702269284039097`*^9, 3.5702269306252174`*^9}, {3.5709307596086063`*^9, 
  3.5709307707939215`*^9}, {3.570931186897369*^9, 3.570931197833276*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2p", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5702154106369686`*^9, 3.5702154108509626`*^9}, {
   3.5702154668880014`*^9, 3.570215485975391*^9}, 3.5702155610089054`*^9, {
   3.570218870051346*^9, 3.570218903945597*^9}, {3.5709307108269043`*^9, 
   3.570930774381958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlane", "[", 
   RowBox[{"V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "-", "l"}], ")"}], "2"]}], "8"], "]"}], "*", "\[Pi]", 
    "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"m", "-", "q"}], ")"}], "2"]}], "8"], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570219192838127*^9, 3.570219197234665*^9}, {
  3.5702192436695185`*^9, 3.5702192900733156`*^9}, {3.570219442121977*^9, 
  3.5702194661109934`*^9}, {3.5702195202318*^9, 3.5702195321232705`*^9}, {
  3.570219576136772*^9, 3.570219634658684*^9}, {3.5702266841284084`*^9, 
  3.5702266845615516`*^9}, {3.5702267770386944`*^9, 3.570226779349032*^9}, {
  3.5702270814494915`*^9, 3.5702270844568915`*^9}, {3.570227414095292*^9, 
  3.570227435630989*^9}, {3.5709312774251366`*^9, 3.5709312862704563`*^9}, {
  3.5709884254526167`*^9, 3.570988425836464*^9}, {3.570988497677177*^9, 
  3.570988498140882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlanebtest", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_", ",", "b_"}], 
   "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "had", " ", "some", " ", "trouble", " ", "getting", " ", "the", 
     " ", "factors", " ", "in", " ", "EXp", " ", "right"}], ",", " ", 
    RowBox[{"but", " ", "this", " ", "configuration", " ", 
     RowBox[{"worked", ".", " ", "This"}], " ", "is", " ", "for", " ", "one", 
     " ", "well", " ", 
     RowBox[{"only", "!"}], " ", "This", " ", "is", " ", "the", " ", 
     "generalizating", " ", "of", " ", "HPlane"}], ",", " ", 
    RowBox[{"which", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "worry", " ", "about", " ", 
     RowBox[{"b", ".", " ", "This"}], " ", "basically", " ", "lets", " ", 
     "me", " ", "offset", " ", "my", " ", "one", " ", "well", " ", "wherever",
      " ", "I", " ", "want", " ", "to", " ", "double", " ", "check", " ", 
     "that", " ", "I", " ", "have", " ", "the", " ", "right", " ", "form", 
     " ", "of", " ", "the", " ", "analytics"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4", 
        SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57093125165367*^9, 3.5709312898272624`*^9}, {
   3.570931341167391*^9, 3.5709313441782713`*^9}, {3.570932250439*^9, 
   3.5709322589567027`*^9}, {3.5709323074822006`*^9, 3.570932308387007*^9}, 
   3.570932577634177*^9, {3.5709335178890133`*^9, 3.57093352824736*^9}, {
   3.5709883475675707`*^9, 3.570988361948283*^9}, {3.5721278186849003`*^9, 
   3.572127906953497*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2Plane", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "b_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"n", ",", "l"}], "]"}], "*", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"m", ",", "q"}], "]"}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "*", 
        FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "2"], "+", 
        SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}], "-", 
    
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}]}], "//",
    "N"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.570680082568841*^9, {3.5706801506789513`*^9, 3.5706802608984394`*^9}, {
   3.5706814558960094`*^9, 3.5706814689845357`*^9}, {3.5709335633165245`*^9, 
   3.5709335716938066`*^9}, {3.5709338675326557`*^9, 3.570933869451476*^9}, {
   3.570988352349019*^9, 3.570988358289434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMatrix", "[", 
   RowBox[{"V_", ",", "L_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"HPlane", "[", 
       RowBox[{"V", ",", "L", ",", "m", ",", "l", ",", "n", ",", "q"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}]}], "]"}], "//", "N"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128069191348*^9, 3.5721280745519753`*^9}, {
  3.5721281434915953`*^9, 3.572128143907481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"groundState", "[", 
   RowBox[{"EM_", ",", "L_", ",", "x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Size", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "EM", "]"}], "]"}]}], ",", " ", "i", ",", 
      "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Given", " ", "an", " ", "eigenvector"}], ",", " ", 
      RowBox[{
      "this", " ", "will", " ", "compute", " ", "a", " ", "plottable", " ", 
       "version", " ", "of", " ", "the", " ", 
       RowBox[{"wavefunction", ".", " ", "However"}]}], ",", " ", 
      RowBox[{"there", " ", "is", " ", "little", " ", "sophistication"}], ",",
       " ", 
      RowBox[{
      "the", " ", "user", " ", "must", " ", "still", " ", "change", " ", 
       "the", " ", "index", " ", "conversion", " ", "number", " ", "by", " ", 
       
       RowBox[{"hand", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Note", ":", " ", 
         RowBox[{"there", " ", "was", " ", "a", " ", "problem"}], ":", " ", 
         RowBox[{
         "use", " ", "ky", " ", "for", " ", "calculating", " ", "the", " ", 
          "number", " ", "on", " ", "x", " ", "and", " ", "y"}]}]}]}], ",", 
      " ", 
      RowBox[{
      "as", " ", "the", " ", "kx", " ", "function", " ", "gives", " ", "the", 
       " ", "row", " ", "of", " ", "a", " ", "matrix"}], ",", " ", "but", ",",
       " ", 
      RowBox[{"for", " ", "the", " ", "eigenvector"}], ",", " ", 
      RowBox[{"it", " ", "is", " ", "just", " ", 
       RowBox[{"a", " ", "'"}], 
       RowBox[{"column", "'"}], " ", "vector"}], ",", " ", 
      RowBox[{"so", " ", "just", " ", "use", " ", "ky"}]}], "*)"}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normalize", "[", "EM", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "Size"}], "+", "j"}], "]"}], 
        "]"}], "*", 
       RowBox[{"N", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "2.", "*", 
            FractionBox["\[Pi]", "L"], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "Size"}], "]"}], "*", "x"}], "+", 
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "Size"}], "]"}], "*", "y"}]}], ")"}]}], 
           "]"}], "L"], ",", "8"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "Size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "Size"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128189351035*^9, 3.572128241737421*^9}, {
  3.5721323143106318`*^9, 3.572132352087255*^9}, {3.572132390263721*^9, 
  3.5721324988055277`*^9}, {3.572132711589464*^9, 3.572132747301024*^9}, {
  3.5721327948084507`*^9, 3.572132818413868*^9}, {3.5721338657642384`*^9, 
  3.572133926723633*^9}, {3.5721879922029543`*^9, 3.572188001611438*^9}, {
  3.5723693482479753`*^9, 3.572369349644309*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", "HMatrix", "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"HMatrix", "//", "N"}], "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell["\<\
Harmonic Oscillator Functions:
HMV1[1,2,.1,0,.5]\
\>", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128489356292*^9, 3.572128494635808*^9}, {
  3.573407653101918*^9, 3.573407667661433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "1", ",", ".1", ",", "0", ",", "0.5"}], "]"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573407672423072*^9, 3.573407727825686*^9}}],

Cell[BoxData["0.01039132810647584`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.573407696376131*^9, 3.5734077282896643`*^9}, 
   3.573570694402162*^9, 3.5752242210311537`*^9, 3.575737648780871*^9, 
   3.575817377749691*^9, 3.575817706253395*^9, 3.577715915402133*^9, 
   3.5777344176688347`*^9, 3.57773646164006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{3.573407691626629*^9}],

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.573407691906547*^9, 3.573570694439014*^9, 
  3.575224221064781*^9, 3.5757376488542347`*^9, 3.575817377862462*^9, 
  3.575817706329053*^9, 3.577715915432088*^9, 3.577734417725507*^9, 
  3.577736461716659*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMV1", "[", 
   RowBox[{"l_", ",", "m_", ",", "\[Omega]_", ",", "b_", ",", "c_"}], "]"}], ":=",
   " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Sqrt", "[", "\[Omega]", "]"}], 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"l", "+", "m"}]], 
        RowBox[{"Factorial", "[", "l", "]"}], "*", 
        RowBox[{"Factorial", "[", "m", "]"}]}], "]"}]], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["2", "k"], 
         RowBox[{"Factorial", "[", "k", "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"l", ",", "k"}], "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"m", ",", "k"}], "]"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"\[Omega]", "*", 
               SuperscriptBox["c", "2"]}], 
              RowBox[{"1", "+", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"], "\[Omega]"}]}]]}]}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"m", "+", "l"}], ")"}], "2"], "-", "k"}]], "*", 
         RowBox[{"HermiteH", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "l", "-", 
             RowBox[{"2", "*", "k"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             FractionBox["\[Omega]", 
              RowBox[{"1", "+", 
               RowBox[{"2", "*", 
                SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "*", 
            "b"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"m", ",", "l"}], "]"}]}], "}"}]}], "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["b", "2"], 
        RowBox[{"2", 
         SuperscriptBox["c", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "-", "1"}], 
        ")"}]}], "]"}], "*", 
     RowBox[{"Sqrt", "[", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        RowBox[{"2", 
         SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "c"}], ")"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.573407687335093*^9, 3.573407718292557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hx2Anal2", "[", 
   RowBox[{"l_", ",", "m_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "*", "l"}], "+", "1"}], ")"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"l", ",", "m"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"l", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "+", "1"}], ",", 
      RowBox[{"m", "-", "1"}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"m", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "-", "1"}], ",", 
      RowBox[{"m", "+", "1"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       FractionBox[
        RowBox[{"2", "V"}], 
        SuperscriptBox["c", "2"]], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570885920269978*^9, 3.5708859340123653`*^9}, {
   3.570885984099249*^9, 3.570886075990157*^9}, {3.570886223990593*^9, 
   3.5708862621362886`*^9}, {3.570895371759161*^9, 3.570895424848665*^9}, {
   3.57089810518782*^9, 3.570898171012825*^9}, {3.5709835339686947`*^9, 
   3.5709835367828827`*^9}, 3.5709835802714243`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis1Well", "[", 
   RowBox[{"V_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         SuperscriptBox["c", "2"]]}], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "n"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "0", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570898267668626*^9, 3.5708982805480013`*^9}, {
  3.570898960568728*^9, 3.570898981594881*^9}, {3.5708990116585703`*^9, 
  3.570899011963595*^9}, {3.5708990660276012`*^9, 3.570899066203285*^9}, {
  3.570983297935081*^9, 3.5709833033580017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "H_", ",", "V_", ",", "c_", ",", "b_", ",", "size_",
     ","}], "]"}], ":=", " ", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "k", ",", "Em", ",", "M", ",", "HOBasis"}], "}"}], ",",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{"k", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{"n", ",", "x", ",", "V", ",", "c"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"-", "V"}], 
           RowBox[{"c", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]], 
          RowBox[{"Exp", "[", 
           FractionBox[
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], 
            RowBox[{"4.", "*", "V", "*", 
             SuperscriptBox["c", "2"]}]], "]"}]}], "//", "N"}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57089525831597*^9, 3.570895279711782*^9}, {
  3.570897367385829*^9, 3.570897529953704*^9}, {3.572367062116728*^9, 
  3.572367076496973*^9}, {3.572367132873954*^9, 3.572367134357418*^9}}],

Cell[CellGroupData[{

Cell[BoxData["plotGround"], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570895283855715*^9, 3.57089528638737*^9}}],

Cell[BoxData["plotGround"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.572131566533577*^9, {3.57219536311866*^9, 3.572195382524304*^9}, {
   3.573570693286043*^9, 3.573570694562139*^9}, 3.573579524206863*^9, {
   3.5752242204868183`*^9, 3.575224221166127*^9}, 3.575737648954505*^9, 
   3.575816603692075*^9, {3.575817376189972*^9, 3.575817378113659*^9}, {
   3.575817704970214*^9, 3.5758177064428263`*^9}, 3.575818790559903*^9, 
   3.575833241092887*^9, 3.575852920247225*^9, 3.577715915529087*^9, 
   3.577734417817246*^9, 3.5777364618075247`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2d", "[", 
   RowBox[{"\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          RowBox[{
           RowBox[{"6", "b", "*", "c"}], "+", 
           RowBox[{"9", 
            SuperscriptBox["c", "2"]}]}]]}], "]"}]}], ",", "HOBasis", ",", 
      "Em"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HOBasis", "[", 
       RowBox[{"V", ",", "b", ",", "c", ",", "size", ",", "\[Omega]"}], "]"}],
       ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"n", ",", "m"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"l", ",", "q"}], "]"}]}], "-", 
           RowBox[{"V", "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
              RowBox[{"-", "b"}], ",", "c"}], "]"}], "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "b", ",", "c"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "size"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Em", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigensystem", "[", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{
          RowBox[{"HOBasis", "[", 
           RowBox[{
            SuperscriptBox["1.5", "2"], ",", "1", ",", ".5", ",", "7", ",", 
            "\[Omega]"}], "]"}], "-", 
          RowBox[{"1000", "*", 
           RowBox[{"IdentityMatrix", "[", "42", "]"}]}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"j", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "*", 
                   RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "17"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "17"}], "}"}]}], "]"}], "]"}], 
           "2"], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57089533059254*^9, 3.570895347632304*^9}, {
   3.570895446145853*^9, 3.570895467825232*^9}, {3.570895522605443*^9, 
   3.570895560099419*^9}, {3.57089559772987*^9, 3.570895653763194*^9}, 
   3.570895741827547*^9, {3.570895806483992*^9, 3.570895821797204*^9}, {
   3.570895897602663*^9, 3.570895939687346*^9}, {3.5708960985682507`*^9, 
   3.570896117688366*^9}, {3.570896269414405*^9, 3.570896280191505*^9}, {
   3.570896341423107*^9, 3.5708964735857277`*^9}, {3.570896543131679*^9, 
   3.5708965723200207`*^9}, {3.570896614956777*^9, 3.570896645902726*^9}, {
   3.5708967228948307`*^9, 3.570896745810275*^9}, {3.570896796370328*^9, 
   3.570896798411419*^9}, {3.5708968441754827`*^9, 3.57089694268522*^9}, {
   3.57089699795343*^9, 3.5708970388476458`*^9}, 3.570897361581813*^9, {
   3.570897531315144*^9, 3.570897552919519*^9}, {3.570897584404173*^9, 
   3.570897648554591*^9}, {3.5734064731875877`*^9, 3.5734064779188223`*^9}, {
   3.573406542217595*^9, 3.573406566120376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2dT", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_", ",", 
    "Em_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          SuperscriptBox["c", "2"]]}], "]"}]}], ",", "x", ",", "y"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"Em", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", 
            RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Em", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", 
                 RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], "]"}], 
         "2"], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5708977492067337`*^9, 3.570897780689465*^9}, {
  3.5708978643700943`*^9, 3.570897879854721*^9}, {3.5708979105684958`*^9, 
  3.570897916455763*^9}, {3.570898041434421*^9, 3.570898046376409*^9}, {
  3.570988847464078*^9, 3.5709888590488987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HM2Well", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         RowBox[{
          RowBox[{"6", "*", "b", "*", "c"}], "+", 
          RowBox[{"9", 
           SuperscriptBox["c", "2"]}]}]]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], 
         "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
          RowBox[{"-", "b"}], ",", "c"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnGround2wellHO", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"EnGround2wellHO", "[", 
    RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Em", ",", "M"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "=", 
        RowBox[{
         RowBox[{"HM2Well", "[", 
          RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "-", 
         RowBox[{"1000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"size", "+", "1"}], "]"}]}]}]}], ")"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"Em", "=", 
        RowBox[{"Eigenvalues", "[", "M", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573406922906785*^9, 3.573406929084024*^9}, {
  3.573406970688098*^9, 3.5734070010456753`*^9}, {3.573407201441255*^9, 
  3.573407202800108*^9}, {3.5734080558973*^9, 3.5734080794661493`*^9}}],

Cell[CellGroupData[{

Cell["Sparse Matrices Stuff:", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721285859014063`*^9, 3.572128594332904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"deltaK_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R", "[", "deltaK", "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", "deltaK", ")"}], "2"]}], "8."], "]"}], "//", 
    "N"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571000978783464*^9, 3.571000995356388*^9}, {
   3.57100108162978*^9, 3.571001117827796*^9}, {3.571001225972803*^9, 
   3.571001269343255*^9}, {3.571001381201169*^9, 3.571001395328429*^9}, 
   3.571004628985114*^9, {3.571007252187564*^9, 3.5710072677402973`*^9}}],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004666397975*^9, 3.571004700102571*^9}, {
  3.57100473234347*^9, 3.571004781941791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], " ", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004907370202*^9, 3.571004924473065*^9}, {
  3.5710054483336563`*^9, 3.5710054492613583`*^9}, {3.571005547198454*^9, 
  3.571005548798235*^9}, {3.571005578974455*^9, 3.571005581518189*^9}, {
  3.571005916080695*^9, 3.571005917216366*^9}, {3.571006207794964*^9, 
  3.571006207937745*^9}, {3.571006840166703*^9, 3.57100684024616*^9}, {
  3.571076210663637*^9, 3.571076210823251*^9}}],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"i", ",", "size", ",", "1"}], "]"}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.5710762115073767`*^9, 3.5721253050147667`*^9, 3.57213035834122*^9, 
   3.5721315666206703`*^9, {3.5721953632791653`*^9, 3.57219538266177*^9}, {
   3.573570693423429*^9, 3.5735706947368727`*^9}, 3.573579524299315*^9, {
   3.575224220553619*^9, 3.575224221276437*^9}, 3.5757376492299633`*^9, 
   3.5758166038261967`*^9, {3.575817376324524*^9, 3.5758173786914053`*^9}, {
   3.575817705450605*^9, 3.575817706569316*^9}, 3.575818790637588*^9, 
   3.575833241198072*^9, 3.575852920395009*^9, 3.5777159156315804`*^9, 
   3.577734417921591*^9, 3.577736461907537*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076026372032*^9, 3.57107602933237*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "y", " ", "index", " ", "will", " ", "take", " ", "a", " ", "number", " ",
      "from", " ", "1"}], "-", "n"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "and", " ", "convert", " ", "it", " ", "into", " ", "a", " ", "quantum",
        " ", "number", " ", "for", " ", 
       RowBox[{"ky", ".", " ", "This"}], " ", "will", " ", "be", " ", "an", 
       " ", "integer", " ", "starting", " ", "from"}], " ", "-", "p"}], 
     ".."}], 
    RowBox[{"p", "."}]}]}], "*)"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57107603194378*^9, 3.571076091161105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yIndex", "[", 
  RowBox[{"2", ",", "4"}], "]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571005038934815*^9, 3.5710050672733603`*^9}, {
  3.571005382620392*^9, 3.571005387291419*^9}, {3.5710054932604113`*^9, 
  3.571005504204275*^9}, {3.571005555084961*^9, 3.571005607580825*^9}, {
  3.57100564708575*^9, 3.571005649037367*^9}, {3.571005791198532*^9, 
  3.571005816590447*^9}, {3.5710060719045067`*^9, 3.571006073328672*^9}, {
  3.571006203681294*^9, 3.5710062607534933`*^9}, {3.571076215942932*^9, 
  3.5710762331426697`*^9}}],

Cell[BoxData["2"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.5721315666774054`*^9, {3.5721953633743763`*^9, 3.5721953827609253`*^9}, {
   3.573570693466408*^9, 3.573570694803196*^9}, 3.573579524375761*^9, {
   3.575224220603209*^9, 3.57522422135889*^9}, 3.575737649303508*^9, 
   3.575816603921591*^9, {3.575817376560095*^9, 3.575817378810993*^9}, {
   3.575817705567575*^9, 3.575817706656191*^9}, 3.575818790850029*^9, 
   3.575833241277789*^9, 3.57585292046043*^9, 3.57771591568229*^9, 
   3.57773441798673*^9, 3.577736461972054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ky", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"yIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710763687580748`*^9, 3.5710763940246277`*^9}, {
  3.5710765462181892`*^9, 3.571076615531767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.572130355085424*^9, 3.57213156672609*^9, {3.572195363481542*^9, 
   3.572195382827812*^9}, {3.573570693475769*^9, 3.573570694853084*^9}, {
   3.575224220639934*^9, 3.575224221397727*^9}, 3.575737649368555*^9, 
   3.575816603993815*^9, {3.575817376637787*^9, 3.575817378817274*^9}, {
   3.575817705575276*^9, 3.575817706727754*^9}, 3.57581879089436*^9, 
   3.575833241337905*^9, 3.575852920529865*^9, 3.577715915710659*^9, 
   3.5777344179952593`*^9, 3.5777364619798107`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "this", " ", "will", " ", "convert", " ", "our", " ", "index", " ", 
   "number", " ", "to", " ", "a", " ", "range", " ", "that", " ", "runs", " ",
    "over", " ", "negative", " ", "numbers", " ", "so", " ", "we", " ", "can",
    " ", "get", " ", "backwards", " ", "waves"}], "*)"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721268972365522`*^9, 3.572126923589943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kx", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"xIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076590427719*^9, 3.571076619339654*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  FractionBox[
   RowBox[{"i", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], "size"]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710765950937767`*^9, 3.5710766201886*^9}, 
   3.5721252970286217`*^9, 3.572130353784877*^9, 3.5721315667749777`*^9, {
   3.57219536382935*^9, 3.572195382936722*^9}, {3.5735706935200367`*^9, 
   3.573570694900206*^9}, 3.573579524437887*^9, {3.57522422068004*^9, 
   3.575224221439724*^9}, 3.575737649437277*^9, 3.575816604078075*^9, {
   3.575817376797573*^9, 3.575817378954172*^9}, {3.575817705657205*^9, 
   3.575817706793379*^9}, 3.575818790942137*^9, 3.575833241395426*^9, 
   3.575852920777462*^9, 3.5777159157505083`*^9, 3.57773441805926*^9, 
   3.577736462048901*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kx", "[", 
  RowBox[{"6", ",", "5"}], "]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076600371318*^9, 3.571076677513527*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710766086620207`*^9, 3.5710766778473263`*^9}, 
   3.572130351320689*^9, 3.572131566815014*^9, {3.5721953638982*^9, 
   3.572195383002089*^9}, {3.573570693567792*^9, 3.5735706949483356`*^9}, 
   3.573579524501046*^9, {3.575224220712759*^9, 3.575224221480337*^9}, 
   3.5757376495003443`*^9, 3.575816604148945*^9, {3.5758173768720417`*^9, 
   3.575817379025963*^9}, {3.575817705723372*^9, 3.57581770684501*^9}, 
   3.57581879099172*^9, 3.575833241455241*^9, 3.575852920804045*^9, 
   3.577715915778459*^9, 3.577734418108492*^9, 3.577736462053852*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"i", "-", 
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], ")"}], "size"], "+", 
   "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004930287951*^9, 3.5710049523452063`*^9}, {
  3.571005317372704*^9, 3.571005318764783*^9}, {3.5710057394878883`*^9, 
  3.571005751535363*^9}, {3.571005930832862*^9, 3.571005931200572*^9}, {
  3.5710060235052032`*^9, 3.5710060497785254`*^9}, {3.571006165012313*^9, 
  3.5710061653792467`*^9}, {3.571006835208407*^9, 3.571006835303487*^9}, {
  3.571076261305995*^9, 3.571076261433284*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"i", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], "size"]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.571004952693384*^9, 3.5710053193684464`*^9, 3.571005466457485*^9, 
   3.5710057520114*^9, 3.571006050237624*^9, 3.5710061663504143`*^9, 
   3.571006836195053*^9, 3.571073692860424*^9, 3.571076262340887*^9, 
   3.57212529925669*^9, 3.572130349645472*^9, 3.57213156685341*^9, {
   3.5721953639946547`*^9, 3.5721953830777283`*^9}, {3.573570693897833*^9, 
   3.573570694994968*^9}, 3.573579524566012*^9, {3.5752242207454*^9, 
   3.5752242214850693`*^9}, 3.575737649504718*^9, 3.575816604220639*^9, {
   3.575817376965431*^9, 3.575817379098336*^9}, {3.575817705791737*^9, 
   3.5758177069149323`*^9}, 3.575818791032305*^9, 3.57583324151337*^9, 
   3.575852920833896*^9, 3.577715915808127*^9, 3.577734418182539*^9, 
   3.5777364620990877`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BuildPlaneMatrix", "[", 
    RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MDense", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
        FractionBox["1", 
         RowBox[{"2", "*", 
          SuperscriptBox["L", "2"]}]], "*", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
           RowBox[{
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"kx", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["p", "2"], ",", 
            SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MDiag", " ", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ky", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
            "2"]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eTcycPqs185KhzsPg2i133KuAqiw7hF74Poy1nn
v4Fol4UHf4Hok/OmGmkA6SKNFWC6ZIrsbRD96fD1xyCaz/L5SxDNYdn+BkSv
qF39EURv0tj3E0R3bU8X0ATSfa+mgWnRuU/kQfQbIUUNEJ0/X1kfRH8xswHT
bF/djEF0Q2eRGYi2OPE4FkR7lrwF03wnTnp4Aukfl+M9QfQiq12nQTST5dQr
IHqOy40FnnNfOZ5yYV4EolW0drwA0deOy78E0aLa5Z9BdNW0LWDa4MsZGx8g
7a14DUwvXrTvKYi+5lrwDEQDAJ4CnhI=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuildPlaneMatrix2D2Well", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "I", " ", "am", " ", "choosing", " ", "the", " ", "wells", " ", "to", 
        " ", "be", " ", "on", " ", "the", " ", "x"}], "-", "axis"}], ",", " ", 
      RowBox[{
       RowBox[{"so", " ", "the", " ", "y"}], "-", 
       RowBox[{"axis", " ", "dynamics", " ", 
        RowBox[{"shouldn", "'"}], "t", "\[IndentingNewLine]", 
        RowBox[{"change", ".", " ", "Notice"}]}]}], ",", " ", 
      RowBox[{
      "the", " ", "R2W", " ", "contains", " ", "b", " ", "information"}], ",",
       " ", 
      RowBox[{
      "and", " ", "will", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       RowBox[{"kx", "'"}], "s"}], ",", " ", 
      RowBox[{"while", " ", "the", " ", "R", " ", 
       RowBox[{"doesn", "'"}], "t"}], ",", " ", 
      RowBox[{
      "and", " ", "can", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       
       RowBox[{"ky", "'"}], "s", " ", "without", " ", "loss", " ", "of", " ", 
       "generality"}], ",", " ", 
      RowBox[{"because", " ", "there", " ", "are", " ", "two", " ", "wells"}],
       ",", " ", 
      RowBox[{
      "there", " ", "is", " ", "another", " ", "term", " ", "in", " ", "our", 
       " ", "MDense"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", "b"}], 
              "]"}], "+", 
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", 
               RowBox[{"-", "b"}]}], "]"}]}], ")"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721267052277822`*^9, 3.572126705773741*^9}, {
  3.572127033781926*^9, 3.5721272320948067`*^9}, {3.572129464968992*^9, 
  3.5721294673137836`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R2W", "[", 
   RowBox[{"deltaK_", ",", "L_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R2W", "[", 
    RowBox[{"deltaK", ",", "L", ",", "b"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2.", "*", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2.", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", "deltaK", ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4.", "*", 
        SuperscriptBox["b", "2"]}]}], "2."], "]"}], "//", "N"}]}]}]], "Input",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721268078315277`*^9, 3.5721268599771137`*^9}, {
  3.5721269456740294`*^9, 3.572126964026145*^9}, {3.5721296396950617`*^9, 
  3.572129651772911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Tunneling", " ", "for", " ", "a", " ", "2", "D", " ", "2", "Well", " ", 
    "case"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Tunneling2DWellListGen", "[", "basisnum_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Need", " ", "to", " ", "double", " ", "check", " ", "that", " ", "L"}], 
     "=", 
     RowBox[{
     "1", " ", "is", " ", "okay", " ", "for", " ", "small", " ", "b"}]}], 
    "*)"}], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EnergyList", ",", "TunnelingList"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EnergyList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BuildPlaneMatrix2D2Well", "[", 
                RowBox[{"10", ",", "8", ",", "basisnum", ",", 
                 RowBox[{"b", "/", "2."}]}], "]"}], "-", 
               RowBox[{"1000.", "*", 
                RowBox[{"IdentityMatrix", "[", 
                 SuperscriptBox["basisnum", "2"], "]"}]}]}], ",", "2"}], 
             "]"}], "+", "1000"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", ".1", ",", "4", ",", ".2"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TunnelingList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"EnergyList", "[", 
             RowBox[{"[", "p", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", 
           RowBox[{"Length", "[", "EnergyList", "]"}]}], "}"}]}], "]"}]}]}]}],
     "\n", "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.572898683635507*^9, 3.5728988670804653`*^9}, {
   3.572898901199182*^9, 3.572898908059278*^9}, {3.572898958257339*^9, 
   3.572899076096239*^9}, {3.572899111755712*^9, 3.572899116962686*^9}, {
   3.5728991821113167`*^9, 3.5728991835178823`*^9}, {3.572899285183936*^9, 
   3.5728992989466867`*^9}, {3.572899424272739*^9, 3.5728994247352858`*^9}, {
   3.572899523970052*^9, 3.57289954929869*^9}, {3.572899660527895*^9, 
   3.5728996867980127`*^9}, {3.57289972612869*^9, 3.572899729216799*^9}, {
   3.5728997782653093`*^9, 3.572899778496242*^9}, {3.572899830738913*^9, 
   3.572899830980447*^9}, {3.572899887016218*^9, 3.572899911705093*^9}, {
   3.572899942805539*^9, 3.572899943366991*^9}, {3.572899987685001*^9, 
   3.57290000312385*^9}, {3.572900132235516*^9, 3.572900139162187*^9}, {
   3.572901797175879*^9, 3.5729017980865717`*^9}, 3.572902212202299*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "/", "25."}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5729021970625763`*^9, 3.572902198714232*^9}}],

Cell[BoxData["0.4`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.572902199044324*^9, 3.573570695535983*^9, 
  3.575224221549406*^9, 3.575737649586453*^9, 3.5758173792079268`*^9, 
  3.575817707366509*^9, 3.577715915890727*^9, 3.577734418276532*^9, 
  3.577736462197853*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "1", "D", " ", "Functions", " ", "for", " ", "plane", " ", "waves"}], 
  "*)"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5723789053583527`*^9, 3.572378913475903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellH", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["l", "length"]}], ",", 
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["m", "length"]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5747071527500343`*^9, 3.574707154566564*^9}, {
  3.5747137432894573`*^9, 3.5747137631212177`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellBox", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], ")"}]}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], 
         ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "p"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "p"}], "}"}]}], "]"}], "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", "p", "]"}]}]}], ",", "3"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574707165480566*^9, 3.5747072595388327`*^9}, {
  3.574707552637498*^9, 3.574707559551119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputePlaneWaveEN", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M", ",", "EM"}], "}"}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"kx", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"kx", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"EM", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{"M", "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["p", "2"], "]"}]}]}], ",", "3"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573404541555847*^9, 3.5734045459797707`*^9}, {
  3.573404580765032*^9, 3.5734046331788597`*^9}, {3.573404814204865*^9, 
  3.573404814542769*^9}, {3.573404896059642*^9, 3.573404922409494*^9}, {
  3.573571238341179*^9, 3.5735712400845823`*^9}, {3.573571293679434*^9, 
  3.573571296611291*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573404617802964*^9, 3.5734046283493023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "bsep"}], "+", 
     RowBox[{"\[ImaginaryI]", "*", 
      SuperscriptBox["c", "2"], 
      RowBox[{"(", 
       RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"], "//", 
  "Expand"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706402122661*^9, 3.574706409689583*^9}, {
  3.574706447660687*^9, 3.574706449022266*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["bsep", "2"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "l"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["l", "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "m"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["c", "4"], " ", "l", " ", "m"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["m", "2"]}]}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706406720368*^9, 3.574706411096586*^9}, 
   3.574706449668106*^9, 3.575224221623282*^9, 3.575737649698388*^9, 
   3.5758173793308277`*^9, 3.5758177075147467`*^9, 3.577715915984013*^9, 
   3.577734418372916*^9, 3.5777364622895927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"k", "-", "l"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "l"}], ")"}], " ", 
      SuperscriptBox["w", "2"]}]}], ")"}]}], "//", "Expand"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706477055162*^9, 3.574706478734951*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "k"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "l"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"], "+", 
  RowBox[{"k", " ", "l", " ", 
   SuperscriptBox["w", "2"]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["l", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"]}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.57470647932559*^9, 3.57522422165774*^9, 
  3.575737649862588*^9, 3.575817379435689*^9, 3.575817707733026*^9, 
  3.577715916019743*^9, 3.577734418439754*^9, 3.5777364623394814`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tunneling2D", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"En0", ",", "En1", ",", " ", "EnList", ",", "T"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EnList", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BuildPlaneMatrix2D2Well", "[", 
           RowBox[{"V", ",", "L", ",", "p", ",", 
            RowBox[{"b", "/", "2."}]}], "]"}], "-", 
          RowBox[{"1000.", "*", 
           RowBox[{"IdentityMatrix", "[", 
            SuperscriptBox["p", "2"], "]"}]}]}], ",", "2"}], "]"}], "+", 
       "1000"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En1", " ", "=", " ", 
      RowBox[{"EnList", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En0", "  ", "=", 
      RowBox[{"EnList", " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"T", " ", "=", " ", 
      RowBox[{"En1", "-", "En0"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573571325737472*^9, 3.573571459262435*^9}, {
  3.5735714965490923`*^9, 3.5735715264031076`*^9}, {3.573571872298934*^9, 
  3.573571889803364*^9}, {3.573573308234858*^9, 3.573573316009892*^9}, {
  3.5735735718194237`*^9, 3.573573572316063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2Well", "[", 
   RowBox[{
   "V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_", ",", 
    "numberofstates_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm", ",", 
      "Energies"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Compute", " ", "eigenvalues", " ", "for", " ", "the", " ", "gaussian", 
       " ", 
       RowBox[{"well", ".", " ", "Note"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "all", " ", "the", " ", "work", " ", "I", " ", "am", " ", 
        "doing", " ", "c"}], "=", ".5"}], ",", " ", 
      RowBox[{
      "this", " ", "is", " ", "because", " ", "the", " ", 
       "experimentalists"}], ",", " ", 
      RowBox[{"work", " ", "with", " ", "a", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], "]"}]}], ",", " ", 
      RowBox[{"where", " ", "I", " ", "defined", " ", "my", " ", "c", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", ")"}], "2"]}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            SuperscriptBox["c", "2"]}], ")"}]}], "]"}], ".", " ", "Since"}], 
       " ", "I", " ", "work", " ", "in", " ", "units", " ", "of", " ", "the", 
       " ", "waist"}], ",", " ", 
      RowBox[{"c", "=", "1"}], ",", " ", "but", ",", " ", 
      RowBox[{
       RowBox[{"by", " ", "putting", " ", "it", " ", "c"}], "=", ".5"}], ",", 
      " ", 
      RowBox[{
      "I", " ", "get", " ", "to", " ", "pop", " ", "out", " ", "the", " ", 
       "2", " ", "on", " ", "the", " ", 
       RowBox[{"top", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}], "-", 
         RowBox[{"1000000000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"p", "+", "1"}], "]"}]}]}], ",", "numberofstates"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Energies", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1000000000"}], ",", 
        RowBox[{"M", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;"}], "]"}], "]"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575225448791072*^9, 3.575225449138295*^9}, {
  3.575843959070161*^9, 3.575844049089106*^9}, {3.577715884860284*^9, 
  3.577715895925346*^9}, {3.577729614583228*^9, 3.577729671390502*^9}, {
  3.5777297162324123`*^9, 3.5777297458060083`*^9}, {3.577729779134789*^9, 
  3.5777298323570013`*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574614917735589*^9, 3.5746149215112333`*^9}, {
   3.575225666969421*^9, 3.575225667267716*^9}, {3.575392421034246*^9, 
   3.575392424448786*^9}, 3.575843949513698*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "1", "]"}], "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"N", "@", 
       RowBox[{"FindDivisions", "[", 
        RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "1", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575820525230095*^9, 3.575820525230957*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SinTunnel", "[", 
   RowBox[{"VEr_", ",", "\[Lambda]si_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Et", ",", "Er"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "The", " ", "mathieucharateristic", " ", "function", " ", "will", " ", 
       "give", " ", "the", " ", 
       RowBox[{"value", " ", "'"}], 
       RowBox[{"a", "'"}]}], ",", " ", 
      RowBox[{
       RowBox[{"corresponding", " ", "to", " ", "the", " ", 
        RowBox[{"equation", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "''"}], " ", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", 
             RowBox[{"2", "*", "q", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "*", "z"}], "]"}]}]}], ")"}], "y"}]}]}]}], " ", 
       "=", " ", 
       RowBox[{"0.", " ", "So"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "one", " ", "has", " ", "to", " ", "get", " ", "the", " ", "SWE", " ", 
        "into", " ", "a", " ", "form", " ", "like", " ", 
        RowBox[{"this", ".", " ", "This"}], " ", "is", " ", "why", " ", "the",
         " ", "Et", " ", "factor", " ", "comes", " ", 
        RowBox[{"in", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox["h", "2"], 
            RowBox[{"2", "*", "m"}]], 
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["dx", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "x"}], "]"}]}], "-", 
          "E"}]}]}], "=", 
       RowBox[{
        RowBox[{"0", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["m", 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], 
               SuperscriptBox["\[Chi]", "2"]}]]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "\[Chi]", "*", 
             "\[Theta]"}], "]"}]}], "-", "E"}]}], "=", 
        RowBox[{
        "0", "\[IndentingNewLine]", "where", " ", "\[Chi]", " ", "contains", 
         " ", "the", " ", "units", " ", "and", " ", "scaling", " ", "of", " ", 
         RowBox[{"x", ".", " ", "To"}], " ", "get", " ", "the", " ", "Cos", 
         " ", "term", " ", "to", " ", "look", " ", "right"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"this", " ", 
        RowBox[{"becomes", ":", " ", "\[Chi]"}]}], "=", 
       FractionBox["\[Lambda]", "\[Pi]"]}], ",", " ", 
      RowBox[{
       RowBox[{"and", " ", "the", " ", "equation", " ", 
        RowBox[{"becomes", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["V", "4"], 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               FractionBox[
                RowBox[{"m", "*", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "*", 
                 SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"E", "*", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"m", "*", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], "*", 
               SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}]}]}]}], "=", "0"}], 
      ",", " ", 
      RowBox[{
      "so", " ", "the", " ", "term", " ", "in", " ", "brackets", " ", "is", 
       " ", "the", " ", "scaling", " ", "factor", " ", "Et"}]}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Er", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        SuperscriptBox["ks", "2"]}], 
       RowBox[{"2", "mRb"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Et", " ", "=", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "*", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "*", "mRb", "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Lambda]si", ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "4."], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{".999", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}], "-", 
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{"0", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}]}], ")"}], "*", 
      RowBox[{"Et", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.57582988377533*^9, 3.575830111603978*^9}, {
  3.575830396726634*^9, 3.575830398582494*^9}, {3.5758304830478477`*^9, 
  3.575830487208008*^9}, {3.575835287322336*^9, 3.5758352903300734`*^9}, {
  3.5758440598942003`*^9, 3.575844465843758*^9}, {3.5758445189049053`*^9, 
  3.575844521607729*^9}, {3.575844649878894*^9, 3.5758446802809763`*^9}, {
  3.575844804666147*^9, 3.575844808136818*^9}, {3.5758450953406763`*^9, 
  3.575845131291162*^9}, {3.577713707009363*^9, 3.577713707834486*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575845163398172*^9, 3.575845164496395*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.57584452966441*^9, 3.57584461152061*^9}, {
  3.575845160977784*^9, 3.575845162368773*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5758445424363422`*^9, 3.575844543548328*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1729, 1120},
WindowMargins->{{Automatic, 19}, {Automatic, 0}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 119, 1, 93, "Title"],
Cell[701, 25, 458, 9, 91, "Text"],
Cell[CellGroupData[{
Cell[1184, 38, 130, 2, 81, "Section"],
Cell[1317, 42, 3269, 111, 576, "Input"],
Cell[4589, 155, 22, 0, 45, "Subsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[4648, 160, 101, 1, 51, "Section"],
Cell[CellGroupData[{
Cell[4774, 165, 156, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[4955, 171, 296, 7, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5254, 180, 1750, 54, 75, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[7041, 239, 215, 3, 29, "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7259, 244, 4240, 113, 483, "Input"]
}, Closed]],
Cell[11514, 360, 60, 1, 28, "Text"],
Cell[CellGroupData[{
Cell[11599, 365, 177, 2, 29, "Subsubsection"],
Cell[11779, 369, 1945, 48, 181, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[13761, 422, 193, 2, 23, "Subsubsection"],
Cell[13957, 426, 1637, 23, 347, "Text"],
Cell[15597, 451, 92, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[15726, 457, 184, 4, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[15935, 465, 1318, 40, 98, "Input"],
Cell[17256, 507, 11785, 206, 262, "Output"]
}, Open  ]],
Cell[29056, 716, 273, 9, 5, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29366, 730, 136, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[29527, 737, 6804, 194, 291, "Input"],
Cell[36334, 933, 23771, 598, 180, "Output"],
Cell[60108, 1533, 483, 9, 32, "Output"]
}, Open  ]],
Cell[60606, 1545, 290, 5, 31, "Text"],
Cell[60899, 1552, 1857, 43, 46, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[62795, 1600, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[62864, 1605, 106, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[62995, 1610, 6465, 183, 321, "Input"],
Cell[69463, 1795, 315, 6, 32, "Output"],
Cell[69781, 1803, 19852, 503, 180, "Output"]
}, Open  ]]
}, Closed]],
Cell[89660, 2310, 96, 1, 51, "Section"],
Cell[CellGroupData[{
Cell[89781, 2315, 109, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[89915, 2320, 3778, 93, 489, "Input"],
Cell[93696, 2415, 1538, 31, 187, "Output"],
Cell[95237, 2448, 1663, 33, 173, "Output"],
Cell[96903, 2483, 614, 11, 59, "Output"]
}, Closed]]
}, Closed]],
Cell[97544, 2498, 89, 1, 26, "Input"],
Cell[CellGroupData[{
Cell[97658, 2503, 151, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[97834, 2509, 2573, 70, 401, "Input"],
Cell[100410, 2581, 902, 19, 187, "Output"],
Cell[101315, 2602, 984, 21, 330, "Output"],
Cell[102302, 2625, 342, 7, 55, "Output"]
}, Open  ]],
Cell[102659, 2635, 450, 7, 95, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[103146, 2647, 181, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[103352, 2655, 1369, 41, 105, "Input"],
Cell[104724, 2698, 237, 4, 53, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[104998, 2707, 1427, 42, 121, "Input"],
Cell[106428, 2751, 408, 7, 53, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[106873, 2763, 7265, 180, 418, "Input"],
Cell[114141, 2945, 1087, 16, 32, "Output"],
Cell[115231, 2963, 67904, 1121, 256, "Output"],
Cell[183138, 4086, 3092, 69, 77, "Output"],
Cell[186233, 4157, 6830, 145, 248, "Output"],
Cell[193066, 4304, 16159, 314, 239, "Output"],
Cell[209228, 4620, 1167, 19, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210432, 4644, 6954, 183, 352, "Input"],
Cell[217389, 4829, 328, 5, 32, "Output"],
Cell[217720, 4836, 67097, 1108, 240, "Output"],
Cell[284820, 5946, 5953, 128, 236, "Output"],
Cell[290776, 6076, 24287, 464, 241, "Output"],
Cell[315066, 6542, 412, 8, 32, "Output"],
Cell[315481, 6552, 513, 14, 32, "Input"],
Cell[CellGroupData[{
Cell[316019, 6570, 101, 1, 32, "Input"],
Cell[316123, 6573, 264, 8, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316424, 6586, 180, 3, 32, "Input"],
Cell[316607, 6591, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316805, 6598, 126, 2, 32, "Input"],
Cell[316934, 6602, 166, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317137, 6609, 175, 3, 32, "Input"],
Cell[317315, 6614, 92, 1, 32, "Output"],
Cell[317410, 6617, 142, 2, 32, "Input"],
Cell[317555, 6621, 96, 1, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[317712, 6629, 215, 4, 87, "Section",
 InitializationCell->True,
 InitializationGroup->True],
Cell[317930, 6635, 531, 14, 99, "Input",
 InitializationGroup->True],
Cell[318464, 6651, 616, 18, 55, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[319083, 6671, 1935, 53, 65, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[321021, 6726, 2292, 66, 90, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[323316, 6794, 2046, 57, 69, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[325365, 6853, 2983, 76, 139, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[328351, 6931, 2998, 91, 162, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[331352, 7024, 948, 27, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[332303, 7053, 3328, 80, 189, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[335634, 7135, 1858, 54, 105, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[337495, 7191, 1889, 55, 105, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[339387, 7248, 242, 7, 51, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[339654, 7259, 207, 4, 32, "Input",
 InitializationGroup->True],
Cell[339864, 7265, 334, 5, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[340235, 7275, 176, 4, 32, "Input",
 InitializationGroup->True],
Cell[340414, 7281, 364, 7, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[340793, 7291, 2634, 78, 172, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[343430, 7371, 1071, 37, 55, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[344504, 7410, 1814, 48, 79, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[346321, 7460, 1912, 51, 110, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[348236, 7513, 2102, 57, 149, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[350363, 7574, 156, 3, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[350522, 7579, 567, 9, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[351104, 7591, 4946, 118, 203, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[356053, 7711, 3388, 91, 156, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[359444, 7804, 1234, 36, 133, "Input",
 InitializationGroup->True],
Cell[360681, 7842, 1147, 29, 121, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[361853, 7875, 167, 3, 45, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[362023, 7880, 826, 23, 69, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[362852, 7905, 195, 4, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[363072, 7913, 644, 13, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[363719, 7928, 731, 13, 32, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[364465, 7944, 146, 3, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[364614, 7949, 697, 19, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[365336, 7972, 598, 11, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[365937, 7985, 555, 9, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[366529, 7999, 454, 13, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[366986, 8014, 747, 16, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[367748, 8033, 460, 9, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[368233, 8046, 399, 12, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[368635, 8060, 869, 18, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[369541, 8083, 199, 5, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[369743, 8090, 672, 11, 32, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[370452, 8106, 757, 18, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[371212, 8126, 986, 19, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[372213, 8148, 3032, 83, 243, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[375248, 8233, 4399, 116, 264, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[379650, 8351, 946, 28, 70, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[380599, 8381, 3361, 80, 171, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[383985, 8465, 148, 3, 32, "Input",
 InitializationGroup->True],
Cell[384136, 8470, 288, 5, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[384439, 8478, 229, 6, 32, "Input",
 InitializationGroup->True],
Cell[384671, 8486, 3313, 93, 223, "Input",
 InitializationGroup->True],
Cell[387987, 8581, 5438, 148, 278, "Input",
 InitializationGroup->True],
Cell[393428, 8731, 3156, 86, 266, "Input",
 InitializationGroup->True],
Cell[396587, 8819, 122, 2, 32, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[396734, 8825, 424, 13, 37, "Input",
 InitializationGroup->True],
Cell[397161, 8840, 805, 19, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[398003, 8864, 486, 15, 55, "Input",
 InitializationGroup->True],
Cell[398492, 8881, 658, 17, 56, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[399165, 8901, 1463, 35, 149, "Input",
 InitializationGroup->True],
Cell[400631, 8938, 5561, 151, 249, "Input",
 InitializationGroup->True],
Cell[406195, 9091, 244, 4, 32, "Input",
 InitializationGroup->True],
Cell[406442, 9097, 3882, 106, 143, "Input",
 InitializationGroup->True],
Cell[410327, 9205, 6252, 159, 423, "Input",
 InitializationGroup->True],
Cell[416582, 9366, 120, 2, 32, "Input",
 InitializationGroup->True],
Cell[416705, 9370, 167, 3, 32, "Input",
 InitializationGroup->True],
Cell[416875, 9375, 122, 2, 32, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
