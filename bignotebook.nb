(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1237372,      23656]
NotebookOptionsPosition[   1225044,      23270]
NotebookOutlinePosition[   1225405,      23286]
CellTagsIndexPosition[   1225362,      23283]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Adam\[CloseCurlyQuote]s Big Notebook", "Title",
 CellChangeTimes->{{3.577713803937633*^9, 3.577713808065131*^9}}],

Cell["\<\
This document contains a summary of the code/results that I obtained while \
working with the Rey/Regal group in the year 2013. If there are any \
confusions, or typos, please email me at adam.green@colorado.edu. You can see \
the latest version of this notebook at github: \
https://github.com/ringstadd/gaussianwellrey. 

Thank you for a great year, I learned a lot.\
\>", "Text",
 CellChangeTimes->{{3.577713901265915*^9, 3.577714006850313*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellDingbat->"\[FilledSquare]",
 CellChangeTimes->{{3.577714016338784*^9, 3.5777140184824123`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[HBar]", "=", 
   RowBox[{"1.05457", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"852.0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "short", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kl", "=", 
    FractionBox["\[Pi]", "\[Lambda]"]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "wavevector", " ", "for", " ", "the", " ", "long", " ", "lattice"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", 
    FractionBox["\[Lambda]", "2"]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"short", " ", "lattice", " ", "spacing"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"amu", "=", 
   RowBox[{"1.6605", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "27"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mRb", "=", 
    RowBox[{"86.909", "*", "amu"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"mass", " ", "or", " ", "Rb87"}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"Er", "=", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["ks", "2"]}], 
     RowBox[{"2", "mRb"}]]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Recoil", " ", "energy", " ", "of", " ", "the", " ", "short", " ", 
    "lattice"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"as", "=", 
    RowBox[{"5.3", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "9"}]]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"approximate", " ", "s"}], "-", 
    RowBox[{
    "wave", " ", "scattering", " ", "length", " ", "for", " ", "Rb87", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "meters"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"852.0", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "\[Lambda]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Er", "=", 
   RowBox[{"N", "[", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["ks", "2"]}], 
     RowBox[{"2", "mRb"}]], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btwn", "=", 
   RowBox[{".9", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"waist", "=", 
   RowBox[{".75", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Vt", "=", 
  RowBox[{
   RowBox[{"Er", "/", 
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[HBar]", "2"], 
      RowBox[{"(", 
       RowBox[{"mRb", "*", 
        SuperscriptBox["waist", "2"]}], ")"}]], ")"}]}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.577714041047126*^9, 3.577714076936557*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData["15.295831061993779`"], "Output",
 CellChangeTimes->{3.57903369991608*^9, 3.57903657349942*^9}]
}, Open  ]],

Cell["", "Subsection"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizations", "Section",
 CellChangeTimes->{{3.5777142044038973`*^9, 3.577714209331665*^9}}],

Cell[CellGroupData[{

Cell["1D Bound States", "Subsection",
 CellChangeTimes->{{3.5777143457971478`*^9, 3.5777144142129917`*^9}, {
  3.577734829463726*^9, 3.577734830759349*^9}}],

Cell[CellGroupData[{

Cell["\<\
Visualize the bound states of a double well: 1D:
\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.577714416481667*^9, 3.577714443205139*^9}, {
   3.5777145798941603`*^9, 3.577714621446278*^9}, 3.577734480487878*^9},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x_", ",", "V1_", ",", "V2_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "V1"}], "*", "Vt", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
    RowBox[{"V1", "*", "Vt", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FC", "[", 
    RowBox[{"x_", ",", "V1_", ",", "V2_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "V1"}], "*", "Er", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          RowBox[{"b", "/", 
           RowBox[{"(", "2", ")"}]}]}], ")"}], "2"]}], "]"}]}], "-", 
    RowBox[{"V2", "*", "Er", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "+", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.57771462668651*^9, 3.5777146569421587`*^9}, {
   3.577714757359579*^9, 3.577715198946903*^9}, 3.577715393106946*^9, {
   3.577715466755227*^9, 3.5777154851102743`*^9}, {3.577729413116014*^9, 
   3.577729419388523*^9}, {3.577729931200844*^9, 3.577729934062963*^9}, 
   3.577734480487968*^9, {3.579020833775804*^9, 3.5790208612010927`*^9}},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Documentation F[]", "Text"]], "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.577715365467692*^9, 3.577715369915208*^9}, 
   3.577734480488082*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox["\[IndentingNewLine]", "Subsubsection"], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Vt", " ", "is", " ", "a", " ", "scaling", " ", 
       RowBox[{"factor", ".", " ", "The"}], " ", "original", " ", "equation", 
       " ", "is", " ", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "*", "m"}]], 
       FractionBox[
        SuperscriptBox["d", "2"], 
        SuperscriptBox["dx", "2"]]}], "+", 
      RowBox[{"V", "*", "Exp", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], ")"}]}]}], " ", "=", " ", 
     RowBox[{"E", ".", " ", "However"}]}], ",", " ", 
    RowBox[{
    "because", " ", "functions", " ", "work", " ", "with", " ", 
     "dimensionaless", " ", "things", " ", 
     RowBox[{"(", 
      RowBox[{"avoid", " ", 
       RowBox[{"overflow", "/", "underflow"}], " ", "errors"}], ")"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
     "we", " ", "can", " ", "work", " ", "on", " ", "length", " ", "scales", 
      " ", "where", " ", "c"}], " ", "=", " ", 
     RowBox[{"1.", " ", "So"}]}], ",", " ", 
    RowBox[{
    "we", " ", "can", " ", "factor", " ", "out", " ", "a", " ", "length", " ",
      "scale", " ", "from", " ", "x"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", 
      RowBox[{"Arg", "[", "Exp", "]"}], " ", "becomes"}], " ", "-", 
     RowBox[{"2", "*", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Chi]", "*", "r"}], "-", 
          RowBox[{"b", "/", "2"}]}], ")"}], "2"], "/", 
       SuperscriptBox["c", "2"]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "set", " ", "\[Chi]"}], "=", "c"}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", 
      RowBox[{"Arg", "[", "Exp", "]"}], " ", "becomes"}], " ", "-", 
     RowBox[{"2", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"r", "-", 
         FractionBox["b", 
          RowBox[{"2", "*", "c"}]]}], ")"}], "2"]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "the", " ", "rest", " ", "of", " ", "the", " ", "equation", 
      " ", 
      RowBox[{"becomes", ":", "\[IndentingNewLine]", 
       RowBox[{
        FractionBox[
         SuperscriptBox["d", "2"], 
         RowBox[{"2", 
          SuperscriptBox["dr", "2"]}]], "+", 
        RowBox[{"V", "*", "m", "*", 
         FractionBox[
          SuperscriptBox["c", "2"], 
          SuperscriptBox["\[HBar]", "2"]], "*", 
         RowBox[{"Exp", "[", "]"}]}]}]}]}], " ", "=", " ", 
     RowBox[{"0.", " ", "Since", " ", 
      RowBox[{"Adam", "'"}], "s", " ", "code", " ", "works", " ", "with", " ",
       "potentials", " ", "in", " ", "units", " ", "of", " ", "recoil", " ", 
      "energies", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie", ".", " ", "100"}], " ", "Er"}], ")"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "it", " ", "becomes", " ", "expediant", " ", "just", " ", "to", " ", 
      "calculate", " ", "Vt"}], "=", 
     RowBox[{"Er", "/", 
      RowBox[{"E", "'"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", 
      RowBox[{"E", "'"}]}], " ", "=", " ", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[HBar]", "2"], 
       RowBox[{"m", "*", 
        SuperscriptBox["c", "2"]}]], "."}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "V", " ", "is", " ", "the", " ", "prefactor", "*", "recoil", " ", "units", 
    " ", "that", " ", "will", " ", "give", " ", "you", " ", "the", " ", 
    "depth", " ", "of", " ", "your", " ", 
    RowBox[{"potential", ".", " ", "b"}], " ", "will", " ", "be", " ", "the", 
    " ", "interwell", " ", 
    RowBox[{"seperation", ".", " ", "This"}], " ", "will", " ", "construct", 
    " ", "a", " ", "symmetric", " ", 
    RowBox[{"potential", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.577715218526067*^9, 3.577715222833136*^9}, {
   3.577715283939115*^9, 3.577715344736218*^9}, {3.577715494929514*^9, 
   3.577715559696867*^9}, 3.577734480489523*^9}]
}, Closed]],

Cell["", "Text",
 CellChangeTimes->{3.5777344804896927`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"FC", "[", 
       RowBox[{"x", ",", "V1", ",", "V2", ",", "b"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"V1", ",", "0", ",", 
     RowBox[{"V2", "+", 
      RowBox[{"20", "*", "Vt"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.579023429168214*^9, 3.579023507553887*^9}, {
  3.57902354095921*^9, 3.5790235410744762`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 1.29, $CellContext`V1$$ = 972., 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`V1$$], 0, 1529.5831061993777`}, {
      Hold[$CellContext`b$$], 0, 2}}, Typeset`size$$ = {360., {112., 118.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`V1$232240$$ = 0, $CellContext`b$232241$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`b$$ = 0, $CellContext`V1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`V1$$, $CellContext`V1$232240$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$232241$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`FC[$CellContext`x, $CellContext`V1$$, \
$CellContext`V2, $CellContext`b$$]/(2 
        Pi $CellContext`\[HBar]), {$CellContext`x, -3, 3}], 
      "Specifications" :> {{$CellContext`V1$$, 0, 
         1529.5831061993777`}, {$CellContext`b$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {170., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.579023508206403*^9, 3.57902354183978*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Calculate the enegy levels for a given \
configuration:", "Input"]], "Subsubsection",
 CellChangeTimes->{{3.5777157164454193`*^9, 3.577715756845632*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"E", " ", "=", 
    RowBox[{"computePlaneMatrix2Well", "[", 
     RowBox[{"V", ",", 
      RowBox[{"(*", 
       RowBox[{"c", "="}], "*)"}], ".5", ",", "b", ",", 
      RowBox[{"length", " ", "of", " ", "box"}], ",", " ", 
      RowBox[{
      "or", " ", "wavelenth", " ", "of", " ", "largest", " ", "plane", " ", 
       "wave"}], ",", "numberofbasisstates", ",", "numberofstates"}], "]"}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EnergyasB", "[", 
    RowBox[{"V_", ",", "p_", ",", "L_", ",", "n_", ",", "bend_"}], "]"}], ":=",
    " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"computePlaneMatrix2Well", "[", 
          RowBox[{
           RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "L", ",", 
           "p", ",", "n"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "bend", ",", ".1"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.577715738443061*^9, {3.577715778735964*^9, 3.577715786496319*^9}, {
   3.577715818225976*^9, 3.5777158706115007`*^9}, {3.577715907747973*^9, 
   3.5777159092012587`*^9}, {3.577715940066036*^9, 3.5777159489624147`*^9}, {
   3.577716037015045*^9, 3.577716122523759*^9}, {3.5777161583801394`*^9, 
   3.577716244396555*^9}, {3.5777287582320127`*^9, 3.577728767111958*^9}, {
   3.577728806678246*^9, 3.5777288107756042`*^9}, {3.577728974634108*^9, 
   3.5777289895300283`*^9}, {3.577729304316409*^9, 3.577729304860202*^9}, 
   3.577730511605157*^9},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Documentation EnergyasB[]", "Text"]], "Subsubsection",
 CellChangeTimes->{{3.577715365467692*^9, 3.577715369915208*^9}, {
  3.577716262640834*^9, 3.577716264976836*^9}}],

Cell["\<\
V is the prefactor * the recoil energy of the well depth. \[OpenCurlyQuote]p\
\[CloseCurlyQuote] is the number of basis states, 200 is usually a good bet, \
but when in doubt use the converg function to test convergence! L is the \
length of the box. As a rule of thumb, your largest wavelength will be L2. \
Your smallest wavelength will be 2L/200, so with p=200, and an L of 10, the \
smallest wavelength you get is .1 in units of the waist. So, you need to make \
sure that your resolution is smaller than the smallest feature you are trying \
to resolve (probably the wannier functions). So, this resolution should AT \
LEAST be as small as the b. However, there are other subtle length scales: \
because of the periodic nature of the boundary conditions, we can get into a \
situation where if you have two wells, that are well seperated, they can \
reach through the periodic boundary conditions to tunnel into each other \
through the boundary. So, you need to make sure that the boundary is far \
enough away that that tunneling rate is negligible. Also, there is one last \
convergence issues: In the analytical calculations that I did, I assumed that \
the length of the box is inifinite. This allowed very easy/fast formulas for \
mathematica. I have checked this, and it is small compared to the other \
factors. Rule of thumb, work with a large box size, but the larger the box \
size, the larger number of basis states you need to take.\
\>", "Text",
 CellChangeTimes->{{3.577716283697279*^9, 3.577716375041794*^9}, {
  3.577716590371317*^9, 3.577716640979539*^9}, {3.577716693780031*^9, 
  3.57771694219764*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.577729144414147*^9, 3.577729146160269*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Visualize Bound States for Given b\
\>", "Subsubsection",
 CellChangeTimes->{{3.577729570833516*^9, 3.5777295716008263`*^9}, {
  3.577731998259098*^9, 3.577732007571043*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"b", "=", "1.1"}], ";"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"V1", "=", "100"}], ";", " ", 
   RowBox[{
    StyleBox[
     RowBox[{"(", "*"}]], 
    RowBox[{
    "V1", " ", "and", " ", "V2", " ", "measured", " ", "in", " ", "Energy", 
     " ", "recoil", " ", "units", " ", "as", " ", "defined", " ", "in", " ", 
     "parameters"}], 
    StyleBox[
     RowBox[{"*", ")"}]]}], "\[IndentingNewLine]", 
   RowBox[{"V2", "=", "80"}], ";"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"basisnum", "=", "100"}], ";"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"length", " ", "=", " ", "12"}], ";"}],
   Background->GrayLevel[0.85]], 
  StyleBox[" ",
   Background->GrayLevel[0.85]], 
  StyleBox[
   RowBox[{
    StyleBox[
     RowBox[{"(", "*"}]], 
    RowBox[{"Length", " ", "of", " ", 
     RowBox[{"the", " ", "'"}], 
     RowBox[{"box", "'"}], " ", "that", " ", "defines", " ", "the", " ", 
     "periodic", " ", "boundary", " ", "conditions"}], 
    StyleBox[
     RowBox[{"*", ")"}]]}],
   Background->GrayLevel[0.85]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"energylevels", " ", "=", " ", "4"}], ";"}],
   Background->GrayLevel[0.85]], 
  StyleBox["\[IndentingNewLine]",
   Background->GrayLevel[0.85]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"bound", " ", "=", " ", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2WellBias", "[", 
        RowBox[{
         RowBox[{"V1", "*", "Vt"}], ",", 
         RowBox[{"V2", "*", "Vt"}], ",", ".5", ",", 
         RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
         "energylevels"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"Er", "/", "Vt"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "]"}]}], ";"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"FC", "[", 
        RowBox[{"x", ",", "V1", ",", "V2", ",", "b"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]], ",", "bound"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", "Automatic", "}"}]}]}], "]"}],
  Background->GrayLevel[0.85]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["Vlist",
    Background->GrayLevel[0.85]], 
   StyleBox["=",
    Background->GrayLevel[0.85]], 
   RowBox[{"{", 
    RowBox[{
    "60", ",", "65", ",", "70", ",", "75", ",", "80", ",", "85", ",", "90", 
     ",", "95", ",", "100", ",", "105", ",", "110", ",", "115", ",", "120", 
     ",", "125"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["boundlist",
    Background->GrayLevel[0.85]], 
   StyleBox[" ",
    Background->GrayLevel[0.85]], 
   StyleBox["=",
    Background->GrayLevel[0.85]], 
   StyleBox[" ",
    Background->GrayLevel[0.85]], 
   RowBox[{
    StyleBox["Map",
     Background->GrayLevel[0.85]], 
    StyleBox["[",
     Background->GrayLevel[0.85]], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{
           RowBox[{"Vt", "*", "#"}], ",", 
           RowBox[{"V2", "*", "Vt"}], ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
           "energylevels"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "]"}], " ", 
      "&"}], ",", "Vlist"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"Vlist", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", "boundlist", "]"}], "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", "energylevels", "]"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Left Well Depth (Recoil Energy)\>\"", ",", 
      "\"\<BoundStates (Hz)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "#", "]"}], ",", "\"\< Bound State\>\""}], 
         "]"}], "&"}], ",", 
       RowBox[{"Range", "[", "energylevels", "]"}]}], "]"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.577732130282111*^9, 3.5777321336690617`*^9}, {
  3.579020884752276*^9, 3.579020921936479*^9}, {3.5790210581791267`*^9, 
  3.579021104802732*^9}, {3.579021136995372*^9, 3.5790213342650127`*^9}, {
  3.579021366683444*^9, 3.57902155312927*^9}, {3.579021583569316*^9, 
  3.5790216940003147`*^9}, {3.5790218909655933`*^9, 3.579021937875671*^9}, {
  3.5790219739044657`*^9, 3.579021999256785*^9}, {3.579022049099037*^9, 
  3.5790221112903147`*^9}, {3.579022152383733*^9, 3.579022203078298*^9}, {
  3.5790222381680937`*^9, 3.579022321860581*^9}, {3.579022409600766*^9, 
  3.579022447284471*^9}, {3.579022641611783*^9, 3.5790227011331177`*^9}, {
  3.57902275632021*^9, 3.5790227804630423`*^9}, {3.5790228325547037`*^9, 
  3.579022874736086*^9}, {3.579022945035988*^9, 3.5790229456939383`*^9}, {
  3.579022986935957*^9, 3.579023089675074*^9}, {3.579023167199903*^9, 
  3.5790231674004307`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
dKta4YNsBug0ffDxEx9F//8/5H+x+LE/
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7D52/pc+3TOTgMr7Z4en73sH5H+Zx
3j5X8xbOX7VS/Erz4Vdwvm3DfY08ixdwft71Dm65XU/h/KMSyQ82sz6G87+q
fheor38A50+3qkhPaLsN59drHT3hq34Nzpfc1PpwqcpFOP+/dMDeydnH4fx4
th8+Sb274Py1afmWastnwflrmIts7a+utYfxPfb//7au7SCczx16P7Ss4Ayc
r1MyZ9/kyZfhfIVlV2c1TroB559gXjtp8d+7cP79lI5M3baHcP6W2E7xxc5P
4PzXV1eYB395Bud7NvH9OVv2Es5vdHE+l6T/Bs5/YLXP5dDOd3B+4I3VYutm
f4Dz5eUeCHZ8/QjnM9SZx7tbfIbzz2WUbRae9gXO95t8xKH27Vc4/+F1U4Uz
ut/h/MTlfWwanT/g/C8TuOwzz/6E8y13Td3gzv0bzs/K49A0TvkD56+3mfeZ
edlfhPlTpY8+ZPoP509miSsJUmFwgPH57m1dxHQEwWeobQyxLGSE83+viFv/
SIgJzs+dtb5X6BCCv0O7g0MwjxnO5/Eq0mniY4Hzr+teuFy5B8FfPc9e5Ukc
K5wfsd5MUPYfgl/durDxzio2OH/FC9nZfD7scL5Ci4gH+zIEf7o899f//xF8
AHG+pHk=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7V334d+LUB+GDy/hmh6fvewfnf5jH
eftczVs4f9VK8SvNh1/B+bYN9zXyLF7A+XnXO7jldj2F849KJD/YzPoYzv+q
+l2gvv4BnD/dqiI9oe02nF+vdfSEr/o1OF9yU+vDpSoX4fz/0gF7J2cfh/Pj
2X74JPXugvPXpuVbqi2fBeevYS6ytb+61h7G99j//9u6toNwPnfo/dCygjNw
vk7JnH2TJ1+G8xWWXZ3VOOkGnH+Cee2kxX/vwvn3UzoyddsewvlbYjvFFzs/
gfNfX11hHvzlGZzv2cT352zZSzi/0cX5XJL+Gzj/gdU+l0M738H5gTdWi62b
/QHOl5d7INjx9SOcz1BnHu9u8RnOP5dRtll42hc432/yEYfat1/h/IfXTRXO
6H6H8xOX97FpdP6A879M4LLPPPsTzrfcNXWDO/dvOD8rj0PTOOUPnL/eZt5n
5mV/EeZPlT76kOk/nD+ZJa4kSIXBAcbnu7d1EdMRBJ+htjHEspARzv+9Im79
IyEmOD931vpeoUMI/g7tDg7BPGY4n8erSKeJjwXOv6574XLlHgR/9Tx7lSdx
rHB+xHozQdl/CH5168LGO6vY4PwVL2Rn8/mww/kKLSIe7MsQ/Ony3F///0fw
AabIAcQ=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7vXze23Z5CR9cxjc7PH3fOzj/wzzO
2+dq3sL5q1aKX2k+/ArOt224r5Fn8QLOz7vewS236ymcf1Qi+cFm1sdw/lfV
7wL19Q/g/OlWFekJbbfh/Hqtoyd81a/B+ZKbWh8uVbkI5/+XDtg7Ofs4nB/P
9sMnqXcXnL82Ld9SbfksOH8Nc5Gt/dW19jC+x/7/39a1HYTzuUPvh5YVnIHz
dUrm7Js8+TKcr7Ds6qzGSTfg/BPMayct/nsXzr+f0pGp2/YQzt8S2ym+2PkJ
nP/66grz4C/P4HzPJr4/Z8tewvmNLs7nkvTfwPkPrPa5HNr5Ds4PvLFabN3s
D3C+vNwDwY6vH+F8hjrzeHeLz3D+uYyyzcLTvsD5fpOPONS+/QrnP7xuqnBG
9zucn7i8j02j8wec/2UCl33m2Z9wvuWuqRvcuX/D+Vl5HJrGKX/g/PU28z4z
L/uLMH+q9NGHTP/h/MkscSVBKgwOMD7fva2LmI4g+Ay1jSGWhYxw/u8Vcesf
CTHB+bmz1vcKHULwd2h3cAjmMcP5PF5FOk18LHD+dd0Llyv3IPir59mrPIlj
hfMj1psJyv5D8KtbFzbeWcUG5694ITubz4cdzldoEfFgX4bgT5fn/vr/P4IP
AGEffuU=
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQHVOnc+X///f7A41kllnsEDq4jG92ePq+d3D+h3mc
t8/VvIXzV60Uv9J8+BWcb9twXyPP4gWcn3e9g1tu11M4/6hE8oPNrI/h/K+q
3wXq6x/A+dOtKtIT2m7D+fVaR0/4ql+D8yU3tT5cqnIRzv8vHbB3cvZxOD+e
7YdPUu8uOH9tWr6l2vJZcP4a5iJb+6tr7WF8j/3/v61rOwjnc4feDy0rOAPn
65TM2Td58mU4X2HZ1VmNk27A+SeY105a/PcunH8/pSNTt+0hnL8ltlN8sfMT
OP/11RXmwV+ewfmeTXx/zpa9hPMbXZzPJem/gfMfWO1zObTzHZwfeGO12LrZ
H+B8ebkHgh1fP8L5DHXm8e4Wn+H8cxllm4WnfYHz/SYfcah9+xXOf3jdVOGM
7nc4P3F5H5tG5w84/8sELvvMsz/hfMtdUze4c/+G87PyODSNU/7A+ett5n1m
XvYXYf5U6aMPmf7D+ZNZ4kqCVBgcYHy+e1sXMR1B8BlqG0MsCxnh/N8r4tY/
EmKC83Nnre8VOoTg79Du4BDMY4bzebyKdJr4WOD867oXLlfuQfBXz7NXeRLH
CudHrDcTlP2H4Fe3Lmy8s4oNzl/xQnY2nw87nK/QIuLBvgzBny7P/fX/fwQf
APVUav0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, -345000.},
  ImageSize->{600., Automatic},
  Method->{},
  PlotRange->{{-0.9999999183673469, 
   2.999999918367347}, {-344346.556987577, -259294.08544263474`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.577732144569098*^9, {3.579020907868615*^9, 3.579020922990182*^9}, {
   3.579021065177628*^9, 3.57902107071945*^9}, {3.5790211058202143`*^9, 
   3.579021183670434*^9}, {3.5790213894129543`*^9, 3.579021506687366*^9}, 
   3.579021657236109*^9, 3.5790220517325077`*^9, {3.579022185666586*^9, 
   3.579022204577065*^9}, 3.5790224486023293`*^9, {3.5790226443592253`*^9, 
   3.5790226700868607`*^9}, 3.579022702797359*^9, {3.5790227518232183`*^9, 
   3.579022781798266*^9}, 3.579022838500476*^9, 3.579022876599243*^9, {
   3.579023000180415*^9, 3.579023024835033*^9}, {3.57902306352817*^9, 
   3.579023090813344*^9}, 3.579023168480753*^9, 3.5790365899465723`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{}, {}, {
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        LineBox[{{60., -268100.8460543802}, {65., -270609.7516080463}, {
         70., -273318.097069736}, {75., -276296.4966790385}, {
         80., -279954.2905883571}, {85., -293898.14364081906`}, {
         90., -308500.4979015575}, {95., -323329.0870464529}, {
         100., -338307.54673313734`}, {105., -353394.31233788066`}, {
         110., -368563.395436966}, {115., -383797.23774685716`}, {
         120., -399083.3473547422}, {125., -414412.49543069594`}}]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        LineBox[{{60., -257333.40747769838`}, {65., -260470.02611056046`}, {
         70., -264013.9859778042}, {75., -268442.3559200375}, {
         80., -279432.67640718893`}, {85., -285842.2387777652}, {
         90., -298784.5884014006}, {95., -312570.27897252847`}, {
         100., -326706.6962850193}, {105., -341064.4936883029}, {
         110., -355579.10649260343`}, {115., -370211.8900340089}, {
         120., -384937.3670857316}, {125., -399737.6648327014}}]}, {
        RGBColor[0.6, 0.5470136627990908, 0.24], 
        LineBox[{{60., -247375.96383689577`}, {65., -251425.13186528388`}, {
         70., -256559.16073533837`}, {75., -265806.1276760639}, {
         80., -274170.3582311096}, {85., -283351.0274160185}, {
         90., -291140.3803726785}, {95., -303067.80767274107`}, {
         100., -316066.56048316194`}, {105., -329527.89988081774`}, {
         110., -343272.4868420712}, {115., -357213.71156837326`}, {
         120., -371300.84947223193`}, {125., -385500.93409466237`}}]}, {
        RGBColor[0.24, 0.6, 0.33692049419863584`], 
        LineBox[{{60., -238425.66162916285`}, {65., -244007.09379821585`}, {
         70., -252296.22023209883`}, {75., -261566.69106608463`}, {
         80., -270596.85559332214`}, {85., -278952.45653293404`}, {
         90., -287186.5103709202}, {95., -295612.3086066662}, {
         100., -306702.1622169363}, {105., -318923.5092654388}, {
         110., -331679.8878123917}, {115., -344758.89439986926`}, {
         120., -358056.95902647555`}, {
         125., -371514.0788804516}}]}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Left Well Depth (Recoil Energy)\"", TraditionalForm], 
      FormBox["\"BoundStates (Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {60., -414412.49543069594`}, ImageSize -> {607., Automatic},
     Method -> {}, 
    PlotRange -> {{60., 125.}, {-414412.49543069594`, -238425.66162916285`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{1.3, 1.3}, {3519.736676030662, 3519.736676030662}}],
   TemplateBox[{
    "\"1 Bound State\"", "\"2 Bound State\"", "\"3 Bound State\"", 
     "\"4 Bound State\""}, "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {}}}, 
                 AspectRatio -> Full, ImageSize -> {20, 10}, PlotRangePadding -> 
                 None, ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.577732144569098*^9, {3.579020907868615*^9, 3.579020922990182*^9}, {
   3.579021065177628*^9, 3.57902107071945*^9}, {3.5790211058202143`*^9, 
   3.579021183670434*^9}, {3.5790213894129543`*^9, 3.579021506687366*^9}, 
   3.579021657236109*^9, 3.5790220517325077`*^9, {3.579022185666586*^9, 
   3.579022204577065*^9}, 3.5790224486023293`*^9, {3.5790226443592253`*^9, 
   3.5790226700868607`*^9}, 3.579022702797359*^9, {3.5790227518232183`*^9, 
   3.579022781798266*^9}, 3.579022838500476*^9, 3.579022876599243*^9, {
   3.579023000180415*^9, 3.579023024835033*^9}, {3.57902306352817*^9, 
   3.579023090813344*^9}, 3.579023168480753*^9, 3.579036597305663*^9}]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{Inherited, 3}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Visualize Bound States for Range of b\
\>", "Subsubsection",
 CellChangeTimes->{{3.577732337157773*^9, 3.577732345685569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"Vt", "*", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", 
   RowBox[{"Vt", "*", "80"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberofbasisstates", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "12"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energylevel", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", 
           "numberofbasisstates", ",", "energylevel"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "bmax", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E4", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vmin", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"FindMinimum", "[", 
          RowBox[{
           RowBox[{"F", "[", 
            RowBox[{"x", ",", "100", ",", "80", ",", "b"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1.1"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "bmax", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"FC", "[", 
       RowBox[{"x", ",", "V1", ",", "V2", ",", "b"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "bmax"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"E1", ",", "E2", ",", "E3", ",", "E4", ",", "Vmin"}], "}"}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "\"\<VMim\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Energy (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2WellBias", "[", 
        RowBox[{"V1", ",", "V2", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2WellBias", "[", 
        RowBox[{"V1", ",", "V2", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577732530254786*^9, 3.5777325302558613`*^9}, {
   3.57773266739226*^9, 3.577732667567048*^9}, {3.577732704445498*^9, 
   3.577732704525365*^9}, 3.5777327434695683`*^9, {3.577732790112137*^9, 
   3.577732792192513*^9}, {3.5777330279232883`*^9, 3.5777331137337503`*^9}, {
   3.577733147171125*^9, 3.577733171724885*^9}, {3.577733225557268*^9, 
   3.577733226982457*^9}, {3.57773326583261*^9, 3.5777333709991283`*^9}, {
   3.5777334277872543`*^9, 3.5777334389052563`*^9}, {3.577733494476618*^9, 
   3.5777334993521233`*^9}, {3.577733541163731*^9, 3.577733544762032*^9}, 
   3.577733577722715*^9, {3.577734652459668*^9, 3.577734689345056*^9}, {
   3.577736678112549*^9, 3.577736853033051*^9}, {3.5790232333147993`*^9, 
   3.57902325855256*^9}, {3.579023290321369*^9, 3.5790233201960163`*^9}, {
   3.579023564328779*^9, 3.579023610412641*^9}, {3.5790236653877697`*^9, 
   3.579023792825902*^9}, {3.5790238256566067`*^9, 3.579023850752961*^9}, {
   3.579023890564727*^9, 3.579023892712352*^9}, {3.579024360042993*^9, 
   3.5790243944703217`*^9}, {3.579024435697002*^9, 3.579024512839765*^9}, {
   3.57902456884033*^9, 3.579024610340928*^9}, {3.5790283455464163`*^9, 
   3.579028361351458*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.57902448243126*^9, 3.5790245362829933`*^9, 
  3.579024619809709*^9, 3.579036622526064*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 0.625, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`b$$], 0, 3}}, Typeset`size$$ = {360., {110., 115.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`b$1688314$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$1688314$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`FC[$CellContext`x, $CellContext`V1, $CellContext`V2, \
$CellContext`b$$]/(2 Pi $CellContext`\[HBar]), {$CellContext`x, -3, 3}], 
      "Specifications" :> {{$CellContext`b$$, 0, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {154., 160.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.57902448258468*^9, 3.579024536553049*^9, 
  3.579024620140655*^9, 3.5790366227899523`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1:eJxF03tIU1EcB/Crs1KLtrtrOh9zmxZENCNnmZreqTmxWj7CnJLvpmRiYQXi
0ApTSWeU/uGDFDEtH/hC8tFDnQ/U1FKT5jLE+WxqaGrSfLbh9rtfuBy+3HN+
h88fhxVx10+oiyCIj+pTr9osxMcNyw1ZkoJ8dfrwtC8+WFIjU9Nl+L2d6b2K
dIbEjqPONG7/rCNTXGKh+a/Al/sVwT4sU8n+tBX89rfsPIP+Y5r9a3h7hGOZ
6y9MEh2lzgbe7Xuxoes0pjmvxBOcPD++X6RKBgfU2cZNDkT+S5RSNfMQrsHw
GPvvMFWzX4cb496+WD5E1cwncWkxeyeihrTn9bjj18eqg1R9/76D3Fc8RCkY
0s7T5yLNrR+IjiDe0u4ShzAm+L9aFdcLUMJfetIw+lKwJfhbKxnndivMwe+o
L/ZKj6aBXzoxJq9hE35b10TeVQvC77ZcMijiUcHvy9X5sa1Ewc88/vumtRwF
/06nF29PhoK/Nf8K2X4MBf/Mm4Dvo1IU/Hda4vw7VF3rD51L2G2VouDXG5ey
iY4gmWsreTwBA/wvPFzyHvdagv9h82XO2VN08Ae8LF1vqDUDf2NJyFNSjQn4
n197y6kpNAL/qo1wSxxEBf+DviGHC0IU/N5RHc6Ghwl/1qOMjJwlCvj1F1bf
RU5TwK8j3HXbmKSAn7EWqxOl6lp/Gcl+lKfqWn9survSZZIC/tAqRZkTdARx
Hu+u/tRFB3/PpoCe7UkHv2VhiPHAT3Pwl2Oc+fhKU/CnrYfV7a0ag5/dQZqs
ohH+rdqJAVopCn4/ke6R0FQK+JW+xUFMUwr4FX7MMnSODP77RWHi+UEy+M8k
CkfMe8jgf5LqWBTeTQZ/YJL55nIXGfx6OVmzvV1k8NvG1Xk0QEeQKRGpLYNv
TfhTXMLrF63Azz/axi0aZoFfJkOkqQwm+JNJmWm5+hbg37WRN92KMQH/wI2q
ZLPXRuCfNRvJFjUT778gsLDlUCwG/mRWY5OtPwb+FBx3t/PGwD/DGZyS8THw
J4UaeufyMfAv152PF/Mx8C995vzJ4GPgj2Wtdqr7fySnMhc=
       "], {{{}, {}, {
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}]}, {
         
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          
          LineBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
            32}]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          
          LineBox[{33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
            48}]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          
          LineBox[{49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64}]}, {
          RGBColor[0.24, 0.3531726744018182, 0.6], 
          
          LineBox[{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
            80}]}}, {{
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           1], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           2], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           3], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           4], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           5], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           7], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           8], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           9], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           10], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           11], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           12], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           13], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           14], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           15], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           16]}, {
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           17], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           18], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           19], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           20], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           21], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           22], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           23], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           24], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           25], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           26], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           27], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           28], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           29], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           30], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           31], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           32]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           33], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           34], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           35], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           36], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           37], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           38], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           39], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           40], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           41], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           42], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           43], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           44], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           45], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           46], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           47], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           48]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 49], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 50], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 51], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 52], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 53], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 54], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 55], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 56], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 57], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 58], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 59], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 60], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 61], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 62], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 63], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 64]}, {
          RGBColor[0.24, 0.3531726744018182, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 65], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 66], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 67], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 68], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 69], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 70], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 71], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 72], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 73], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 74], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 75], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 76], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 77], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 78], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 79], 
          InsetBox[
           StyleBox[
           "\"\[FilledDownTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 80]}, {}}}], {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
      FormBox["\"Energy (Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -632517.3730734552}, ImageSize -> {509., Automatic}, 
    Method -> {}, 
    PlotRange -> {{0, 3.}, {-632517.3730734552, -260246.40902792063`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.06, 0.06}, {7445.419280910691, 
     7445.419280910691}}],
   TemplateBox[{"1", "2", "3", "4", "\"VMim\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], FontSize -> 
                    10.88, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                  Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #4}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.3531726744018182, 0.6]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #5}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.3531726744018182`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.57902448258468*^9, 3.579024536553049*^9, 
  3.579024620140655*^9, 3.579036622803993*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.0018688440322875977`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.57902448258468*^9, 3.579024536553049*^9, 
  3.579024620140655*^9, 3.579036623695244*^9}]
}, Open  ]],

Cell["\<\
This plot shows several features: The blue-triangle is the minimum value of \
the potential (this will be the energy value of the bottom of the well. The \
rest are the bound states of the system.\
\>", "Text",
 CellChangeTimes->{{3.5777347211272182`*^9, 3.5777347676229277`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell["2D Visualization", "Subsection",
 CellChangeTimes->{{3.577734846839685*^9, 3.5777348695441313`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5790258450850363`*^9, 3.5790258493483887`*^9}, 
   3.5790258926970043`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V1", " ", "=", " ", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", 
   RowBox[{"80", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numberofbasisstates", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lengthofbox", "=", "9"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L2d1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
            RowBox[{
            "V1", ",", "V2", ",", "Lengthofbox", ",", "numberofbasisstates", 
             ",", 
             RowBox[{"b", "/", "2."}]}], "]"}], "-", 
           RowBox[{"10000000.", "*", 
            RowBox[{"IdentityMatrix", "[", 
             SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", 
          "4"}], "]"}], "+", "10000000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d3", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2d4", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"L1", "[", 
         RowBox[{"[", "p", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"L2d1", "[", 
           RowBox[{"[", "p", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "4", "]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Er", "/", "Vt"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"Length", "[", "L1", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
          RowBox[{
          "V1", ",", "V2", ",", "Lengthofbox", ",", "numberofbasisstates", 
           ",", 
           RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
         RowBox[{"10000000.", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", "1"}], 
       "]"}], "-", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", "Lengthofbox", ",", 
           RowBox[{"numberofbasisstates", "+", "1"}], ",", 
           RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
         RowBox[{"10000000.", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"numberofbasisstates", "+", "1"}], ")"}], "2"], 
           "]"}]}]}], ",", "1"}], "]"}]}], ")"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"E1", ",", "E2", ",", "E3", ",", "E4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{"ToString", "[", "#", "]"}], ",", "\"\< bound state\>\""}], 
         "]"}], "&"}], ",", 
       RowBox[{"Range", "[", "4", "]"}]}], "]"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Energy (Hz)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.577735330358783*^9, 3.577735337019143*^9}, {
   3.577735372636073*^9, 3.5777353765886374`*^9}, {3.5777354510781593`*^9, 
   3.577735489526629*^9}, {3.5777356021986523`*^9, 3.577735809194354*^9}, 
   3.577735920078041*^9, {3.577736000815256*^9, 3.57773615905602*^9}, {
   3.57773619147118*^9, 3.577736353138027*^9}, {3.577736416639688*^9, 
   3.577736433325315*^9}, {3.5777364778084803`*^9, 3.577736599808432*^9}, {
   3.577736641354583*^9, 3.577736641516571*^9}, {3.577736891818019*^9, 
   3.577736893846919*^9}, {3.577737346120655*^9, 3.5777373465654182`*^9}, {
   3.579025867110394*^9, 3.579025889887417*^9}, {3.579025999927105*^9, 
   3.579026065324617*^9}, {3.579026102725007*^9, 3.579026118062276*^9}, {
   3.579027376399682*^9, 3.5790273825016117`*^9}, {3.579028377457827*^9, 
   3.57902840227542*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "12.7258613537997`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.577736483675802*^9, 3.5777366076160316`*^9, 
  3.577736646225564*^9, 3.577737341368452*^9, 3.577737423574831*^9, 
  3.579026188642107*^9, 3.579036708119605*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQDQOvivIuPuRSPDhrJgictG87FyBcu00Byr9pX/D3
8f+V7fIHTYxB4LG9eeeh7p5FMlD5l/bvT7+MDVCUPAgx7YN95uVJMzhPi0LV
f7Y/kGS11PGF8MH0NBD4Zn800GbzER1hqP6f9hXW7nt2vRY6ePYMCPyxF2dN
/lF1XQhqHoMD58Ubul8vCkHVMzpkOR94veKCENR8ZgeJrP+qaRdg+lkcbgff
WBsF5EPsY3OY48bwM+ICzDwOB4Yd+3Yj+AwM/tePLrJMUID7/7zSgo0Rggj/
L9HgSneJlYP7f98qedN/K6Xh/rfi6PFsT5eA+//6vRsP1+ki/G/kWOXmI4Pw
v9P7RWer3YTg/g90YLz156cg3P8KKm9jlB8Kwv3/97Cn2/+bgnD/75vpzW9+
QxDu/yfLwq9duS4I93/2zrzQQ0A+zP/xzyr+7bsuCPc/y+3rugg+A0P35w8z
3CLk4f6f4Go3o+GEHNz/pTu8jA21ZOH+D5+45Mvm9VJw/29bFNfCvE4c7v8+
v+XG6+aKwP3/SS/1d0+UENz/JScvWFqkCsL97592yJaLG+H/3vqurslvBOD+
53j1aWvyYwG4/xlT/zl9eyAA97/85xzGNCAf5v+lzOZX3IB8mP9z2p1/2j0Q
gPs/fvXLpdZwPgOD7e2ja/cekYX7//ivCNlJ7rJw/8vNjRM7c0ca7v8VwsbP
i1ZJwv3f9iVhw/9PYnD/6x5ifrBaAuH/3+vvnZFYIgj3f1A1E098qwDc/z8D
F0QpSArA/f8ySGGp4DN+uP+L5yX0PD/LD/e/flXqJenj/HD/N7ZazUs8yg/3
f2St9K/3R/jh/meZ3Pv0xBF+uP+N8ja4bgbyAYp5xKg=
       "], {{{}, {}, {
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}]}, {
         
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          
          LineBox[{17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
            32}]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          
          LineBox[{33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
            48}]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          
          LineBox[{49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
            64}]}}, {{
          RGBColor[0.24720000000000014`, 0.24, 0.6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           1], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           2], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           3], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           4], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           5], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           6], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           7], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           8], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           9], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           10], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           11], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           12], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           13], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           14], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           15], 
          InsetBox[
           StyleBox[
           "\"\[FilledCircle]\"", StripOnInput -> False, FontSize -> 8.96], 
           16]}, {
          RGBColor[0.6, 0.24, 0.4428931686004542], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           17], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           18], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           19], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           20], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           21], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           22], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           23], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           24], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           25], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           26], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           27], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           28], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           29], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           30], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           31], 
          InsetBox[
           StyleBox[
           "\"\[FilledSquare]\"", StripOnInput -> False, FontSize -> 8.96], 
           32]}, {
          RGBColor[0.6, 0.5470136627990908, 0.24], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           33], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           34], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           35], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           36], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           37], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           38], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           39], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           40], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           41], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           42], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           43], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           44], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           45], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           46], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           47], 
          InsetBox[
           StyleBox[
           "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 10.88], 
           48]}, {
          RGBColor[0.24, 0.6, 0.33692049419863584`], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 49], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 50], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 51], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 52], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 53], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 54], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 55], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 56], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 57], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 58], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 59], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 60], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 61], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 62], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 63], 
          InsetBox[
           StyleBox[
           "\"\[FilledUpTriangle]\"", StripOnInput -> False, FontSize -> 
            10.24], 64]}, {}}}], {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
      FormBox["\"Energy (Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -558448.9090457831}, Method -> {}, 
    PlotRange -> {{0, 3.}, {-558448.9090457831, -260246.40902792063`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.06, 0.06}, {5964.05000035725, 5964.05000035725}}],
   TemplateBox[{
    "\"1 bound state\"", "\"2 bound state\"", "\"3 bound state\"", 
     "\"4 bound state\""}, "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], FontSize -> 
                    8.96, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.06401785714285718] -> 
                  Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], FontSize -> 
                    10.88, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                  Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], FontSize -> 
                    10.24, Plain, StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                  Baseline)], #4}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24`", ",", "0.6`", ",", "0.33692049419863584`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.577736483675802*^9, 3.5777366076160316`*^9, 
  3.577736646225564*^9, 3.577737341368452*^9, 3.577737423574831*^9, 
  3.579026188642107*^9, 3.5790367082228823`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
WaveFunction and Wannier Functions
\
\>", "Subsection",
 CellChangeTimes->{{3.579026812797063*^9, 3.579026827851821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"First", ",", " ", 
    RowBox[{
    "visualize", " ", "the", " ", "wavefunction", " ", "for", " ", "2", 
     "D"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V1", " ", "=", " ", 
     RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "=", 
     RowBox[{"80", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberofbasisstates", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Lengthofbox", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"WE", " ", "=", " ", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
         RowBox[{
         "V1", ",", "V2", ",", "Lengthofbox", ",", "numberofbasisstates", ",", 
          RowBox[{"b", "/", "2."}]}], "]"}], "-", 
        RowBox[{"1000.", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", "2"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"groundState", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Lengthofbox", ",", "x", ",", 
         "y"}], "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"groundState", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "Lengthofbox", ",", "x", ",", 
         "y"}], "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Convergence", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
            RowBox[{
            "V1", ",", "V2", ",", "Lengthofbox", ",", "numberofbasisstates", 
             ",", 
             RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
           RowBox[{"10000000.", "*", 
            RowBox[{"IdentityMatrix", "[", 
             SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", 
          "1"}], "]"}], "-", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
            RowBox[{"V1", ",", "V2", ",", "Lengthofbox", ",", 
             RowBox[{"numberofbasisstates", "+", "1"}], ",", 
             RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
           RowBox[{"10000000.", "*", 
            RowBox[{"IdentityMatrix", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"numberofbasisstates", "+", "1"}], ")"}], "2"], 
             "]"}]}]}], ",", "1"}], "]"}]}], ")"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.579026839458929*^9, 3.579026863552722*^9}, {
  3.57902697339452*^9, 3.5790271234937687`*^9}, {3.579027157082198*^9, 
  3.5790272126983356`*^9}, {3.579027260908022*^9, 3.579027263099731*^9}, {
  3.579027297180353*^9, 3.5790273009476748`*^9}, {3.579027336836636*^9, 
  3.579027339688747*^9}, {3.5790273958145227`*^9, 3.579027444966709*^9}, {
  3.5790274815797977`*^9, 3.5790274869872427`*^9}, {3.579028410205263*^9, 
  3.579028413167898*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
yMTjJrhnvnjcBF/WTjxugscWi8dNqtdk8bgJfi9fPG7Cj2PvVfE8EFwrWzwP
BJ8YL54Hgo9QEM8DwbdJ5oHgj2rF80DwS67ieSD5xUvmgeCqknkg+aHNEc8D
wfvXiOeB5Af3QzwPJP89U/E8EPymZB4IrlYqngfCL+ZMoHhdA35xknhdAz73
qHhdAx63TLyuAV/yQ7yuIb8yyboGvL1kXQO+VLKuAX8hWddQvazF6xrwOi/x
ugZc20q8rgGvfCJe14APGSle14CPXihe15CfvpnY7gG+bKnYvgHuXSK2YxD3
ENsrwKMMxHYJ8Le9xfYH8kuV2BPAR0rsCeBZNWK7AfidQWL7AHjv82I7APiT
yeL1PriXiXhdDz7inXj9Dn6sh3idDnv478rbphuqfaT2Jbm8YcNf+5LEjiQf
+jv+rx1JYi+S/wzn7UUSu5D80VXeLiSx/8jHMvuPxM4jH/hvO488l9l5JHYb
udZE3m4jsc/IW1by9hmJHUa+/Rdvh5HYW+SvHXl7i8SuIp9uxdtVJPYT+WQT
3n4CPXG9NrpBteVsB9Kz5qF6Qqpr46zXLe49zMlyIj2vxPhscC1vnBWfuevc
klZCu2V+HVnBo3Kquk9yJT2XdDMeVp6qkqW4XO331ue7Sc/hbL/JzGWWzb4c
od2qHWrz3iSiSdaMvk+aKO+YLm23WfMk7bYbK7+J4qhLW/oKen5i5de16Pip
+XFBzxxW/vBrhw123hf03MHKf+DD3l4L0wJJT5TfNWJvey0dP9IT5d9v+XFN
hrOgZ3jTFd9NIhSz/A33njXYIPS3uN7q6N94qoLQ3w4NNTqd6qqUZWjiO9M+
cznp2eSvPVgpKz6seUrOCnehfaq3XqQzSTmresi4IM/eQn974rY3V56qnFXf
s8/AmByhv/Xd8UgrQqdRlter9ib6PjOk/W2WpqS/jWTlT9Du4rbgvNAPLGLl
N1g/2/rbwTOkpyErf3pp4N2k9pGkpyorf9fKjD0jtwaTng9Z+XsNvzHesMMG
0hPld/tPOWhwq9XUD6xl5bfMGf/jv0qhH1BtWDtNZ9LPzNYq3q9KZML8IXGN
qXKEzq/MIw8WtfbVFuYPuNp7ahUfXbeadK7/a8/+nTl3bNBt897LSeddKind
y1P/ZPp3ibY/mH2QdO5yVe6sM0kha8s3/21bbYT5w8dNRyeUpypknezMhWmd
t5DOH+j8KXRuxso/5GzRb49xwrh2ipV/SPrTpu1iUklnc1b+XnoXizfmRJPO
X1j5I7c4NIlaEEo672bl3617vPZsy02kM8rfZrpd/svx60nnGlb+t6Xj1qn3
WkE6V/99jz5nRt60Wrm7bDnpzPt5fcnUdswzCKn3I535fcuvmUmfvRss9geS
zrj+ur2wuNfvtaTzujcT17iWN2ROfOsx4mpDEunc3bXtgPLUb5knAj28i64K
8+GrNc9emER8zxzfsnKh9yIbSf9Qn2kmsSN9YuVvvfOazawTwjwtipU/bkau
TV+XLNJ5OCu/T9DbTlFWB0jnClZ+zwOt5tvrRJPO61n57fI9/uwcGkY692Dl
d/u2VLal4ybSOY+Vf//t6ZrD7vqSzsf+PvcPmZFpaVO66wrrtRq2P1Zrtr2f
gcZe0ln773OsybQMP9I1w3I/6ZzF9r++R79wNroYIdhF2bXb2w85994W0npt
KbPPdJPYkZJYeUYejk/W+9qOdPvCyhPR1Wjxp6KXpFsXVp6kd622nHmRRrqx
faTMOyoHdZYEnSLdFrPynM9sKKs8dpB0U2X7YGvmKd9rOXgX6Zb4t3+oy7Qb
5bB06PBtpNv7v+V5nDnysYvrA7c7pNtltk/o3bbDuEeznpBuKn/zf5Z5wef5
thfllZJ514tM90YJ90atLiF9XJh9RldiB/jG7ru7wKJg/oIhpE8uu2/hVe0/
5VbNyQ7QlN13es5+jdd3v5I+Zuy+vg8XvezV5j3pE/23fVZlhq6fl9Dc6wnp
84i9Hx/7Oh57VlVM+uj8bW9vMrkOuhaeX9NInwH8Pn7mS9Ve/YbpapAdyYLt
1z87+dwo7mUnmXh/LTfzm2Vt6u66rhJ7UVqGusRetJPlb3v9XqtHcUGkwwaW
v/c0/aPadctJhzksf0ePoxYGw2aTPcSb7T/mlOdsH+Xfm+xFBcxPYW3Cq1mH
f2mTvciC7bcOufsufdGkFmQvesb6CU3d984X2n4jHZ6y8u7znHi4c+xzaicz
2D6pap9EvVcOP6md8O9RqUx//XzzRy9bkQ62zN5SJGkPuKp0+GymO3wx1fcC
y8drfXFE6dxZVF9Ltm9rudz9Sn7RAKrvKOafsL9X7fuNn/pSfY3ZfuvGn4/M
Vk/qTfXtwvw0bsqMzeUxPck+1pNvD7KMj8taHWt6kOrL+ldZ6OKAj7mnLlF9
I/n2JvNc00Szk3mpZP/0hSzkwW4Nl8QKei8WMvuJu6Tf0Gb3TTxzp/dK617U
HnC99Pj6zvbLGqjf2M7ua69nV/U18Tu9F8xPQZaU3dMvM6mW3gsl/j2S6Qy+
xHXMrKH3IoPt57tuW3ayy6L39F685d9TWXX5N8cIjSpqD/x8o07m/nj6huRV
wjqCn3fVyoy9febnvg0mfRay8r4abtJ/sNsOyX7fJ9kq/e8nM2P3UH/L+mdZ
+Va7G85qKaSbKbOHPJbYbRJYeUJnGN1o064N6cX8AmRX+j43ejHjKemG66cm
er/1D6WTbpdZeXTNKvXfdTpDunVk5XlsPSBk8MZTpNtHtp/fYmrIk/lpCaRb
At//y0bcPrc+ff8B0i2XH79kwwepnmqcvpR068aPd7Jq03vdna1Wkm6+/Pgo
MzU7WuS03Z90u8/Ku+76b53s+/6k21B+/JV1HME9sVc4TPOBcH68lg20fNvv
i5sw72LzE9kaO4M7eq2XSPfvZC6SeVc2K3+uyanB6caCfawLK79Bt80fe4y8
SjqvZuXXGpZ60PK7MB+gea5vtz21g3aTzkNY+cuPcPOb9IginVH+b82Ttu0e
uZ10/sDKPz2v192rBZtIZzaflJt3D1t+TG0h6dyZn7/Jc9t3y7mcIPhF7OTn
e7ImPx/EuJWtJJ1r+fmhrKmecnsDFW/BnsDKa3y6RdubLeKEdQQ//5T1bLx/
4dDrwjqiCT9flelrlLQzLLeW7kfL3SXriA+s/Akjf7Zw6SbMu7RZ+Td86782
L/MC6RzFyn/Z8MaaoX13kc41rPwaKRVTT5/fTjrjalW38HjHuGDS+Tgr/76p
3z9mx24gnVVY+c+Mv2D3PW416czWR/I7P+/pHOlpSzof59cj8rG/zX/kVQh2
m/v8+kVu2WOR+X9bvEhnfl6hJA9V2/0wZJoH6TyEXx/JV793Lq80E+w2KK+H
+rZB+XnC+petH+W6PraN/YtnSv1A5Jxk/bualb9RQan9aXVhHXGMld+k6aXz
M9UF+9g9Vn5ly/zHFycK67XGrPy/TwZrH9fbLLRnVv4uj1wr4sYFkM60X/rl
i+2oq76kcxgr/+LWbZwi5wn2sSb8ul6u1TRo9MD+S0hn+DlOnD0zwrztUmHf
n193y7OUVg6qcvIgndn5EnnwgwMTCvq7kc5Z/LpeviewoUPePcFu85G3A8g1
H7S3yDYQ7DYor9X88CY3VIV18T1mJ8mT2G1UWPl3GY7dfiFIWBcPYeUPzTT2
W+Ii2McWsvJ3eaG+VqdWsDOEs/LvTNe8vqeZYB9D+QNtt24tuyLYGapZ+Zu8
NtL7WOFD9cL18E7d8a8TTcgfqYqVSzma5xL9sy4M4/VH/ZsynnzxiVNo8TLi
ndj/e6Kr2nemrgfdl42Pmd5dTVsYvBws3JetC/r1+9VxntYQ4tj/jTAytV7/
wIz0Z+Nv5uu3mvoe451If2O2jlvC1nFIH8fWI0Fnel46oOIvw3PfyebJd4O0
8to4/KD28H06P99+U765xROtX1R++D9atUvLenDAhO4LPp2dM0I+uWz+6eLZ
MaqlkQfxTmweO8g9rv5L05VUX/jRLTh31yH2Si6VH7zx0aApwYN+0H3BNdn5
PrSrQWx+++h3Snm7QV503/FsflhQONnjz/UVxO+zeabzrq/F1nXeVB74B06Q
lAf81hG+PEiP/cRdMUPUp7pFUXmK2fxTwYn3G6R6sXna20tPjhnp+xM/hvkD
e16orxebN+ay/UGkT2Lzn/esPdB92bzOt5hfT+F9TGf5Jx3i16do58weKDfQ
4+2ZaM+4vq9v8rc9S9q/PL5M3P5hL/XS4/3HJPbnLK6etz+j/GjnVS83Pm+m
uYnKiedrcObQHq2qg0K/Db9NxpEP9iWXSvNhOvt0Mu00c58epUe7XT7a/vR8
XT+hXbH0jaz59gwuZ+k3sXaO/LVYex7QzGRPV9lG4g9Zu3r/YWB9+nZPymcO
yz+G5U/tn7Xb37H8+S9wtGfFfWL+24tfJ/Zg58vA1y0Xc/JzY/U21eLXWeB5
7D1tXs2Xk/ZHWLvtLMm/+P/gS+DPLCmnMeOajEP/OnZ/6+M7lTraPCOeznRr
HZn9VeNdHZXTcAW/XrvI1svgcvZe/8f0Rz492Lp+WqtuuscLI4hvYv3e2l++
YYre4cJ+BLNLLNWeHaanl04c9odfyy/3aX0+iDiueyTlP8L0lLPy0zyE2UO6
2fDrX3BP1s4/s/NH0A3+G4WN+HNtyB/+ySP1/+szZf9b4h/Yeu1mJ3H5Ndm6
z5CVH/f1Y/1VyRxxeSaz9mnE2ifygb9NxIMBU056FBFHv/fnvpjDr3s7Kyfy
H8Tqy7F+G+kN2Xo8S620X6F9Ezm4H3u+4Tf3n1pwW4nsJy0C+PoeyOXtSOCN
WH1VveyG6z9So/ui3/jNdAbfw/gDif5nmT3qHDufBZ7DeIKEk58VO7eF/K3h
h8bW++CwXz21Euu804u3CxVKdLBi/UwC0wEc7UTpoXGA+nA1udju9HA07E7U
/7D69pDob8DsD/qS9yWM2Rmi2PuCcZP8uELPTt8XZ0w64Ln/Yf0Y0qOcxV4d
w2eob6T0oZL+BPcF737weHiNmgo9d/A5b+ZccNy/ifLhJP0e8gEfKskHfDzL
B+NmEcvvZBlvb0F6jBdlHflxBBzzpXGOfHsDP8jmaXJz3i4BHdA+rdj8Cnw/
0zlcMh/D+zUiRKwzxqmDbD4GfomN+037idvnDcZ/Sdots5PLqiTzz+bMftK6
m3i+inF2KJuXor4arL9VaXeqVC9LkzjmmQ/jvjgeyGtDzwXnJD7kZjQdryHM
W/5MZ/Pkimsv0mc9p/WLE+s3otm5EvCRjO9hHLph/jBDy1Oli8JK4tns/i45
PTZZXJ5G+diz9+JJnTj/CMYr6sT5oz85216cvy4bpwye+3u23OVH9qYNrB+L
Y/Zb1JfOs4RURj7WWU4c46b8On8OBRzjbHG+mGO8VnXm55m472E2Ho1idlT4
8WNe9kSxUK/yky3FbQBvY/MreIPHJIqHA/68h3xVp+5C3CHwBseso65WQtwh
8LChRz0CKhdRPBxwvdBVYZPaCHGHyB/kQ6N3mwKFuEPgC81r7F9ECHGHwK+G
DHYu/32N4uGAB2u+Lkq9tovi4YA/Htfy+OeRQtwhWuddKf1vj6YQdwh8XJtL
HfuNFuIO0b7/kyvVhyZ4UhwhrMsbfg0dMm/6QtITvOdjG23rQzNIT3Cl97c3
P9AX4mWB3y6M8VjUfyXpCX7gqtJ3x0IH0hO8dF4fZXXzM6QneEHtbtvkrzNJ
T9pXn+jyNtRkGukJPmfCNb9dcTdIT/DZg936LpDFkJ7gKcfPdhzxIoT0BC+y
cnB2vBxIeoIfDgtRXKi2nvQE/2p7OjPilnCuFty4Sn1J7jwn0hl2DrXRkX3k
jRxJZ/DVdm7v9D7NIp3Bj+1bdV11zgrSGfxmbeXOxmW+pDP42+LJn7OjXUln
8NRwE8PMa6mkM3hr4xWjU+9akc7gRf4lNr3umpPO4Eb7Su+/dL5FOoNbTHZ4
WBUWTzqDm7s75B/bGUE6g+eN26LSu9lW0hm8RqPZe4WpAaQz+LbRL/tUvFxF
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
jg3ti314tTG47jm9Fyj/Rfbdt/8HbqAI5Q==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmnccV9P/xz/3c849yCxEyCg0jGRlpL1QUiipUCoKDcqqVERTQkNGlJaV
Pcree+9NyN6+2fyeL6/j8fvjfN6vez7n3nvuGe/zfr/e7+36D+s+tFqpVEKk
IJ/ipyZyApWbU9cN3IK6B6vGfxWVygPgQ8F/gu8HdwX/AX4V3AtcIn9C/kw5
ljKV/4ZSfge/wn9HIiPyKOp6Uf7H9V5lpdIQvC3y5ML3696HaHcY8m/qduG/
jZEbItvSpzbUf8f1C1wPADehvzuDa1G3AbJ9cJ/bITtQ2oK/57/2lG0KP2uL
6Of3pf2uXP8JHk4ZyvUxyMbR/foD/AnlG/ozBrkd8mvKaPC2yKk8vy7thiAP
5J6L9C7qf6acB26I3J3/16Z8wfVPXE9ENkBezD2bU38C8jLkJZSL1Jc8/pqH
HbjeirKK67tpNxl8PfJ9+jmQuqa0mcj1X+BuyJGUTWgzEPkE7ziQ+l+4fhzc
CbwG/CT4IPCv4Hm0WwPujHyDZx4B3opnNgU34v/tSk1spTIC8Sb3jddc5XE5
EtmJ8nXFciPKV3kNaS3dpDnmWd+Ar0G20FzmsR6I3IOyFqU57/6AunHcV593
/ap5p31r6jcAP02b7/hvJng3ZP/SYzkIWaf0MxKyDeVocGtkL8p0cE/kATzn
Q9qP595Z1MU8FxOQIyhdKf0pPSgVyual20Tk/pRN9W3CGneanM1z9gW/Cx4D
3g/8HnisMG13LPwN7+Q13QE5Dnl23guHcH0q+CDkq8Lcf2WqVBYiG1A/HNmM
+r/VHeQujEV/cD3wBfy3D23OQf7A+86hfgfk99oTlO6Uc/j/FEo/Sm/K1nmv
zeE5L2l/ce9mpb+1ilxD/dZ5jmqXnp9/VFf6vr+idYHWpPbWlPx9H1OOps2F
XPdB/kg/zqVuR+QXlNPBdZGfUUaBt9QcUrYDP8c9c8ENwK+Cf+YdG2muef76
POtl8FzqrqLNbuB3aXMheFvws+A7wR20n8B3gNuDfwTfAN4Z/Db4OnBjrVvt
GfBO4LfAN4Obgt8H3wreA/wheAG4HviF3Ka19j14Gbgh+HXwIvAO4JfB14C3
B78EvhbcCPwG+BbtefAH4LvAHaUTwfeBDwH/Dr4X3AX8G3g+5UrKbEpNvn+R
xpn/NwQvBLcFbwS+RjoN/BtlGngX5D/SI+A9kL9TpoN3RVZpPxu8N/jvqvXS
7sh7KPuDv5CupM0CcBvq1tEaBB8AvpHSAvwlbW4CtwJ/rX6Cm2hda9/S/nLw
/tRdncfzPeqXgPfW2gAvB7cEfyX9R/srwM2pW0ppJr2qOWWOn1Y/81mjMf+W
+tvAe4I/0toFnw9uhPw1Wp/XQM7mujb4XtrMAm8KXgG+GLwx+A7wozw3IY9E
XkR9Lepvk64FbwK+CzyG/2ojByFbRq/h16LPhUBZrX7Q/kTkxsgl1C3W2cb1
Kq5PQm6CvFRnp84u/vsAfAK4JvIKrkdqr1E+5/o06VjkaspI8BbI+bz7cPVL
ZwHXW1D/mPQzuA74Ea0RcF3wM+Bp4Brgh8EXgNcDPw6eAl4bfD94Bnh98JPg
6eB1wY+CF0rPgl8sPHfaj8+DV0ivgT8D3w3eB7wavFJ6Dfw5eKrWCvhB8LlV
2w63Ft7X0vm3gK8AbwV+Cnw5eEvwE+BJ4LXAK8EHUr6t+Gw4n3rUX+Vu6s6r
/nvcVO6UjtM6Bt8MnghgSiq3S0fz0ksQe1J3FtdnFp6/46mfQf1VyEBZCu6g
NUO5DLwvco3mCdwM+QtlHngfjSUvnQ8+gpfU4t47han/S+sb3ErjSps+/HdD
8t65hfpuGnvwTeCuGm/wzeBDq7ZbpKv3yOfIEeCD85lVH9yl9N7UHmyNHMH1
WOkT+pB4znXgAzUe4GvBnTSH4OU6QzQe4GXgjlWfWfV45r6ylai/i/oe0nng
58Ey9urLJgAP0voC3wfuq/kB3y9drv0EXgnuJd0GfhJ8vHQe+CnwCeCtwQ+B
+2mewQ+Aj9F+At8N7il9AH4NPBLcnX6tT1mP0oj6Z6k/SboZ/Bz4ZOls8Avg
YdrH4BXgI8E7BuuHwdLTslHAp2lswS+Ch0vXgl8HjwLvGnzGjdCcM09/Iq9h
TOaB/wAvBO9A2VnnNPKU5PfdLBsn+RtuAg9PHsfl4BPBNTQH4LPBDcH36txO
Hq9bwL9Fn8F1wSOpr0P9reBhyevpRvDQ5PVxg+yC5HVzPfi05Dm4HXx68pje
AT4neVweLG3Xyr5thRyVPH+3gYckr5Vl4JOS18d14MHJ62Yp+ITktbIE3A58
O+NwbukzW2f3gNK2teziJsiLku2t+eCp4GbB+lm2WWPa7FbaNpCt0qK0rdJF
exq5VWmbVeMgG2M78D7IbbKdL3t/09I2c2OtWZ77OOM2kPfNTrbXf2csf6Ls
mdsspP5j/r8c3JzSk/q2pe0q2VedkJck+wa/cF/J9SDq22vPUc6XbYfsWNof
UfuraD+W9juBu1HOpb67+qXxpj/HSi+CHwMP0FkEfhN8OnhxsM04E1mLe0rw
FshWhfegzoyOlDaFbcfXNK+0nc87FwXbwKch+2e7tB/y0MJ+guzO92h/HvJw
5CHIptJ5eq7Wn2wPvnE98KPgdaVP+G9dnaUV23Za/6fo/Ml6tqbmjPpXqT+1
6rHTGB6APAy5oWwBykCuL0YeU1qnnlH47JT9KB+kn/Zh4f28BWVI4fu3LOyn
yZ+6lPcMCLZDOyHbUb934bV1bfB6OAlZo7DvM0FjqvnMY7Ur33ac9j592JOy
m3QGsknV39c7eE9fBW4pW4P/9s3r9rjg86IV8qDcb/VZfobW2/iK/Qf5EUcH
r686edxk98qveTzatxGW37dVfs4q8HNV2+E1kH0L+5I/6owv/R2fVO37ydZq
ijy+tN+3FvIxrntSX9V5EW2vDqZ+XXA78FHgOcG+88HSkVX7oesgH6X00BJA
PkXpA07IZyhHg9dGbhbtmz/Hc8YH93uwbLTg7zk02HecVHh8X+KeQcgNkC+r
r+ANkU/r28BrIV+s2sdcH3lKsO/SNdi/kc8o+79hdB/e4r338d9vOpuC9at8
0k8r9s/lp4+kzVc8ayp4J+QZwTbRETpPKIXWPPKs4D3UI3idyi76nHv24vot
5BlV63Kd1y1kp1D/Dng0+KhsA8gW0B6qkdfYaGS3wr7iu6V9+Rb060PZEOCt
kW+Wtp87Uf8jpaV0KXv2S/6bQn1jjUNpn+tU5Dql19LGWX/I7/6H66uD570X
cuNkW/A5nje3sC6SrVLw3yx9k+ZO54DmXee4zgdw56r1RPPC/pjW4wF5Tb6i
s0r2dLI+3r/wOMtnll+2fWk9In0iP1d2bIvi//06Sfn1/bNu0djGfE+DrKu1
b3am7Zbg7bN+k27Xvq5D/bd5PzbJ/dTzV+c9oPGuX3VftFa0TtT3Rrn/a3K9
9lKzwueC6pcGt9G37c67xulbo31U6T+d1/LR++c+N81Y/y0Ptp1uDn7+zPze
f7R+kHcF+7HyZ8U1zSh89klnyYdV+775TGuW+zMheBymBe8p6bFxyF0138i5
yd+xX/6WtfOYq9/Scy3zvOgs+xK5iXRUYX0kXTQ260npy/ZZT0qf1M1tdM9u
+cyV778k+JtHI1tL5+UxP7Yw7/FLxXyBeANxIOI3jil8rfP52NxmTNbhr1Ts
d4gnuDJ4bLXXxPWIN+iV9d7rPOsy/l/E9y4LfpeupRd75zYD8/5Sn48vfPaV
Wa93zLp9eGEb+LOKzw/1QTZh5zxnJyL7FNatGoeWpc+TOcl90bs0fzpvdO7o
zBqb8UfUzw3mDmcH74md8viLExMWzyLbT98nJ2MU18OA5wXrqsa5/WmF94z4
wBYZa5ylrzTmOssb6oxEXk3fXiyttzZPnvOd83MmBa+F6cG6Xd+gvmmMe+Q1
LLtGa6Fe1bZD6/yuSm6jvsrmUZv9SvNs4t207KcV5q80fwMK60o981jaXYB8
l3V3ezC+M5hj1PkuG0J8mXShbACtNa1LXdfPz9JzZDucVNhP0xgPyeOseR6Y
22sOB+e1VGZbqFZ+5sC8HtTnEwvzgwuCz7WDgnmqEXl9XpLHZVawnaZ53Cla
h2pfTQ72ocWbac6eL33ObJhsi43I62pU4XZqU7vq8dPa1rfIHtqw4meoTZGl
7tE59ESwzbN51XOudaBzqF6eoynB46A1J5tJbWUnnVLxOGhfyc+Zm+tTlmfl
NvWzbrwo2A4dVvhMFU8ublBn52Gl2z6h87z0GpRNon2s/fzft07I4yYuUfc+
Rpuupb9buFt+zr/PKzzWaq9zamLhs2pEru+X92vHvGen5b2q8dy+6vOubzDf
3h3ZO/neabmNbApxrbIrTqbN1Zrv0mtOa0/nqPo4NX+v2izQ2sq2+dw8VuJs
Lyhs+w3Pz1ffhuZ7NT4PV63Ppdf7lebMPuF7bw1e1z2znaPnT8rfqWfqXN4y
+l699/mq+7susnc+D2SDvVC1rbJe1Xz4dZpzvveRqrlxGZhXFf5GPeuE0ryZ
+iB77/LCvLS4/MvyXhO3J45PdsnFuV48/5zC7VU/rzBP9K89lO1J2ZUjc73W
qvaD9sXLOkdKn2nLku123S+/4AHqTqbNpvRzWGmO6lHqh5Tu9+Bs22vMZYd0
yTabbLf5uU/qj+If2qfDS79/Xu7DnPwts/Oe1t4uso6TrpNO/C8eoFiA9tT1
hfm3/wXzhxNKc1jistpQ90YwdyQOaTFlL/Aq/r+28L2ncv15ME8lvuq30jzs
WNnVwWtHPN+NyOW5vaSul2l9lOaeTkdOlr2l7y3MOf8Xr/hGdi347NLvXZ7v
PTXbe6/Stk7VfN0jWhPZXpXdujz3Ve/9NpjTHsd9bwZz2meAVwdz12PA7wVz
yEt55tvBnPMi8Fv5GzUO7wRzdIupfyGY57xC8aVo/uRJnvNcMId5GXUzKc9o
vOXDRfMqT4HXyF4Bjwe/HjzmC/n/tWCObgH4u9Jc6pnIz6jfhvrR8keqHpNX
+LZ3g7nuJbR/P3gMz6LNq8H83tXUvxLMW16lOEMwF3ol+OVgDnN+NJfwtu7l
2b8Ec/vn8JzmWqP6FvD60dz+NPlP0ZywuOFNwJ3BF1BfOzr+OBO8cTSXPgO8
QTTfPr10HEt79iLwptHc+4WlOTKdtbIt/9Xvhc9ccU3ivo7KPNJD4P7gl0rz
AFNp34T6h8HHUb9WNDc+tTQ/Ip5qSObHxA12BzcA3wPuDd4WfBv4cPA24Ful
n8XjRfPtk3lOkcx9i5/5M3gvTAS/TbmX6w1kc0b7aHOo2zrar7yktM8ie1/x
sXrRfuLs0v7Og5oz7t2e+t7UzyodO5R/N1fndbQ/eCl4r2h/cF5pn+gmrV3u
bRftK11J3V/BPP954BTN808pzS3Jn/2hsH8k/0s+cUmbA3RWUPdrcLxAMZa/
g2MB51PfnjZnap2D60b7vBdLFybzmA9Ibwfz/JeL/4/mAJ+lfnQ0Z3s3eAz4
DvBdpXm4e8F9eNfwaE5VfN3QaO5UXN/YaL50hcYh2Qf7l7uL5l3FDU6KXg9a
F+dHc0QPUT8xmjtV38ZF85b3lOYItR9P1PkZ3Yf7qD8VfGPF3N346PWmdXdu
NB97v87zaB51Zek1p7X3MPi8aK5VfODIaB74X84wer1p3Z0WzT/fWdpv6Vex
zyKuQj6G7GrZdLKHZAvJhhdXIrtasWzZ67JzauY24udlF7TNtoHshA6F7fm9
8zPF7eydvNbFiyquLRtRdo78IXFbOhvkT6o/8quWFo6j6HwaFc2fi/O8MNjm
uSLYL+xcmL+okbmXc/O3HJzfu1nVdo58ojezvSe775Jo3vtpnnlSdCxAXG6P
aJ99Efjj4Jjg9dR9Ehw3vAG8KjhueJ34geDY3zLwR8ExvmvBvwfnIdwJ/jo4
VnUz+FPwLuAbwb8F6y6t8z+C41Z3Uf9DcJzlVuns4JjUpeBZ0Rz4M/Tt2eAY
1jydUcExypvAM6J5+Mdp8zP1zTVu1P0UHNe7Hfx9cOzmFvEYwbGb26Qb8r7T
GfplcIxyOfUXRPP8j/HMrtFcx9XgQ8GTpc/B3aJ5mwXgQdExEfHYiucprndH
cOxQtpBiJIqVrFOYb1dsRfykePie0fyY4h4ng5dUzI0PjOb0xIfvmhyPFN9+
bHTsRvz2tGiu+BHw9OhYxqPg46NjKIrJ9I2O74jrPho8F7wYfEx0rEd8+IBo
7kg8uXh97ccu0rnJcQXt6+Xgd8S30fbP0rFkjWHr6LyON6J5Xdl34mXFWYmr
PB9ZTY6f3U2btpRJtHlLtlsy36Qz7u2qbVLZ0+tS/xrXD9FmneRcmQfAB0XH
dt/T2isdA9NZL45Xvq94Y3FV4qzeieZ45U8fo32feSvp0snJ/LXmt0Ny7Fx6
Wzkr4hqGyu7g/sHSLdHnnZ4xkbZ9Ke9WfUb0zP3U2aE4rPINxLc3iI6BPiyb
kTbvV312dIyOU7+NPC459qa11CY6nvtm9NmgM0L+xSFcz6H+I+SeyWfkd+Cj
we9VfTaJ39O6WoHsn8wn6jxaJzo/QXbCqtJxRJ0RH5aOU2ofKSdG/oD4Z3GO
srXFw09PzueQTdUqOj/nde2L5NwO2VEtkm1T2Zz1o2PBmq8ByXFE7ZcJ0TaA
9PkuyTHvL6nbJ9nulP0pTlM2h2IHyuORr3IDskcyD6tz/NPScVzZTuJdxYmJ
G/u4dKxUdqB4XfEw4mMUGFVuj9bbjOQ8Fem9mcm5LzofxT3JF1dMRzy2dKj4
FuVN7VU4DvJB6ZirdJHyUo6rmI/vEp1L8KHmM5lvlZ2puLn4KPFSFybn8Uh3
7ZdsO8qePDg6Vvu+9Eoyhyvd1Tma//wgmlOWX6i8l72S7aTvqd8uOcdF63//
5HwR2ZxH5v0uHbJvcl6IbOyWyfkHsuFbJ+cxyO5VjojsyZU89/BoffUxsnly
ToNs3eOieVfNV+3kuP6L4PXAr1e9thsm51t8Cm6czOF+JrsmOU9Ftv3OybkR
X1DfPjk3RfZb/2iOV/W9ovM69JzJ0fEa2RW7R/sX0jnNkm3NH8BFdB7XCmST
5LyQr8CNFDQHr9Y6ibYzv0UeFp2bsUr6JzmHQzZ27+jcEvW5VXIehvyUJcn6
6EnNUXTujd7bJjmHQ/5aH64XU/858qjoXBS9txdt3qjaFl0Afqtq7uIa8LBg
X7V+ct6b5rpBcp6Kxn+H5NwO7fcdk/Na1OemyXkw30Tbke1kgwT77FPyfjmK
NvcExx3qJeceaY1tk5yrJ31YNzkPSbp36+S8PemiI/OcyjbeKjknQ7po++S8
Pa3zLZPzlqTn64A/rTon5IRoW0tnTa2s656lbvdkHl/jPyTazv9aOjk5d0dY
Nrx880bgLZLzP6RnTqTcXvH3Do72CzS/f+j7K46HbpT18NM6f5Lj67IJN03O
TXmB+ppZTz4j/ZocF9dZOSk5dq6zcv08X49E53SJu1W86fDkeI98pVuC+Yvb
kKO4vkF6Uv5F6dwU2UU/l87zkL30a+lcKNk/ym8Qx6tY7e+lc6dkh2gtiFtX
jtu45DwA2cM/lM5xkU1VIzmXVGfQN6VzdORvfls6v0f+snhXnbOKDf5UOr9E
9lvn0nycYri/lM5xkb0krl7xQcUJFU9VTEixYOVeiOtUvKJjcp6WfBDNs/x+
+fjidRVTUF6GeIbrqH9cuql0ro9sQvFF4pnEE60pnUMmm+qaYJ7xYWTX5Lia
/FPFyMXFy1YVPyx7Wtzm/0rn98huVHxHPJ74vK9L5zOJB1AeifJJJmRbV8+Z
AT4+Od9Fds6g5JwV2bcDk3NfZLOtnZz3eb/OyeT4onznMcl5HvI1Dk2OKcpH
Hpuc8yFf5szkWLj8qfHJeRvyU2JybtBKnnlGcuxcfsdZyXF9+WJ/l87Jk406
OjkHRX7WYdkH0Ph0p/7A4NhlSM5Dkq5LyXmr94K/Kp2/JZ6klnRQxd/yR+nc
O9nSSiJSPp9s7DI51+0e8CHJcVPxBvIvxKEqhr9RdE6ynq9YgOJYis//VTpf
ULb0Wsl5tPeB/ymd2yebv2Z0zrPqNR+aF+Vmin9Tbpj87Z2S8/CkM7skx4DF
Syi+r3W0NDlnV7EHzaPyF9vLHtbzovMnpVv2jM6f1N5X3u+T/N9H+ql0Hpj4
FuU6KOehXem4r+K/Zwfzfjr3bkzmDC8tnO+xunQulziZM6M5Ddla+2kuwc8j
947OVZM+kR4Qv7VbdE6veLuLk+PK8s+UjyoeTXya4u/ScdJ10jOfl84/E0ek
PBnpHOmeS5Njpeqz4oyyQy9Pzkk/uOK50/7UPj05WB/qHJiVzxnF2JRToLy9
2rmN1pFyyBVfOCg5T128hHjORbS5P/jcWFiYT9H36Lt09okH1thfy31ncf1I
xXaI8nh13+LkPGD5vspJUFxMvqp4evHPs7LO7JSc3ymu48DkvE9xO/InpEs1
f1+Wzs8TF/dF6Rw+cXGKeSkGpjwf8dvyq65PzomVzS/bX3Frxa9lnxwQnYsu
/V+NzuvWfjw4OV9f3FTn5BwC8WlHJMf+xasohiL/WzzxGdH8hjiEbaNzF+WD
KK4qrloc0P8BDNTs8A==
         "]], Polygon3DBox[CompressedData["
1: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
toAY7Y/aOThiN2LE32vXSBA7UlOAnol+hv6Ffjqg8Hm4PjEPuSI4D7EQMVWv
wgeIteBQPQu/hVsRA5FLgnMQGxEP7F74EFyUGIZcG5yR2IYYjlwdnJHYjhip
b4lPiJ3wN6yFoBazNQByZ8S4aAPoK/B3YgJiA/Yce29G4Q9otLyLOzWnR8P8
gjFyHgOyY6j9gzUPYis41lbBOX64FxrILsEcDG0EzYFaAHJwaBFwSmwjNhJu
BiekloGcNlwRTYJcHTE4WgUxeYfgHCuxOpwLfWhW4VfEsOQq4ZzEtuRY1y7x
CrlXajrQV3sXvkNM37HEP3B5crarButl5HKpOcG47qU/b2RzQGoxZlbmhnDk
TiX+gTuT40VvQ38jPqKm5M/aOVZqTaiB+au2vkttDHovend39mSyxobWhsaF
Hk1+BW2YnA65HXLS5KbJeZD7IOdC7oUcxIrFfl0crdl1z9bv0LYPKpicBbmL
vWrr0dgsbBc5nC7Ffw6vnEMhl0L+j9wPNQSbcC2Nb1HbJpGvQ++DK3Yp/hV7
BRckp0duD00RbRGf3KLYv/Ojc0rklv7W9TatnRMhX0F+Ba2cGoWNsnMm5E7I
aZDbQONE6yTnvkKxrydH3zP+nhwl2iA5P/JV2FhsbfvaeiuaJNokHAV+2zo7
V4ImizaLpkOtCRoBWg+aFLnjJyprVX2FmwZr1O2Ta6S+rB1zUTtFDVQdXJNE
bdSBwksG66kbJ+fwv6odA5LbZ0+hX5N/ZK+Rw0ef37qy/k9O/uvaMR+5emLo
j2vHhMTW2wsvrB2D/RPNl9FODhF+H3tODBJcc7Vh4d+7R3NMuOZBDeu96K/k
EahxQs8nf/BfbZJwk2DNao1kTR5tHs2aXD01XCFY/6e2i3z0wcGay0sa7yPc
CNbY2ib7WHwta4i19LzafLXN1Ton13igT6N3b1H237zo+OyI8r34lqwZ1s7Q
4t9aaM6GDb8DuMcdwe+GGJl8KvlgYuc5yXoVOTb03X9q14rAZ+G1s7JtBTYB
2zA3OTdKThS9d2a27cGmYFue0fGla8cDxAWDo2MZ+Bn6+DDNW6k2Z1k/ur5m
RGW+RP3UxOjcChzjQnC2rWENsZaGR+cK4APUE52f/Xz4KHzVCOF1hd+pHe+P
zI5feWaeHY5DLhQfj68/NTrWxH5gRyZk+zZsFLbqcuExlW0stnbt7FgATgI3
GSe8c2UfiC8cm+0f8IH4QjRGnp/4jTiOHC72Bv5D/v7M7Pj53dr6xxnZegQ5
TPSNqdlrjT3GXpuUvbZYk6xNzuFcnhEthWfm2bkm2scR0bEUNoh6p1N1fqvK
OV3idXJI5JLgm49Hv19qtbBH2CX0uhujYzpiu6uS653IkaPXk59B10Lfej6b
Yy9Rvj3cm/wa9QfUF5C/vDDbFrBH2Cv4V2LzmdFcl3wxsRUxJvz0ymyuiw5J
Pddk4f0q7yH20pTsvcSeZG/OTtZjyemSn7gie+2h+1Jf97D+zq2tye2h/vxs
34MPxBeOia4FI0fbNzoH/WllfnxS9Lph/VADQb0DHBQuSm0csT/5n/uia3bI
zY3P5kZwJrjTBdm+D5+H7yPm/lB4y+hY/DI4auUYZGLhttSCkGMm/0a+nFwq
HPQKeLPaAbVz9tNLLLNA433hJNGawAf4o2itYFq27cMGY4tPys71kfMjfzAl
+lz8C35mRrZvhNPD7fE5+KYh0b7o4uzcGTYKW0XMznrjXtBK/qsxqex/yQcT
y6ClsiewDZeyn2vHu8S9p2XnM8jRozfho/HVxCD48j+SbRN1bVMajlGJhYn5
ryn3369yPDe1rH9q/XhHvKtfk7UL6uQmaf4p2fkUajLQ+3jvvP/exf5MIvap
fY+XRde3oTUQ41+j/rclHoSTowefm+3L8FH4qjHZvhAfh6+7n/dWOz7bhefP
5lZwJLgSGgS+6O1gbeKibN+Fz8J3Dc/WJ6nBQF8kpsQ+UrtCrMn7PLYyh+F+
p2f7Wnwavg37yrOhb6BznJftS/Gx+NrRcKzKPhxfjkb1HvwlWrvCXpJrJwdP
Lp4Yeo/iK4itz8n2vfhwfDn1K9QqkeMn148m9T6+LFqrukTzT67MMeGa1H/A
zakxoNZgVLZvx6fjv1iHrEe+Cd/m7Gy9Fw4AFyDnT+5/fvGlrBvWDzU01BdQ
D0EOG439RZ37XjLXh/Oj3VPD+VHtGk5qO6n/wjexJtDfvxN+ubYNfE/jM5Pz
p9R4kV96J1kPJ4dALuEt4dGVNXS09A+S8xHU/JCvfDuZa+NfySW8may1o+mj
7b+RrO2jyaPNv56szaPho+U/l1zLQc0HtR/PJNdqUNNBbQc2CFvEmhuSrRc8
VpmTwE2uS84PUkNFvpf8A7WD2MhjsZ/J2gk1beQH0RRml+t1SLaX2G/4JvWz
zybXnlAzQu3I/cm1FtRgUIvxYnKtAzl5cvPUEH9fu2aY2mI4P9x/m7I/+Q1+
i2eAXz0A56pcw0Etx7TkfDQ1BuQHP0zWv6mhIv/7fnL+gZonap/QQ9HksbnY
XnwKvoX8CLXDDyZzP/YLuf/vhR+tnJMin3Jxcr6bmgnyk9wjtoT4iXvHJmGb
8F9opeiJ1EShkaCVfJccCxMTkz/BJ+Gb0HTQdmYl59+pQSR/Sf6GmtuRlfNJ
1EgtrKzfUU/Db/Duti/2cHpyvp4aC/Kjz2Vrw2i8+BdsMrYZf9FVY48m1ypQ
g0AtAj4MX0aN47rZNbyfVOaox6l/XzIXhn9Q6/IQMWnlmgVqFx5O5qr4A2or
HkmubaBmg9qNa5Lz5dRcks9/ITk2xP5RmwFn3a/oG3BZcjiv1OZE5HbIiT0U
vUZZq+Rs7q9tw8nlUDN+X+2cAbXkTyXnRlsUezovuT6BGkLqB8hBLahtQ8hN
oTHx7U4v/A4Nj28Dd0PbuzY5v06NIfUSaEY7B3NutCTqBKgXIKdPfgKNkHp9
8hXoNehnrLXvgv371cn5eOw59RjDsvkYNbvk44ghiSXRGNEayeGSyyXnS+73
yGz/Rw3jUdk2iWefEmyrqBG4t3aOnFw5miJcj9/gt8hPoi3XhQ/hQ/Al1EMe
rvHDsvv8Br6W+hpqC/Ex7crvz6qd40GPJiYhNplV7gcbfFLlmjNsM3rt/tGa
G3r8/wEbWiHL
         "]], Polygon3DBox[CompressedData["
1:eJwt13fgjuUaB/D3t0jRQDpWJWRFQ4qQTkbZzqFBSafoHCt1Mss6GdllRgll
yzpZ2RlRoexkldGiEpHR/Fw9/vj6Pdfnue7nfd9n3bciT3T459PpqVTqfcmS
LzJTqdOgpPRX11e/ZscX6mulG6vCNskB9WPZUqkKtu+QwfrWszR5QF8utlj+
r/48LZUqzy5kpFIfsf2subHlbd8u++R7VkR66LtfPcDxVqovGFufZbL+bAk7
zWqx3x1vEFvNfmUNWXZ9fdkidorVYL/qW8LfYV+w29kvrJ++xewnVpP9xo7o
u8DKyVDWJH6rnFQXlz6szsXvHd9/bFZyLq7ye16wPcH2Pscrp+9rx+vOJrL9
7Gb2VUZyvuK8jbPvoH25jR1pe7vtK+QpfdfaP5xtVeeSlqwQWxZRf+N4lVm6
+ja5VV7NSs7tlY63VL3U9tf67tKXpm6WlZyPOC9zfI9H1J/yr/UVlM72/V39
bkT9lb5KqTj5qdTyCPuWVUEZ6oNyit0ofVld9V75Tn29dGf3qYtLMRnl83bx
y3y/l2yvsH3e8erF/Wf/UPYhyyaPsLzssJxXl5UhrLH6hFzn+zdmC1g39Wfy
rbqwdGXV43dJmr4KbDR7RP2Kz9iszhH3L8vHvpQ/1OVlJGuq/iozfqTrzEbZ
bKYuITfKmDhvcV38juPqK/RVV0/W11r9ov3z1N/5bdXYWfuHsY9YdnmU5dE3
gm1TXy6tWGFWVG6Q0fbt5jl9xv9sz7V93PHu1nfG8X7Uc72/TfhC9rx6oL5V
6l/0NWDZ2DeSHvccH8MejWdNrmI12VTWVv2ysZvUl8Szya5mZ6W6vhOOV52d
U6+SD/ScY3VZbvXn8hMrIf1YPfUQx3tfnS4PssvZStmoPmtsHXaVeoVsYD+z
2uxK9e44/6yAdGL3qPfEb1EXki7sXnVvnzFHfczYquxn3/UQP8NKyUusQdyP
cqV9NdgU1ibuFcnOKrPx7An1MbmEVWFvsCfVfXzGQvVJn/GjpLkeP/Br9NXl
s/X9N36HvhLxTMX1lZ765vPJtrcZV1zfd/ZvifMV7wtpzSqpFxhbwL7mbAV7
js1nV7OH2busQ7y/WP6M5PjxOeV9RiPW2/Fn8Ndkt3qqZNiupWeasY/Fu4AV
ZU+xDaxHvJtZPtaULWXPsIWsIHuMrWQd2VyWhz3IFrN2bB7Lyx5iS9jTbBEr
xFqwVaxTzAGsMHucrWad2RJWhLVk61l3dovcLB3tm+33dPL3aGZyHeJ6LNL/
L/aGHFeXkYH21dAzkf2svlNeZY3YJHZWXVHGsobxTmM3OE6r9GTOe4H1YtPV
R33mHewH+5exYv7+m29kPfU9wcboWcyrySn2Jjunp5KM0/cPNoX9pr5HJrIH
WUPWy9jpxj0rO9ST5Vc91WSCvkvV4+WYurQMYDWNbcleNvYPWWLsk+rX5Yie
G+JZiOdQPUOy2V+bzTT2cWOnsyx2P5vBWrA5LDd7IM4pa88KRJ/jtOFPS0H1
3by9/avV78n+rOT++5vtesbWl47uv+2sA3tLOjhGGeN2xTvV/nWso2NUu/gc
LWCH9ByOednYJvGdbb+vb4McUNeS87H2UK+SfepBxu9kt8S9JdtYF3nJ8ZYZ
v1wqOt7GmAfi9+vpyxrr2SK11XVirGNck5msL2KdMZfNkz1Zydwac+wnxs9i
n7JyLK/jdFQ/JztZGekR967ktu+muF8ll7qRsfMc4ynjMli6/V15F9mlniWX
2W6gb46+lvpmskszkvMZ57Wc3/E2y8kaqufqa3WxLweryu6Wtvp6sCm2t/uc
HTE3sGfZNNtrYm6QrbEmkRP6bpH89uWN+88xr3XsTep79Z1Rd+Oj4x3EVsa6
wfE6RG/U8b3lY/XtcZ3YEHU3KRn3n/FjjV3D88daks9ir8Wzxgqyw2wmGxf3
BivADsXcZHxd9aW8j7pcrAPkLts92H59I4z7iFVmPdkBNpJtYlVYL3aQjWKb
WVXWm33ORsd3i3lZPT/tr2k9tck/J+OdE89UfB82MOY2YyvFuo3tY8PZ69Iv
3n3GOiWpj+0fz/rHu5llj/uGjYv7nL2T9teSKbWZvRHzcrwPWQ62jU1gg9h7
8ZvZ9nh3s74xl6cla/EtbCIbzNayy9gOti4zWXs09UVK2i4lazOTtcLD2ZL1
SaxT4t6Ymp48a/HMnb/4zAxIT65tXOOjsRbKTNagLYy903ZF6Rn3EDuip4LP
/T7uI36Y5U1P3gvxfmidlaybY/28TE8b9Sf8kJ480s6+qur34vlVZ0kzVkS9
JjNZCz6ULVnvxLrneeNfZTsd70Z9BzOSe3JMenJ/x31+Qt013olss/o6fXv0
rTZ+B8uMc8OuV78d1y7e4foKsSP6Nhpb0d8X+F72ip5pLJPdx6az5jE3ygz1
bmNLsR/tX8RmxzhWlp2ONYWxk2IOjfki/h8R6554RuK51/upvqExh8Z8of5E
T1F2LN497C22lRVjx9nC+N7ss3i3xLll78TzH8dipdlJNpuNZx+ywuwomxPz
ZXryTMez/SWbwoazBSwP28sWsFlsT7yv4/8D7E02NNYGLBfbxaayETFPxDuD
7WPT2ahYL7B87ACbFOu9mMtZTrYzI1kPlfS3LW8jd7jOG1gF1jU+W9+wWBOy
UqxdfG/2IlvFSrP2cY1ZH7Y63r0xP7EtrG+cOxmm/sDnXs52x1yl76aYi/jH
rJ+e9aw86xzXkw1hy1lx9p8Yz3qxe7KSd/rvMjbmefVauTXmsfRkDoq5aA0r
y56J68n6s3XsNtaJ7WKD476SkbE+cryr2X77/wR/Cwkx
         "]], 
        Polygon3DBox[{{1225, 731, 968, 1502, 1073, 1074}, {1224, 730, 850, 
         1487, 1071, 1072}, {1442, 763, 574, 573, 860, 1288}, {1065, 1064, 
         1497, 955, 956, 1498}, {1274, 838, 496, 497, 839, 
         1275}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jsrQHEYBvC/+/2aiSLFyE5MMpFkEjKwuBvc7xbhC/AJmCUkSkKS0f1+
GWSRSWa/k+E5v/c9y3PO/5zijsGmgZgQwoL0GqK52eWL53EhZPOORfxkOX9Z
zYT4EOqZx1aWsFR6zFWcYC2X2MhVtnOd/dzmNE+YnhBCht5pubR3M1+GYkO4
sg/zmiO84ShvOcY7jvOeE5yUB/MUH6MOPnGGz5zlC+f4ynm+scN7ZemckXd7
Dwtk1TNe2Jd5zEluRefFNbZxhQ1cZA3HWckK6TYXs4W5rGMcq/ijs4wfLIzO
1v1v9unNYhdz5Fwy7WfM4CnTecI0HjGVh0zhAZO5zz1JMu8ykTt03GGL6sIm
1YcNOorQGX33mP//4Q+hzD/r
       "]]}, {
      Line3DBox[{970, 1268, 641, 969, 1503, 1176, 971, 1504, 1177, 972, 1505, 
       1178, 973, 1506, 1179, 974, 1507, 1180, 975, 1508, 1399, 1592, 976, 
       1509, 1181, 977, 1510, 1182, 978, 1511, 1183, 979, 1512, 1184, 980, 
       1513, 1185, 981, 1514, 1186, 982, 1682, 1269, 1187, 1270}], 
      Line3DBox[{984, 1400, 1593, 983, 656, 985, 1515, 1188, 986, 1516, 1189, 
       987, 1517, 1190, 988, 1518, 1191, 989, 1519, 1401, 1594, 990, 1402, 
       1595, 991, 1520, 1192, 992, 1521, 1193, 993, 1522, 1194, 994, 1523, 
       1195, 995, 1524, 1196, 996, 1525, 1197, 997}], 
      Line3DBox[{999, 1403, 1596, 998, 1404, 1597, 1000, 672, 1001, 1526, 
       1198, 1002, 1527, 1199, 1003, 1528, 1200, 1004, 1529, 1405, 1598, 1005,
        1406, 1599, 1006, 1407, 1600, 1007, 1530, 1201, 1008, 1531, 1202, 
       1009, 1532, 1203, 1010, 1533, 1204, 1011, 1534, 1205, 1012}], 
      Line3DBox[{1014, 1408, 1601, 1013, 1409, 1602, 1015, 1410, 1603, 1016, 
       688, 1017, 1535, 1206, 1018, 1536, 1207, 1019, 1537, 1411, 1604, 1020, 
       1412, 1605, 1021, 1413, 1606, 1022, 1414, 1607, 1023, 1538, 1208, 1024,
        1539, 1209, 1025, 1540, 1210, 1026, 1541, 1211, 1027}], 
      Line3DBox[{1029, 1415, 1608, 1028, 1416, 1609, 1030, 1417, 1610, 1031, 
       1418, 1611, 1032, 704, 1033, 1683, 1271, 1272, 1034, 1685, 1274, 1275, 
       1684, 1035, 1370, 1371, 1705, 1036, 1385, 1386, 1709, 1037, 1419, 1612,
        1038, 1420, 1613, 1039, 1542, 1212, 1040, 1543, 1213, 1041, 1544, 
       1214, 1042}], 
      Line3DBox[{1044, 1421, 1614, 1043, 1422, 1615, 1045, 1423, 1616, 1046, 
       1424, 1617, 1047, 1485, 1618, 1276, 1048, 830, 1273, 1309, 1308, 1049, 
       1695, 1323, 1324, 1294, 1344, 1343, 1686, 1050, 1373, 1374, 1372, 1380,
        1379, 1704, 1051, 1388, 1389, 1387, 1619, 1495, 1052, 1425, 1620, 
       1053, 1426, 1621, 1054, 1427, 1622, 1055, 1545, 1215, 1056, 1546, 1216,
        1057}], 
      Line3DBox[{1061, 1547, 1217, 1059, 1548, 1218, 1063, 1549, 1219, 1065, 
       1498, 1550, 1220, 1391, 1486, 1551, 1354, 1358, 1221, 1359, 1491, 1692,
        1329, 1313, 1279, 1302, 1222, 1360, 1494, 1700, 1346, 1345, 1281, 
       1335, 1353, 728, 1280, 1317, 1318, 1282, 1303, 1336, 1697, 1223, 1363, 
       1361, 1362, 1356, 1702, 1224, 1072, 1397, 1398, 1710, 1225, 1074, 1552,
        1226, 1076, 1553, 1227, 1078, 1554, 1228, 1080, 1556, 1230, 1082}], 
      Line3DBox[{1081, 1229, 1555, 1079, 1631, 1433, 1077, 1630, 1432, 1075, 
       1629, 1431, 1073, 1502, 1628, 1396, 1071, 1487, 1627, 1367, 1369, 1368,
        1070, 1492, 1693, 1316, 1278, 1315, 1328, 1314, 1069, 1687, 1326, 
       1334, 1327, 1295, 1325, 1331, 897, 1068, 1311, 1333, 1312, 1277, 1310, 
       1342, 1699, 1490, 1067, 1351, 1352, 1350, 1499, 1701, 1392, 1066, 1390,
        1626, 1497, 1064, 1625, 1430, 1062, 1624, 1429, 1058, 1623, 1428, 
       1060}], Line3DBox[{1084, 1434, 1632, 1083, 1557, 1231, 1085, 1558, 
       1232, 1086, 1500, 1559, 1233, 1393, 1488, 1560, 1375, 1381, 1234, 1283,
        1493, 1694, 1319, 1284, 1304, 1337, 1235, 1330, 1696, 1320, 1332, 
       1321, 1296, 1339, 1355, 1435, 1698, 1338, 1340, 1347, 1341, 1286, 1305,
        1357, 740, 1297, 1365, 1366, 1364, 1501, 1703, 1236, 1395, 1394, 1561,
        1237, 1087, 1562, 1238, 1088, 1563, 1239, 1089, 1564, 1240, 1090, 
       1565, 1241, 1091}], 
      Line3DBox[{1093, 1436, 1633, 1092, 1437, 1634, 1094, 1566, 1242, 1095, 
       1567, 1243, 1096, 1496, 1568, 1244, 1376, 1706, 1266, 1378, 1382, 1383,
        1287, 1688, 1348, 1349, 1285, 1298, 1306, 1307, 1691, 1301, 1322, 
       1267, 1300, 1438, 1681, 1299, 1289, 752, 1097, 1569, 1245, 1098, 1570, 
       1246, 1099, 1571, 1247, 1100, 1572, 1248, 1101, 1573, 1249, 1102}], 
      Line3DBox[{1104, 1439, 1635, 1103, 1440, 1636, 1105, 1441, 1637, 1106, 
       1574, 1250, 1107, 1575, 1251, 1108, 1707, 1377, 1252, 1384, 1708, 1288,
        1442, 1689, 1109, 1290, 1443, 1690, 1110, 1444, 1638, 1111, 766, 1112,
        1576, 1253, 1113, 1577, 1254, 1114, 1578, 1255, 1115, 1579, 1256, 
       1116}], Line3DBox[{1118, 1445, 1639, 1117, 1446, 1640, 1119, 1447, 
       1641, 1120, 1448, 1642, 1121, 1580, 1257, 1122, 1581, 1258, 1123, 1582,
        1449, 1643, 1124, 1450, 1644, 1125, 1451, 1645, 1126, 1452, 1646, 
       1127, 782, 1128, 1583, 1259, 1129, 1584, 1260, 1130, 1585, 1261, 
       1131}], Line3DBox[{1133, 1453, 1647, 1132, 1454, 1648, 1134, 1455, 
       1649, 1135, 1456, 1650, 1136, 1457, 1651, 1137, 1586, 1262, 1138, 1587,
        1458, 1652, 1139, 1459, 1653, 1140, 1460, 1654, 1141, 1461, 1655, 
       1142, 1462, 1656, 1143, 798, 1144, 1588, 1263, 1145, 1589, 1264, 
       1146}], Line3DBox[{1148, 1463, 1657, 1147, 1464, 1658, 1149, 1465, 
       1659, 1150, 1466, 1660, 1151, 1467, 1661, 1152, 806, 1153, 1590, 1468, 
       1662, 1154, 1469, 1663, 1155, 1470, 1664, 1156, 1471, 1665, 1157, 1472,
        1666, 1158, 1473, 1667, 1159, 814, 1160, 1591, 1265, 1161}], 
      Line3DBox[{1175, 1293, 864, 1174, 1680, 1484, 1173, 1679, 1483, 1172, 
       1678, 1482, 1171, 1677, 1481, 1170, 1676, 1480, 1169, 1675, 1479, 1168,
        1674, 822, 1167, 1673, 1478, 1166, 1672, 1477, 1165, 1671, 1476, 1164,
        1670, 1475, 1163, 1669, 1474, 1162, 1489, 1668, 1291, 1292}]}, {
      Line3DBox[{432, 642, 1503, 433, 656, 461, 1597, 671, 476, 1602, 686, 
       491, 1609, 701, 506, 1615, 714, 519, 1624, 726, 1548, 531, 737, 1557, 
       543, 1634, 747, 555, 1636, 759, 568, 1640, 772, 583, 1648, 787, 598, 
       1658, 802, 613, 1669, 817, 628}], 
      Line3DBox[{434, 643, 1504, 435, 657, 1515, 462, 672, 477, 1603, 687, 
       492, 1610, 702, 507, 1616, 715, 520, 1625, 727, 1549, 532, 738, 1558, 
       544, 748, 1566, 556, 1637, 760, 569, 1641, 773, 584, 1649, 788, 599, 
       1659, 803, 614, 1670, 818, 629}], 
      Line3DBox[{436, 644, 1505, 437, 658, 1516, 463, 673, 1526, 478, 688, 
       493, 1611, 703, 508, 1617, 716, 521, 1626, 955, 956, 1550, 533, 959, 
       960, 1559, 545, 749, 1567, 557, 761, 1574, 570, 1642, 774, 585, 1650, 
       789, 600, 1660, 804, 615, 1671, 819, 630}], 
      Line3DBox[{438, 645, 1506, 439, 659, 1517, 464, 674, 1527, 479, 689, 
       1535, 494, 704, 509, 1618, 841, 842, 929, 1701, 958, 845, 957, 846, 
       1551, 931, 962, 851, 961, 852, 1560, 944, 942, 943, 1568, 558, 762, 
       1575, 571, 775, 1580, 586, 1651, 790, 601, 1661, 805, 616, 1672, 820, 
       631}], Line3DBox[{440, 646, 1507, 441, 660, 1518, 465, 675, 1528, 480, 
       690, 1536, 495, 835, 1683, 836, 837, 830, 843, 918, 917, 919, 1699, 
       879, 930, 880, 847, 882, 935, 881, 1692, 901, 885, 932, 886, 853, 888, 
       887, 1694, 855, 946, 947, 945, 1706, 831, 950, 948, 1707, 949, 572, 
       776, 1581, 587, 791, 1586, 602, 806, 617, 1673, 821, 632}], 
      Line3DBox[{442, 647, 1508, 444, 661, 1519, 466, 676, 1529, 481, 691, 
       1537, 496, 838, 1685, 840, 868, 893, 1695, 894, 873, 896, 895, 907, 
       897, 909, 898, 848, 923, 936, 922, 1700, 924, 911, 933, 912, 854, 890, 
       902, 1696, 889, 908, 903, 904, 857, 928, 1688, 927, 871, 858, 953, 
       1708, 860, 573, 777, 1582, 588, 792, 1587, 603, 807, 1590, 618, 822, 
       633}], Line3DBox[{446, 649, 1509, 447, 1595, 663, 468, 1599, 678, 483, 
       1605, 693, 498, 941, 1705, 706, 511, 951, 1704, 952, 939, 940, 718, 
       523, 1693, 883, 884, 869, 876, 937, 729, 1697, 535, 891, 934, 892, 870,
        877, 740, 547, 913, 914, 872, 1681, 751, 560, 862, 1690, 764, 575, 
       1644, 779, 590, 1653, 794, 605, 1663, 809, 620, 1675, 824, 635}], 
      Line3DBox[{448, 650, 1510, 449, 664, 1520, 469, 1600, 679, 484, 1606, 
       694, 499, 954, 1709, 707, 512, 1619, 938, 719, 524, 1627, 850, 730, 
       1702, 536, 967, 856, 964, 965, 966, 1703, 548, 861, 752, 561, 1638, 
       765, 576, 1645, 780, 591, 1654, 795, 606, 1664, 810, 621, 1676, 825, 
       636}], Line3DBox[{450, 651, 1511, 451, 665, 1521, 470, 680, 1530, 485, 
       1607, 695, 500, 1612, 708, 513, 1620, 720, 525, 1628, 968, 731, 1710, 
       537, 963, 741, 1561, 549, 753, 1569, 562, 766, 577, 1646, 781, 592, 
       1655, 796, 607, 1665, 811, 622, 1677, 826, 637}], 
      Line3DBox[{452, 652, 1512, 453, 666, 1522, 471, 681, 1531, 486, 696, 
       1538, 501, 1613, 709, 514, 1621, 721, 526, 1629, 732, 1552, 538, 742, 
       1562, 550, 754, 1570, 563, 767, 1576, 578, 782, 593, 1656, 797, 608, 
       1666, 812, 623, 1678, 827, 638}], 
      Line3DBox[{454, 653, 1513, 455, 667, 1523, 472, 682, 1532, 487, 697, 
       1539, 502, 710, 1542, 515, 1622, 722, 527, 1630, 733, 1553, 539, 743, 
       1563, 551, 755, 1571, 564, 768, 1577, 579, 783, 1583, 594, 798, 609, 
       1667, 813, 624, 1679, 828, 639}], 
      Line3DBox[{456, 654, 1514, 457, 668, 1524, 473, 683, 1533, 488, 698, 
       1540, 503, 711, 1543, 516, 723, 1545, 528, 1631, 734, 1554, 540, 744, 
       1564, 552, 756, 1572, 565, 769, 1578, 580, 784, 1584, 595, 799, 1588, 
       610, 814, 625, 1680, 829, 640}], 
      Line3DBox[{458, 833, 1682, 834, 459, 669, 1525, 474, 684, 1534, 489, 
       699, 1541, 504, 712, 1544, 517, 724, 1546, 529, 735, 1555, 1556, 541, 
       745, 1565, 553, 757, 1573, 566, 770, 1579, 581, 785, 1585, 596, 800, 
       1589, 611, 815, 1591, 626, 864, 865, 866}], 
      Line3DBox[{627, 816, 863, 1668, 612, 801, 1657, 597, 786, 1647, 582, 
       771, 1639, 567, 758, 1635, 554, 746, 1633, 542, 736, 1632, 530, 1547, 
       725, 1623, 518, 713, 1614, 505, 700, 1608, 490, 685, 1601, 475, 670, 
       1596, 460, 655, 1593, 431, 641, 832, 867}], 
      Line3DBox[{634, 823, 1674, 619, 808, 1662, 604, 793, 1652, 589, 778, 
       1643, 574, 763, 1689, 859, 559, 750, 1691, 878, 874, 906, 905, 546, 
       739, 1698, 916, 915, 926, 925, 534, 728, 910, 849, 900, 1687, 899, 522,
        717, 875, 844, 921, 1686, 920, 510, 705, 1684, 839, 497, 692, 1604, 
       482, 677, 1598, 467, 662, 1594, 445, 648, 1592, 443}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
i2obdva5wv2TLAg7qUiun4Oaly+dNy8f0jvREOBuhDo/7r0SdyMEWG659eUR
7scUXRkdhLc6gLxlV1lZGR6AOMsUgVbivgDTe3qnVm1AMhXRrMFh7CBuWR29
Lz3bh8vBlnUa3u7zF9zG+Qnr4ibvj16gvTAv9FUe5uBV2c4T7o85UfdmhvAo
5/h/eolN3reULImKxfq9SLlw2SM+FpN6zEQ9eX/olnRMu5N8rp+/X6by2LVg
lRf40qePZ2CPSsjn8qbm0BXmzaHbecin99gYoolQLg3JiYcgoP27Wi6+/plB
+cFUQRvQWzxSa8B7Czg/8plwxH9v3HBiKuYpN2rI3/ol+dFCIMvyk/49Pllq
oRrfNQKnpo8ZWiS1YK1fyXtyGWyT4xVm26FLw3gOX1QVFkrdj3xQpd/SPiMD
M5gW7TqofRebpO4DTWEH5r5Li7AnZ8zRgZUhmBZ1nht5YziQVa4Sc7Ts8H3G
Fodla1N1pwj46uLlRkzV4OTdz4WJ2L4w0g4Kwmj2WcEoFHTrPVPM8wqLZSPP
Sbl0ZZX3OBgjsZfMjD5cd0Cmm0K1Hi5PVf1cAv2swD7OAB4DGRegZ2n+IwmX
ZwQff3+vchXKjvQY71ahgRU62XS/KnwrVN747BA8GVF1xnaiHivbQp4bav46
njEV2Az1d5vL2CaUYJwJ1LnYPi/xEfQaRq+9/Xk1Vz4WS/GPsVboJrOHvMDq
ucpFjlo+whSoe35VSjyiXGZeYqsl1XZaxYVjz31I+Y2bCendvnVY8I/egaMd
0dgsdc9155j61YXSb+H7j+b5W66lYTdFSHlM91ODJ58V0FWH20xCQAW0VwgM
E/4k77zAzfJAK1BmZqGxe8QBoNyvBS9x+T7TSzqliqvQ0mZe1+/xM9hBvj76
8xYPVsgHvxmAxz+rdy+xrcSkx0ie0szAoFWFL9/AV6m2aQKX8rEYAar/4d7Y
yedbKuHDuzadN4czsJ5D5Po/sL+szh0ohhpFe7kXnkjC5KjzzeKw0u2+7qxI
bXtp2gFzDFSs1nhFyA/9dd7h+1eeo/gxKEie1R8cfWdXY3jeG520yp85hcdH
u3oHxkQtZyRtveCP0oA7sP0VcfgEPR8j51VvP/93XvVoSp84H38D6tsxGcyb
itC9iJWLGfy+As02El+w02jyq3F8UUfhiyoJci4y5Qk5F2lBzUU+l26QIPRY
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
5LI=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.579027133745417*^9, 3.579027173807592*^9, 
  3.579027249654297*^9, 3.5790272844213867`*^9, 3.579027323934029*^9, 
  3.579027362474951*^9, 3.579027439410268*^9, 3.579027488063951*^9, 
  3.579027532947541*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
UyXrQRzPO4vXg+BlHcXrQfCu2uL1IP7u7SKxfwNc87nYvwHu2Ujs3wC/1kfs
3wA/kyL2b4BL/RvgBhL/Brh+gNi/AR4p8W+Au3UT+zfAs13E/g3wwe3F/g1w
s81i/waOOa5i/wZ4uZPYv4Hf5S/+6a+Tr+34T3+dnDv2T3+d/Om//XXyUf/2
18kVh//pr5N/D/2nv07+6t/+Ovmef/vr5GPv/dNfJ3+15J/+Ojnn8U9/nfzb
v/11ckOdf/rr5K52vL/u5t/zVCaP/XudB8nj/HZlKrdcxdn9PU8p8RNjprxd
XPqRw/9xPL1+bJy1Ccet5v9Pv7f27xr737Q/3Fj+PMRjnyhrGT8P4HBd/N2n
1eLrgveRXBdcFiS+Lo41fuLrgl9i1w2eVjTFwF41BcfB33KKM5U3UH8DL7GI
rfuquVG2n/+/HLxjuvnRa64XLKEjuN6EYQs3HtgpQz3RvmDr/AYNdl8ijvY9
/nm+wfYGqaQ/+IPrvVIbbvxDHP2u/cTzLedctSN9cEw7H3Vkt98i4rQ+Gnc7
QGVrPOkG3niqnb72kxakC/6u+Ru/dkdM1xOneTLFZ7L2f5lc/t/2/qT7/tZM
3dk4wovsdvDZUW/UHe+vIXsS3P3tkYWv56TQfcdzc9zjY4O5BZvpeig/b0Kq
6TZ5GdUP5S8H6Zu88vlJzx3Kt33+Pb6mRxW1F7/fU+71X6yJIz2P+D08NGGP
Q1Ohf6B8cf6VBRYn1OXoP+BcxMI6mccuqif+7sN4vp4oB95eUh+cb2ckf99R
H5Q/KKkPyi9j9yWV103o7+N8l+XUdBWeL3bc/v27d4e9ylQOf/dnPRe9+c98
6v/o1yoV4v4PbmQl7v84JkUO/dv/8X88B50uTdm9c/IdS5wf57M4ecZu9OzT
Mkn5lOqKqX/LQx/0l4/dNlsv07tPzwt0Ctgj7rfg2qx/YlzF76f047q4LzxA
upAfNLzxfyHnnKkc/u6bzaaH1SlbOUn95c1O8PXH/9GOqRz/vKM/oJ9uXDIz
cLHXAuoP4MOSP78Lsl5GzwWu34U9F9SfWX1jkvjy1G8Z/+EefW3fUi8u4e99
fZOM46PNK3ftMw3gZH/LJxA/tyXIYK7LbK5iw7sF3gUVyfjdYPvLzD+jtlF5
HFd20PWdqvaG+IS/133CDe4yU9fpyB0O/8fR0fp2hN+EEjr/cJ4nXzKMGHnH
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
hNX/XavCR23UUkln1P/r9l0dWzyJI52/svpnZG19tHpEDOlc8fc5+pHsPrBN
3fiMeNKZjwurTp7XuLvlFUUy6cy/J/yZbKRnOstmSzrpjOOC0HNhP1Nek85r
P4zw8y74lZxiqhZ9vKUW6azn3da0IPa/5NiOz+snW8lI57SvxaV2wTXJuwu0
fQ/3dpaMD9+TiyT2cCWrv2vLUuWaZS6k835W/73fonq+NexBOg9k9TfQP1j2
te8X0vklq7+7SvPey34/JZ3Xsfo36VzlH7wwg3TWZ/U/WFz0pWZOKul8l9V/
8Fj/2q0lCaRz2N/7/jn5ncfyZrpX84RxmL0vOjnz2KXHZc9IZ+2/9/Fr8pzI
a0d9vxSTzinsvVXLDx9cWnavEfyl7Hgy+MXb+OXmpNvc/8O/FMXq49Rnva+L
0yLSrZrV53lq957dXFuTbp1ZfcrjleK8yxvSeo29X0r+E1i3MPB4Oek2i9Vn
0aKZjXSfF5Fuauz9nkVyoUX0qSekW+Tf8eFbctSyqs52WpmkW/nf+hQmDzFd
3epyiBb5B5LYe9oOlsWbUvdqk39A9e/5i5PVmg82VJ/YjRPbXaXJS59Yxvpm
WZI+C5jf5pDEP/Afu27qkY6nm8+6QPrcYdeNTN30PmXReNKnCbtuXvbx6Y9z
upE+zuy6bgeXRozXNiL/wKG//fNd8vkbpYpyey3yD7xiz0f0nfB5lmrNyD9g
8Le/fUieltfu+MNvv0kf07/1j0h+ubZa9UPcBNJnHHuveJZ7uTvNcxInfu92
J/n1VcM+P/94SvxIisTTEj/SQXb+4KPP2zyN/0XtdWPn8XlacPBOr5nU3uXs
ff0gh7r5DzVmU3vT/+qWk7zhR+7uE6MmUnvHIc4qrXzprPEO1N5iNh6sfLnx
6IBtQ8gf8prVa+/jLa5q7/tSe8ew99Qdqh6sfTlTTu3ln5ccbtvtloY1vUZT
e92Zv6VAct9xLKloXmWTnUftjWPnMez6MYebZkbtncDeX5u2XlrdtNyH2juE
14d7oqr8vmXpHGqvLXuvPTx01w8d+Uxqb2deZy78W6VHvK0ntbcrf9+58mZp
27ytq2jcYOMo1+TtdMfYJQ2ovfv4fsV1Mel5zJlrxYnfn5ZyIQ4nDAMfdCUd
ZjA/SaLEn6PNrrv9sMUemxRf6v84Bhiua2s4tB3ps5dd90XV6/WBX4tpXGXv
r7lXWj5JDZwtSJ+G/PPCzbmzboXK556kTyJ7Hz1K93vkpXRD0ucj/zxyf1bM
emhx0oD04e2Kb1z1ih1jIh7fIn14+6qKa2yldTEr+T6NqzNYff3ncp7K+XmS
932V3PrRFvadjMppXGXjMHcgcus5l5FdaP5i4zZn5Ot+OviEE+npyPwhhyXz
VCirZ9ThB3pjNk4hHVm8A5cSbq66/6qz4M9nx8tXDlQUuzan/pbE6tnOLrzX
oa3fabztyOq5bt7Qz6V9P9B4+4XVc9bss4vuvymh8TaUH/+5NgP15+78n10H
Pe/w8xc3wr1vtWznVdJTl5/vuJUKs0H2KjdIT39+fuQGL6geqRufSno+Y/V9
kjHivsPdZ6Rnf37+5eZb9e8Z/bQl6RnEz9fcKE2jnvWTB5E9wOwTznRdD0V6
o4nS93pcP4nddYvVv7hrjsnQ4SNJ586s/u4PA6+6rTInfVez+odFyDt8m/qN
+i2OT4f86V3kV0A6m7P6ZynHjTkQ9Ih0Rv0NXrT98XvcfdL5M6t/+VKHqd2W
pZHOzJ6UJ3rZK731CSOddXj7Tb6xOurwmO5RpPNB3t7jbi4/FLzqTRzpXMXb
h1zsq7leC+1zBH8C1ovqWWcNxzUW1hG8/cmdLFFkfG/Rl3RuzNurnFlimp/x
XEfpe2r5Qonf5jOr/+euObtaPbEinbVZ/e3++CvWV3cnnfez+rczCFHbfOU9
6fyV1X/8uZPnT319RDrTe4a9TdQ7DLpDOoez+ru/WHprpFsS6azK6v9t7Kn9
EaaCf4ytj+SWPy7enDhP8NuE8+sR+Xyvzb798sNJ52f8+kXuduji4tnTrpPO
vF3RUP42o/v4GaGZpLM5vz6SN1puqmsQI6x/Ud8Qn4xN/xX0JJ3Z+lHePbT1
1UE9BP8Yi2eQd5H4bVaz+pe49wrNWCknncNY/XfrmsSmThT8Y/ms/vlxs8t/
bRXG4Uas/s/j1zqsP5Yh9GdW/6g5+Qe1TySTzjjGahbcf7ThBum8l9V/d+2b
6i9Owrq4Mb+uly+b5TDuoNMp0hlxhdfCPTXetw0V4gH4dbc8bWhQ/iuda6Qz
248iN6k/oFN6RfDbpPDrevmGMxHZWbmC3+YL7weQ+5427tj6vhHpjPr+dB4z
w8ZO8I/lMz/Jc4nfRpXVv62qutKePZakszmr/+ls46I1gYJ/bAar/8uiteen
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
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
fouepz5rNLf0t1KMrXfqlfWSOBxxF9KtN+R31vOLv5H+0d+L6xHnI55MPIr4
FG0b+c3ypeRHjc2690P6P+F375QvwfPvGvw9z6Hv+ar1wbpV6/hWWc+Ll9G8
4n+ke1vm/mmldfJs5HmFx+h3Z5S2d1NKc2ua66rSdrV7Pnf7ZKw101kTR/VZ
MD9zfNYJitE6FdYLTfJ50N7TflEMI50iHSnfRnpycWkeZgTy/NL7fzzyQtog
cOfSsZvmkb1rlP0i8UgHRNuuxcnrPzWvtfxw7YV2yGvzc+uZNaZL3idj8nd+
pWLbpu8s+ysdpuccmNdb667vINul71iT1lp+TsXvrv3VrPB+bJnH6CzVit6X
igWuLuw7ybadnq9lX/7jbirmlPSMZ+TvLN+tbz7X7fK7vJh1gvgvxb8DCtsb
fUP5F9JB0j/t8xjNK30gvSM/rFvGOo/HRvNA4r06Ru/Td5l/QfYHTst6fVD+
raZ5fvkw8jXkc2xYsc8mP0Q8n86uzrCu20av3QvMeT9z9S5sB28pvT6KuXU+
dE4653XQetTK6zAi73n1D89rtHW0vyEfWL6AfIJ18/7VPhbXqXe8ML/vmug9
dXPyM59fOIaX7yDfQvpHHKPeUe++eZ5T6y2+VzykzknD4PN1lH6/6rWYkm3L
6HzG9c3FG+qdT87nVv7cEu1j+paV9tMVYzZGvhZtV3fg2W4rvZeWl37G1vnb
PqyzUJiXED8rvSh/9Sbk3MLnf2i+ln9yA/LGwnZRfpqweO8lhe+p/9GqfYm1
hX2JeYX9CXHs1zC2K8+zYfaB5QuLu5eOuqe0by/9vzPfoxv4NPChwXb/isK6
6XHa+MI5BX0/fUdx5l2zfX+J8Y9U/eyyCfp7zXNBdMzRDPxd4XhiQuHfOzf6
OaXr5uc5tS7Do7m4T3UuqrYVL+l703+r1hs5pzDvqb0+KHot3g7+1vrmq0r7
vPrOej7pMOkyfWvFFgPy+eqf+6XfYt7nwk/w9wOQm1bNNYtz/jj6my+mXV/Y
z5C/Id/nzGgbeAvfuWn2r+RnfZufX+8xkDEzC8cg0r3XFdZd4sZnFPalpaOE
9feXJcfkq6N1j/R/zSybZ6z1X5KfZ6p4B/7uZfAfpbnZSxWrle6/RH5NMA98
efR7LMn7pxrMN46nvxAnpd+P5pBlZ5RD2Llqvu4Z5rucv1tEu6wwxyeur4X8
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
jdAzyF+iaz4Us2yUXNMm3XtqcB2L9ElIruORjYvJNTqym72Ca1qk02on1/BJ
x9ZKroeQXe6ZbY3s3YbJ9XPSsT9H1xwohvohunZBsdX30fUKsteNk/3+P8G3
Ja+BYvDDk2OAP+jfLJ9NvYvin+b8VivZ9uT6G9mFa5Jz5PLxNgW/VvXabZJc
f6m1Piy4PkR2oWFyHY/05CHJtTvSpfWT62x+AZ8WXNsjHX5Qco5KOnlMcCyj
Z2uUnIeQjVBhyQ8V52oPTq4lkh7oH5yb0JzTkuvn5G9MT67Pk38+lnuPVvwd
lL+QzpjA/YnBOUT5wz9F14sohtV+1b6V3fkuus5Dvs344PhLPu2P0bUm8vm/
iq4pkc//TXRNiXykL6LrThT/fh1dHyOfampyTZ58my+ja00U10xMznvJh5+c
nCuSjz0L3Lh0zduU5Lyd/I1rk+v85G90C65fko2okVzXJd+vZXKcrBi/X3IO
SfGU6t/kg4uP3LLqtZPtaB1c8yl7rRyx+B/xbfJ15cuKCxMPNq2wjhJvM71w
7vvTaF5X/G6b4FpT+QDH0i6tZB0bnaNR3kT+vXIM/9UJRmP1tS6dD1A9rWzL
HxXHZh1Lc+VPyxYk12EorlSeQLkF5S6Vq1POTr5N7+xLKMZUHap4vVmlcyuq
81S9Z3PGDWf8G8gzkvNqimFbBte4yl9SHqFb/lvl9PVb+s1jgutm5SOJsxKn
pmcT914vxyCyJ+KWxPmckpzjFFcgflL+2spk2yeOVTzumORcvmIx8bSKG8Sz
ihcVRyeuTvU3spuyn8pZiCd+oTSHrBpX1boq76n8l/JjqmlWXkE2V7yreEfF
zP2Ta4wURyuHIu5QeWnx8PJfViRzbvIR7kj2q8WpLEvm91QzqVhdtY6ya7Jv
2qcfVZzjFWc+OPsPyjE1KFwXIf9RvJe4KvFU4qekf1XPKd9APkLf5DyouIX2
wfWKsuPi0cSnqQZAeU3lN2XTuyfnfcW3dE7OYU/Je1L1vHPoOyE51ysOR7Wg
4ttmJOeFlatSzqppMkcmzk25W3H9qotQbZz4zQHyoZLrwsUzqH5O+Q3VP6h2
eetsl5X/1R64GdklOS8uvuji5HomxZUDk2u2FIOMS65bUow8OjnnrXh/bHLN
h2LSHln3ii86K7n2SzHRScn5bPFLJyefH+XHByTXjYnrODE5ty1+qXswPya/
Ubkk5XFVA6LadOVYVDcifSs7MDM5f688/sWlc9jiWC8oXdOu/JTyVH1yrCFu
RzGEOGLVoZyefX5xO52S6wnETSmftV+ep2Nyjaz4GdU0K//RPTpPr9hb9cPK
ySrvpDzw/wF5JOrs
         "]], Polygon3DBox[CompressedData["
1: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
6X/TQu37/6z3M90=
         "]], Polygon3DBox[CompressedData["
1:eJwl13fc1+Mex/Hffd+/+66kohQtDbNFVEgLUUrjGEUO6qQhIuek9VBC+5Bo
ajoqo320NWlKqUhpa2gZZZy2OM+P7x/v3/d6v673df2+4xrfb5nWnR54LjOV
Sq2hbOrn5z1gf0YqtY8yc1KpV7AR2GJ+CdXFxmBfYfmpnXbl0qnUDVSJxqnb
hheWO8eXzkqlHuLnyvXhq1Nv/UzHe9Ae+dH0pUw+ait3vcwobD2fix7HSmMr
seu0+Tv2GPX3H29jG5Rz0xNyZeQO0FG+BHXHGvOH6Q3lG7C39XGvdsuw6fwO
51NJ3Z94ZexGGqt+q7rL/Mc05QvKd9A7ci3Vz8UKyjfD5mFdsZNUAKuLTcL+
xd9MN9F4+W/wIvpbzE9R3uZ/y8v9rs1i9cUdn8CXYr1kHqBeyjPwmbRf5n06
KXMrjVLXQuZD7DRfnUZjj2Jn6HJt7sOmYy/yS+RKYC2xZdhL2L64N3wx6ord
x++nI3xx6oY1SifPJJ7NZmyLPo7o61vsEF+UuqhryH+MF81Knk88p5qudyr2
u3IdmiBXKM5X9lK5e7D3sBf4p/EV2BjKcW8K8P+lPHwtudrUWX/5YkyqX44v
o0P8Ee1/Vr+e76O/B/mzVIp/EJ+DvcrfS88qr8U/o8PaLqJiyo/LLVHXU+YU
XYLdjU3GOvMfyJ3ib4sxhD2Czccuk3sYW4B1w76n3/jrYoxizfkf45nwFel1
7DH+V8rU9hZsJNaWH66/1XwGNceKYh2xN13vH7RS/pm49zRReQkNxXPzw2hV
TGhq5nCFtr9Qhkw1bATWhj9Bf/JVaBjWmn9N27n8z/o6QRe5z4Ox+div/D1y
ueXeinmDncOaYJfGfaeU/6iKD1d8kt8m1zDGX4w3rCx2EJvHr6GxsZbwe/Hv
YqxgL8g14IfgS7AzMo2wS7Bh9LVy5ZgjtENmMn0vV54GqWsiMwk7xpejgVhT
rA12t/Iv+lusbVu+c3ZyTXFtG+O/4x7TUu3OYo3VFYg1A1uA/YbVw/JgQ7Hl
2HmsKVYQW4gV0U8L/GOsR5wvVhu7n85h1bAB2AcyB7W9BTurrjZei95Rtzvm
ontfXLmrzDT1U2kff1DmB/WlqKe29/N3UB36j/o9MWe1fS47mT8dtFtNnfjj
Mucyk/Uv1sEnoi/6H389DcAe5t+NscWXpB5YPexYjFX+WuqHNYv1NcYWfw31
xR6K5xjjnC+dmaxbsX79FPOQr0SDscf5mlSDJvivXbF+OOeByjOUjznvWnIZ
6gdhM7HvsdpYCns9xlBm8izjmeaKuUa5XGcNfBz2DD9Cbh2fHWMLK4X9G5vF
/6BtnZgmWP9YU7EDWDXsjH5GYp9jObHPYFfKzcMKqWuOzce6YAuwwtgj2EKs
e9xPyo3VxMZjHfmlNI3f7j8qYn/Ec8HWYCexBlhx/r14TlhluhwvEedBN8t3
wbbKDZfbgFXFumHfYCOxqTSYX61dPmxfVrJfXh/rBf50rL/u8yqsHNYx1kq5
17R7Hhuv3Tr8Ltoa952yY5+U+1DuKblPsaux9thabAB2Xcwv5U3Ym+r2xv2M
Zxf7mD7zqNuNr8CvcXwK/wwbKDOZ+sX+KefUUjvUT4s5F/1j+bH92ESsD/ZR
xl9DIPUNtkV/tRxfxr/FJqj4AquGdY97jY2KfTr2cn5N3E/suPrysY7HXI59
iy/Hvyv3Kj8r46+lLLXNz/l4F3B8El+JDY1nFGMm1nq5XNjOrOS9aTL2JfYV
1Xcxk+T6xr6TkbxbbZfbpFDdsSe+Cxsjsx6rgnWN9wFsBLYWqxjzFtuIvRF7
fKzR/Kf6y4vtVT8PGxf3EyuJncDmYGOwVVhx7Cdsfrx/YJ9jV2I/Y7NijXBs
gE/BOsTeHesnv1nuGux0jOO4z/wg5X/SrlibY7zF2MMryF3Ap+NZjvXw97H2
sSbSRH6T3NXYqRj3cuUdn8U3YK/HPIp1J65V7irspPrZchc7NsVnYs+lk3eB
i7DGWCO61X1eg1XA4kX2C7nBcuuwm2JNz0z2jNg7PsMqYc/H+WBDsI+wvFgT
bAb2LDYj9jh+tnMphB2Kern2/KSYc7Q71vBYT+SWx14ptwf/BL/KsV1m8k7d
X2YOlg/7W4wtrBPWEluIHY89EGvFb6TbsBfldmKj5TZjt2O9sN3Y2Lif2AG+
DBXSvmzs+fhi/ihfUy5/jGV8FLYFuxY7FusBvgg7gtXA8sWcjueEHcKqY3n5
FTEWsMPY7djFMf/0NyHODbsh9k39fZ1O9qt2OckeFHvRrXJ9Ys5QQdnbYq+k
srHvxvqkbd908l0xMjOZLzFvzmQn7yBzMpNvj/gGaazfZVgZbdvEmNa2n7a9
sQGxz8osojvl1sYzxk7z98mVjGuNeRPrJlYOOx/vHjG/sFNYQ6xEzFP9vRNz
Ersx3hPklmIlHVvFM8Z6y31Cs2O9kauK5fC3ZyfXeYH6yVfnp6eTeRbzrR52
gV8e403bvVgVddl8yXgf5xfEHKXv+PXp5PvpHznJd0N8P2xJJ/tk25zkPSHe
F2bIprWpj3+gv3YxP2h47EX6LIIdVb8u3kOwND2KVYxroNH8Crli2I9yn6eT
751WOcl3XHzPbaYd2GT1T8e7jv/ckE6+Y1rLVVGuSl/hNWV6x/Xpbzw2k4by
c7W7DDus/ku5Go4v4XuwcTI7sU7YWzHP4p0IexkbEvsTX0ruoLopsffHOoxd
jH0b7+9xb7AsaoFV4GfRsNij5QpjR7KS8TIwM/l+je/Yn/htcnuxS6iDXN24
/nTyDtXetd2pfFdcP+2PuZaZfDfE90N841yRlaxBsRb1lN+O71MuSB3l6sfz
prf5T/xnUewHbW7OTuZtG+VX6Cb+/+zuEpY=
         "]], 
        Polygon3DBox[{{1279, 839, 495, 496, 840, 1280}, {1449, 763, 574, 573, 
         945, 1369}, {1234, 730, 947, 1506, 1083, 1084}, {1076, 1075, 1495, 
         847, 848, 1496}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rsvJWEYB+DvuN+OQyHZLRC92x9ARTSIRLOx29iTiFBQWBx3IUKtoNXQ
iljZkIhskM22y3G/7GZrIf4APBPFb573nczM+803U5Uc7ByIhRAWZFwR1d0O
D0xnhlDC/6zkM2sZywqhkSVsYyW/sI710q9u4Rg7uMQurrKXGxzhTjSXRyzL
DiFu7pyc6FP8IEMZIZzqvzHNYZ5F9/Oco7yIruclxzguV+oJXnOSN5ziLad5
xxnec5Z/+dX7Jcycl3/Rs/hR1qzxj36Zh5zn92hNXGcPV/iJi2xnis1skj51
NT+znK0sZgNfzazhEyv44vxjtHZzExxiqfyWYv0vxnnMIh6ykD9ZwAPmc595
3OOu5Kp/MIc7tN1hm8aFLRofNmkrQjL67rH3/+ENqdtAcA==
       "]]}, {
      Line3DBox[{981, 1276, 641, 980, 1512, 1185, 982, 1513, 1186, 983, 1514, 
       1187, 984, 1515, 1188, 985, 1516, 1189, 986, 1517, 1407, 1601, 987, 
       1518, 1190, 988, 1519, 1191, 989, 1520, 1192, 990, 1521, 1193, 991, 
       1522, 1194, 992, 1523, 1195, 993, 1689, 1277, 1196, 1278}], 
      Line3DBox[{995, 1408, 1602, 994, 656, 996, 1524, 1197, 997, 1525, 1198, 
       998, 1526, 1199, 999, 1527, 1200, 1000, 1528, 1409, 1603, 1001, 1410, 
       1604, 1002, 1529, 1201, 1003, 1530, 1202, 1004, 1531, 1203, 1005, 1532,
        1204, 1006, 1533, 1205, 1007, 1534, 1206, 1008}], 
      Line3DBox[{1010, 1411, 1605, 1009, 1412, 1606, 1011, 672, 1012, 1535, 
       1207, 1013, 1536, 1208, 1014, 1537, 1209, 1015, 1538, 1413, 1607, 1016,
        1414, 1608, 1017, 1415, 1609, 1018, 1539, 1210, 1019, 1540, 1211, 
       1020, 1541, 1212, 1021, 1542, 1213, 1022, 1543, 1214, 1023}], 
      Line3DBox[{1025, 1416, 1610, 1024, 1417, 1611, 1026, 1418, 1612, 1027, 
       688, 1028, 1544, 1215, 1029, 1545, 1216, 1030, 1546, 1419, 1613, 1031, 
       1420, 1614, 1032, 1421, 1615, 1033, 1422, 1616, 1034, 1547, 1217, 1035,
        1548, 1218, 1036, 1549, 1219, 1037, 1550, 1220, 1038}], 
      Line3DBox[{1040, 1423, 1617, 1039, 1424, 1618, 1041, 1425, 1619, 1042, 
       1426, 1620, 1043, 704, 1044, 1714, 1375, 1376, 1045, 1691, 1279, 1280, 
       1690, 1046, 1380, 1381, 1715, 1047, 1395, 1396, 1717, 1048, 1427, 1621,
        1049, 1428, 1622, 1050, 1551, 1221, 1051, 1552, 1222, 1052, 1553, 
       1223, 1053}], 
      Line3DBox[{1055, 1429, 1623, 1054, 1430, 1624, 1056, 1431, 1625, 1057, 
       1432, 1626, 1058, 1494, 1627, 1281, 1059, 845, 1377, 1379, 1378, 1060, 
       1703, 1335, 1336, 1303, 1338, 1337, 1698, 1061, 1383, 1384, 1382, 1388,
        1387, 1705, 1062, 1398, 1399, 1397, 1628, 1502, 1063, 1402, 1629, 
       1511, 1064, 1433, 1630, 1065, 1434, 1631, 1066, 1554, 1224, 1067, 1555,
        1225, 1068}], 
      Line3DBox[{1072, 1556, 1226, 1070, 1557, 1227, 1074, 1558, 1228, 1076, 
       1496, 1559, 1229, 1287, 1357, 1707, 1503, 1288, 1312, 1230, 1340, 1499,
        1700, 1341, 1319, 1289, 1348, 1366, 1231, 1358, 1500, 1701, 1323, 
       1291, 1313, 728, 1290, 1360, 1385, 1361, 1292, 1351, 1367, 1709, 1232, 
       1359, 1327, 1328, 1293, 1509, 1694, 1233, 1372, 1371, 1560, 1234, 1084,
        1561, 1235, 1086, 1562, 1236, 1088, 1563, 1237, 1090, 1565, 1239, 
       1092}], Line3DBox[{1091, 1238, 1564, 1089, 1639, 1440, 1087, 1638, 
       1439, 1085, 1637, 1438, 1083, 1506, 1636, 1403, 1405, 1404, 1082, 1373,
        1712, 1507, 1347, 1350, 1349, 1081, 1501, 1702, 1365, 1326, 1285, 
       1325, 1339, 1324, 1080, 1693, 1321, 1322, 1284, 1320, 883, 1079, 1345, 
       1364, 1346, 1283, 1318, 1356, 1706, 1498, 1078, 1316, 1317, 1282, 1692,
        1492, 1077, 1286, 1635, 1495, 1075, 1634, 1437, 1073, 1633, 1436, 
       1069, 1632, 1435, 1071}], 
      Line3DBox[{1094, 1441, 1640, 1093, 1566, 1240, 1095, 1567, 1241, 1096, 
       1510, 1568, 1242, 1392, 1493, 1569, 1368, 1389, 1243, 1309, 1508, 1713,
        1374, 1355, 1362, 1244, 1363, 1708, 1329, 1330, 1304, 1314, 1442, 
       1699, 1294, 1331, 1344, 1332, 1305, 1315, 1353, 739, 1342, 1333, 1334, 
       1307, 1504, 1697, 1245, 1306, 1297, 1406, 1719, 1246, 1097, 1570, 1247,
        1098, 1571, 1248, 1099, 1572, 1249, 1100, 1573, 1250, 1101}], 
      Line3DBox[{1103, 1443, 1641, 1102, 1444, 1642, 1104, 1574, 1251, 1105, 
       1575, 1252, 1106, 1505, 1576, 1253, 1400, 1718, 1352, 1254, 1354, 1704,
        1386, 1295, 1370, 1390, 1391, 1716, 1310, 1343, 1296, 1308, 1445, 
       1695, 1311, 1298, 751, 1394, 1393, 1577, 1255, 1107, 1578, 1256, 1108, 
       1579, 1257, 1109, 1580, 1258, 1110, 1581, 1259, 1111}], 
      Line3DBox[{1113, 1446, 1643, 1112, 1447, 1644, 1114, 1448, 1645, 1115, 
       1582, 1260, 1116, 1583, 1261, 1117, 1584, 1262, 1118, 1711, 1369, 1449,
        1710, 1401, 1299, 1450, 1696, 1119, 1451, 1646, 1120, 766, 1121, 1585,
        1263, 1122, 1586, 1264, 1123, 1587, 1265, 1124, 1588, 1266, 1125}], 
      Line3DBox[{1127, 1452, 1647, 1126, 1453, 1648, 1128, 1454, 1649, 1129, 
       1455, 1650, 1130, 1589, 1267, 1131, 1590, 1268, 1132, 1591, 1456, 1651,
        1133, 1457, 1652, 1134, 1458, 1653, 1135, 1459, 1654, 1136, 782, 1137,
        1592, 1269, 1138, 1593, 1270, 1139, 1594, 1271, 1140}], 
      Line3DBox[{1142, 1460, 1655, 1141, 1461, 1656, 1143, 1462, 1657, 1144, 
       1463, 1658, 1145, 1464, 1659, 1146, 1595, 1272, 1147, 1596, 1465, 1660,
        1148, 1466, 1661, 1149, 1467, 1662, 1150, 1468, 1663, 1151, 1469, 
       1664, 1152, 798, 1153, 1597, 1273, 1154, 1598, 1274, 1155}], 
      Line3DBox[{1157, 1470, 1665, 1156, 1471, 1666, 1158, 1472, 1667, 1159, 
       1473, 1668, 1160, 1474, 1669, 1161, 806, 1162, 1599, 1475, 1670, 1163, 
       1476, 1671, 1164, 1477, 1672, 1165, 1478, 1673, 1166, 1479, 1674, 1167,
        1480, 1675, 1168, 814, 1169, 1600, 1275, 1170}], 
      Line3DBox[{1184, 1302, 863, 1183, 1688, 1491, 1182, 1687, 1490, 1181, 
       1686, 1489, 1180, 1685, 1488, 1179, 1684, 1487, 1178, 1683, 1486, 1177,
        1682, 822, 1176, 1681, 1485, 1175, 1680, 1484, 1174, 1679, 1483, 1173,
        1678, 1482, 1172, 1677, 1481, 1171, 1497, 1676, 1300, 1301}]}, {
      Line3DBox[{431, 642, 1512, 432, 656, 460, 1606, 671, 475, 1611, 686, 
       490, 1618, 701, 505, 1624, 714, 518, 1633, 726, 1557, 530, 736, 1566, 
       542, 1642, 746, 554, 1644, 758, 568, 1648, 772, 583, 1656, 787, 598, 
       1666, 802, 613, 1677, 817, 628}], 
      Line3DBox[{433, 643, 1513, 434, 657, 1524, 461, 672, 476, 1612, 687, 
       491, 1619, 702, 506, 1625, 715, 519, 1634, 727, 1558, 531, 737, 1567, 
       543, 747, 1574, 555, 1645, 759, 569, 1649, 773, 584, 1657, 788, 599, 
       1667, 803, 614, 1678, 818, 629}], 
      Line3DBox[{435, 644, 1514, 436, 658, 1525, 462, 673, 1535, 477, 688, 
       492, 1620, 703, 507, 1626, 716, 520, 1635, 847, 848, 1559, 532, 967, 
       968, 1568, 544, 748, 1575, 556, 760, 1582, 570, 1650, 774, 585, 1658, 
       789, 600, 1668, 804, 615, 1679, 819, 630}], 
      Line3DBox[{437, 645, 1515, 438, 659, 1526, 463, 674, 1536, 478, 689, 
       1544, 493, 704, 508, 1627, 842, 843, 844, 1692, 830, 849, 831, 956, 
       930, 1707, 851, 970, 833, 969, 834, 1569, 943, 941, 942, 1576, 557, 
       761, 1583, 571, 775, 1589, 586, 1659, 790, 601, 1669, 805, 616, 1680, 
       820, 631}], 
      Line3DBox[{439, 646, 1516, 440, 660, 1527, 464, 675, 1537, 479, 690, 
       1545, 494, 952, 1714, 953, 954, 845, 926, 928, 927, 929, 1706, 879, 
       913, 880, 850, 882, 905, 881, 1700, 906, 891, 892, 872, 951, 950, 1713,
        925, 919, 975, 1718, 920, 558, 762, 1584, 572, 776, 1590, 587, 791, 
       1595, 602, 806, 617, 1681, 821, 632}], 
      Line3DBox[{441, 647, 1517, 443, 661, 1528, 465, 676, 1538, 480, 691, 
       1546, 495, 839, 1691, 841, 867, 899, 1703, 900, 870, 904, 903, 846, 
       883, 914, 884, 852, 888, 931, 887, 1701, 854, 893, 918, 894, 856, 898, 
       934, 1708, 897, 868, 935, 936, 922, 962, 1704, 961, 946, 944, 1711, 
       945, 573, 777, 1591, 588, 792, 1596, 603, 807, 1599, 618, 822, 633}], 
      Line3DBox[{445, 649, 1518, 446, 1604, 663, 467, 1608, 678, 482, 1614, 
       693, 497, 955, 1715, 706, 510, 963, 1705, 964, 923, 924, 718, 522, 
       1702, 889, 940, 890, 855, 915, 932, 729, 1709, 534, 916, 921, 917, 858,
        878, 909, 739, 546, 910, 911, 874, 1695, 750, 560, 861, 1696, 764, 
       575, 1652, 779, 590, 1661, 794, 605, 1671, 809, 620, 1683, 824, 635}], 
      Line3DBox[{447, 650, 1519, 448, 664, 1529, 468, 1609, 679, 483, 1615, 
       694, 498, 974, 1717, 707, 511, 1628, 912, 719, 523, 1712, 949, 966, 
       832, 948, 957, 959, 958, 1694, 535, 933, 960, 835, 869, 937, 939, 938, 
       1697, 547, 973, 860, 972, 751, 561, 1646, 765, 576, 1653, 780, 591, 
       1662, 795, 606, 1672, 810, 621, 1684, 825, 636}], 
      Line3DBox[{449, 651, 1520, 450, 665, 1530, 469, 680, 1539, 484, 1616, 
       695, 499, 1621, 708, 512, 1629, 979, 720, 524, 1636, 947, 730, 1560, 
       536, 859, 740, 1719, 548, 971, 752, 1577, 562, 766, 577, 1654, 781, 
       592, 1663, 796, 607, 1673, 811, 622, 1685, 826, 637}], 
      Line3DBox[{451, 652, 1521, 452, 666, 1531, 470, 681, 1540, 485, 696, 
       1547, 500, 1622, 709, 513, 1630, 721, 525, 1637, 731, 1561, 537, 741, 
       1570, 549, 753, 1578, 563, 767, 1585, 578, 782, 593, 1664, 797, 608, 
       1674, 812, 623, 1686, 827, 638}], 
      Line3DBox[{453, 653, 1522, 454, 667, 1532, 471, 682, 1541, 486, 697, 
       1548, 501, 710, 1551, 514, 1631, 722, 526, 1638, 732, 1562, 538, 742, 
       1571, 550, 754, 1579, 564, 768, 1586, 579, 783, 1592, 594, 798, 609, 
       1675, 813, 624, 1687, 828, 639}], 
      Line3DBox[{455, 654, 1523, 456, 668, 1533, 472, 683, 1542, 487, 698, 
       1549, 502, 711, 1552, 515, 723, 1554, 527, 1639, 733, 1563, 539, 743, 
       1572, 551, 755, 1580, 565, 769, 1587, 580, 784, 1593, 595, 799, 1597, 
       610, 814, 625, 1688, 829, 640}], 
      Line3DBox[{457, 837, 1689, 838, 458, 669, 1534, 473, 684, 1543, 488, 
       699, 1550, 503, 712, 1553, 516, 724, 1555, 528, 734, 1564, 1565, 540, 
       744, 1573, 552, 756, 1581, 566, 770, 1588, 581, 785, 1594, 596, 800, 
       1598, 611, 815, 1600, 626, 863, 864, 865}], 
      Line3DBox[{627, 816, 862, 1676, 612, 801, 1665, 597, 786, 1655, 582, 
       771, 1647, 567, 757, 1643, 553, 745, 1641, 541, 735, 1640, 529, 1556, 
       725, 1632, 517, 713, 1623, 504, 700, 1617, 489, 685, 1610, 474, 670, 
       1605, 459, 655, 1602, 430, 641, 836, 866}], 
      Line3DBox[{634, 823, 1682, 619, 808, 1670, 604, 793, 1660, 589, 778, 
       1651, 574, 763, 1710, 976, 978, 977, 559, 749, 1716, 965, 873, 908, 
       907, 545, 738, 1699, 877, 857, 896, 895, 533, 728, 876, 853, 886, 1693,
        885, 521, 717, 875, 871, 902, 1698, 901, 509, 705, 1690, 840, 496, 
       692, 1613, 481, 677, 1607, 466, 662, 1603, 444, 648, 1601, 
       442}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
GQm3P/O8x0Y8R8H3YqOZEwPQCmPJ7OXXgOsuutSg/93ozsX9PHEAyy3fV3G0
RwQupD2i36/0Y/3Ja9U7sN8h556uW8YF4y9I079Larymb59OPSYxPM2h2M8E
9fmTSHmWKw0OjyjCaKNiKRmiC/iprWQe35spzAleS8UNnTf9eDT5B5//TMaB
l58Paq1MZoe/pkcZ8szZoF3yJzp/ZDTBhfhkJrhGTqFGd4AZeulvJuOcQmXs
rM7L4MXYtTFvJbnhV8dKul412HvuYuM5cehU/aUnpm8VnHzWQ8/XxN66Ep3r
oAaf6I7nOl/aAoXuL82j/95C+FJW6Cl40NRQzGrIH7rX+CUgv0Ig4vd8uFI0
YLG+uKVqbSq0j8u1sifsyJ8D+ivvfUuC29sv/wi4nQW3/1NeI03YKXHRTc+l
P18BdYWp971T78DeXJEcx2lCz8/IscaVrgA6cUc/Yr+MYPrdNnp/t1GgYfBU
AA1UsI13X/beBOuP5g2i92Ea6hx/XTyB7e1mCfznogSkpS+j623+oFf2G537
sPq016UflgpB0c6n9O/1+OfpZgn4CbvZ1NqvV74MTj+5Redbb0KVxx+nfPzz
ndIbnpY8MF1uKSnP3WaaOzm0oAr3h+2rHmvBer15f7q+5dpoxRm/FY6cyIqi
DWrCAb+9KfTz9ZTU1GDfDfvas7o8onXguj2ybIi+u76h7VOuKexMcRxPACYw
cOjSd6RvZ+f369e/84DWD2qFfjZ4whksNQjVTdlrj159m3Ie3go4rNnm6AAS
q9ezIn27eUzUxUH5GlhZ0DSsc/Yi2NzRJ7KKkNvVy7K/PvO4D4deKQUkbE4A
bz6JW/AQfssea+WR9XN3gPRx7WuNiRfAmwSaoM8McV9e3PiU0qgHorePF1ar
hcMjuXm3jxLP/1AyHLkmSRl8LV7KsG7cFQacDpJDdQJcHl+KXmrIAc8HKauy
hCzhbe8rwcj+duToby6uFAN1ddnCZpuMoZ6H72d0XqcXeqbc8peAY8qRF2ea
9eGd6nl9xIeMb9f7zAyH8LGNqjUb3HbBGIO99DzFgSuGb7PsvOGB2bQYxi+W
UHsqUxf1uZdQc6QZaEUv0Bzp1dQc6fmdoWHX1h2F/kY/GfnX74e89d3n0Lzf
cGoeNQNNSxHNo35KzaOW+nBJ46N9AAwL31M5kGMHp/p2ratFdoeaR02j0Qr+
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
IYMf6kDVvI/v8akh0ODopjG9/T2Ye6BLt2seeNsuwq5Bn583lZFd66zlSPy5
4Sn8FZ462ah4DSr4Kms2dRP6dv7SOGNnEwzavKFV1qAPTt3/sfR3SPP/5JmQ
26t/7/VQKClSZv7ZAk7dsTSd7KuFT9b4aI/P9gNbmZDP5es6YcOxKXUbnm4Y
bcEjurH/C3CxqT2P3v+x+6524v3huUIO+vsXzJHfa059rz/1vcVz6u1VAR/h
hgAegerwIeh3B0g76NeChsmckIPhj+DFsmotbcMRuOfq6dTMzRVAZdu7o4gP
ymySQQQf4OvZ50sRHy5Qfg5xv3YjP6eU8nPqqXvERaNpoHukSN2jHqr+MJyq
P4yg6g99G16qo+/tDH6+k/hewIppbUff+yyskbGaeM81Hys4ifcEMg+37EDv
+cDv+GX0ngomUhjxnqDk8Y569J4zbapN874dQLLys7+/QQf4/HNYiTujAwy1
Dk433f4Gnhb/cIl5VA0UJzg0rbsGgCe1F+B0CrkXwIDaC/APRX8a/V+6FLUv
IPTPf/cFsFP0DYv2CAyvbrEp8yuF3vPjx971DMP6Y2P+N40qQD7lTxJ6hh35
kw+ovZm3qTpGwm8cS/xkihlRdYyX73muRXmHO/oiMtUT3WCrrGE6yjs8pPRM
2IP/6pmWII3z6H+/XCo8QvwvyHD5mon+d9uATBPyuzhYmlMJvwtyVGQsnCT8
LrGvMcpHd+VBk4YDxqq3huB83MnJ6xkNwPH7B2Z0f32eXjtP3F+47x0v/f7W
UHKrS6M5IrlNpOT2ortWLeI/H7dpHMF/WMOIr0P8rwwb+I34f9qW8RLBf7gm
M24b4v96Sg+z02gmSA+XU3r4N1V/uEDVH6ZR9Yd33yo2WMY1gHLhD/vV7w2C
jdbqVikra4HxmzuWKB+3z3zeetfZi9BJspuej8t2TbmC7BdPUo8UYb9AXbfy
IWS/JE4WbbjB2gbZf/gdrSrqgjcLFD2O3/wOXP/PHp1C9ughZY/+3WfKTAu9
hfz8tZSf/3/yT1NB8h9Myf+/9oiHRrNG9siYskeS1Pf60Wi70ffKfiG/91Xz
b0vEf1G4Ro/gP4j2ilx9g+D/Twel3yg/dbV+cm5jQj/o+WdyFOWnfgjl9ODB
N8Bpwd+7BdcMQ6/g2L2igfXgzQ3rl4g/BbRie4I/cPIiF0D84aXmh4vQ2lf9
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
lkoiO14b8q2QsOOgpYa04/8P5e1t3Q==
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 284.89115310330214`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{0.6358145023908301, -2.940063935825073, 1.5497625533643158`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.579027133745417*^9, 3.579027173807592*^9, 
  3.579027249654297*^9, 3.5790272844213867`*^9, 3.579027323934029*^9, 
  3.579027362474951*^9, 3.579027439410268*^9, 3.579027488063951*^9, 
  3.579027566726066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
    "construct", " ", "a", " ", "rough", " ", "wannier", " ", "function"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V1", " ", "=", " ", 
     RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "=", 
     RowBox[{"80", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberofbasisstates", "=", "20"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Lengthofbox", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"WE", " ", "=", " ", 
     RowBox[{"Eigensystem", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
         RowBox[{
         "V1", ",", "V2", ",", "Lengthofbox", ",", "numberofbasisstates", ",", 
          RowBox[{"b", "/", "2."}]}], "]"}], "-", 
        RowBox[{"1000.", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox["numberofbasisstates", "2"], "]"}]}]}], ",", "2"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
     RowBox[{
     "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WanPsi0", " ", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
     RowBox[{"groundState", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"WE", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "Lengthofbox", ",", "x", ",", 
       "y"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"WanPsi1", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
     RowBox[{"groundState", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"WE", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "Lengthofbox", ",", "x", ",", 
       "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", " ", 
     "and", " ", "excite", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "previous", " ", "version", " ", "of", " ", "wigmaker", " ", "failed"}], 
     ",", " ", 
     RowBox[{"as", " ", "WigPsi0", " ", 
      RowBox[{"wasn", "'"}], "t", " ", "always", " ", 
      RowBox[{"real", ".", " ", 
       RowBox[{"Ansatz", ":", " ", 
        RowBox[{
        "WigPsi0", " ", "and", " ", "WigPsi1", " ", "are", 
         "\[IndentingNewLine]", "conjugate", " ", "related"}], ":", " ", 
        RowBox[{
         RowBox[{"if", " ", "Im", " ", "Psi0"}], " ", "\[Equal]", "0"}]}]}]}],
      ",", " ", 
     RowBox[{
      RowBox[{"then", " ", "Re", " ", "Psi1"}], " ", "\[Equal]", "0"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Wan1", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Wan1", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "=", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"WanPsi0", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "+", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"WanPsi1", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}], 
       RowBox[{"Sqrt", "[", "2", "]"}]]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Wan2", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Wan2", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "=", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"WanPsi0", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "-", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"WanPsi1", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}], 
       RowBox[{"Sqrt", "[", "2", "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"Wan1", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"Wan2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Convergence", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"Eigenvalues", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
            RowBox[{"V1", ",", "V2", ",", "Lengthofbox", ",", 
             RowBox[{"numberofbasisstates", "+", "1"}], ",", 
             RowBox[{"1.2", "/", "2."}]}], "]"}], "-", 
           RowBox[{"10000000.", "*", 
            RowBox[{"IdentityMatrix", "[", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"numberofbasisstates", "+", "1"}], ")"}], "2"], 
             "]"}]}]}], ",", "1"}], "]"}]}], ")"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.579027608282825*^9, 3.579027620337471*^9}, {
  3.579027679686557*^9, 3.579027864778632*^9}, {3.579027928131205*^9, 
  3.579027929408596*^9}, {3.579028188952874*^9, 3.579028192638238*^9}, {
  3.57902842948976*^9, 3.579028433992827*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
KeoZCXEnWXxJcdJLiC/J4kiKtZeEOJIsXqQYeOSf8SJFAYsXyeI/iu8s/iOL
8ygQ55HFcxRnGgrxHFncRqFicRtZfEbhz+IzsjiMIqmaEIeBnvicXG3mzWHL
D5GepU8bR15eUjNhVuZQfvhisd8mBazduiS3ZsKVb4NKP0afJT3Z+/SE9WPa
B487mkB6ztcf3i/3cq2ERxu0chwXiv22P3vvoL+kjsLsYkPSs25Y0/fWPrUT
+j1JmTi67f/02/+Jp+kz+99f2DF5l5UZ6VkG++9vnVs9XNQzmdnv1GvO2ym/
RT39mP0Fc8/HXy0R9YT9rT8Wbft4MpD0hP1r1E96Zk/zJz0P1HP9ae1TPaF5
TPycvvPE8RafNx0PLgtedZL07Os15PzlJRoJXtnxU5u1Fsfb2n/j+hoJmQWn
3X3aiePtk8ba8zqOqJEQPrJ47EMtcbw983A1l3u5RsLyF7/caxRpk54b/Z63
9OmomWDbpU7JyqK+8vH2f+JRB5n9RVPqplYMHiDGSZj9DVxDF88dVJ/0NGP2
j78eWiMlII30rMPs72tU7+f1CedJz6fM/g6dbkStNjpBesJ+kxcuZTM+iuOA
G7M/XeNAnfqXxHGgzne3sR1HVKo3VyyPfxp9knSO2jCqhk/H3+qfk/TWF9c8
SzrTurPmPleu/BLp/OVvXPyPusB2cp3Y3Wmk8+FasQa5l6vU5xdN6rc76zvp
3PaGYnHHEdUSztyOPulgpEM6f9oZMSz3crWEnprBqbG3Bsn9B/V5mf9Qn9m/
PXacerIjTzqfY/Y7qbOaNmujTTpPQPzytp5vv8K7pHMFsz96/I8nI9vFkM5H
mP2hd6Yv03gdRjrD/pszblS51g8knUuZ/Qv15uiuDDhMOn/8+xx9Vdc8N8nt
uV0M6Szk11Solb/UvfpaKUln4T3eN7Vt7MtjO1onkc74HK+7cV3RgCzSedMb
qw1Lcr+rfR8rt+1uXZP8YYMlOsa5l3+ox4afVQUd0yedb5QWFFn7/FT7125p
fmbecNn48L/xqDJm/73f+SeHmlqTzr7MfvuuMUWX3+uQzv2Z/Wr7p4v6pzwi
nZ8x+8cNrLg3bYCKdN7M7G+/o0Vq8vFzpHN7Zv/sNy2/664NJ51Tmf0L2tgO
D/sWTDqf+nvfP6iLFldYzna6L47D7D1hs01jz+kaPCSddf/ex1L1l2YDVn96
kks6J7D3UL3dsvde1/kkxlfZZ/eBbsbjtQ1I5zrs/WH9tqcUKivRH1uE91ay
dVw0s1NxMKfuvKczSc8KZuf0kWE7N3n8pHhUW2Znj5tWoQ3uvyE92XsqdcV/
q687IzNIT0dm5+2dP/QcFyaRnrCzIqbIIN9MSXpG/R03ytXtc78lmppfID3f
/7XnhTrfaNnM3YebUDzhOnuPmb3XxYr7pUPxhFp/2y9Qn7K4NnXrgHa81B8r
UnezD796wEmc351ZnKerLG7wg513yLFGMSm/DpI+Key81wati81y4qm/1WPn
zVttf+TykwYUNxjHzvslOFjz4ewGFDc49LffFqvfvOxpfbz7b9LnObufu2P2
BNmoS0mfjn/74Rt14txtt26dySd9jP/af0ZdqbDt5OM2jvSxZe8bt8W4TvbY
M5GXvr9LUeuaJWVOfzBNFndSqubL4k7+rH2/c+EuO3Tf0vXas3asuxiuSRw8
ga53NXtPe3LpsDVb6o+k6037q1uGepNFFH88byDFSWzZe0zbIQbRs+f2ojhJ
ARsndPfpx/8Yb0Bxkjy8B9j/3ubbnC50vePZe+CRrte2VbbtT9crPEcZ/Lq5
izvMrm9F/WEOe79d69rZ7Ee/ppIOs1h8Zr2sP+Dz+/7wG3vD06g/DGfnDR85
Rd91zVjSJ56dV3tHj0ezag4ifezYeZ+8/Jy9dvtU0meQoCfvHBkR//jPaNJn
OHvfnrf8vdlZWyvSp61wX/hvFw5opvwZRvp0EPoJbz7T9vHCSyU0/jzDurbR
pgcv/X7Q+HNQ6Id85QV/g4LcOrz0vW0Rf0jrxs929XUp/ibkKRTw9R7Wm3TL
dzDpNpfFYcbKxhldZk+4zeNIi6oFpBs+lxxVhs5//IvGmf3MngC9rMDpJf1I
N/Z+nA8f6tRxSpAu6abB7BnnX9r8tJU26aZi7+ePZtqka1jWI93eCs81v9B4
0c22WXVIN8FvKee3bU9KK+8ST7oJ/ttnPnLVy4NDJiaTbnOZvSkmtedoLHsg
e/9Yxn/fFp462bWAxm02zvMhOib7Ps0Q31+zeYG/sGBij8avRL9uFIu3VJPN
g5HMzmO5r4+1GzqedGT5I3zlBr9t7VaZUz/EZ4RGVcHSmV9p3L7O7PxT8TNs
Rd2nNG63ZnZaHF3e2XPkXRqXPjE7lS9rnlWUptK4FCnMI7xp2LSYrB8pNC6l
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
/nnprPnAdADNu+D3ZPXBaF2p9WzSKaNr4u8s4H3Bu4DEoZPi/+e9rZesXhY4
V2/l0C31P9F+cIw/mf+s365UHfln/Xal6tk/67crVSmsfru07rpSlfPPuutK
VdQ/664rVZUZ/6q7/t84Kau7jvtpyN6rSuuxK1XOrB47roveM9bSi133oidd
F8XZHDT37bU2o+sCN7lxdu+aWLGOAficpB/RLhWz6HqpzvqrIXcmr+PoesG3
LJxUcumggq4X3OhifIaVjjFdL8WdivKvWiw2pOui96eqHI+MXe3Jfow3Gnpr
TOf+qU72g38te9u62kJtsh885vvspqmLTMh+8PALlg1quhmT/eAPH9oc6nNJ
i+wHn9V8aw/3u5XUD8F7+gVULEgqp35I9a74Xw5f+5eKvzfBzv9q3bryWhfy
xN+bYPxz6ZeRV0rqir83gfGmQ52CRx1EO6mO76aCOzGa2eLvQTBex7tpYL+K
G+LvQTCuEd3pepeq6+LvQTC+23DJgl2J8WQPzvMt7rTbXjuxzhJ4jI3ejDPL
9WicAY+zWZW1x8uCdANv5j31qeLdBbIHvEOpy/IpceJ4Qr9fpNth/5pt4niC
9lpcWbS2k6NYd4juj92qUc+rD6B+Bb7q6MzNPavEcRVcb/6CoZZ7AqgOCdVd
+7LndIu7fagfgpdFvMq//cGf9nViXOnK8tbwN56/lKW1W2/WPkHHgyez/Xro
3+Bbn1mNavCrP7WD/j6nQNfhuCKc/B/6PZOURO9DdaOoffBclv+J9sFLS5so
qvEc9WPwWwOyIxrX06bzop/eOek84GbdaDov+Ib4wS5dh14ifwM8ZH7kjLkP
E8ge8BiW90t1LTCPmGhey/QaRvbQc1xvfnnQdrGeJ7jtulA743qPxN8zQvzH
ffB6Vy5Z/D0jxrv82V8zWX1LrBfEuOqDR9eotCzx94wYz+ozo7Zt17dUjw58
sk2v22NuvxJ/P4hxv0G8zZJ398ge9NMstw7xmlbf5fX31NmJMzK3bKlGutP+
daP3TcN316frBB+wf9HtW8fa0/nAdVe2jG1XswHpBn4+QFpPD/xguw6zTVJe
y+qgvlavyuv79cbwavScghvrnnvZ9+cXui7a/3LWxczvfHfqr+DxN6z3HT5p
StdF9TxGFR0b7MXRddF7zFm/jdOHmtH9pToT8e/O19/VjcYLilNF2veNiexD
doLP9+rf4OS8rvS8U/t+A44YPehA/ZneF7N4FDj0swy+NdNgVgXdL/DDLO5E
vzfE7E1XXru19HSS+HtDjC9e5TVNvemm+HtDOJ7Fl+h3fxhvWdNSs5nKnOyh
OM/AmIfukeepfaqvubb6U/cVsdQ+eJq9dWm9reLv7oHPYPEiPI/gQ2TPI7i/
+/Ip83JGUb+idj5MO7b8kFjvjvYFXPjPaQx8RvpQPbBIi5gTeuJ4Rfnh52e2
7ucu/p4guEst/46K97FkP3j/Q4pt3nGpNB+BO7N4Ea4LXD7ugdt3cPFe38OC
rov8EfMH6U7uYn05cOu3dzIiF2fQ8wL+7ubmNwuDLtH1UlwopnDeoWpinXDw
rVnjhgWZiXXCaV6at+yksoa4LgP32+Vd0fxhEl0v5YffW3Z9wLUyul5wq5vS
eQQ8bb+r57gnA+l6wc0vbYxvM0qs8wY+I/D4rOBm4u8skJ1FrQ1z/ojrMvB3
Pdse6RsQQjpQ3riWtP48uMM29/Bxu8R1OnjjE3deHawmrtMpnpPRvfJ8vLhO
B9916niRXidxnQ7+apjN++DhWuRPg/dj8zL0ATc/UdL9yzDx9xHA70ZOzrDP
FuuzgX/10iwtdhLX6eBrHgTvjdktrtPBG3gb6S0aJK7TaZ16uY67Ikusz4br
eLl0S++zDcR+S/u5jIe0eFhngVj3FXEMlmeF66X60Gw/L/2+HuPuBy8MqFt7
HI3v+N522Lx5RxTHSTfy71gekfR3ppSql+x3puh3zZhOzVr1X2ymbyf6zez7
1iZ2hv2/WZE94DtYXgfaJT+F5TlI6w4pVWtldYfw/WoWNyP7GNdg7Uh/P+u/
dVau8PtZNB8zexUtpXXhwAez+yKtu6JULWXvlyl/i30fMuJecgvDNfQ3rYOY
zrgfOI+535bz7pz4+1ZoP57V86HfPWTf+7cUdMZx9J6CvQ+lOniMq9h9x/VQ
3ZS5L7y7jJxN7eD7y7L7TvVpOj26M1rnLff/AD0hfO0=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
0QH8RG471w38ArgU76AdI97Pfb8j2yC/jOZR+l5b8fe/wV9ovsA7a35oeeE+
Xei/O9cdaFF67jk08zc6Ipi37ImspTWUy/Ezf8jtaP9w+S79JyGvQw7PzX/0
e+JWG4k3gTcovI+6M8613L8P8gjZ0dyc/7TMvF/7tC5yh+BnmB08Rs00Tgvu
PSQTKWTvoFsvxRg7i2dpTXLvHujWp9Wh9UKPKtsa2Tg3TxglX4IcTNuYdnDu
e+rTetLvU/6+C7JRsgOyB5/LV6FfiWwuWwP+gT478fdGufnECVz/hWynPYHu
X/BXtKHB89E+OOZ4Cdy3cJyxGLxb4RjlZXA/8DrwyMz79xzwn+Adg33+IPBb
jN2C9h94VWa+MBD5Zm4eMUBzmTsuUUz3LXhMMEfth+yH3J62Tp9Stgn8K+81
Knjv9EUOQrYVX1Vf7R9kQ2Tt0utJvOsn+u2j9Sb7AN4CfX/kSbQc/AttIK01
rdDa4p7R4lH0X6/0HP2Frr84q9YVbRz3bokcgOwr3pbmsQ79m+XmbFovNdKa
2Yh+y2VbeNcVhWPeRsjX03rTumsV/L3e554Pcj/zFHTb04aCWyLnFtbr7+3T
Pvg+M3/vg1zC9Wt6Z/BJyL257kH7kevXuW6c9Ir/lQeYJT7PvRuAb019N6D9
kDmmVWzbWX4b3Wa5r28rPW8fyvak+dd1y/Stvsk8l5qn1YhL+K2+yKUaN/qZ
P4rmiSPk7/QO0eOv1jMy/hCtc9mZtHe/pjXVPue6CfL3xKXFqRXX6Lc+SPGL
1ri4s2ysnuf96HhH47wHvlT8Bbws7a3atFq57Zz21MjC9u8TcQDwxOg9q707
LjqmU2x3eNqnn2e2nSu0Xwvb7w9lVwrbyI/EH8SJwePpPy04ftIe1J7ZReta
/j1hxQu/ZLbNH8sWcm/b0rGSYqYdS9vRdlrjaW1ojYgvvA/etzC/eAe8T+E4
V88/pHCs/Lp8RGE+vj/4s9xx/NuyAYVj69fkT8E/pvhFcUyNFM/2L8x33gMP
L8xx3gUPK5wnWCr/UjhPsAw8uHB+4lXwIPDmyQ6t1L6o/D3kc5dHv8uP9D2A
tin9egfzCOU9Ni3MEZQ72qwwB9wcfG1u3qW80y6aGz0f+Irc/G5j8IW5uWED
8PW5Y6yJuW234owtkbfkfgbNvfaieOJG4Dno5zPu9fLflWOXRtoHuXmKcimb
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
Gy6fovyIeNWa4LntwRgtS/vf7cSHS6+do5nDuwq/06rcud4pufNpCjr0jsp7
b5fuvVY2p7B/k28/mTaTdhLt7tIxT5+U89gurSWtK2G9w/BgOTo4HtF+qVF6
bpTjEj/U91SuVe82MTgXJ79zdHAf+S9xqNbJJ/3LOPujG1d577b+/3Eqrz89
j76DxlGOqEJ/bOIP4pb6LflKfee2yUcqntLYMcVK0omjvZB8q3ysuFGjtPcV
swgPDOYWh2XGeeJ+4oD1KufWlQ/Xt22f3jGk39X36p70mhdx4Ha560O0X4WV
B+tdes53Lb3OtN70/l30W7nzZusXzgdfi/6SYL5xWXBNgfIVWxbO48gezOX9
yug9rTE1vvZ4L+RFwXtFcdV0dGfnPo/R/Olc4+7c59fS67fuCo7ZZauVp5Bv
2hbd3cH1Bjo31D4elva49rzW5+WJy5yYmyN1o9/puWPDmwrHSh9x/Vp6L72f
zmdOzR3rdSr9/HoP5aw0Tps0xhnpN3SecjJ9m1SeC81J8+Qnz8y9v3cq/SyT
Kttq6bV3lF/XGb1+u0nKB+psSPkZxaQ6uxsWHXOpNmb76PPuJ5BDo2Mu1ZDI
Bs6h7zGM3zNxCcUozaPP7h9Ffhqcj9K59mvBuRSdp+g8ZjftK/nA6HP/R5Dv
BOe0dRY8PDoeVN2OzqO0phRjtY4+l38K2Sr6XP7J6Hm+mr9PrXx2rX0s2/pu
cM5cZ8Qjo3l+vbTGrkKeoHM8ZI8snUkFn8Xo7Fh5YH3zkZXzq8p7K5/zZvSz
H5LOEpVvV95de0q5HeW2dd6nOqDj6LM4OCejM3HZK60XnaWIw+vMRWcvbaNz
UMpFiZcqP688vWyU/LK4sX53beY6E9XgyO7LbisuUM5cuXPFmbK1ereto2sb
Hou258pBnyZ7VbrGS3VfLwWfMelMdhva5eDHZTOCfar6yy61Sn5WfF7cXXU+
qvmRzVAO6oHgWhedQT8h+5a5PuH+4NoVnQsXletCVAMmHyxfrPOa/aJjc8VN
qhETrxtYOM6Sn1T9nPbvNPDFwZxfNWJHVT7/01xpzj5J/k45EvkC5ZfFG5Vr
03fR93mf690z1zPoLFQ8RWcv8pHyz8q9PB+cH1Ntw3vBZzGqN9D5jmIoxVLi
PNpn2odTk88Tv9o3Ov+gOrSHg+t5dM7+SHB9kc7Wnws+41O9hPbpjNw1PKpH
Ub5C9WAHR+cfVJf1enDuUeekzwSfS05P8Z18kPyq/JFiHnHOA6LzG6o3eyy4
xkn1IfvTnsxc5/Z4cB2U6kPmpjha8bTqHFWPpLqCA6NzI6pVW5V8tHKJB0Xn
SVQ/pryT1t4E5I7RtUNPiw9H1wo+K55QOr+m+Gj36NyFaslWlc61KT76o3Rt
zfPgDrRb6fMc8uvSeTfFF3+WrsV5QXq9Z+bamFXBeXjV0nxbOm/yILhrdO2i
xnwj+HxH9QYrS+eFFcd9HFzDo7PmbtF1jxr/C64XFs6ljIrOyaje4JvSeSvF
WV+WzvUo1vs8+ExEdT4fBNehqT6kduV6NZ2bD47OyageT/Vh2vuyASMSNxBH
0JmKxpEtaxJdu6V3+Sr4rEe1Qwcl/iAeUb9yjlL1J3Uq173pbLppdG3Vw+L2
tIcy1/XtEZ0vUl2fzsHPFr+Tn61cP6d6AOWjdfam8+INKteWqTagbuWaJ52P
6wxLe3F05XnS+bRi4U9L5+UVMz4bXEeneqHfStd1aT2sSL5A+/S70rWAes5f
S9eBPRN91tU3s49RbKMYR2e1P5auS5NN+6x03l+x+Q+l6wjld9aWrleTX/ip
dH2bbJrOEJU/UKz1c+naOPmR70vXtMkHrSldGyd/90vpGjWt5z7ROWTVXvaL
zvup7nRRcF5ddU0fBdfgqYZBZ9+jM5+FqkZjcu65Xl0636f4t290Llq1rKqV
aJI7hm0XXS+neVB9rvZsN2T/6Nyd6oEHRdcbqz7299J1bNov/we1zGIr
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtmwXUHUXWRV93VwcCBALBNbhDggWHBCeQQAaHwd2dADO4u7sN7u4/7u7u
7u7Ovzen15qe1Onq1/2+flW3zt23mHbjHUZtX/d6vVmaXq/wb932eoOqXu9z
2h9x4g+OmdEfo1+nvQ79K9N+kXNT9On1HuVzc6CP4CaP0Hcregr0nug70buh
V+fa3zk3iva6nBtB+yXOTcnn10avhH4BPTm6h56L9mc03+B5t/CZyWmP5n53
0Hc7eir03ui70Q3HfFz/C+e+4/pn6J+X9nH0P0bfg+hZ0IegH0D/xjUzcf1H
nHuN9h30z037P/SPyfOfRs+DPhb9KNffhR6E/i+6L/0fotdEX4ieDL0l1+yF
/p17zol+jv6l0SfQ3x+9Bf17on+jfw70GvTPSvtTzg2jvR79I2m/zLmp6P+L
7zR71/8Z7du4Zkrae3G/u7wXxyXoGdGLcP179K+G/h96F/R/0Vvw+U04dxXn
fkKvTfsG2i/y2Q041kW/xzXTc/2U6HVof8m5J3neFOi10cei30ZPjl4D/QH6
FfSs3O872t9zzEb7R461aF/P/V/g2guaf37C3iboK2m8jR6GPhf9DPpA9Hbc
b3uOg2h/zLEi/ZfQ/7x/n++Xvk84twPtjzhWoH0x/c/Rf343TjdGX9Hm91ge
fRH6WfQR6F35fMWxF+2Z2jxrQ98Z7f05ty36C/ROtF/iWIj2qXz+SfrXb/P7
vs010/F+/odexb8dPTV6OvQ23febsM373hL9vmOI9iWc28p+jt25/hXOLULf
6dz/ab+/z0B/SP9MffL9dqD9K+dmoP0y1y9M+zSufwr9InpB9CnoJ9Bn8cdv
j/6Wz7yKXotjOfQzVcbjhuj10O+jZ0Cfy+ed3xvyf5fR9yR6CfRR6HHpvx89
P/pA9Fjo87j/LugfHEPox+lfHH0k/f3Qa3KPZdFP0z+p74frd0X/iH6Nvved
7+jzuX40/TehZ0bvhh4DfS96BvT+6Pu4/m70dOh90fegF+c4B/0meleunx+9
b/d+56R9D9dPT3s/+u9FP4VeEn00ejyuvxBtGNkUfRX9H6DXQF9Q5/tege6H
3hZ9I/0PoBdAH4Qem/6L0WOit0Bf08WPIeiD0ePQvxHn/o3+gO80o38//fyv
txH9lzs3EX3RW6KvRV+HntCxhr4FfS16AHpH9M3oy9HjoLdB34C+DD02emv0
9ehr0BM4F9A3oS9Fj4XeCn0d+nr0ROid0beil2jz/t/k+w30faBXo70r1+2M
ngA9HF04vuK3W9740sXbBWgfUhI/b6/yfg9Fz4f+vyq/131cMyP6AJ53f5v3
NQl6c3Th/v25fhv03eh36N/PmIG+js//H/roknjwaJX4OgF6W/Q9XP8ueqJu
PD2E/tD5ip7N+FIl/t/A8yZG70L/beiJ6d8N/TD6I+NLyXp0Y5V4eXBJPL+t
yvg6CD0n+qYq68cBxlvjY5X1at+S9eJa9O3ocdBbou/k/m+hj+V4GL0MehR/
7yT0745+BP0xfUehF0U/UGU9PLJk/t+Pfhh9knMQvRLXr8XnT0Q/gR6OXhN9
Avpx9IroNdDHoR9BL4v+F/p49KPo5dCroU92DqBXRq+N3qlkvB1XJT7uUDJ+
jqoy/3csGX/HVBmvA9Dboe/l8++h30S39D2I/gB9WEn8uafK+nkV738gejv6
W553REm8uo/+h+ifFL2Hvy/9n6APL4mv93pP42XJ/L+iynzYp2Q8XVll/J7K
8Qx6JJ9fl/v/p2S+X15lvsyAPgT9Ev3foKdFH4h+Hv0l+hiOh9BLo1fl8/v4
ndFzoJdEH6xHcayjl0Mfgr4NPQS9PHq0Y9pYjF4YvZ9zED0Xehj6MPQd6EXQ
K6Ln5Pnnot9Cb4oeib4eXRkU0Idz/Z00F6V/uO9LT4FeDL0S+iD0Lej50cv6
9xoT0LOgF0evwv1uQNfcr0LvbYxAz0z/Yuj9jSnoudFLoQ9A34SeF700+ihj
JnoJ9Aj0geib0fOhl0Hvi77a2Ioeij7SmIxeHL2yzyuJz5dViT87cByHHo/+
wZ2fmZi+HTm3urGc6w+i/QL9X3HtLhxnoCdFz8/1O/oboydCz+N4RZ+Gnhg9
L3pn9OnoSdDzoafnfgejX0R/bfwwJqOXQq9C/0D6D0A/h/6CvuXRV6B/Rf+F
3oPjPPQ06IW4frdufZkKPUT/w/V7o59Af0rfVOj/oJ9Ef+a74m+aDL1Hnfjl
mnZGkzXQtW5r5wjtMeifi75tHPPoMdFzo7fVk6D7ogehd28zXqZGL4iemuf9
F/0U+nPHbpN4eWid+XIlelz0jPy7vu+nJN6fUMVfba9/ot1wrEd7M85tTf9X
6Nm5/vMm69Vldfz6l+gNnH91/Oa76H+hz0NvgN7LNQY9E3pR9Kw870j0a+hv
6duYYzP0Z9x/Fvpno/8o9Ov0f0ffdvo1+mqOtWjPTv/R9L9B//dt/Ncq9O3r
Gu57bLN+nFHFH+h39DMnc/0A4yv9o+h7zznOvdZos94/wrlJ6P+iiZ+6vE4+
MZ7+hL6/OPc51/fXH1VOSK5Ff8sxsPOzL9IeRP9e6Nvq+JcR3G9a9If0z+P3
M//o8oX5aC/jeOj656X9i/Gr6//EWMCxM+3vObcN3+eRJuvL4XXi/yD6T0S/
h/7RtaTJ+nZYnfi5nPlT5//nNzfh+hNov0v/D/QPRp/k2NPbO7faeNs5uXYj
nrcJenP/du4xq/Onjd8+oIl//cH53H3/l2g/799E+0TuNz79nzbxj5fWycfm
4ZqT0R+gf+ZeK9E/Tff+BtPelHNb0P6Cc7Nx/Y/G6+7+r9J+oZsrJ/H5CfrE
34+gfwfOjXb++Hz0n+hV9HJ85gLa33H9H9x7LddFvZvvnWN4Gz/p+qwfWxE9
E/qaKv5tRJt87dYqfnAo97vQ34N7/Enf4vot+vpxLOHY59xi9D+InpDrV26T
D95SxR+vhJ4LfXMV/7sg9zsT/Sn3+4W+3Uvy03Oq+LE9SvLf86r4t9El+dv5
Vfzdam389EPoiYxHJfHlrCp+8SK+0xjozbj/1cbPEr9zUhU/uxD6LOcf/b+i
d0VP2s0f/eqeJfnxhVX87Qzc7yv0uOglnfv034ceX9/K899skn+exf0mRo/J
Z/ZzPUdvgX6jSb5+Zp3vuzT9/dFHVFn/32qSH51dZz6OQf+C9O1kDOZZrzXh
BWfUeb9j0b9IlWf8Tf+NTX6/XenvQ/9y9E+DvqRKPj4uemnaf3CuH+1V2uQr
d1UZr6Pa+HP9yYAu3/B97F7Hv63eJt95uMrft2obv393lfG4fBs/c2mV/H5s
r6e9Eee+4ftdzrEP7b/MQexDn4/+lvv/jj6F42n0CPQ6fH4R9IFc+wbHNOhj
uH4p+h+rwiNO5vvtQ/u/HCc2yRnNbcxxTjX2cOxHe2+O48xN2ujTmuSTr9Me
zbFHlZy/X5377c/xNO2jvI72T11M2K7Ns85skk9924QP+Kwd0B85LszlXE/q
xD9ZzTD0VrTXbRLPXGNca4ynxsNb68S3pmT+Oo+37pO81/x3c46r6+QXrk0L
e65JjmuuOzftnbp8eqT+Ab0j+t9NxsYYnFvf8cqxv+spekPaFzmvOb7p1sTt
+Xxf9CJN/NezJXxCTrEheuEmbGPe7vMyBXN3c/h9u/vbZ05konw4epcqDGJ0
F++NTfOjN3Zt5nk70z6sy6eO5N8fennnR9Me1KR/J45Dm/wexufduv7pmrA1
GYWsYhN/4ypMaPVuvfmb/iHoTZusB66lC3FsRntmnr8j7YOb8IMl9R+uFxwz
G58438e5wVHx9yxQsp5/1Pmr+Ur40Yed/5LfGL+vq8M7hpT4y487/2U+J9+6
q46f0C/pZx6vw7s2R7+KnqRJPrIV+g30FE3yGeP28ly7Asfq6C3pf53+yZvk
N4uX+NevO382eYl/eqwOLzPe6oc/6fzjYiV+/KvOPy1a4l+/7Pyca5Jrk8xq
jyYcQ56xVhUe5Pu33Z9jqGtvm9/b3317Pr9mk9ilh9HLmDebPw/l2IL2XK4Z
VTzJLk3GreN3edd72hO18Teype2MByX5xxf+FuiZSvzuy51f3KrN+HSc/hs9
S4n/faXzj/ov/fOrnX90nDveJ3B98h4l/vbtzo/LbB1fD6A3Q79WhdU5J/R4
3/D5n3v57hvTP3uTMez4/KoJ8znBuFSFBT1bZ0zpsfXazinn1ij0O/y7WJM1
9R30diX39N6+n4nbzEm/szmDudLjnHu8Skx8tgnDOqTJmJZtyX8OrvI3vmsu
jT6oSswydg31nr2M+WFtxr/+7fBO2394Fz/bEkZxRxWGIbvYnO+zThPG+meJ
55V9L92LF96gzprJP/+wM2OSv7FrwHltYqax03g9H3rLPpnD5j9nordCf1yF
v56FXrlJHDWe1rIK+k9Cn03/HCUx2djs3+zfvgf69CbxT/4q0z2miUeT9TqH
nEsygi1Kxoxjx/j4Tgn/ObTKO/quSc4wUxNPYC5xS504ZjwrbdZ444rxxbV/
PfQc6B+dk8Z07vkm7Smb8Ao9yalVPIlexfmtPzMGGAuM34Ppn4Tjb3+DNvHN
d+S7WqgJex3cxXeZk+xpzir5i+uNbT27HlpGrhf29/J305PrLfWY1hOcr7NV
8fzfVfHoenE9+Wq0V2iylvv3rEj76xL/OryJXz6rCev2/Z/d5LebqArTlZ/r
79We97edv/s+PtP8Zt7u++ip9a9LNfnbZczmN5+W5MfrdGNPj3NalZxH7/O3
ns7c0pjDtRdzjNY7+fvTV/dJ/HzMGFbC2E6pwihlb9YY7qziiaw9yHCvruKp
ZLu/cY/Z+PyVxpgSD7Nlk3imt1nVPIv2WMYUY1AbXvoWeto+YWxXVWE0sjfH
hrnYVFXep55O76yn1ev5neVkF3V/i+/fa63RbNRkzL7Wi5d3LG+GfgU9cRO+
tTH6RfSAJvm9jEpWJcOStcq0ZFsyLGsB5sDmwjIvaw96aL20HlAWqwfXi+vR
ZasyMFnY+N381jOf0f0evk/XUWOLc+iaOp5eb69Hl73qqfXWenpZskxAtikz
lBXoOc1NzFH0ojJF2aI5nrUxcwBzAXOEy7t4o5fWUz9V4vH1+ub4smwZpizT
HNJakMxSdinjtBYm05RtDu6Fpe9TJ/cxB7J2Zc4pe5TRmYuaY8rqZHLmnjI9
vbMeWtYt45X1yoBl9TJgWbAMVfYu05RtyjSt/VkzebZKDcZaih5Xrzusl1qc
jFfWO7SX2poMV5Yr47C2d0ydXH7JXli+NY/nqtR8rIVY87C2IROQDVhDeb5K
zcjaioxEtiijlJ3IEGWJMkbZ+D+MvQrDkr1bQ3qnSs3K2pI1p3er1MisRckA
fuw8g2zgdY6fqjDpMUoYb1uHScl+rTlZK7JmZC1KBl3qMDDZ9Dl1akfmSOZK
1sjMlfVceq+X0V9XYea/ol9qw25kOL+jX0F/U4WR/9mtl9Z+ZLYXtKnpfVmF
UVvrs8b2KnrVXmpvMvSmDiOVrctk+9RhqLJamZdsSk+nt5PB/1GFicnmZcJ/
VmFiAzo/IPtzPX+rhAnKBqftpVZhMdlcamAvrNh4Y+4k4zq7TU3AWqmeUm/Z
r4SxGzOMHW9w/FyF6ff1fZd4HWuS1idl0nUdPyKrliHLkqfvpdYisxurDrOS
5XlPY6lM2me9if6lCrMfu4S5jV2HYcni7q+Tp5iv9G3DFPtz7vjO/8g0J6jD
cGSd65bw/HGa8N11Snj+2E348Nola/VYrkXo9Up4fb8m/HflEt76Vx2+vGYJ
3x+jCY9epoQP/1in3rtGST2gTxN+PaqEhzZNeK/MeUmuvbcXFm1xSvZ7D80R
JV7DfPCQbr0zTzVfPaBKzW61En5emvDh1UvqHW0TPr1UCT/+oQ4fX7aEp//U
8cLlSnj6z3X4tJ7wHfQ0TXj+tv4mvusm+fI2/vb+Vk3qF5ugX0JP2ITfb4p+
2bHbpN5iTqy3058e79/cJHfVk+vNHy9Zn1yn9DLrl9QTxmvCv+XDt6N/qcPX
Vyrh8X/W4d8y9qF1GIns3Xfmu/u7Dl9fsYT//45ewny1JP8ftwkvH17C+/+o
U2+wJjF+HYZnrUImvWCd7+B3kcGsgn62FzYjk7i7i8eyM5nEpd38uquL75d1
8cx4LyO5pJtv7mWQiV3brUfGcxmJrETmIeuTkV3TrU/WPmUm93Tx0/gq45J1
ycCs/f5T4+nWy6u6+X1Utx4732W2Z3TrreudzO3Wbj0ynsvQbunWoye7eH9b
t564HsjQrHWY45nrybRmrcPwZV0ylkGuw72wFxnzZHUYnOz5nTps/7xeciH9
nGNbJtKvY37z1KmhyALHbFI7c44512SqA9H/64W1yqgnr8PYZNcyb2sX5mDm
YjLJwXVqPLLKb+rUXsxhzWVlpNPXYY6y0/5NalmOQceizHa6OoxTlmtNY0Ad
pmutw5rWhHWYq7UuGfG0dZiT7FjGImvRb36P3rwNL9bD6+W39WjC3Kcp2bNh
PrxUFX6m/9cn65dl5eYk5iYycXnXpG34zIboqfQ+JZ91D89kxlpzvCqeVm9r
v7mPjE5WJ192L45MaZw2OYW5hXt65H16Tr2nDHhAm/04snmZoexQPi+7ksHJ
4txMYq1aZig7NCYbm92jVLXZgyHP8TtNTXsujj2r5LjmureVvEvf8dddfiUn
k5ct2IapyazMl2Rt5ltyNfnaHOjZ27StkZgfmlMaf2RyC3TPs08mN3eb/O7E
LsbOg765ZO67hriWDGnzbMfnvG32NLzfy3f28+bcxjafMbjNYdscVz9yL/0X
9TLGHGuOh5E8b+NeWJxMzrzJ/ElWZ43GWs3m9I9J/30lc8s559yT2X/R+QfX
YXMEc9PP6+QOMqVjmzzfXPv+klzCOepcdQ+EeyGswfzFddfRf2gvHkOvIcP5
rVvvZTsyK/e+WIOSZcmQfu/8hv7jIY4be5mzzl1zCHOJcTnGK6lpfN75p7Gc
v03+tmvr5CuuGdZ+XbNcS24qYTMyGdmM+5vMrd3z5N6nFbq/57c6udjZJWP/
N869XMKEdm/Ck2br+q1drNbNj4dLcjdjurFd5jO9ca6X55nTLNvFG3OdR/UY
vawxrjX6DWGD/NG9Gc5fOZLfefxuvlkrG9mN71tKvIdrimuLzEZ2Y43HWs9A
x0QVhlhK+MU+TXinrNUcdO0m93T+/lQydsxxfy7hPzIz909d3GZNdm+Ba5xr
9fYcE1apoXzgWluSO47N8X4JA1yuy1flATID9zroeWQJ8gi5rfz26RIG6F4H
PZNscK+Svm85ninZo2c+L3O2fidTdK+EnkvW+GEJy3PPgn5QjzGyW0/1Hufx
rK97qYGYX33S3W+G7u+1BvZhLzW/77r3YZ9M2/n0Yhc/ZQayAxnAv5rwBdmA
TGPVJjxC1iGDkcXIYPXHehb3iujZ9DIyObmsfFZW5x4/eYIx/MsSTzSiWy/0
SvI1/cFzvbxv90TKS9yz4/4d+ZVcT773XAmjNX8wn9BfVyVj2T1m7n97tft7
rWFaH5VhyzjdUybbds2QdTkGHYtutpNly+ecr7O00TJur7+xZK3RQ+ulbyjx
0npwvbj7B63d7NLNH5m/+/7ck2ctYJo2e0sds9O2YYA+y2f4LHnbKU32OMr/
+rRh4+5J/b1kvG/SS83Bz19f4v3Nacxtbi1ZW/Xsevfb0af0ssa61sqArJO4
5vj73tnFPz2AXuCOEi+g59B7yMRkSTL/F5z7JV5Ej6BXkOk5910DXAvuLlnr
XcNdy+8qWcv1HHoP44vs2ZhyTpv6qbXrBbrxJKOT1bln1XraPSXeQg+hl5Av
ylXkK+6Flb/u3GRNcv17sMT76Fn0Lo+UeFtzBHOFa0tyQXNac1sZ8nhdvqOf
OrVkbXCNMHfV87s3xhqCucA1JbmwOa+5rzmKe1OtOZi7nFmSq5rDmsu6n9jY
Yk3J3++0NmuBY8KxoZ937TYmWY96oMRr6QH1gvq9/p2f1q/JxPt2+Z7+TH9n
LDYmy8vMwdyroyc3Nzu9ZG44R8y1zQmW6PIl/Zl+bcnO/+vHzbHcK2ROY+5l
Tjak8+/6xzNKcnNzeHP5kfQPq5OTnd4mJ3TvjzmGuaI5n3t/zPnMBc0ZFu/y
M3MJx5dsfWCXv5hzuTfIHMtczJrAmF2+bq3APX7nNOFVsl9rPO6lsYZg7cd4
ZK7+TB1WbI3EvS/uQbF2sla3fvVtwhqvKmEF5tjm2taAJun8r7Uhc57Z69Q0
zIUWapM7Oj/l064HD/TyDnwX7pcxr/SahdvUcCbt/Lt+3xqpOah7Fs9tU5Ny
b5A1EmtV3mPRJmuM936sJBYaE82drLdaa7RGsFibmop7cawhWWsx5164Ts5m
Lm4NZso6e4CszQxpsnbIe+Q+1qCm6fIB/bz+fmDnv80//tmz0+Ub1qJk9PJj
PaXe0v3zxvb9e/Gn5tDutTKHN7c+zTWkF2bzYuevZI6bce6iNjV29wZYs7b2
bs3a2vWSvdTq3dPr3l739PzRpOYuPxvaC186voSNydBkaSegh/fCzGRnMgL3
hpnDyw7cA+Tec/mUe4PcQ+PefPcEuLfGPUPu9XcPgHuJ5FnyvGG98KUTS8ar
zEn25B5keZ08UB7mnlv3Csvv3It7cglrk8HJ4q4uYWUyKlmVNSFrNcfXqRWd
VMLqZGyyNvek+N8KuKfAvSqnuGb2wvBkeTJj94Y91AtLPrbku/idZInHlbBF
maXs8soSluSa7NpsTWsp9MxNal2XlHhTParsynqUY/3AbrzJBObu8lNZwWUl
rEtmJju7tISdydRka9bbfFejuvVDv2it0JrIE6X3D68Z1OWX8psLS9iVzEp2
5Z599+67R+eXJsxori7/lCXJMNzLZ410pW5+7d1kjjhXZBLuhbRmOryLH+4V
lvlf2obhuPfLGrBsR0ZirmDOIK9wD5E8U76o37yghKXJ7GR3enBrB/JQvbk1
ZX87f0N55/klbE+mKluVEbmX0fxfdvT/BFokPA==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt13f8T/UeB/Cf3+/7+ynkJuuaXRllNJFrVTLKrIR7Jd0GGSkl81plZCZ7
j+yZnZEQKrIaFKWNlHG7pSu5ouf7cfrj5Zz387zP+X2/53vO5/NR4vHOTZ9J
T0tLe1cy5flUWlobMC5bWlp29fyMtLQODnzAcss1/ISe3/lFecyxdfyw7f/V
F+Rf9teyT2y76m1nf4rzrnS9hY73Yp3YXJabLWPdWHs2jeVgi1gP1pHNYrnY
EjbeNYvatuKfsw56+kkX9Xh9BdgaxyfqK27bmn/JntLzm/q8POrY6/yQ7SS5
lj2i/kpfJ3195Tn1WNfLz1Y73p11YDNYTraY9WHPstEsH1vFxrpeYduW/DPW
Ts84VoQ9xI6w9qyzPKoe4VyH0mb7Z4K+YrYP8y9YRz29o1c9Sl9ettLxnuwp
NptdxZay/qw7m84KsXUsO8uSx133jfjbtq1lpf2T+trqO6uvIuunnmC/pOyN
34Lt0XeFDNNXOH5HtludXYayIqw2e1I92fmTZLn6HunD1qlv0rfZNXPqzRHP
lmNvxvezvVJ9hTxhf1P8nrYtZEb8Ns69z7lfOLct28IusF4sj3PqsW5sBSvD
1uqrG88bW85ek43q+2Qs26veE1HXkafZQvW1zl3u3OZsejyzrAn7nHWJz8bG
sCw2jz2obyo7yBqxI+x+No7tY3XYR+wBNp7tZ3XZAdaUTWDvs3rsIPsnmxfP
KGvBjrFmbBr7mDVmn7En2XZ2mRWUMz5bfTaQbVa/KTvUDWUw26q+3blvO7cB
G8S2sMpsB/sHmxu/A2vOjrJ5bKjtLfIb+6v6Xumrb72+m9mbjjVmI9m77A62
J55ttpgdZQ+zH+IdYIvYt6wVO8kasRHsHVaT7WVN2MtsJ7uT7Yv3ka1ip9iT
7Jd4L9hSdpw9wk7HOMCWsGOsNTvFnnVvHmMvM7tpc1jfGJ9YNaka91H9goM9
7M/UV1jfen2T2Rr2DXuI/comsdXsa9aSnWPj2Cy2m9VmX8fYxOazD1l99l2M
Q2whO8Aasu8zkmdyTHrym8Vvd7WHa0oqGTNLZiVjVIxVa9l+dklPP+deq94g
B1lKBrOS6vckXf9tbC17QL1LsrFb2Rp2v3q9HFBnyCB2nXqdfKROl4GshHqC
LFB/5O82YCcykmdtQHryXsX7lcPnnJpKxtFSWclcEHPCtFQyH5Rml9SXZT7b
zM44r4Pr5Y77KXvZRdaHFVPPSyVjQznn5rJ/VYzDMX6xV7Il89Nc11toZ7Jt
CTkR90W9Rt8+fb/r68uKq1fFvWG/sZ6skHpl3Bt2nvWIZ1y9WLaxn9gzLJ96
kbzF/sueZnnjd5St7EfWiV2jXi7vsnOsGyugXiE72a+sOyuYSsam59OTMTLG
yizfcU4qGZdvyErGwRgPd8Y8xcrKMufWV4+RyeodzqvODvve29kPrFCM+ayq
uoq/cTr2HZ8if1fv4Cf1FI65y7Fq6rflJ3WJmIPZXfG+xHMV38l5NeJ85y6L
Xj211Ff728fjmY9nkLVhVeJ76DuSSn6HMTH/yQL2s22bGFv19rY/KzO5r3F/
26nby4wYS2PMinEh1g6OZdNTNTMZM2PsnMqrqWfH82d/YKwvHDtj+5red1y/
iv2uLL96t+RR14r7xR6Ne+fcm9kQec41Y1DYJsf05JOJqGI8o/K5OlfMt6yC
+t9S3P6CmGec/3783nI23lWZ79jd6rEyRf22vhrsU72vp5LrxPU6qfP4HG+x
o+q8MsGx29Rb5Bt1nlh3sVviPZAj6pwxjrHy6vKZyfwS88wo16ug3sq/jXVZ
rH8cuzWeKflEnSVDWGn1RvlYnSkvsVLqTfKZOoeMZOXifsrP6utkHqul7urv
nFIXkaJyu+d1biqZs8tmJfN6zO8F9Z2N+crn6+LzFVCPit895s2Yzxx7XN/z
7Hv19bKYVWGvsPwx98UczJ5gL8kL6qWuV4ptc3y0vgIxX8cagbXR04WdUJeR
Rez2GDfYdzEOxTzPKv35PU6ry8cYE+sJ9VNy2H6BWMPoKxNzAvtRfVOsL1jN
WFux/6hvjPUFq8GeZcdj/JMFrDLrxs6oK8RYyaqzofFd1Kt8j7Kx1vb58+pr
ou5vv5+8qh6i78V473lpfdv5GF7QtgU/zNrqeTnul/oNfRXZB46PYqPZJlaJ
fcgupZK1Qu2Yi2N8jutLT32v8iL6NvABrBebw4qyjewVNpFtY1XZJ2wkG85e
Zzey3SyXz3eX+rtYr6nP6hkkvdOTdybenU3x3sa7FM8UK8beYMPYELaalWM7
2fC4XzFnsfJsFxvBhsXcxiqw99hg1p8tYSXZW6yjz3KI5Y9xll2vpxP7VF1Q
prAb2KFUMtb0iHW9zIz1r1zUUz3mZccaxH1iv6grxndmdeJ7sV/jHZANrF58
L3ZOXVnWs7qsDzsfY5NsZPfEs8wuqWvKFtaIpeSy/Wbxjsh0Pf3ldz01ZLNj
DeO3lUnq7b5vNXZIbyF9zWPeifVmzL2ZyXq8bYwtfGKsf7KStc+FP5/5ePbv
ZJVZT8ePRJ9zK8XzF2vyjGR9FOuk+vpeZJft3yFb/d3GPsdAltJXm73DmrIB
LIPdHWMge5CNZH+J9R17n7VOJX8jR6wn2L2S7m/0Yv+zX0nW6autb4/8TV+5
jGRMOaDurO8rPcVlFrsx5hP2pbqYzGTfxPPHMp1XJz35f22zeP9YdlaP7WIt
Usn/feL/QCviXPuL9AyTXPYbsr2OPaRvMMuK/1+wnax5PKMsZ6yt2R7WMt5L
ljfW+enJXBpz6nB2VcxvbB9rxUaw3LGOZvvZw+wPi9/+BQ==
         "]], 
        Polygon3DBox[{{1185, 697, 911, 1445, 1030, 1031}, {1233, 807, 459, 
         460, 808, 1234}, {1389, 733, 540, 539, 916, 1330}, {1023, 1022, 1442,
          901, 902, 1443}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r0rr2EYB/Abx9vBD7FIORlOJhbZiGRj8Xq8kxgYWPkDREmSkCQkRhOT
TEw6g7wc7w5ZZJFJsfg8Gb7P57p67u7rfu6ewr6RhuG4EMK4dCuiut7jlWsJ
IWRxm7+4zxL+ZQVvWMcXdvCDnzKkzv4RwhjzOckiLrKMW6zhLht5yCemmdsv
p/pO5kh9fAhn+gaeR+v5j028YDMv2cIr/mGrXKvbeMN23rKDd9HevGcX/0ff
zQdWOnuGmQPyGL1nrgw724m+lwfR/XCH1dxkKRf4mxPM4ygzGZNB9bu92/nM
Wl6xnEcs5h4LeGz9G3vMzYzOHCmbEtNvMIPrTOcq07jCn1xmKpeYwgXOS7J6
jkmcZSJnaFyYpvFhiq4iVGlicd//wxeO8z5G
       "]]}, {
      Line3DBox[{928, 1230, 607, 927, 1449, 1135, 929, 1450, 1136, 930, 1451, 
       1137, 931, 1452, 1138, 932, 1453, 1139, 933, 1454, 1347, 1540, 934, 
       1455, 1140, 935, 1456, 1141, 936, 1457, 1142, 937, 1458, 1143, 938, 
       1459, 1144, 939, 1460, 1145, 940, 1630, 1231, 1146, 1232}], 
      Line3DBox[{942, 1348, 1541, 941, 622, 943, 1461, 1147, 944, 1462, 1148, 
       945, 1463, 1149, 946, 1464, 1150, 947, 1465, 1349, 1542, 948, 1350, 
       1543, 949, 1466, 1151, 950, 1467, 1152, 951, 1468, 1153, 952, 1469, 
       1154, 953, 1470, 1155, 954, 1471, 1156, 955}], 
      Line3DBox[{957, 1351, 1544, 956, 1352, 1545, 958, 638, 959, 1472, 1157, 
       960, 1473, 1158, 961, 1474, 1159, 962, 1475, 1353, 1546, 963, 1354, 
       1547, 964, 1355, 1548, 965, 1476, 1160, 966, 1477, 1161, 967, 1478, 
       1162, 968, 1479, 1163, 969, 1480, 1164, 970}], 
      Line3DBox[{972, 1356, 1549, 971, 1357, 1550, 973, 1358, 1551, 974, 654, 
       975, 1481, 1165, 976, 1482, 1166, 977, 1483, 1359, 1552, 978, 1360, 
       1553, 979, 1361, 1554, 980, 1362, 1555, 981, 1484, 1167, 982, 1485, 
       1168, 983, 1486, 1169, 984, 1487, 1170, 985}], 
      Line3DBox[{987, 1363, 1556, 986, 1364, 1557, 988, 1365, 1558, 989, 1366,
        1559, 990, 670, 991, 1488, 1171, 992, 1632, 1233, 1234, 1631, 993, 
       1323, 1324, 1651, 994, 1337, 1338, 1656, 995, 1367, 1560, 996, 1368, 
       1561, 997, 1489, 1172, 998, 1490, 1173, 999, 1491, 1174, 1000}], 
      Line3DBox[{1002, 1369, 1562, 1001, 1370, 1563, 1003, 1371, 1564, 1004, 
       1372, 1565, 1005, 1441, 1566, 1315, 1006, 811, 1236, 1007, 1628, 1227, 
       1235, 1303, 1302, 1634, 1008, 1326, 1327, 1325, 1333, 1332, 1647, 1009,
        1340, 1341, 1339, 1567, 1439, 1010, 1343, 1568, 1448, 1011, 1373, 
       1569, 1012, 1374, 1570, 1013, 1492, 1175, 1014, 1493, 1176, 1015}], 
      Line3DBox[{1019, 1494, 1177, 1017, 1495, 1178, 1021, 1496, 1179, 1023, 
       1443, 1497, 1180, 1320, 1321, 1650, 1444, 1304, 1309, 1181, 1239, 1438,
        1646, 1322, 1306, 1240, 1293, 1294, 1182, 1305, 1435, 1640, 1285, 
       1269, 1241, 1259, 1295, 695, 1284, 1273, 1287, 1274, 1242, 1260, 1296, 
       1643, 1183, 1286, 1275, 1276, 1243, 1446, 1635, 1184, 1329, 1328, 1498,
        1185, 1031, 1499, 1186, 1033, 1500, 1187, 1035, 1501, 1188, 1037, 
       1503, 1190, 1039}], 
      Line3DBox[{1038, 1189, 1502, 1036, 1578, 1380, 1034, 1577, 1379, 1032, 
       1576, 1378, 1030, 1445, 1575, 1344, 1346, 1345, 1029, 1334, 1654, 1447,
        1311, 1313, 1312, 1028, 1436, 1641, 1272, 1256, 1271, 1270, 1027, 
       1642, 1267, 1292, 1268, 1238, 1266, 1283, 845, 1026, 1264, 1291, 1265, 
       1237, 1263, 1633, 1434, 1025, 1317, 1318, 1316, 1649, 1432, 1024, 1319,
        1574, 1442, 1022, 1573, 1377, 1020, 1572, 1376, 1016, 1571, 1375, 
       1018}], 
      Line3DBox[{1041, 1381, 1579, 1040, 1504, 1191, 1042, 1505, 1192, 1043, 
       1506, 1193, 1044, 1437, 1507, 1194, 1299, 1440, 1648, 1314, 1300, 1310,
        1195, 1257, 1638, 1277, 1278, 1258, 1261, 1382, 1639, 1288, 1279, 
       1290, 1280, 1244, 1262, 1298, 707, 1289, 1281, 1282, 1254, 1637, 1196, 
       1253, 1245, 1508, 1197, 1045, 1509, 1198, 1046, 1510, 1199, 1047, 1511,
        1200, 1048, 1512, 1201, 1049}], 
      Line3DBox[{1051, 1383, 1580, 1050, 1384, 1581, 1052, 1513, 1202, 1053, 
       1514, 1203, 1054, 1515, 1204, 1055, 1644, 1297, 1205, 1301, 1645, 1228,
        1331, 1335, 1336, 1655, 1247, 1307, 1308, 1229, 1255, 1385, 1629, 
       1248, 1246, 721, 1056, 1516, 1206, 1057, 1517, 1207, 1058, 1518, 1208, 
       1059, 1519, 1209, 1060, 1520, 1210, 1061}], 
      Line3DBox[{1063, 1386, 1582, 1062, 1387, 1583, 1064, 1388, 1584, 1065, 
       1521, 1211, 1066, 1522, 1212, 1067, 1523, 1213, 1068, 1653, 1330, 1389,
        1652, 1342, 1249, 1390, 1636, 1069, 1391, 1585, 1070, 736, 1071, 1524,
        1214, 1072, 1525, 1215, 1073, 1526, 1216, 1074, 1527, 1217, 1075}], 
      Line3DBox[{1077, 1392, 1586, 1076, 1393, 1587, 1078, 1394, 1588, 1079, 
       1395, 1589, 1080, 1528, 1218, 1081, 1529, 1219, 1082, 1530, 1396, 1590,
        1083, 1397, 1591, 1084, 1398, 1592, 1085, 1399, 1593, 1086, 752, 1087,
        1531, 1220, 1088, 1532, 1221, 1089, 1533, 1222, 1090}], 
      Line3DBox[{1092, 1400, 1594, 1091, 1401, 1595, 1093, 1402, 1596, 1094, 
       1403, 1597, 1095, 1404, 1598, 1096, 1534, 1223, 1097, 1535, 1405, 1599,
        1098, 1406, 1600, 1099, 1407, 1601, 1100, 1408, 1602, 1101, 1409, 
       1603, 1102, 768, 1103, 1536, 1224, 1104, 1537, 1225, 1105}], 
      Line3DBox[{1107, 1410, 1604, 1106, 1411, 1605, 1108, 1412, 1606, 1109, 
       1413, 1607, 1110, 1414, 1608, 1111, 776, 1112, 1538, 1415, 1609, 1113, 
       1416, 1610, 1114, 1417, 1611, 1115, 1418, 1612, 1116, 1419, 1613, 1117,
        1420, 1614, 1118, 784, 1119, 1539, 1226, 1120}], 
      Line3DBox[{1134, 1252, 829, 1133, 1627, 1431, 1132, 1626, 1430, 1131, 
       1625, 1429, 1130, 1624, 1428, 1129, 1623, 1427, 1128, 1622, 1426, 1127,
        1621, 792, 1126, 1620, 1425, 1125, 1619, 1424, 1124, 1618, 1423, 1123,
        1617, 1422, 1122, 1616, 1421, 1121, 1433, 1615, 1250, 1251}]}, {
      Line3DBox[{395, 608, 1449, 396, 622, 424, 1545, 637, 439, 1550, 652, 
       454, 1557, 667, 469, 1563, 681, 483, 1572, 693, 1495, 495, 703, 1504, 
       507, 1581, 715, 520, 1583, 728, 534, 1587, 742, 549, 1595, 757, 564, 
       1605, 772, 579, 1616, 787, 594}], 
      Line3DBox[{397, 609, 1450, 398, 623, 1461, 425, 638, 440, 1551, 653, 
       455, 1558, 668, 470, 1564, 682, 484, 1573, 694, 1496, 496, 704, 1505, 
       508, 716, 1513, 521, 1584, 729, 535, 1588, 743, 550, 1596, 758, 565, 
       1606, 773, 580, 1617, 788, 595}], 
      Line3DBox[{399, 610, 1451, 400, 624, 1462, 426, 639, 1472, 441, 654, 
       456, 1559, 669, 471, 1565, 683, 485, 1574, 901, 902, 1497, 497, 705, 
       1506, 509, 717, 1514, 522, 730, 1521, 536, 1589, 744, 551, 1597, 759, 
       566, 1607, 774, 581, 1618, 789, 596}], 
      Line3DBox[{401, 611, 1452, 402, 625, 1463, 427, 640, 1473, 442, 655, 
       1481, 457, 670, 472, 1566, 898, 899, 900, 1649, 815, 903, 816, 904, 
       1650, 884, 871, 872, 1507, 510, 718, 1515, 523, 731, 1522, 537, 745, 
       1528, 552, 1598, 760, 567, 1608, 775, 582, 1619, 790, 597}], 
      Line3DBox[{403, 612, 1453, 404, 626, 1464, 428, 641, 1474, 443, 656, 
       1482, 458, 671, 1488, 473, 811, 907, 909, 908, 813, 1633, 843, 844, 
       817, 887, 886, 1646, 905, 888, 889, 879, 895, 894, 1648, 880, 875, 
       1644, 876, 524, 732, 1523, 538, 746, 1529, 553, 761, 1534, 568, 776, 
       583, 1620, 791, 598}], 
      Line3DBox[{405, 613, 1454, 407, 627, 1465, 429, 642, 1475, 444, 657, 
       1483, 459, 807, 1632, 809, 810, 800, 1628, 812, 842, 841, 865, 845, 
       873, 846, 818, 850, 885, 849, 1640, 867, 853, 854, 834, 858, 1638, 857,
        835, 896, 897, 881, 1645, 803, 917, 915, 1653, 916, 539, 747, 1530, 
       554, 762, 1535, 569, 777, 1538, 584, 792, 599}], 
      Line3DBox[{409, 615, 1455, 410, 1543, 629, 431, 1547, 644, 446, 1553, 
       659, 461, 910, 1651, 673, 475, 918, 1647, 919, 892, 893, 685, 487, 
       1641, 851, 852, 820, 838, 868, 696, 1643, 499, 859, 878, 860, 822, 840,
        870, 707, 512, 863, 864, 826, 1629, 720, 526, 827, 1636, 734, 541, 
       1591, 749, 556, 1600, 764, 571, 1610, 779, 586, 1622, 794, 601}], 
      Line3DBox[{411, 616, 1456, 412, 630, 1466, 432, 1548, 645, 447, 1554, 
       660, 462, 922, 1656, 674, 476, 1567, 891, 686, 488, 1654, 920, 801, 
       912, 913, 914, 1635, 500, 890, 906, 802, 833, 708, 1637, 513, 824, 721,
        527, 1585, 735, 542, 1592, 750, 557, 1601, 765, 572, 1611, 780, 587, 
       1623, 795, 602}], 
      Line3DBox[{413, 617, 1457, 414, 631, 1467, 433, 646, 1476, 448, 1555, 
       661, 463, 1560, 675, 477, 1568, 926, 687, 489, 1575, 911, 697, 1498, 
       501, 823, 709, 1508, 514, 722, 1516, 528, 736, 543, 1593, 751, 558, 
       1602, 766, 573, 1612, 781, 588, 1624, 796, 603}], 
      Line3DBox[{415, 618, 1458, 416, 632, 1468, 434, 647, 1477, 449, 662, 
       1484, 464, 1561, 676, 478, 1569, 688, 490, 1576, 698, 1499, 502, 710, 
       1509, 515, 723, 1517, 529, 737, 1524, 544, 752, 559, 1603, 767, 574, 
       1613, 782, 589, 1625, 797, 604}], 
      Line3DBox[{417, 619, 1459, 418, 633, 1469, 435, 648, 1478, 450, 663, 
       1485, 465, 677, 1489, 479, 1570, 689, 491, 1577, 699, 1500, 503, 711, 
       1510, 516, 724, 1518, 530, 738, 1525, 545, 753, 1531, 560, 768, 575, 
       1614, 783, 590, 1626, 798, 605}], 
      Line3DBox[{419, 620, 1460, 420, 634, 1470, 436, 649, 1479, 451, 664, 
       1486, 466, 678, 1490, 480, 690, 1492, 492, 1578, 700, 1501, 504, 712, 
       1511, 517, 725, 1519, 531, 739, 1526, 546, 754, 1532, 561, 769, 1536, 
       576, 784, 591, 1627, 799, 606}], 
      Line3DBox[{421, 805, 1630, 806, 422, 635, 1471, 437, 650, 1480, 452, 
       665, 1487, 467, 679, 1491, 481, 691, 1493, 493, 701, 1502, 1503, 505, 
       713, 1512, 518, 726, 1520, 532, 740, 1527, 547, 755, 1533, 562, 770, 
       1537, 577, 785, 1539, 592, 829, 830, 831}], 
      Line3DBox[{593, 786, 828, 1615, 578, 771, 1604, 563, 756, 1594, 548, 
       741, 1586, 533, 727, 1582, 519, 714, 1580, 506, 702, 1579, 494, 1494, 
       692, 1571, 482, 680, 1562, 468, 666, 1556, 453, 651, 1549, 438, 636, 
       1544, 423, 621, 1541, 394, 607, 804, 832}], 
      Line3DBox[{600, 793, 1621, 585, 778, 1609, 570, 763, 1599, 555, 748, 
       1590, 540, 733, 1652, 923, 925, 924, 525, 719, 1655, 921, 825, 862, 
       861, 511, 706, 1639, 869, 839, 821, 856, 877, 855, 498, 695, 866, 837, 
       819, 848, 874, 1642, 847, 486, 684, 836, 814, 883, 1634, 882, 474, 672,
        1631, 808, 460, 658, 1552, 445, 643, 1546, 430, 628, 1542, 408, 614, 
       1540, 406}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
dwqrY6AokqhjYsnEfZ64/9zn4btwUw6vY4+S9OmwOgYaTxiQ6ti7wwjl+B0H
oCf/pWZjxgm4y1g/xO/RCXC7i3djdcz968RJrI4BIXId+/O1xQmvYzk/Nx5g
dQy0kuuYqegOXyWsjikvUNtURe8Eq+Q61nh4bxFex5iyj9BgdQxs1jH6/Kva
eB2LZ6Z0anhPBcrJdYza0G4Z77/FE0N20XPTCB+5/47cFB0RwfqvwtZQytse
i4gzuf/u6FePwPvvwxcjD9VYKMEXcv9dNhjQuIj1XzmrQ9ksYqxgF7n/qv25
P4P3X5N+wSNY/wUXbxL9d/Xh+zC8/6KlbcNY/wXHooj++4pqtBXvv7aXU+mx
/gva3jGT+u8K+T7PMfJ9nt3k+zyBuoOleP+l1epXxvovULZKJvXfAMZGVbz/
9pa3pmP9F2iS+29q1pQoC9Z/WfXmOo4u7QdUG0T/bcuRyY3H+u+obw66mLIF
/Nvsv9XXI/qw/qtjWX5W02EWqSP3X+25mVlLrP96zsx3XgwbQ1zJ/bci9vvB
Zqz/+ov7rF7nGUIayf03biffV36MT2aruVJhfBLRI/PJ8o2vszif3PPc5x7G
J5FNPumTKlChg/FJE43oCIxPIpt8Mp3CJRnnkzFHFo9hfBK0k/lkrHtxC84n
kWV1P4xPAhMynzSXNS/G+eRu2+F5jE8CRTKfzGZgjcP5pOd68jmMT4I6eYJP
VpPv86ST7/OkkO/zZGjWSeB8kk5MOBzjk+D1O4JPxm3f9hPnkyel51UxPgmy
yXzyFPOxcpxPJrA8D8L4JKAn80k2jQGJdxifND0k6InxScSJzCfXP/DfWcb4
pHk5MrHs04e8I/NJ6kveqdsxPjnh/m3sokAHssknV9+kpS1ifDLBpqKy2a0F
2eSTK74pKX2YPiqscjSZU2pG7Mj6qGCo5Mwipo+ong2KlP/uRArJ+uhEu4jM
O0wfVfWLv8L0ERJJ1kefKOtrcX208Juhe5vuClJE1ke88Fs2ro+Yu+o7MX0E
DpD1kc1Y03NcH/F73QnF9BEYCCf00cYe91hhTB/1cRTIYPoINMYQ+qiafJ+n
m3yf5xT5Pk9aKOsnXB9Rh9IaYvoIvD9H6COZ7Bs2uD6azv92FtNHYE8loY+G
b1kMu2L6yOqvlgumj8AFsj46tu+fgjSmj6xu6vPTjQ0iwmR9ZO7IeE0a00dz
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

    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 286.46974995068996`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7835533532105383`, -2.7118201465577263`, 0.9565400822626835},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.579027922721262*^9, 3.57902799107803*^9, 
  3.57903675788548*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
4v0geBMV8X4Qn7ubiPeD4NMk+0Hw5b/iRftB/L9PL8X+DfD3JmL/BngXf7F/
A3xzmdi/QfZmmNi/AR6xSOzfAL+/R+zfAH+yUezfAA+V+DfAMyX+DXBzH7F/
A9ywSuzfAE9QFPs38HlHRezfAB91QuzfwPdvRv3VXyevPfRXf53cseav/jp5
q0V/9dfJj/3dXyc//3d/nXzF3/11ciWfv/rr5O/+7q+Tp7b+q79Orvjyr/46
+TrXv/rr5J7Zf/XXyTWq/+qvk+co8P66sX/Kl6fh88Bd07sNN9w5uz/XvUt8
+8M+VYtXeHBX/1z3cxq+N9/evjbfcQ+HcuAa9jOdVHOqqB58TlZx39LE6DO3
jv+bvr++uWeFak0JZ8fXQ9zi3uwm85seoOvi/0VuE18XvGiy+LrgLSTXxWeK
5LrgCTn8dalf7PuMHLE+4GfyeH0CZr+YqWOlnI7PLTYnC64e3UPjGXzHDrtd
k3stkwXyf8vBJ3n4qi5qNIPuF/iCJc7Zcx5vp/sFPfbWfRp5vJkTtRPj922T
uVWPjdeTbvi+63h/Y7vBrcmuBldoE5TUo34Ilcd4358/yrjpZ0ca/yhvZfDm
0Oqv2+i6+L6lrHjX133ppCO+bzw+3HBCljNxlB/t6H9F62ocV/Cnv3U0Ttom
LNVJVnIT/CCMK/htvSKfuoTaD/5Abd6mpqcvUPvxXNqdPjCw+GcQXQ/lc2Q/
wwxfKcip/6z8kpGfTmqM/0XPNcobe02O9X96le47vi9t2r39LcXf9Lzj+0GG
zoHxQwqovyivtEZ7/+WADzTewD83TXbxSgymduL/7WPtRDlwP0l7cP0UlZM5
ZpXp1B6Urxskbg+uP57dl+u8bvT98GyNxVZfpgrPI/v8cGnwsZNN2gt6Mv51
ED8eSDeUH2loPyXYTHjO2XUW37Uy9d7oRM8LnoP9WuLnBVz9rPh5wefgFvv+
PC/4G8+NpV37JIOANTLUj/q0N8abXx58Vlo+faw5Xx79h376bHxi3sb3nq0+
qYV19CVdUL5QsWXr9redqL/4f3nBTk8XfFjPSdoj1/bg24O/0a6sqfzzjnqg
t78qf38x/tGeXWz8YzyTn2wk/zxe+aP7yzR81to4xiQ08uU+er9e5lr8MU32
p/yVNFOP+3s6uk2m8uDmywfWftnURI6/8WmyMqCFfo9SKj/1z/XzubkZun2f
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
d8m+BtxpjnhfAx4r2deAe1iL9zXg3WrE+xrwn+rifQ14F0vxvga8wxLxvga8
q7d4X4P4l5yJYr8H+IJXYv8G+GMlsR+D4qDSxP4KOtcyQeyXAJ8k8T+Ab5T4
E8BDJP4Eih+T+A3AFSX+AfDiPLEfAHxIg3i/D653WLyvB+8RJt6/U/vXi/fp
8ANPC2hoMPM+JPUvyTfP4v1LEj+SfL6M9yNJ/EXylbm8v0jiF5LHMb+QxP8j
d2L+H4mfRz78734eeTrz80j8NvIQ5reR+Gfkbdvw/hmJH0Y+MJT3w0j8LfLX
zN8i8avIz6TwfhWJ/0Re9pD3n0BPfFb/mP113CRh3FYVqZ1Ncm2S3vpO01Vf
i/1Iz+vH13i7FjdJn2e8/5myuTBuWfxA+obA8cccCi+Sngu1LYYWJymnmweq
uuXsEsbtMPa+oKmHh0mXxyakp+rpdpVjA5qmL7z3WdPv+GTpuE1Pl4xbbdZ+
zzuTfij4COP2M2u/n2pI/Y0eaqTnDdb+qsY+2zdrPSY9D7H2v+9z03z+c0FP
tF9Td/vvj7cEPdH+lf8Mn7eNO096Hmjm+X1sQKP08c/q4+5e9Cc98fnO13Js
4sMDpOdgv1GxSa6K6ZG7f79e2iuY9Gz6xy+umP7Fak/v+1bCfPtUrc18HSul
9Nj+l37qmwnzbVSel6w4SSm92+GiU92NhPl2w6Hn6gE6jdN3ps9sluM/RTrf
pmtL/EgHWfv77fCrvJIjzLfzWfuX7f5WG14rzANDWPsXnTnXeOvFAtJThbV/
dobX+WbfrpOeRaz9qY+HFL4cd4n0RPt3vLqq5/dUmAc2sva3zto40KpZJOms
Ur9xgo7VzzQ92+UKhmGBpHP0+nFKATq/0vrFHNZM/RZEOuOz5EyLE+vTQ0nn
6j/+7N9pv3/aFlybk046H1FO7F6c1JBmq2RSf9JQsB+6ZsmX6lgppC8OrZ0w
bZZgP3zyOTOmOEkhvXCZ+a2jpo5S+yEtTmI/NGftT61/kHlnpmA/nGftd9O7
9NVzS0fS2Y6137BrSNygn89I51rWfhfNRkF2FjdJ56Os/Q8Uyt5smp1KOqP9
A8e2rds0JpF0rmLt11Q9M+raK2E8f/zzHNWk3Rqw2CBz6ynSmY8nqk1bEN+w
oJN2GOnMv6+rS0taOce5fadY0hmfkTtbflfecpd03lRhud61uD5tROeezbx8
W5LO3V07GBQnfUsrsj862sppEumcVVVaPjbge1rjr/XHn8U6SeaH6jQFiT38
mbV/oY968g4dwR4OZO23KQl87lHelXQexto/PHhRzSzPV6TzM9b+LysM5syf
85B03szaH+05fWn+vUzSuQdrf4R/SNSwp6mkczZrf6rZYWvVwRdJ53N/7vuH
tKrnGj/GDE8V5mH2vm7m8gKVRWVXSWetP/exKq1JPwuf0G63SOd09v4ofO3M
gSb3Xwl+UfZ5KdTy+wMbfdJtCfxOkv1aHGtPwZfuMUWdnUi3WtaehW/HL7N8
0Yp068raU7//99iQzd9JN/YeKe1D7/GVR1+8It0WsPYoZFrE99Z4SrqpsPeB
rW89Lu7TIZd0i/4zP3xNy/3h2z5BlkW6Vf5pz79p60Mz/HVCFcgPcI297+q/
w7pnZodG5AdQ/lN/aVqdX4RKZ6fmnNjuKk87Huhffn6MsJ9dxvwz0RFiP8A3
dt0F7y1U8rsdJX0yEb9w4Zpx+Ccb0qcZu26Fu4L+yR3atJ+1ZdfNuhKypl1W
D/IDHP4zPl+nnS6YPWhIbTvyAzxnz8edD+uzlA43IT+Azp/xVpHWcsfhZ3Ni
qkkfgz/tj0pL+tbWrmLdSNLHnr0n/ao5+fzM6TJO/H4tM61rRPX4oCljJf6i
5FRfib8oCPW/shkYcekN9Xc6q0dx/fEm684tpP56sfe2zfv1btpIby7199Yf
3R6mnZ1jEWi7wI76a8/eMxoYHrTrOcmc+lvK5gNLhwT7oJXG5PcoYe261eW9
1xOrztTfSey9ax/nyELPUh3qL/+8POQa7Q+M/cAZUn+d4LeJEt93fA7scflS
yfgbdN8tWP0u3m1SHK57kw4prP76iF+TVA0nkw5T2fvhX5nJaz0GupIOI3jd
uFHcYku3bc6kgwV7P65dkH60fcMc0qErrz834UnZ3WONZpIOPfnxwGm7OwYN
Vymi+YTNr5xyqXufL7avaT45yI83zslo68fGx75K3p+Wc9vHyvTcYpqRPs7M
fxInmTe02HWP9jN6W6LsTPrgM+DSaLu284T9mj+7rs+4nu2+jRlD+rD30Vyr
rOkxQycbkD6K/HPEhXZ7caHty16kTyp7H75E51L5x1/dSZ93/HPKmR0cvD0u
sBvpw9sbX7kTj76U/2h+lvTh7a4vXPNpO+a/rIwlfZxZezt8SMjZX3dZ8r7v
M5c8tJGCc+vHNN+y+Zn7ckZnXyNXNdJtHPwhknXqLGvPoUXvrC6FW5BeLD6C
M9GJLJ7jMlrw27PPwwubTrHZpES6XWPtSZAZLfsy/iPNtxqsPb6qRlo7bpbR
fPuJvc/387k4f9O8FzTfnuXnf87LYd+tMZFFNJ9k8usXt0crs/bAuMOkmza/
3nE5RaPHLep/nHTbwK+PnIey7Y/788+QboWwX5ZM2WXmcIN0G8yvv9zPhFgD
DwtFsgcO8Os1Z7bL+N6a2RZkDzD7hHtSlmu4L22Z9P0dt3Kk2O7KYO1P1e2d
OG7uMNK5K2u/9lytnKHleqTvOtb+k3YjLFZ+q6B1DZ+RqiGqb5bmk87GrP22
eun6PVXukM5o/1szvb4Da26Qzh9Y+11fmUw6tyiddGb2pNy3sGZ4/H3Bb9OF
t9/k/9R+nvry/EHSOYi397h5I60++piGkM5fePuQq5q6W/OxyxXBn4Dn6eYi
g3zlH8I+grc/OUfbX8dcJ8lJ56a8vcrdy2m52cbfSfo+Wp4u8dt8YO33DucU
1PoYks5arP0hrTQUTzYR/GOBrP0HS3em3v/0gnSuYu3Xm7Xr+xrz26QzPn1y
O+oNv51GOkey9l8ve/HAqewS6azM2v/Dysjk4EjBP8b2R/JVE4yP6ZsIcSmR
/H5Erhq/wmCN3X7SuZDfv8h7aXT1zi8+RjrzdoWiXHfksQT754LfxpjfH8lN
LrpPdH8j7H/R3k4rwzsb7hD8Nmz/KE/Qcdhm3kvYR7C4Bbk0DmQda39tU72k
uS+E/e851v5Cpyum/dYK820Ba/9V7Q4ZLVo+JZ2bsParTvbw+llyQxjPrP2t
lB8dPPQ0mXTG55heJh+2bUognfez9o+YuqWydoPgZ2jK7+vlwasHDxruuZt0
RnzfVZ9p3weZ7xPe+/P7bnmbjptdN7c4QjqzcwzyhoblnUb7CX6bdH5fL4+x
GqjknS74bT7xfgB53Xqtpiolgt8G7fVTV/x6cruwLy5gfpJcid9GmbW/q9GH
uWaK/UhnY9b+URGLJgauEfbFzqz9Q1cGvzLLE/wMB1j7d52Y1uKWg+AfQ/tn
9tW/vOX4RdL5I2t/563/XFzQEEv9wmdpV+eNxukLqP2OzJ53Yu+FoU8ms692
nfd/MatmG3EtZqdl7HGcuzDyAPXLkNldISV8/BvKmzP7ZA0rD17I7JzWrH7U
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
6jmz91tFIR8Oq79sx8FG/T2Xcf8Hm+dFKA==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
8vWn5nV7cF67O5Z+dn2vmlnni2fTutD6UPwypjAHp/4pwetlbvC37Ze/b708
Xr8pZtd1dK+2pWOUN7n/TqXXrdbetGBOYnCw7yAe6IZgv0Ljdd6ErPPrVewL
bFuY85GtbpXnUNfV+AZV60D165ryn3X9LaN1l84dGuxL6xtuRf+ZwfZieLaB
HfLaqJXx2ny+rvNU6fk8PO9NzXGvbBfGF+Ye+fuXfxQWJ9koP7/iIH1zraF1
+d6D8h6Sj39o4T0nH/+wwnvu6dLPdTb78XuNqZizE/+lGz1f2haIt9I6eLhq
+Udhn03zuUG0rRiWx+i5BufnPLWw/V5VsX83NM9n84yl6yflvfNGxTymxsvW
z8jXlA3SGhiR157s/MjC+1CxrWz0srx+NUZ+hWJWxbz6ZvWj30v8m+zsqLzm
rwm+jmL5R6q2h39yvDJ4v1+O3FB7XuuntF3R+js9eL7H5jWj59V7NszPfnJ+
X43R2vo5f8eT8n17528pTrlBXld6fs3BuDwPo/L4xnluNEfyw2S7phXWTeKv
xD1OBT9atS76S/ujtG6Tf/doad+hVrLNFx+o9xQ3qOvIZxtCWwYelH1m7b+a
pXWK1ulD9F3NNY4vbI9kQ4fnZ7mX44UV2+nlHF9c2MdalPF5hf2Niwrff2hp
vuh9+S+lfxe+pLDu1TvoeTRec353vr7uo3fVO4uvOzNjvfuUvFb+yPZkZmGb
or01K+8vcUfaK+Lsh+XxigFur3ptaO2Ly52NfDY6tuhM/6rCulf9X2XdoTV/
vfyRqnnyvwtz5rfT15N5vqPqNfND4Sb8gPzA0vJCxlwZ/OwDkAeWfsfXtY/A
Fxb2GcQjay3Lx5ZPLf0u3b6kcKyh5+5X+rhvPm9Zvt+dVfuHPxbmxi/hPt2S
bdyKwjbrnML47MI88+LC+ZH7ZP8L5wL0HRfnb3pk6e8ju6dvuyj3j0mOk28s
zS13K+x3zM06XP7ER8F842jGfCx7pjUOfqc0T3QC8lTF8/TfzLmfBHNx4uTm
0LYGP0n/K8Ec4AjGvxzMz4inEe8j/mdP+laX5qdGyqcK5tnkh8Zo3u90+veM
9tXPVowCPhW8sLTPKVukfJH8vcvka/N+bwU/24n0iaOQflmV/VjtafEkvwTz
pZPA/w3mS08RLs3hTkB+G8yLngxeqxhBaxJ8GNdZWnHMfmg0f3Ih+L1gznml
niuYIx2veQvmpS+l/91gLnoF+NvS/O8YxWLI3el/o3B+THM4lv6/gznSKeCr
qvafV0tPBY+fSP/BmRsU//RXMI86WWsymEc9DfwneB/pePDnwbzxSeDvg3ld
cbcHRfM5F5TmXuoX5pEOzP7/EvD6jL9BOp7xNbSOwPvIPwHfDu5Stf8v7qUz
uD74DnDXzP8o7jiwapsk+yMftH/2G2WLm9EeBx/GmCdL80LTouOOx8CH0v+1
YjZwk6rX9vKsu76p2udviqxdes9KP/zE8WLtharnSHO1FfJH2vnglsjGXP8B
8EHgH2iLwC2Q7wfnCy7jOkuyXpV+Vb5N+mQu92kYHUfMLJ0zU+wwozS3Lo79
HsZ3jY5BFtHfPTp+OR9cOzpfc2ZpXl76VpxXN/rnak/RXyc6hpoOrhmdN5wG
LqO596ml46ZbOK8m63/76FhyPn3bRseb88BP0LowphDPFB0/zqFvk+i4cja4
DXgE+CxwLeXMwGeANwP3A88qHdccWDie+CA4V3I5v68OzndcBZ5NewF8X2le
833wSN5vZjT/di/986K5xAfBZ0Vzjw+D50bzjQ+A50fzkA/p+YM54XPoezyY
Ez4bPCeae7xfvnY0PyPu64hozlBc3BDZxYq5rObJuRDxRf2ieVHxeH2jc3bi
98ZH82DSk8dE87riFPtHc7ni8U6O5jnFxc2I5h7vka8azW3eVZoT2r9wTPZM
6RjinGTfv3vheEL+kuIi2Y9dyxx7cY3To9e81n7rHEcorpLffVBh33xKNL8q
Hu+06BhfnKH2jPbOnaV5Mn2L/pw7if4HK+b6tk1e9+LQDo/mXcVhTojmtcQr
To/mTu8GT4zev9rHk6N5A3GVp0ZzBeIYxcPdBO4g3zOaSxcnOQ58V8Uc5qvZ
XsgWvBacD7qI338Pzn3fCl4nW6t3Af8WnLO+Bfx6cA5uebQelD68jr5fg3PZ
N2vtBNuXCxVDBef4LtYaCc4XLAW/GZx3uwT8adaBsl+rgvN6V0bn45SPFg/8
fHDeYYnWb3DOYrHWeHCu4QLwmuDc39VaC8G5jPPBHyqmAF8hPz2aY5GN+zo4
D3i99mh0TkFc5dDovIO41hOi51P888ho3l588ojo/II45GHRuQlxnqOida90
8InR3Lj43q2T9bX4T/GgWgMHS8cG54nOZew34L21nsFfBOc0rwF/GZy7vBb8
VXBe8jrp1ex33SR/Ldtu2ZEfg2sebtQaDM5tnac9EZyHWiRdkpxfkd1Ubk+2
/qHgOoQ1FeeRFceJfxMPNzU5Dy19smOynyGfYc/kHKTs+JTk/LR0y9IcLyhu
6BGth99DTkvObUu3LAIfFxzHXZCs3xVDKQ8o/kRcS7NoLuI+5BnJeXTpGfFT
4qmejt6T4nLF6T6X7Y7sT6tk+/cfxmwanbO7J7q+4hH6u/P79OT8vfRby2T7
+hljdo2u2XgKOSM59y/d+A/tGe53b3RdhHhLxYxnJtcESJduk2yPP4/+TWPE
cTaJzlfq3AXyk6rmZjUH4nLF6So3qthMHMPbVXO1PbU/kn0U+SrKmyoeFi96
anJeX7pO3Jo45Nm6XrKPKF9RHLviSNULnJac45c++bh0bk97X3UmO3PuAuQc
xuwSzHt3Ryo4vU3PFe1vfBrN+ylOV7yuXN6Qirlt8a7iasTZKO+s2FR5P9Xk
yN+clcwzKk44GflB6fyx9u/8ZF6yM31vl85laq2KKxRfIm5fc6YYRbllxSeK
U8RXiwNVfHwT8orgmOcq6a3oHPq70XU5isPEt79fOlctfaJ8s2yp8gXvlc6/
SrecHxyrL0a+WzrPKn3yVuncqvaU/Fr5t+LG14uuI7oduV2yL/UFuEkyz/gx
eItkf+gj8PBon0frrTVtEvhJ5CDaneA1yM2T/aQPwTtE12M8htwpum7ncWSN
5Fy49kKd5Fz4i+D1k3PVWsO1k9eT8tSqFZlfODfUWN9S9kXXT651ULzQJrmO
QT7wdtF58EeRuyfXCsgn3yO5PkB++27JdQPyz9sn1wrINz4q2l/9RHsquU5C
fu/AaH91FXJA1pmy7zsl11UodmidXOugOGgsY56oeC+PznZZOrZVdN7/Ea29
aN9V+27n5LoKxU2bJfuUH9AfwC9W/S6XJsdvrzKmBsd9Za+RTZNrL/TMDZJr
CN4Ab5hc1/UauGFyDcGb4HbJsYFilo2TaxTeor9Zcp2H9os4AnEFyimrBkm+
/cPBe0N7RPmU9aPru+5AtkjOe2kNKIcurvTw4Pok8RJ65s4c/1WxT7mU8c9X
zT80Tq6beQdcgl+uep1sqcKA4DlvFF0jcRcy0v9S1euqCn6h6vmcnFwnJJ+q
UXKNztv0102ujXgJvEFyDdkr4K2SufXV4PrJdW+vgo+NjkHUv0ly/KD9uGly
zCC7UC+53uhlcIfg+ijV/qkW6y7kXH5/s3QNhGzl3+Cnq9bn4orbZn2ifINi
EH2jo5Nz/4qnfi9db6e9qVor+W7KtU2NzqfIx1MOQ5yfcmrKG4nzU05qXem6
PX0X1eHJZ1TeUHygeFrxtb+VriuSv/RX6Vo97SnVfom3bYncNzqu0VpSbZx8
UuUlpZeln5UnUs2ZeE/lXn8sXQslf0BFHc9WbQf/LF2zqG+nvIN8XOU/VWMn
LkG5NtViig9TvqxG6doU5YX/KF3jqHWu9SKuRHnITtGxmNbzQfleik3kM4tb
FU+sfL/srOztT6VrsORjdEjO0yhGXlW6nkZ+3Sel60jkK3ZMzuuIT9g3Ofej
uOmA5NybYrdOyTk2xTunRNcqyNftmrwmlFPrkpy3Uyy2X3IeTrHYp6VrbuRn
dk7O4Smm2z8556d4UDy5fHdxkj2S14/iqcOT6zAU6/1auvZLPvDByXtM+aZf
SteZyb9VXKy9eIr0euk6M/lgByb7BorjDsn7TjHgock5MHEmhyXnz8SlHJFc
b6GYtE9yTlRx35HJ9RaKT/9XunZNvvdRyXUk4gG+L11jJz/wjOj6Ltka5aTk
Ayif3D66dk57Slz0oGzL9ouOx6WjVPuiXLnqW7pwfEHFeuPr0vV2iiW/LF0z
JP9Z9QGqE5CN7pV1qWLwSck5b8U7P5Su85NfvQdtTsX6QfybcjsrtC9L1wX+
69OWrkuTz7+2dB2h/N7e0Xk62b4PS9c8KXZQDat40hXIPhxfVbFt7RkdJ4pj
UKwtv1H+4z7JeVBxMp+VrnkS/7N3cr2m+Jm9kmuCxc/0is4Vyl4cEl17IHv9
TemaRcUXH5WuzVKMI1/ps4rzkMrryY9SjUS76JpG6UlxmNOzT/J56Toq8VSq
Q5KPLV+7d9bD4greKF0fpli7bXTNm2y6uGtxw+IoO0fnLqWT/+XhC3Nw4uen
5PnZJ5qrkR4WByvuWL7vf0rXaYlXeb10XZpi+S9K13WJTxC/qphgZTIfu7Rw
zUbb5NpBcWvizMX/K+8njlpcyyXJOUTV+4kTWVO6tkz8W82q7bV8WtV9KXa8
KNsccavihZVPPLew3lfOcWH2P/8POgGpvA==
         "]], 
        Polygon3DBox[CompressedData["
1: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
M5hvN7/s9/8DeQUxlw==
         "]], Polygon3DBox[CompressedData["
1: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
Ec+LH8Iup5HYzTL/A3rnDNI=
         "]], 
        Polygon3DBox[{{1357, 936, 481, 482, 937, 1358}, {1215, 715, 946, 1486,
          1063, 1064}, {1056, 1055, 1474, 835, 836, 1475}, {1428, 748, 559, 
         558, 852, 1283}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rkvZWEYB+DPcnHHmoglGUv8AZboBJ1oRiUKS8Vg5hr7klCphEZLPZkY
ERIRbkRUQi9hZqxjqEUh04nCc6L4ned9783J75wvp6pvrH00JYSwINOGaO5z
eeZRWggFPGUl71jDJzbzlW3MTg+hhx9ZJkPmes6xkUts5So7+JOfmeQkTxiL
hVCod1bOo99ZJv2pIfyyD/A3B/mHX3jBr7xkglcc4je5Ng/zhiO85Sj/cox3
HOc/TvCend6nSOecPNinWC7LnvHMPs/j6D7usZdrbOcKW7jIBs6yjrWSMJey
m3F+4ouuJj6ymresiM7W//85ozc/6mKJHEqe/YC53GcOk8zmLj9wh3FuM4tb
3JRM8wYzuE7HHdaoLvyg+vCdjiJ0WYpT3r+HN8tyP3M=
       "]]}, {
      Line3DBox[{961, 1259, 626, 960, 1490, 1166, 962, 1491, 1167, 963, 1492, 
       1168, 964, 1493, 1169, 965, 1494, 1170, 966, 1495, 1385, 1579, 967, 
       1496, 1171, 968, 1497, 1172, 969, 1498, 1173, 970, 1499, 1174, 971, 
       1500, 1175, 972, 1501, 1176, 973, 1669, 1260, 1177, 1261}], 
      Line3DBox[{975, 1386, 1580, 974, 641, 976, 1502, 1178, 977, 1503, 1179, 
       978, 1504, 1180, 979, 1505, 1181, 980, 1506, 1387, 1581, 981, 1388, 
       1582, 982, 1507, 1182, 983, 1508, 1183, 984, 1509, 1184, 985, 1510, 
       1185, 986, 1511, 1186, 987, 1512, 1187, 988}], 
      Line3DBox[{990, 1389, 1583, 989, 1390, 1584, 991, 657, 992, 1513, 1188, 
       993, 1514, 1189, 994, 1515, 1190, 995, 1516, 1391, 1585, 996, 1392, 
       1586, 997, 1393, 1587, 998, 1517, 1191, 999, 1518, 1192, 1000, 1519, 
       1193, 1001, 1520, 1194, 1002, 1521, 1195, 1003}], 
      Line3DBox[{1005, 1394, 1588, 1004, 1395, 1589, 1006, 1396, 1590, 1007, 
       673, 1008, 1522, 1196, 1009, 1523, 1197, 1010, 1524, 1397, 1591, 1011, 
       1398, 1592, 1012, 1399, 1593, 1013, 1400, 1594, 1014, 1525, 1198, 1015,
        1526, 1199, 1016, 1527, 1200, 1017, 1528, 1201, 1018}], 
      Line3DBox[{1020, 1401, 1595, 1019, 1402, 1596, 1021, 1403, 1597, 1022, 
       1404, 1598, 1023, 689, 1024, 1670, 1262, 1263, 1025, 1691, 1357, 1358, 
       1690, 1026, 1370, 1371, 1695, 1027, 1375, 1376, 1696, 1028, 1405, 1599,
        1029, 1406, 1600, 1030, 1529, 1202, 1031, 1530, 1203, 1032, 1531, 
       1204, 1033}], 
      Line3DBox[{1035, 1407, 1601, 1034, 1408, 1602, 1036, 1409, 1603, 1037, 
       1410, 1604, 1038, 1473, 1605, 1265, 1039, 815, 1264, 1342, 1341, 1040, 
       1692, 1360, 1361, 1359, 1256, 1685, 1041, 1268, 1372, 1374, 1373, 1688,
        1042, 1378, 1379, 1377, 1606, 1483, 1043, 1381, 1607, 1489, 1044, 
       1411, 1608, 1045, 1412, 1609, 1046, 1532, 1205, 1047, 1533, 1206, 
       1048}], Line3DBox[{1052, 1534, 1207, 1050, 1535, 1208, 1054, 1536, 
       1209, 1056, 1475, 1537, 1210, 1271, 1344, 1686, 1482, 1272, 1294, 1211,
        1325, 1478, 1678, 1327, 1305, 1273, 1295, 1337, 1212, 1326, 1479, 
       1679, 1329, 1309, 1274, 1296, 1338, 713, 1328, 1313, 1330, 1314, 1275, 
       1339, 1349, 1687, 1213, 1345, 1315, 1316, 1276, 1487, 1672, 1214, 1364,
        1363, 1538, 1215, 1064, 1539, 1216, 1066, 1540, 1217, 1068, 1541, 
       1218, 1070, 1543, 1220, 1072}], 
      Line3DBox[{1071, 1219, 1542, 1069, 1617, 1418, 1067, 1616, 1417, 1065, 
       1615, 1416, 1063, 1486, 1614, 1382, 1384, 1383, 1062, 1367, 1694, 1488,
        1352, 1354, 1353, 1061, 1480, 1680, 1312, 1269, 1311, 1343, 1310, 
       1060, 1684, 1307, 1308, 1291, 1306, 874, 1059, 1303, 1336, 1304, 1267, 
       1302, 1324, 1682, 1477, 1058, 1300, 1301, 1266, 1671, 1471, 1057, 1270,
        1613, 1474, 1055, 1612, 1415, 1053, 1611, 1414, 1049, 1610, 1413, 
       1051}], Line3DBox[{1074, 1419, 1618, 1073, 1544, 1221, 1075, 1545, 
       1222, 1076, 1485, 1546, 1223, 1362, 1472, 1547, 1351, 1356, 1224, 1292,
        1481, 1681, 1317, 1293, 1297, 1225, 1331, 1683, 1318, 1333, 1319, 
       1277, 1298, 1340, 1420, 1677, 1332, 1320, 1335, 1321, 1287, 1299, 1350,
        724, 1334, 1322, 1323, 1289, 1676, 1226, 1288, 1279, 1548, 1227, 1077,
        1549, 1228, 1078, 1550, 1229, 1079, 1551, 1230, 1080, 1552, 1231, 
       1081}], Line3DBox[{1083, 1421, 1619, 1082, 1422, 1620, 1084, 1553, 
       1232, 1085, 1554, 1233, 1086, 1484, 1555, 1234, 1355, 1689, 1257, 1366,
        1368, 1369, 1281, 1674, 1347, 1348, 1258, 1290, 1423, 1668, 1282, 
       1278, 1424, 1673, 1346, 1280, 737, 1087, 1556, 1235, 1088, 1557, 1236, 
       1089, 1558, 1237, 1090, 1559, 1238, 1091, 1560, 1239, 1092}], 
      Line3DBox[{1094, 1425, 1621, 1093, 1426, 1622, 1095, 1427, 1623, 1096, 
       1561, 1240, 1097, 1562, 1241, 1098, 1693, 1365, 1242, 1380, 1697, 1283,
        1428, 1675, 1099, 1429, 1624, 1100, 1430, 1625, 1101, 751, 1102, 1563,
        1243, 1103, 1564, 1244, 1104, 1565, 1245, 1105, 1566, 1246, 1106}], 
      Line3DBox[{1108, 1431, 1626, 1107, 1432, 1627, 1109, 1433, 1628, 1110, 
       1434, 1629, 1111, 1567, 1247, 1112, 1568, 1248, 1113, 1569, 1435, 1630,
        1114, 1436, 1631, 1115, 1437, 1632, 1116, 1438, 1633, 1117, 767, 1118,
        1570, 1249, 1119, 1571, 1250, 1120, 1572, 1251, 1121}], 
      Line3DBox[{1123, 1439, 1634, 1122, 1440, 1635, 1124, 1441, 1636, 1125, 
       1442, 1637, 1126, 1443, 1638, 1127, 1573, 1252, 1128, 1574, 1444, 1639,
        1129, 1445, 1640, 1130, 1446, 1641, 1131, 1447, 1642, 1132, 1448, 
       1643, 1133, 783, 1134, 1575, 1253, 1135, 1576, 1254, 1136}], 
      Line3DBox[{1138, 1449, 1644, 1137, 1450, 1645, 1139, 1451, 1646, 1140, 
       1452, 1647, 1141, 1453, 1648, 1142, 791, 1143, 1577, 1454, 1649, 1144, 
       1455, 1650, 1145, 1456, 1651, 1146, 1457, 1652, 1147, 1458, 1653, 1148,
        1459, 1654, 1149, 799, 1150, 1578, 1255, 1151}], 
      Line3DBox[{1165, 1286, 854, 1164, 1667, 1470, 1163, 1666, 1469, 1162, 
       1665, 1468, 1161, 1664, 1467, 1160, 1663, 1466, 1159, 1662, 1465, 1158,
        1661, 807, 1157, 1660, 1464, 1156, 1659, 1463, 1155, 1658, 1462, 1154,
        1657, 1461, 1153, 1656, 1460, 1152, 1476, 1655, 1284, 1285}]}, {
      Line3DBox[{417, 627, 1490, 418, 641, 446, 1584, 656, 461, 1589, 671, 
       476, 1596, 686, 491, 1602, 699, 504, 1611, 711, 1535, 516, 721, 1544, 
       528, 1620, 732, 540, 1622, 744, 553, 1627, 757, 568, 1635, 772, 583, 
       1645, 787, 598, 1656, 802, 613}], 
      Line3DBox[{419, 628, 1491, 420, 642, 1502, 447, 657, 462, 1590, 672, 
       477, 1597, 687, 492, 1603, 700, 505, 1612, 712, 1536, 517, 722, 1545, 
       529, 733, 1553, 541, 1623, 745, 554, 1628, 758, 569, 1636, 773, 584, 
       1646, 788, 599, 1657, 803, 614}], 
      Line3DBox[{421, 629, 1492, 422, 643, 1503, 448, 658, 1513, 463, 673, 
       478, 1598, 688, 493, 1604, 701, 506, 1613, 835, 836, 1537, 518, 942, 
       943, 1546, 530, 734, 1554, 542, 746, 1561, 555, 1629, 759, 570, 1637, 
       774, 585, 1647, 789, 600, 1658, 804, 615}], 
      Line3DBox[{423, 630, 1493, 424, 644, 1504, 449, 659, 1514, 464, 674, 
       1522, 479, 689, 494, 1605, 830, 831, 833, 1671, 817, 837, 818, 934, 
       917, 1686, 839, 945, 820, 944, 821, 1547, 930, 928, 929, 1555, 543, 
       747, 1562, 556, 760, 1567, 571, 1638, 775, 586, 1648, 790, 601, 1659, 
       805, 616}], 
      Line3DBox[{425, 631, 1494, 426, 645, 1505, 450, 660, 1515, 465, 675, 
       1523, 480, 827, 1670, 828, 829, 815, 832, 867, 866, 896, 1682, 870, 
       906, 871, 838, 873, 897, 872, 1678, 899, 882, 883, 861, 885, 884, 1681,
        862, 932, 933, 931, 1689, 823, 952, 950, 1693, 951, 557, 761, 1568, 
       572, 776, 1573, 587, 791, 602, 1660, 806, 617}], 
      Line3DBox[{427, 632, 1495, 429, 646, 1506, 451, 661, 1516, 466, 676, 
       1524, 481, 936, 1691, 938, 939, 940, 1692, 941, 834, 869, 868, 860, 
       874, 907, 875, 840, 879, 898, 878, 1679, 901, 886, 912, 887, 843, 891, 
       902, 1683, 890, 904, 892, 893, 848, 924, 1674, 923, 859, 850, 958, 
       1697, 852, 558, 762, 1569, 573, 777, 1574, 588, 792, 1577, 603, 807, 
       618}], Line3DBox[{431, 634, 1496, 432, 1582, 648, 453, 1586, 663, 468, 
       1592, 678, 483, 954, 1695, 691, 496, 955, 1688, 956, 926, 927, 703, 
       508, 1680, 880, 881, 842, 909, 918, 714, 1687, 520, 910, 914, 911, 845,
        865, 905, 724, 532, 921, 922, 920, 1673, 736, 545, 1624, 749, 560, 
       1631, 764, 575, 1640, 779, 590, 1650, 794, 605, 1662, 809, 620}], 
      Line3DBox[{433, 635, 1497, 434, 649, 1507, 454, 1587, 664, 469, 1593, 
       679, 484, 957, 1696, 692, 497, 1606, 925, 704, 509, 1694, 953, 819, 
       947, 948, 949, 1672, 521, 919, 935, 822, 858, 725, 1676, 533, 847, 737,
        546, 1625, 750, 561, 1632, 765, 576, 1641, 780, 591, 1651, 795, 606, 
       1663, 810, 621}], 
      Line3DBox[{435, 636, 1498, 436, 650, 1508, 455, 665, 1517, 470, 1594, 
       680, 485, 1599, 693, 498, 1607, 959, 705, 510, 1614, 946, 715, 1538, 
       522, 846, 726, 1548, 534, 738, 1556, 547, 751, 562, 1633, 766, 577, 
       1642, 781, 592, 1652, 796, 607, 1664, 811, 622}], 
      Line3DBox[{437, 637, 1499, 438, 651, 1509, 456, 666, 1518, 471, 681, 
       1525, 486, 1600, 694, 499, 1608, 706, 511, 1615, 716, 1539, 523, 727, 
       1549, 535, 739, 1557, 548, 752, 1563, 563, 767, 578, 1643, 782, 593, 
       1653, 797, 608, 1665, 812, 623}], 
      Line3DBox[{439, 638, 1500, 440, 652, 1510, 457, 667, 1519, 472, 682, 
       1526, 487, 695, 1529, 500, 1609, 707, 512, 1616, 717, 1540, 524, 728, 
       1550, 536, 740, 1558, 549, 753, 1564, 564, 768, 1570, 579, 783, 594, 
       1654, 798, 609, 1666, 813, 624}], 
      Line3DBox[{441, 639, 1501, 442, 653, 1511, 458, 668, 1520, 473, 683, 
       1527, 488, 696, 1530, 501, 708, 1532, 513, 1617, 718, 1541, 525, 729, 
       1551, 537, 741, 1559, 550, 754, 1565, 565, 769, 1571, 580, 784, 1575, 
       595, 799, 610, 1667, 814, 625}], 
      Line3DBox[{443, 825, 1669, 826, 444, 654, 1512, 459, 669, 1521, 474, 
       684, 1528, 489, 697, 1531, 502, 709, 1533, 514, 719, 1542, 1543, 526, 
       730, 1552, 538, 742, 1560, 551, 755, 1566, 566, 770, 1572, 581, 785, 
       1576, 596, 800, 1578, 611, 854, 855, 856}], 
      Line3DBox[{612, 801, 853, 1655, 597, 786, 1644, 582, 771, 1634, 567, 
       756, 1626, 552, 743, 1621, 539, 731, 1619, 527, 720, 1618, 515, 1534, 
       710, 1610, 503, 698, 1601, 490, 685, 1595, 475, 670, 1588, 460, 655, 
       1583, 445, 640, 1580, 416, 626, 824, 857}], 
      Line3DBox[{619, 808, 1661, 604, 793, 1649, 589, 778, 1639, 574, 763, 
       1630, 559, 748, 1675, 851, 544, 735, 1668, 849, 895, 894, 531, 723, 
       1677, 903, 864, 844, 889, 913, 888, 519, 713, 900, 863, 841, 877, 908, 
       1684, 876, 507, 702, 916, 915, 1685, 816, 495, 690, 1690, 937, 482, 
       677, 1591, 467, 662, 1585, 452, 647, 1581, 430, 633, 1579, 
       428}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 286.46974995068996`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7835533532105383`, -2.7118201465577263`, 0.9565400822626835},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.579027922721262*^9, 3.57902799107803*^9, 
  3.579036805525716*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "9.998858538550457`*^6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.579027922721262*^9, 3.57902799107803*^9, 
  3.579036810249699*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
    "visualize", " ", "the", " ", "wavefunction", " ", "for", " ", "1", 
     "D"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V1", " ", "=", " ", 
     RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "=", 
     RowBox[{"80", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basisnum", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"length", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energylevels", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WE", " ", "=", " ", 
     RowBox[{"computePlaneMatrix2WellBias", "[", 
      RowBox[{"V1", ",", "V2", ",", ".5", ",", 
       RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
       "energylevels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "length", ",", "x"}], "]"}], 
       "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "length", ",", "x"}], "]"}], 
       "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Convergence", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "length", ",", 
           RowBox[{"basisnum", "+", "1"}], ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
           "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.579028108616515*^9, 3.579028111929088*^9}, {
  3.5790282240286407`*^9, 3.579028230211985*^9}, {3.57902826759128*^9, 
  3.579028336396497*^9}, {3.5790284662844143`*^9, 3.5790285644349957`*^9}, {
  3.579028679044551*^9, 3.579028728961176*^9}, {3.579029370897851*^9, 
  3.5790293786887827`*^9}, {3.57902969181705*^9, 3.5790297523071337`*^9}, {
  3.57902978806826*^9, 3.579029788607374*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
DX7NucvUgZ8yvV0udeTvy+LPrbzTjl/OMqicHKEWexeffzWzpx2/Ud/FfKeL
WkztSv9N4sJ2fPuBWZxhDbUYlk2AnoW246tLGtya36nFOG9dlCy0aMctKgUc
OL5Qi5GV35OledSOp59cfFLtRi22JPX2gcH1drysVe65vCG1WGdj6KNK+nZ8
mLSJ6Zc8tVixUtlTlvU2fD9Vckn4P2qxmL5RbfP2NnwgnJi9kIRazGCax/hi
QBvuq/Mz4vA7lZiCsZK5g2kbHsxk/2j6qL/XN61seh+04ZmXScRo1KjEDgir
3Lyo2vAOmjYlvZWTYhOeMz7ji634xZWVN/lFJ8XqaaiCRJtbcZHn/t6e9ifF
gtmefFnybsW3fvH+Iz9+UswmyT7prmErfr+pLmHoJ6XYc57EjFi5VpxEf3L8
oz2lGLfIcqESWSsuzMxjG7xKIWafQR735uRvvPHev5tnfpKLyRY/+sre1IIn
7NaV/zQlF2OojS1u82rBPVPLvk+ykYuljd1sv0HagieKavLtWJKJdZ7RPX5A
2IzzVcnZ5TKRinF7lL703WnAg5UjfH1vEIv1vDDizhqvwW8IZDB64wdQPqh4
qyC5Bg8EQZYEpgNIVr0h9cOgBj9meJWd9d0+mMscaDYu/8InyzdS3/P8Axoe
/4Dpveqj+aPtkpX7F7YTzWOWyqvxscpIvnimvzB09knGplM17jV2NAgcdyCT
muPXcdJqfDuGza390TbIruftsDNU4e7izrVFTJtw1Sic+FJPJT6S/3cq3XcD
mCZt6fgiK/Fy5UXXnyQbMNUtzSN6rhJXUuW8Z7a/Bs4lPc/VeH7iFJ1LCqrE
q2BxfPvTec9ynDs+7dD52DxIbeIp/NTleKkqqa7T9Tmgm/b4iUJ+4FTHsKF5
w1n41sC8+SSuDLfELITnpqdhKgDTCCwuwUVZDTuS6Cfh+8cTlrFQgqslqT3n
NJgAZ4tWv2+/inHRa9QJNZXjwP5Ep6qhrQhfedT1+o7zGKidc+M+PleAL0lc
16q/OgIX6R5I0ZoW4P3s704RyA/DxnGmZ+xb+Th7zW7zEBqCgOm0gNuE+Ti9
ga+Y9a0BaPjWvPOOOQ8XaE3hKbbvhfDYUDrn2Fw8QmPrj3JcD+gFPufxv5iL
b5QUJb5s6IbjlqvPMwVycIpQw+9G/F1gZcPtWx/yDbdSUcyzFm8HhaWV7qzk
r3j0n52y0LA2uKhTyB5amIkvv7AQXVtrhS5ZqRydvnR8Q11dvO3tb8j8Qb4r
M5eGM67U7vreaQGXa20S/HupuFW3TUQPZzMInnnWuceagp/7zPeRbb8ByD9x
nh3jTcazvfe+pW7VwxjB/Ms6LAlvbs0M6dqpg4AZq+1grQScsJUfu8lYC0Mm
F25oyHzB485rBNJmVcGnx9k1l19H46kh6z8ypitBFJDapvdnnGddW1b4UiVE
Uj3+4Ps7DP9y4gyzXkkFyG6NUz5dDcHpfIXVEk5WwM6gacwl+mBcTffOAHtL
Oah+9fpZoeqPOwVT/3j/uAzIufmTmVd9cOvsyiIp3lJ49VemPu+6Jz5Jz7dN
SFUCF8JtqadKnfDT989vHlsuhNZMtmEVJVWc9/LwVaqL34FI+945D0kMMk6t
eL2Wy4M0vngryhIdOK/WrXfbKhcG+wyy4hSs4WpJ/fDZ2WzguH3TwKTWAZZ0
3/sl8WaDoIJTAFvsR/j7er2UZf0bWGXdv7fA5A2NbXQWh/KZwDwieFm5yxcU
XPodmaky4BnpJ8JBmQBoC/UPIhlIAwLhd8OSxCFQ7BWv6haVAlKREEFrHwX5
RD8C7iYmQEhu7glpjRhIZGnx3sLj4d0k3W3Rs7HQ/9xW59pkHFTvu6aZ7MVB
/8dmqlG5WFjwxLU85+JhiDrrmuKpL3CK8e/phL4jHp3IEIIlRYMen5Fbd2ES
pKxu81WsR4JvSRJaSU4GGbZTPBw5EVB4Z3iDLDQFVJ3f1jvZhgPpcyVdZJ4G
Mv9tq528HQpX572ZH+umQ7Tli0w+3hB4YvWrzVQpA46zE14S+i8Y0v2ExBKv
foVazVtn2GUDgaj6S9mJ699gk0dgzfxRADzfIRE2vJUFvKFuv+Le+INX9hzT
mS/ZMJU5VNdt/wkK5dh6Gs7lwOYNgbunVrxhYuJhiG38ES9XEZwgt/AC7Ewx
7UhSLthxcwv7F7iDYd7C74BLeWAT0UXx9q0bhN8/5yuZlgfX3B0i0kVdYc3J
nTwl8ztoJ7qXXjr2EdhZS+vU+PKBUpmR6nDHCeQLltzIs/Nh6PM7CtUDR0ie
e3TcOK8AXDXYfm1r2kOHi+dP9huF8NJdKeNqri0QsP9waCsoBJGc4vsxR/ue
ujLnv+slRfDZJzH1D781uC8+Lpm6XQySXrUaqd2W8N3d2zr8RzFc41kaTvGz
AOqytY29ihIIhsC63OvvQFT1Yt5XiVKoOTOQTsduBq9Xnrx9Xl0KjRb03vJM
b6Ga8+diZW0ZmM+2L5e+MobV8o0Mc9kfkNK4k5GUYQRsTy6/vtj4A9LC9KQL
SQzB+pPflOfRPSktcLC1IHgFSZeqEm8r4nB7fYulN0oP2n9u6Sy24aBfE/yy
Wf4lMO59M0l9XQGdD2xbjMd1gKeuTsEpowI2nnAOCdVpg2TIGK/6QgVwG/QZ
tpZpgSk/4wKF8U9wTX5NjyVqgts//saJbz8hL6VGPnTsKUTXy6b/WP4JideN
p56KqEODrt0rk7eVYCboQdh29TGMXg27K5NbCV24x+Je0yPY2c++eH69Emp5
cxw87VSAK3xiot28CsoEzl03Pq0Eoi8PqjLyq0D5bZRW8YEiKAkwJbhsVcEK
q+nG54UHYHB4zVnzVjXs/x0q89m9D45N97RvWldDcCCrdwCXPIRGvBSjLq6G
uTOXX540koOveg7sM3+rQTT+Rbt1kwz8IcgbjPjwCxhj6idedknDSnNTmVnZ
L3ifUnHy9gcpOPF56vO9/V/w8+aFncQbksD2iuADJ1YDexSG9O+PS8D1G8zq
+/Y1IJx58WfUuBjIEV4X7sZrYGui4hRZOoD27/tMWQS10P/1fKXeVwS+Bk7d
Wkd7WVAa51NDKhHwaDyWP1FeC5MGMtH7H4XAmdc56NVeLTT51a4eUt8Cq1Vn
RVPzOqhYci1y1rsOZsrH+Tey6yBbszjqJ58gGOV/PGm9eCSnaq/PkwqA1nuX
Bge9enBsF5S7PcQP6v1EaccT6mGex/pN0hovqCBXd/fheqh+QF4feYEHFL4Q
61GwNsBtjnfIxYQbZI65SfmpNQC/hrD4SOdlkNAluUAf0gDdX8eaxZUugegv
t2NhbQ0Qwuf95MEUF1zzdC+PkWsEg5P1Y7r3LwDP/IloDvdG2MyfTKFh44CL
9z0+JFc1wtsKTSyP4DycyyJV5yZogkIk7OQ9ww7MtJ5C30SbYLSn83Tc8llg
eEd2WuB9E/zXpk7WwcAKVF2em/n5TcBwW6RWT5UZCCO8cn/wNYMIp1GL+OXT
8G+XPEDcsBn4XibEeOSfgi0Nb5NfKc3gvHdmmfcJA6yUUyjITjSDg59EzQQt
Pcyf8+FpPtcCq9YXK8yGaGHKmZLioWYLPJ8kpcv6QQMjEz6znREtYE5Ae+O4
JjV0pn5KHqD7DcNNbeFfnSighZzKVevBb6CJSXozW0EGdUa+uhPev6F5dzqg
lIUUKluoJF7V/YaPpmk6Tv4k8Cz8Lo0lYSv8nKblyD5LDE/r3Q8Lz7WC1yvz
tI6fx0Ftt3bpL9YKxWlePJ8+EIKyhkyz3YdWsJSr/5HOTQCKnzzK8Igjvaaj
ge7tA0yhvC7jWFErEG1g3ZyS/7B7y6SfJbtb4Wv0jy7/17uYzDlZL9eNVkj0
52ovy9rBpB96vq+la4Pr2EDvH5ptTMK5/hXZtTZo3k87uOWziYlOyN799KYN
QuaNaXUa1zDhU143f3u3wdvShkMJn1Xs5p0GLtr0NhgWq3nlob2CCVqRn1Ku
a4Oq6SDnsaAl7GqqHFHIVBsYv+Wh+eKxgPH2ea13E7WDkbuqJtWXOYybvHGM
6UI7lDGQXmDumsE4je79jHreDrSSr0LvhU9i56O9s4fs2kH2wrGpgfMTGFtL
45dzUe0gbS8QMFQ1hrEcUvjplLRD0u29p3W2oxjTVXn7xN528Kl8nHfl3gh2
StvnzdTWEQ9aPghTfDqE0QU2aVw+1QFj2azp+9ID2MkN+duZDztg8LTZaYKP
vRjNHwFdK7MOUAg/1rn+tRtjqGDylgjqAA2ZWOWfu53Y6eSD3JPfO2DrikwA
jX4Hxuwz8ae3swMunX6lkbPShrGZNRAmbnaAyp2FxvCQVuy8Wja3CWMnkIwO
5v1IacEuc9raEKt1glwCdS71fw3Yf+Q68a3WnVD76ra24X91GN/K3YbPEZ2w
n10jlfqwBhPo5l3TK+mEMrVM6VOfq7EbZfTMAv2d8GLfmuIqcRUmFP9XfH+v
EwxO3V2L+/QTE/UYNqhj7YLbvwauIYEKTEIlo/jZsy6IZ/Vhm/MrxaRFAkav
OHTB/KafZffr4qPzYEW2+aULRA1KU81MCjF5Es1rFRVd0PP666XcyHzswYLE
E+/RLnD4mP+rfDYPU2q/7KRK2A2P+c1YNp/kYqpFVGnnL3QD8TDbldGZbEzD
5c9O4Ytu2BZSfVufl4k9f11x7qPrkfw783ujSTqmo5gso5DcDbXP7gp0qaVi
ejd9TM/UdsPFZxcOHQ2TMQNWs/CJ6W6wfXc8NzUxETMiVKvIIu2Bd7FiXFrH
EjDTGTRjc6UHjuHv7Vft4zDL72RCtIY9cL9du8k9KRp7H7n8fMC7B7w+U23Q
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
iK1QzfnS2TD4HwWyjnc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.579029683171135*^9, 3.579029763081191*^9}, 
   3.579029796174389*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
2uC5an+L4Pl23EWH7fPpnmYw8/9+9DBLO04NGYpcjxpAo/Kx+uJ6Gy77iZLR
9nENSJNiQS1dbfi9IcbNi/mVIIBoG7IK2vAHItnS5vJlwOzUfij8cxuuWBXb
/Uq8GLb2/zIuOrfhcsI+j+y38mDQ5zSbkkEbHtnx0+KbfSaUH1bgjLnchrP9
mfVbvfITfry34t1ma8ODcwMycsjjIOjkO8GbW634mYvLPHSeH+BJbI5Yclcr
ftTwlkNXRyDon+27SJnXiq/Gl6pXCjsBlk6C7oS34klZEj48TwyA9xK/XN7T
Vpy232ZmS74Joy2+rnxUpxV/dYJPLTpSBxbkH6lbSrTit2S+2ZuUO0J7XbhO
GXMrfu9wlsU56gAo0Cq6fXK1BZ/cnT+SqhoBUT0j9xxaW3C76HpLP/lY8L5L
/aAhowXn4jVn2dFNAsspIVv+4Bac0UKppmAuA9RstRzc7Vtwnt+R+eKmeSCx
/sy5W70FZ1lnEcsL/A0nXL54iIu24GKsulu3xctgj6zcJ4ChBT/Xy3GXa6US
xv2nX4/NN+OSlX9NSKhqoeYoQ6h0QzNuGEsfkmDVCO85b31dCGzGVaJsuQ4z
tINzvFu84sNm/GzURlVuRicYC337Ga3SjO/+u+h6/XkPCF5ZzNOibcZv67np
bVgMgdtPuhibw034BpRcENScBOUCnZTT9Y24vpBJsM3xaWCpii5oCWjEq2Di
ldQ0ERJHL7ZK0jTi3cEGD9/Gz0P7CVPyPbIGvP1u/M5qwQoI+v26H7RVi5+b
oxuvKd2G9TCqx4S8Wnxymbe4vXgHSuI03Vae1uK/rbZevSj4Bzr4VLjuag3e
bZl3nxi/Bx4bzNWcC9W4u+n3VBoBUsJ1CuP25uRqnPSk/MatCFICK1PSsNfD
arxPsmd+mZyMkCxM+Ds5XYUPLm946baTEbrMrAXTxv7gb0v/fmNQoyAUD2hc
yk34g3vNpIQzR1EQEnQl5X9b/sHfuSt86pihIDgo7RnVLVbiLJ2CLErOlITb
paNWrZmVOOs5ZpfuIkqC7JWqZz1PK/HF6Y2OiR1KwlGhd8FTOxW49XLWKRU7
KsLmN4eoheIKvId5KDoojooweOrWz3XPCtzxCHbxXDsVoTIc5f+Tr8BPXiZW
spNSE5KP8FSS01TgskJnW24JUhNC/aha6erKccfgAKtJdWqCM+nsIGNQOb7A
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
jvQUn5U9z+F/Q9RMlw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.579029683171135*^9, 3.579029763081191*^9}, 
   3.579029800705234*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "1.1920928955078125`*^-7", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.579029683171135*^9, 3.579029763081191*^9}, 
   3.579029801723176*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
    "visualize", " ", "the", " ", "wavefunction", " ", "for", " ", "1", 
     "D"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"V1", " ", "=", " ", 
     RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V2", "=", 
     RowBox[{"80", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"basisnum", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"length", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "1"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"energylevels", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WE", " ", "=", " ", 
     RowBox[{"computePlaneMatrix2WellBias", "[", 
      RowBox[{"V1", ",", "V2", ",", ".5", ",", 
       RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
       "energylevels"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Now", ",", " ", 
     RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
     RowBox[{
     "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", " ", 
     "and", " ", "excite", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "previous", " ", "version", " ", "of", " ", "wigmaker", " ", "failed"}], 
     ",", " ", 
     RowBox[{"as", " ", "WigPsi0", " ", 
      RowBox[{"wasn", "'"}], "t", " ", "always", " ", 
      RowBox[{"real", ".", " ", 
       RowBox[{"Ansatz", ":", " ", 
        RowBox[{
        "WigPsi0", " ", "and", " ", "WigPsi1", " ", "are", 
         "\[IndentingNewLine]", "conjugate", " ", "related"}], ":", " ", 
        RowBox[{
         RowBox[{"if", " ", "Im", " ", "Psi0"}], " ", "\[Equal]", "0"}]}]}]}],
      ",", " ", 
     RowBox[{
      RowBox[{"then", " ", "Re", " ", "Psi1"}], " ", "\[Equal]", "0"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"W1", ",", "W2"}], "}"}], " ", "=", 
    RowBox[{"findbestwan", "[", 
     RowBox[{"V1", ",", "V2", ",", "b", ",", "length", ",", "basisnum"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"W1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"W2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Convergence", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "length", ",", 
           RowBox[{"basisnum", "+", "1"}], ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{
         RowBox[{"computePlaneMatrix2WellBias", "[", 
          RowBox[{"V1", ",", "V2", ",", ".5", ",", 
           RowBox[{"b", "/", "2."}], ",", "length", ",", "basisnum", ",", 
           "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5790300898125887`*^9, 3.579030190242688*^9}, {
  3.579030292700324*^9, 3.579030306472954*^9}, {3.579030432531681*^9, 
  3.579030434689537*^9}, {3.5790304788515673`*^9, 3.579030480671834*^9}, {
  3.5790305159039717`*^9, 3.579030517939843*^9}, {3.5790308251606607`*^9, 
  3.579030825766876*^9}, {3.5790309410216*^9, 3.579030942017983*^9}, {
  3.579030977803334*^9, 3.579030987939639*^9}, {3.579031028475594*^9, 
  3.5790310308577147`*^9}, {3.579035739589775*^9, 3.579035752874086*^9}, {
  3.579035801935639*^9, 3.5790358488247538`*^9}, {3.57903619460308*^9, 
  3.579036194710458*^9}, {3.579036300106913*^9, 3.579036305096148*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "Wig1$1363701", "}"}], ",", 
   RowBox[{"{", "Wig2$1363701", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5790303081642723`*^9, 3.579030436685006*^9, 
  3.579030484125579*^9, 3.579030527076194*^9, 3.579031012580888*^9, 
  3.5790310682174463`*^9, 3.579034574085943*^9, 3.579036078254725*^9, 
  3.579036253902549*^9, 3.5790363652566977`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
DTGkcJHHPyxyGwbLybWERaSQwQm6svLEbTim0HH+kq48cqLaX5p7tQ3+PNPU
l6+ooPBfk6eP52zD0OtvOvmv1FHVUJGvVfk25KdV7SExfdTdnFKSXPtPj8lS
if/iDNFyhf9iY9M2nKGcjZigeYRIcq1O/ez8p18M36y7kwliS9ZW4RzahrDy
C41RX0zRpVApH9WpbXgvRt9weu4xknfjLfZY+ld/z1gAWZ85emDOsPBuaxvW
frr33QyyRI56v08M/NqGjdfo7eUdKxR2e0b5MOkOeNpyOH4PskavJVq9RKh3
ID2qW9l8zRpV8pUUGTDugNrJkMigCzao62TaXNjJHbh1k3mE+YoNWqQOYqvg
3IF7H59JbzHbIOI/NkrzfDsQftQgaey7NWJd0fU8fnkHjlnbnPbRskZCI9KF
NyR3gHQrlK3M3grdbOGbtZLdgTMO1GNmGxZIv+o4a4rSDnjMPa9n4zdHDnkH
t5o0dmDZGSfTX3qMQlPmPH7e3wHusKqGHHJTlBHW/pHTZAd0qDkEWSqNUbl7
2bSq5Q648swuCeo+RAv3QxRzPXagjOQvU8WR+4hI2d59wH8H3NlfptOpaSMW
dD//8PMdkDi+d56x/S4SFJCbEonfgaq2Sv4Xwv9XdN3xXH5f/LM/pSIzJDO7
7BU+514jZG/KHmWkSJJVMsoISVZRiFAJSWmZifoWqTRkVEJWKrLX7/P7877u
c899j3Oe55y/HgswEJTn8SiYRTp6lcN7zxqCCyvvvrSyWTRS/SnzfT2GkDVC
1JOqWfRE/d1LySVVOD81VjlaN4t6DcU/eoZLw/WBd9+5m2aRQEtebWLdNnjU
+YRL78UsCrlMLY99uMToaigxDOqaRVkOJqz3/HIZo5WpEVc/z6KqX2/Gwuh/
GOvXQu/8920W/RgM77iNOIDngtu3+dFZtLD5reAfDXGQizbiFP87i5RiB977
EZVhb6CigfXiLHIZfjojmsYAZzf+8GjiHGIpPqmeRd4Lxy3IFRUb55DuMwHL
Ok5TSEaTAz3sc4jteerakVEreCjUoK8iOodSCz3ChWwPwBu2spMeMnPIU3b4
lEqtK4ysX7iVpjSHlp8dWetK9ADubx5bx3Tn0ESaz43c2oOwq8tYj8dkDik+
eVvTl+cD+k3KoXo2c0htUDH/ur0fOFUL3AxymkN8F12NCH3+EFxI7bvqNYf8
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5790303081642723`*^9, 3.579030436685006*^9, 
  3.579030484125579*^9, 3.579030527076194*^9, 3.579031012580888*^9, 
  3.5790310682174463`*^9, 3.579034574085943*^9, 3.579036078254725*^9, 
  3.579036253902549*^9, 3.579036366506731*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AIlHlWnPrAh44tsVFSHfI3CEpjlZaUY/z6Fpnl0yGjChpH/7nhEBj/J9EJKI
PQaW4g6UGzoE/OHTR9JUpyFsE/SouXyUgG+06W8932UCDbynvVPUCPj6ibRH
j2jmcIYznCdehYBH7O/qFN+wBGHWuA9RhwgYHYvWezhgDf3bUmKCFQg4/8/c
f7mrtpDBkCXnL0PA3i0+Dn2j9qC5kffLXYKA7ef4/9bfcYT5xeJrjiIEvCx5
Zc6C2RlsL9bk5AvQ11fJ8L+f5wx4T/ON/v0EHLJp5rxjiwsI3x/I27OXgCfv
Tt64a+wCacqTNy33EHBM2lqrQLALzLwn3rrKTsCapfJ5PwNdwMqWvahjJx3/
4ImJPl0XqBsRLt7JTMD8/2oula05A3+UconhVgL2LRRcyU51hotMBqVpFLre
3wt7Z6acYCLP8UEzkYAFzaVvpaQ6wj3rQWvWtU30O++g2NSYPZyJoDqkz22i
qKivejx77QByJV22jm+iiFYbj18HbGDrCxP3C3820ZUhMuc3shXcWsvzP9ez
iSz/5CjnJpuCH+/LwOW2TaR0f938r5oxHKI7KKRxE92LCdY3X9AHkhNT5DTa
RIOW1ZwvUnSgLUY22r92E7l6OFknGR+F3FsW5/9VbSLun4cejz8BcH8Zmeh+
fxNN1zLPOwQfAtnBwpSftzfRarVa6LdNWVgjvc1wyN1EWhqX/IT/CUOTwMiV
viubiDJ3TmznQx7I0tqRY5G6iU4ZCB117GQCR3fFvE/xm8h+Ur0tj3mWJp5o
U3ji7CYSZSfnc3g+p82XRN95H7yJTGsOKzTfaqPhxjv3jvlvIjuKkVJT8TIt
bbip7KX7JtLvcmVxfbITrLZOPKQ50vnRq3/0/uF+4Bdne/Kf5SY64s68b1em
GEzoHa49aLSJZFUjDO5XyMN/vg51j3Q2kQGfZPqlBGVISDuPpdQ30YW2b8XC
19XBuOLem/uHN9G/qZVo5yYt4GlrbRKS20RZ9u7aRhq6UL2D8xMv/ybqE6Wq
6DqbQLSsavcN7k3U/Vio7/BHM9A1cenjYNtEXvpNv92OWAL7mcSvl5k2UYvq
FPbOsYYfV8p+MjNsIp2psfo9A/T3zeP2P8lrG0jwY3hE8YY9hHXN/6PMb6B0
VsaGlnlH0Jznnogb30Af/83virN3Bpbd6jPrfzYQ/ybPsN4BF+hXcl+I+LaB
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
ap4V8tqG34ykTm3S95DgVbjzMHAbTBVGn7Rz6aCHLDRl5bH/+NonzplHGiIn
iv3l+aRtUCIT6Ow5aoxCf02xnsz8x5dEXqLd8DFKW25RlS7YBm5vzRzSWDP0
ZfiTj1X5Nhjy9D38Gf/vPFvelsTXbIPdy/N6UkaWaOWz31JT879+J840Zi5Y
ocPZVqd/dG2DTTwjfUOYNWKOv6fCMbwNd2g3A+YO2aDLL649V53+V08kyNdL
3gbJP+Mpdl/eBjGmW8OKBjZIz5x2MWtrG5r7WgrGlf/5F+3fLIO/toEu9C1L
I5UNCrk1q3yEZAeOfQgesk2xRqmSbV5ClDswpWX2mvc/a1TBW/LpId0OSH/g
O8eZaYm6TyXOh5zaAeVspSTiTXO0RBnI/JljB56/Nes/ODBDxH9slBZ4d6DR
eI+gOPwYCYxeL5SW2oEg6thPO/yPkNw33jkr2R1wjfjWYFKpj3S/nGR6q7QD
GxK3897G6iKHnIObzRo70D0lpcn9TQu9eDvv/kNnB+T67jp9uKSBUkI6PnIY
78CX2QJayQEVVO5WNqNquQOTkZuB26UKqMsimcHDcQfSy+KI9t5Jo0WdYMVs
9x2oOhU8uf+fOCL6X8PVHU/1F4bvvhmRGZKMklFGZrjvOUay98peRQhJCFFU
okQSKsmoqCRJkVFIpZLIyEoLP0kU2eP+7p/nc+59vu85z3Pe93kswo/3nZlF
1l5nLYI1FUAI3MppabMo711j3GNTMVBUMPyhkj2LFELwfrH7FDAUUxT0ujGL
xP5FOm7Wa2W4cQkZXyieRdeKdvEv4q+M8DVCbO2DWeToOmdo6cgB5yZ/lo1V
zSJN/+nh5joJKBz6+E2gYRbNlF6Wu1WjBE/bavn1W2bR6RfGb4s6tKD92c29
oe2zKPmWgzD9qD6MlaVGX++dRV/EI4r2eJoAMy/i/tuvs+ht0LppI5I1CKZ5
fJ0fm0U70htG1ETtQSHeiG/b31mUJMmr0+23D1w9RI7FE+dQmteb0vlNXnDE
klxayjaHAmusVL4a+kAKmhjq45lDAh3RK6Gu+6FAsZuHLjKHmn0PO7y29oPq
Lc8MVCXnkA0O46gSPQgfuIsjveTm0Am1u6OrjwJglJl298KuORTp8kMtjDsI
1qaiPtdqzSE9yVMe8jKHQOCr14afenMo1lS6uWjhEOxoN9EXNJ1D3v86DDtj
g8GgQSVC33YOlZIer+pWBINLueidUJc5tHrJ6wlvTjCE5VMHr/vMocksGSmq
YjAkp09yvQucQ6r8JypCjh2C/BOfdBeOzCH6xZ06yjFBUBXaEL4tdg7tfD7T
d3V3ILR53im2OTWHggQZB21qD0KCVLzW7Lk51PpVcXuEtD+ojdq9z740h1r+
Y1OuCDgAuYGEmcFCFp7ggUzbPG+wUug5HX93DoUlxfx5necJlL/3hCQr5tCV
22v7jFXdIDDCEfwa59Dt08yYPBN7ENu9s4PtzRySMizcw5dqDR+XSb6l7XMo
zi/CeojfDM48652z6J1DHV0Hb7YV7QGtk2XJf7/MoePxx1/jlwgm9U+JZv43
h5bpFXOJnWpQQHN+oD41h75t6FKc05AHuzeKen1zc6g8snOKSWD5zfPU7pi1
OcSnfO709nc0qLMY8BOjzSOJgBWL8h+fGSE8D5ca1s8j1YT72uUDDQzJrjOp
PgLzyOhGR0fBvlVGT5arOG3zPLL81swuvUUQUvbtelSydR6t3XiXN7hXGkB0
naHpjnn0Wk1BUSF1F0wPfe79rTKPxvPNtavztOFWwaPAdO15pLvf0VRLUB+c
fJPXdunPI/aeyOmfRGPg3O5xsdtkHmV+LfFzi7CE8FL2KhHneSTYV2u097kD
yIR8Na73mkc78h3Tk/ydYUD5yaDHwXl0k7xL5KSAO+hVeZFuRc0joeoY3WfX
vGHumMblvSfm0ZjtD0/mHl+4o7NeZjxpHp0ynKWMduwHV+b3mvNp84hN3Ekh
RtMPNjRVmytmz6OwTQIuUUf8ofnUha8defMorqN51Pv4QYja63sk/PY8yufq
rSyyDoAd7Fq0jWXzKFDJ8PnViQD40sp95enjeTQZMqJeZhoIGWkj8q718+gY
98yc3aFAMLSpfbbWPI8kXe9IiloHwhL/ReuCVhbe+OW+4vkAKPt0YFi/ax45
78ymPvAOAO+rOpGjA/PovJODy3TmQRBw42VP/jGPRm6m1iqw8nvLlrFc+V/z
yM9zSIPDww9iv9crtk3Po7QCGx4y8QAo3brUFLo0j2REFIXM4nzhh99Bez7S
ArJ5nz389LM3mPzmj3HiWUBbZM0FrBvdYe3B+PploQVUrNnLlrDdBR6GNeRf
F19Al9KsT71PcwShhcBX3xUXUNOa3ljvLStordHdd1pjAeVlhH0Z/GEC8cc3
TmxHCyg9CFmcXjCAXfh33FvDBZRGaKQFGCIYJb3gOWSxgMbtRuDQrBpcfZlz
k9thARVpKKm8MdkBFmeDNSrcFlCFUXplS/8WIJkavLXbv4AaQoKlyLyc8Hi9
iNt80AKaI8rudJT6xRiVN7xxJHwBEf22r+VkXmAImYR9m4pZQI/C8na5srKn
iX+eVFDiAnqy4X59dxcnxJ55u38sZQHB5zObLr3cAmU354p9MxbQex7us9oN
8vC1SXL865UFVG53OvKwiRrwfrPY4VawgCTlPuY3rwcwYEYH95UsoC7lw2Vj
BAOI2Fxcbl++gDT17YrvxxpDiXbndEfVArLn7dkV62UJHFHykW9fLaAgpa0c
Tav2oJPl+NSwbQHFUrYWBejsg+DKxOWm7gVk5bo9UzbKFT7+GYivHV5A51cC
Ofc4egGFe12TxsQCSr6Yq8vx2hvUd6pSKmcW0P3oTftPiviCv6mnodLyAjqY
eHbLlOl+uHLw/NlS0iI6vdvLUs3hALxNqn4rw76I8NE90T9U/WDl1jDnLZ5F
NLB2WM1k2A8UmjdYSggvorqnIbtTvPzB87vOxevii4jR+/THjbv+kEE42Cks
s4jIzHsLAc9Y70HsskCW4iLSmw87W5HrD3M6jY68GotoPObY+FZDf9ju8vvK
BVhEVs8eddrW+YHTMeFBdsNFlJb6K7eU6Acp2XvEkswXEaEzeShI+ADUPT7s
SbZfRCLvZ7Mu0ffDZOf1wnjXRRSxwWLLh3YfEJ9+M7zss4iE6x4j/2hvsNkw
Jx0VuIhuXkhskGP3gsdmFvdCoxfRT9dXu/PGXWA0IPr3xMlFlHFD+mpnrRMI
Jd9WPJi8iDLLBebfpdpD7Mu1R145i6hV6Ep2SqcFlP2Qm/t8YxF1Otf4eW0y
hq9ER03n4kVkS+9VTHmnD7ziidE9ZYsoeANdQvMfA/ThQZ3Nk0XErfN8dOKo
GoS7Dqy11S+imCc5LU+O74Db0XRd05eL6EPd+h2cveLQm6OS+Lp1EeUsBvga
WW8A9iqPl/pdi6g4izfrfsI/hk73OXrDwCJ6WZYJNL2HjOCZKmOdH4vI7ovg
JuVrg4x8nuFz1eOL6E+e8vV/OmToUNzQpjq9iA5nJsbQczYCyUJnw8PFRbSQ
xu3qUr0NVIP8bXYSl1BHud+RyF3KcCAlM/POuiXkVyUc6fFOE3JKGnq2bVhC
hrpdC+xNGN6+mhAq3LiEut8ko3NX98DKsJCL2JYllH66/Wpgnwl4SBz+Iqiw
hKTZH+6rFrCFdHRd4pLaErLqdlhk0Bygye2NDzdjCUnZ9YnuXXAC6asSY3Sz
JdQcUa+det8drmyLjJK2W0IzEvUhfa89gfNh67o9rksoe3010VDUG07oSF7x
8V1CgmZjRy3MfWDmdaRsQtASshQRKJ+y84UDtu+f5ocvoVX62Nrazv3QPyRp
8jyWhb9a5qrftR/MA6L6P59aQlONTa3JBgegYfZ9wMr5JXQiaehIZewBUD0p
tSxyeQlp2Xze2hxzAIo5j53bfX0JZYRf0BjUPQAiOW2bnG4toa6XF3Jx+364
ILW1NOL+Evq9Xg4sZPcD8cExncuPl5BXP9vAIStfCNf60Pqofgl5elsWEU18
YOzlVrePL5eQYsOHJfNN3uBiHf37z/sl1LvfbcDtrSe0DX44zt2zhOjmwh9e
1bLmk/82LoWhJaQt7VIoV+MCMvHtCoGTS+jpnwN4S7Q95LJLP0+eW0I//xoa
rnexAe6sGMuStSU0+5soP1RoAQkSHV9e0ZbRc4nSyYpeI5grlQ4d4VpGpcvl
Hsrh+nBQM5ZA2biMmuVEa4u2MGDwRUe65JZldOYbrbLjjCpYWW6X0N2+jFpE
oidfXJCDF/2xDz0Ul5GA7LYAeW4xUD/wUTdOYxnxSaBnw0/Y4e7f7R9z0TLy
lD0Yquw/zth8/Lh37d5l9Nli78gV3WRG+rrO6T7LZVSSumLARf7NIGfKJC44
LqMvJ5vUb3/igIgtcXwbPZeR0/bc2dxyMRi/21mk5r+MNvbdEJ5+LQdu6rKq
dqHLaBinzvMmqkJ7Y1xzWNQyynxeXiv1QwcMzLvsLp5YRk9uHU7vkteHql7Z
kQdnl9H2xJYXgY5GIOcbf7QtnYVnb1Jk3mcOeVNd1N85y6g1t+1O4Ftr4ImR
y+IoWEY1gnK1ik/sYOFi9xOjh8uIoHK/OCfGGQI3y+/1e7qMrnZfcSrTcIOh
khOfTjcuI6/Wz0St1x5go9rjd/MN67zOpjV5XF7w8rn8QlPHMspbKPKbFfQG
TdOTZ7/1LaN7/dknQua9obSnR4jwfRnFPGw+cveeD2zx3nFHbJxVr+IaRUbJ
FzJ+n9zNmF5GPl7ufB4JvkA79umNy9Iy0uPmj3yd7wvHKDudo0kr6HHe8vOv
Kb4wkZYwnsO+gl6rc1er6Pqy8mNvdBXvCqImhBZbvPSBzts7OXpEVpDV4W1h
dcI+YLgr8do/yRX0aaymcU7XG2rqe+X55FfQjdyc07Z6XrDTWKFOWWUFBfQ5
75jc4gn5XYlmVtorSIvxU0Sk0Q34PfsGg/VX0FhmvQhdwAWWIk6t3rNdQZ/f
TookBNoDe/er38hlBa0om6bF1NqAiArbUKf3CirTXuDW5rcCuYumbX4BK6jm
9lv3JJIp7J5KfbZ8eAXVhl15eHCTIRiZt5elHVtBEFPqoHJWF5zu8d6QOrmC
ksS9tCeqtcCfzT6t6uwKynVz295tqwJRftnxpukraF6LK+ECQQ7OvuwL+ZK9
gph+JtPu3lsgR0rU88iNFZSReiNs8AI3lJx0t6IXryD24NzSf9WzjKov+fha
2Qr6+zzMdtHxOeMV44eS4pMVZHmmRCdCo53Rc22bxIv6FdS748MukcFlxuii
H4/jyxUk4zqe/lCdF+Yc7xJ/ta6gt0fFBGYMJID2ZOJvXNcK8rh66em/dnkQ
5Ff8zju4gjgDlLI6DFVBOuzwx9s/VpBeZ8qJkRvaoNb+qEnrF2t/Lg7PjOmC
gcJcRdv0CnqSX9b/yMUQ7M5rFnkvraA/kbNRZH5TCDeqT0xhW0X2ppXcN+Nt
4NRt5hExnlV08/dKwQDJHjIper4VQquIf6uFfVWsI9z0PmVnKL6KWq7JZ+/6
vg8eNbwy6N++igbGogxKZVyhSYxNLVhxFR3NatosYOgOH2NNt5E0VhF1SL0l
VcgTvvenCmTBKtpuZsxx948nTGu2U+UMV9FX4pHnZcVeQMrmnas3X0WOyS74
hJY38M7ajVrbr6LG7hz2W7e9QdI2u2fElVXPsBOf1bg3KD/se3XMdxW19fCI
+1N8AHOLVq0PWkXcGicI5/+x8tEh9+KCI6voyy6Na3y13uD5Lj9bLWYVBeR2
v12/zxtCZX8kvUlYRfUyIkLa7V5wImlblFvKKvLifh9AlfKC9BE//78XV9GP
V3d6w+1Y+tW/63T6yiqiL248r9/uDg8KJoyEC1ZRw9AhReNmV3jGVNh9v2QV
HTiwOZ52wRna3A7L6pavou6hc5O7NZxgUniO7eDzVeTkkP8izNoW1iI1l1Ze
rSLO6fxTXz9ZAVdP9Hh62yrC+MvfoHYzEFOt79/aw7rPn59PrhMxgp0ZzLfV
n1fRC+d+w9/5+qDzR7fWbISFF0sMK/0DYGZx6t7XiVV0onBeQshXA1xLX10L
/7eKVl9IJSrVKUEQO9v5dSurKNmoI4kpKw2x/qaxueQ1dD0lKpUhJALnX6UG
KXGsIerqVl+pDWyQu7XdtZl3DQU0ahkov51klCbwmjuJrKFI7s4HwYTbjLqv
dowJiTW0aYv0peibvYxWyN55QnYNeahqNV69wWQM5vZt5ldeQ2mb7C9XS/LB
r6VNXCWaa6iaXT+y+KQE6LxKMhvCa8hn+1p5WNoOuHBxJoXfeA29M/yyyWRe
Fb64erwxsV5De2N0K23u6YCSzDv6yX1r6MDe7Lvouh4kzKgbVnmtIZJrXM9V
7b3Q+azw1O+Da0hDv5ZPT8gMIuyjic7Ra+gWdxYlj9cWXouPovSENSTROehz
KN0ehCas416lsOqN41DRWHSEgKr6upWMNfRrO49OOHaG2gTZ5V3X1pDwuo23
7J1dgdPi8u6DRWtIUfyoLlHHHdyFiVE37q2hjjWLZy0DHvBgOOhJ96M1JO/s
aXw/xxMI5b3/OOrWkO3boKFZES+wiTFQ0WteQyPW8vU7wrygyLD8cFTrGhqc
VpUvyPWCfzyi5WVda8grMIbt3BUvMPycNDk8uIbCnzzg4TroBdklMzs2jayh
WJUhS01OLxg74hFo/Zt1/muew8unPEELvbuTNLuG0hMp+41KPeAcu8ZY/eoa
EvlsFZJKc4fB7kLpf1Qmuli9qcZDwhUUCrj2y3Exkc5Zpl0OzRnaNUa/ZYkx
UXhhmeEtV3uQJNuIv5dmIh7n0c4TIzZwpK3enazIRJTDAT9t/a1AcP/lgRDE
RAEB4gmKm/eCnxJR5PZeJrqtznzke1kPqpeDnAYtmYhNZfLB/lc6wP66N4vX
iYnG1+GN3hpq4JJh0G3kyURbj7V+WzDcCaVu5Xzx/kwUaegbfMZBEtZkRG0e
hzKRZdLA7OtbfGD5Lyn9VxQTFQbYRr6WZjLyn8+0SZxkIqYkNfbuXBdjOsVj
vVMyE53okT0h51/J0Hd4Z3rhIhOdkn0+ekxrhpEpoZHSfIWJynRtfD5ZrYfR
icKWpQImal5Kco+/tRk0qrnoyneZ6Obde6vMahk4mxi9x6+CiQp4Cae9/XdB
v8Vo4vUaJmI37lpxDdoN8iI2TZ1NTNRrc90otABD7Eg9gf0dE0lMbv615ZsB
tJXLItzJZOWb+pxmd2MI3UusK/3BRN2/BvfZOFtDE++hpe+/mKg16e79tfu2
wDfUqyn8j4msf+oq6/6xB987BpGWK0wUPDB8103ACVy0evv1SAQ8KPh+RYPX
GSjiXEtuNALW3mg7cX7QBUqpBsLH2Ak4ozbHRTrQDex/HdPM5CJgB2u3CbYn
rLzd/sDxAS8BF4Wpixc88YDbT0Yi3goSsNnNUMHfKp5gmbspa0SEgO9FPw4V
9/GEhZPWjwlbCFim2vQi3Z/V//ySujZJEfBlNk2nq3qesC7G/53UdgL+7aV5
6M+4B4ReMG6SlyfghMqJ1mayB/QWyD1VUSRgAm5VMOtyA/SYo1xbhYC35c10
nvJ2hdstE7f1NQj4YebPxYePnYFr8P11U20CHhDne67e4wRDpPRzLvoETAn9
Mx58yw4MBQ8n+OxlfU9WNGna3wbKZG2OBZqy0Psv3aNKWcFxK36/GFsCbs65
y4ks98Kwz6xboiMBKy91uppu0AezyB67cy4EHLZW8VVVHqAypcr0kgcBZ2/j
kqWOqINoXo7eNR8CZgXpG4qHleDUw2O7i/xYa/pYkePnbTDR7Kx0L5CAN1Vt
7i8ZEga7Xu3tj0IIGDOubC1bxwa1v0TFao8Q8Bd2XmWK4RRDkrnK/yKSgPUs
VdwiM0sYKbxfON7FELB+MPN18e0exvS2BlJnPAEf8XnWIiW1xnDeXbDYn0jA
Vxd/UpE/LzSZJfz5nkTAJSbLfIWj4iDn6fPf+DkWfpETg/xIDjKOGAxNpxFw
wS3rQoqKCiye2da9dInFb2s/R8633eB5ldZKyiFg+6k4w0iWPlvu/9fEnkvA
8r8nzpXlGEBO151ykZsEzEgo5sRs5kAYSymWLCHgaxc4vi/fswL/5cA8uVIC
1uWuub+/1Qbaucwv7yon4Jk2gR2qA3agIalwXquSgF3eOzRtbnOAPDXuRL1q
AuazjzUOvOYENOM/x0zqCPibt9u37VrOEOzaEWrTwOIr2arfrNAFekIq/Jyb
WfzbHRoaa3UFSLzk7t1CwOs9867pVrrB7axw+4BWAv65J910ytYduO7am4W1
s/hyv3j5b4k7HK1X14/uImDySqlf/UNWf2vfqJXQS8CbV5qS9IPdwWB4QSll
kIDdV442Tn1xg9L5vu0ZXwkYZRXX5LOx/CdHrdjVYQLO3FyRmzPlArFiuQKF
YwRM+jT+40C2MwwrH+e8O8F6P1KNLe/o+8Bsjzu54g8BV5Cduy8bOcIjJ7T0
9B8Bv3v5zCHa2x5EgsT/Ni4Q8A8hcthPd1tIiCeOvVkh4ImgczVDe63B5vaL
7j4KEWtMnr91j8cEap7ebP22jojR9dfecb/2gOT70y9+chJxqNWlWfm/upDy
9UDN3w1ELHb5n6pekA78ndn7cJGfiHtjZPZTrqiBE122hChMxExju+NGfIrQ
IMJ+g20zEYs+FBs+/WQryCj8uswjQcR9Zm12jKtCkK7bel54GxEfObFaGb5E
B8NnRSqDMkRM38D2N+XrH8aKVkx/3g4irr4tr+1qXsuoqLI56aVExFZ89zpz
RV4y/FXlZLaqEvHvntjo7uwZhthD4odRDSIWCkjaelyUHbp29h29o03EkXd8
mZFLQpByt1w0CBHxE76a8bzdWwFvP/tCQZ+Ixx/NF6zm7IS5Io+Av4ZELHLL
OjRZUxVKxTV4Kk2IuPjN6nSpkRYIiYy677Yh4g8dfU8vzujDH06DJX0vIn5w
4tAN/WBruJ28qYC2n4jTvgWAC9iCK21m7xt/Ip48RpNVXLQD3sS3k+eCiNjg
05MbkO0ALcyCyxahRHyXLqWVwuMEcbHHdHjCifi2i+H7h177QHXR6kdnJBFf
s2lM5U5whvGjMilZMUSsLzi89OGQC+RPM5X2xRPxsFrgThprfjqEfPq0KZGI
8Uq6al0Oyx9MlMUNnSHihdRwBvMjyw/7n9lWkELEPYJytv+1uULUiFurzwUW
X64/c66eZ81fb7Uj0hlEfKzm0IzpelcYHuIU+XmZiEvASU7N1gWuugw33LtC
xN4pxLzzXs5g2VvrF3ydiAeyZhsidPYBxf4Sl3IBC3/vm6yZMUeo6Qh4PHOT
iHNCGlNaghxA+p0w+VgpET9rml7fzm8Lg3v/3tEuZ93vFdrnoyw9ZjS3WK09
IuK9R/4GqQ9awFp9ZF5iLRE/utG6PyR4L1RqWe4xfE7E/qQ9JLlOfZY/kp5Y
94KIw38n8cy4YxBXXct494qI+avmI6ewFvSUd+++8JaIh+5b+P1nogrnd97/
atVGxI28tIW+nztB7+6pJL6PRNxN0mmvursVFqRdFXq6ifi1++iPJ6vCUFak
0p3TR8Tra+6cNtzICb7iHLEun1n1VwTn/Vc/xxC5/l1S7BsRK1A8NpjktTPa
hWvefB0m4gtfyyX3V91inMm6GFo0RsTWC/y8uoVjDB2+gxsPTLD0Emjen+tP
huk0/EzmD0svoiNn3X7xQQmn0P5fM0Ts7PhWfbpZHNyTpzjK5on4VZuw2pCM
LPDTXleELhPxgfTgyg/HleFtQt4+FSYRu8snbLi1TgNOMI8S5kgkfFB19be5
KAPUY82Lq2kkfKVHpO9fmy5MLGy1iGEn4VB+xswBzT1QeHTlH4OLhP1CdTJO
1hoBV8g9vRcCJPw3yiiSrcMS9hdmb/gkTMKebSUHPryyhrruxKHxzSRcZeBX
GZJmC7xsoaVrEiR8z+H+RYvd9nBQxzWaV5qEb8/t056vdYCGECMjaTkSXh85
UNPI7QSCRaqCWgokvIdWqL64cx8c6hEfNt9FwrvP/HJY3eAMzWzrK7zUSXg0
ol/IvdIZNjEW449qkTBvUdaZv/wuEBY6Yp4MJJzUtXf8u5ILtBR1bLquR8IF
074qtXQX2PKp/me5IQlfv2ni733VGSLY71Y1m5Dw9NkoCZFf+6CVkXW614KE
lU4ixcOrTiB1OMF2woaEVx9x3VfqcYTom8ESBEcSbtH7OaoX4wAdn5yn+FxI
eKY5KDNzxg5kOPbWb/cg4Q10Z7a/hrbQfXjLPks/Eq778fBptZ4l7LjFsd0n
kIRd+ayVmo6aQkLv/L+IEBJWTTYVWyneC0qoPT0vkoT5v4g2bnXAkBRW514R
w+Lj7Hz28d+7YehWyY5X8SSsvZLub/5MBVT7Mpf6Ekk4sVbUpj16B5zjPNny
O4mEKe+XL/7kkILv6FAW8TwJdz0/vCpbJwiaR/b5CqSz6nvo7ji9jwZpt/fs
ks0kYblQqWsz634zRvuUCYwcEt7c47NlIOY+g7FerM0ql4Q/nkzj2RLbzsjE
7Lm++SQsofJON211njF+ZO5g1E0S3kXeudeYjQt0i79rnC8h4e+WYVZtI5sg
p7+Nml9Kwjdjjh0YUJCGyfW1nY/KSfhd7I8RE6oS7NEtLnhdScLM2rnJnXfU
IDf8UshANQnnCbi/LRvRhpnieMZUHQn/nCvj2W2uCyYDgRzkRhL2GGEv9/to
APO6BsVyb1jfvyS4VZnfDCyOKh2F9yT8RTg9/uI9S7hZIqpv00HCHVuGE8kZ
1rA8sI7nQDcJD7K7lU2p2YIN9+zQsT4Sxi7fONWe2sEdvW+lqZ9JeKKqLUia
3wEIEe+jC76RcKou55Yx5AgOd54aPR4h4UmFEp0MdSe4P3hL8M1PEhbiMiJa
zDgBZUPG8OBvEn6hc+POobB94KwfV/HnLwmbVcZ5xj3cBw8jAk5Q5kj42X7z
H7YP9sG6uw4WQksknOIze3t90D7w+KwnumONxeeakZ/ATyd4skFxHJHIeO3S
gR0bZZ2A02BTtS2NjPMDbkxPKzqCTyT9jB87GX9X6dItITlAzd0Z2xguMqbu
9dmiU2wHG4a+SKTxknH6+YjvV7bawjOD6vonImR839v6EWeGJfh8u6p9WoyM
V7kNS4yQGayLO/7UVpKMJ/Lxr+5vRmBTpff4jywZE23vrZ/Q1YN5220qz3eS
sTfa/m9cEyD3D/1hqjIZX9U6dLfQVBN0U8cVXNXIWE7wblJj9y4YlX1fKreb
jIO2Z+/r+SwP5149kFvUIePhLJvkaCcpUPLJKHmNyVjWldOvLV4Iupnh0lkG
ZPxscHGhpYUdonMdb/oakfF6O1eRcNU5xpbdWpIqZmT8b/2G39uudzCau0Xz
iVZkXKdufI9pcY1xMIy5ud2WjK1dL7J75AwzuLi/X8tzJGP72UMH9o8S4NG9
ZuFDLmQcm1jQ+COPB5yMirO1Pcg42rhQ/tn4ZlgdThZg9yHjTJuQf50XpKHw
ZNCl3gNkbGVzhfwzShH2ilnyFAeQsb5AzZbjL1VhokY57WgwGVc2FpIemGqB
+r+5FN4IMvZseqDLpaYPA+l9674dI2O1nu/Xp/cbwomddWceHCfjT2Ud3w/f
MIa3B04mmJ0m47NbPzi2TltCCNmXsCmZ9fuZFjUcZQ38+YZxP8+T8amIp/fj
vtjAUx3Zlap0Mn7IP0//JWMH7n0c0WcyyXi5bzN3j4U9kCMm5+1yyNjvw/Wn
SmYOUMLbcVQql4z7Om13Foo6gvmDRzN/b5DxtqirF6/WOcK0adbhhiIyvpga
6e7N0lf2WNTUhWIyvuwj9t82LyfQOe1yyO0eGfeHE6dWvJ3gmwT8kn9AxuKS
vHKTCk5w5pn4waUKMnY/yXFt8qUjyLuQ/2t5QsYZFq1dg7KO0D4/4ptdw9JD
gLx6lJsDHM1s+b7/GRkPfiQb2/my/KfyPU/VJjIe2Hs3rkXPDp6/Tx0ivSJj
A2rUpcFVG/ANCHXteEPGpYVC08rXrFnzVs0puIOMq3qeWonIm4MtFurR6SZj
wx0cIx1MY1gYXLLl6CNjbk9r9d/vDUFPsMGy5CsZ18ZMletfwPBfReH7iGEy
RjVEszINbThvedp0zxhLz1r2zzkr1EB5wu8N3wQZxyz4CBUUKUHPWZO936fI
2Mew7Ns1AxmI2bbzZfkMGcdvdueZTRAH8SZu/fh5Mq5+2Bi0aMgPL92nG8yX
yZg9ICj0LYUKActdIMok4x8ubMrq9CkGd05V3TiJgu8/YZdgt37OqFS9qvWU
RsH9OSdbnReqGU4dsdVJ7BSslKCgcT5zgrF6yEPdgYuCrdUysi3/ksFb8/c5
Hl4KVrO/cVIc88ErUsy3VgEKHj33QeG84xaQe79O46wwBUe7bFpfRNkOF7Kz
zutvpuDheGqOS4oiTHtt/b4mTsGR/8pODZxTBYcdFRo1Wyl4z4KJaE7jbhBr
fP9daQcF/+D70WmcpgcJ51w0JxRZeG7jHwNS9sCo/c/UYhUKlnWrno87bwRl
45TdYtoU/HotdI4zzAJ4H2dc6AMKJgk+jZXNs4KIePHhTD0KZpc8VvD6tzX0
G5fttjKkYIWX7xzNJW0B+HXSOEwoWLAuk+26uh0UDr0ZfmVOwSOhn69slbYH
2h1HrQRrCn5xnZL0Z8IeAo6MpDHsKVg88ppXXZIDtDGOjCw4UbDkETNbwj8H
2LWOqF3pSsEHDf4eX2b1x6yPF9JDPCnYyiFiXa2WIyzlio7K+VLw9LhG/WZ+
R3D3u6s96se6z7vuO7rqHKBJWfNiQSAFL5x2tHVTZ/nRlZejriEUvHb8eB8z
wR5SXtnqCB1hnZfHgtDAyveT6d8udkZQsP3IwyM2hax54hLy34VoCl7n80mF
87gNPNm2qmMSR8EnWj2GPmhZQ3yN0FjDaRbecOqzM+NmMHzqNiM2mYIjPkBD
4LIxGFmqXtJIpeCBc9ceshP3woZhSyjLpGCU6sdeK6oL4WWfLx3MoeBvH484
aWbrQG9U4M+tuRRs+B/PXD/WAB39Rfh6g4Jr0elPlWa7IH99Uua1IgpuMjqe
9i1PHii9/OMOxRS829Zo3aEqKfAvLES89yi4NUB9QxhdBFqDlC6/L6Pgfd61
05uPc4GSxrPxsxUU/PHzy5wx5gojk2iGDZ5QcJV3ZHio6zfGwru+y8ynLH7J
52i/KjMZrll+v2rqKfiSg2P0K4l2RoPnLI5oZPF56jGKezLD2CqfmKX8koLF
muoOtZ2lw9nZDRMTLRS8sclCHfsJwMTzPN2SVpaeZ+PWMrrFwSplR7ZPO+s9
UEMSmDtkoNKuZkKsi4KNbnqvfTNTAqEtRnr9nyj4e76G79VlVfj6yOe31RcK
dpip9UIhCAzi/upx/qDg/EPna1MS9aDEKD7n9SgFr5zpbx533wOhn6/qwyQF
pz/2i2TymkJXscyVxb8UfD5pE82q0xw0w55MVs5SMC06Ith5txXk6hgYhC5S
8E4q72viEWsg0j9ekV+l4LwbatsPXrQB2tlwQU0iFffPXPbqKLIFdraNlwyo
VLzMuxqlc84OuFOecluzUXEZJeDlTn17Vp53Pe+2noqz+Lg0hFrsQfj82roA
Hir2mPTMDtnoAGLrC05HCFCxdoXKs0pFB5C6oE9KFKZin1W7E7EbHECGezQu
bTMVM3uWNA7X2MPO9LPL1ySomLeB87uFoj3s4pGPKtlGxVOjOaN9h+1APeP9
v0pZKt72RL2+/bQtaPOFHm7cScXjnxuqekNsAGfyTr5XpmKtoY/2B9SswUDg
cUC/GhU3yxmp6D+1BIuNSz4zDCrms3fVZ/9kDLY5uV+ZulSsgzgGK14YgpMw
cuM0pOKWPYKJnff1we3qtz4hEyp2/m7IXX8Tg/emUw7bLKj4i6/r2b/B2uCX
K92pbMNad3NXLI2pQdDmN5bgQMXptj7kto9KEJoX2GrizKrvRUr8hxQZOLqF
y9jRnYqjY6hlQmXiEJ1f/tLHm3XetlcSAYH8ECdhqxd6gIoznr57EEimQmLh
7LPYACoWOrcQzxU2yTgrlaOdHEzFgRINz9hodYzUm1rVl8Oo+DrtwldVn3pG
xrbPqoURVJxdo10x82WSkX07/mFZNBV3HZle+rSFCrnbJRVq46j4iLLzKfdD
/FBQ0nz3dQIVc1ZMX7HJF4fbsn7bu85Q8YWjQSUPfGTg7l22m19TqHjAZuj1
kVIleCBfKv77AhU7KU882cTyu5WlFtcXM6hYprdmKoRLG6p3/hWmZVPx97Bi
RrInhiZFdb4tN6g49z1Zm93cEF6X96bJF1Fxo6nYqoueMbQqx3BqFlNx6hbJ
YwpSZtBRsTnZ4B5rHXNce8M3C+hRaaBaP6BipdWu55JVVjBQ6Z3g9oiKG2a+
a9C+WMNXNSrzYBUVn9M1VA7+bgPDT4pjImqp+P6mpWDLOlv4qWGykPCciqen
cgpD/Vn9rnoiPO0FFR96/lws/ocdTO9O+3vtNRW374tnisnbw3yNcnDJOyqu
8I2LnmPYw4p213jlBypeK7wsXrnJHoj1EX6NnSx+o9T+cb+0AxoID7//RMUb
fW9Zv9a2A47ntZ79A1RcOs/TcCnBFjZg98+jX6j4cN3bAdHrNiDQSHCe+UHF
5adcC0fSrEFEr6iH+R8Vt7rLn1DztAKxF3tsOSeo+DMhUGZ5uwVIGYx9EPpD
xcTiNO+jPqagbhTWZEKg4esF2IfTD0HyLo4pHgoNMz8N3htR0IJB0Zub+uis
dQRPSR5DDRTpDKN8DhqWiV9LPlyiBAl/u8P9uGm4RalWdJUqC90DwQUKfDR8
sIKneLJeAmRe0dtmBWl4LcLln4niRogpz1+qE6Fhv8haF/tKdmi7unv7KTEa
3lnkqW6StcCQOP3R1lSS9f/Km5qZf/sZ4SGBJ3ilabiZ1H71d+UJxut9lPt9
sjTsOSzPOR/QyRAxuN6Xv5OGd9vt/x7e+o9xSEGd5q9Mw5+Eb97900WHBqEP
uxTVaLhgwjSxniEA/GR/jzlNGrYNnvxmcVIc/H4Tztfr0LCSDqVkc8J2qPl0
pfoUpuHVgwwe9gRF4GraNWJqQMMijZ4JLxVUoTLLF/pNadiGZrlQSwagn1wN
KLCk4RdRTtLvb+iCc2BWtr8tDZtUe94oMTYAAm75M+dMw/WQ9OxQBqs/yHlt
fuZOw+J1F19ripjBbf4l49PeNBxD3ua88YQFLK5lRJgdoGEJA0vZd65WYPZT
vogvgIa5UjLYTrlbw43O5g/9h2i4zOqY1CdsA9P1bisFh2k4JC+tcYppA3tK
5mQOHqVh/RcpPJk5tpCTkWavdIyG52P+/Ny1zg5+xcokzMfScJaDb+mkmR2A
X2PZsxM0bJ6bKXhrvx1ctHYeOH2Khl2EeL/NWNvBsPYM3fwsDT/qtBbW4rUD
Denzqvznabg//tCurGJbSNmwzWsgjYb9zwX3fOWzhc9L9amFl2i4p4qQfnOf
DSiNONQczKbhzmLVMN5Ya0j8MDWqdI2GhT8M/ZmJs4Kep2f5FvJoONTvmZXq
ewuIvVATdOY2az/IRtxxyhjeaIhtKXpMw5VCFtICwwCiklWmAU9p+CVp58Df
3t0QymkVpVxPw388VgmtXGrwYm7s5kIDDSd5TlZoXVUCwW8nO5430/ApCseH
clFZOPhOZO1MCw0favjy7+uCBNQ9fiRn0UrDBq7DvR/bNgJ3vpmjQDsNkwWV
p7/SOcE7ZSRxsJOGn91X5mocW2I8Do8rL/pEwz/SngddPv6Vsc5j4+eAAdb9
2PHh21uzGS7G5Wy7vrDq150w8p58yyhTMVZf/M7CL5dceanwl0EU++7dMErD
himv3vi/ooDdupi0pHEaHt82cXiIyAfF03x1FpM0fFfgauQNghgsDZaOCUzT
cPvjbg+e7G1gENSSbj5Hw2kZjc1tGxUgdfmH5uklll6SX52Oa1cBcZFNyf9I
dBz9In9UIgYg4I668g46HU9a8/5y4tODSk2bPh8OOvZTesDh+dcA9jomy3by
0XGUgVvBmyQTSB+92cEuRMdTF44fbpYwh/6jDcf0ROmYeg7FdyZZwlbqoES0
OB17n1WpiumxguDM+TcPt9LxuvZkpXdN1lAtxRf2U4aOJRZ/C35OtAHiIwUR
iZ10bCFxtrVQwBZM9EyanJTp+L+knBruo7aQ2bE/IF2Njq+KvvWWzbeFIc+T
vC276dhThnidJ8sWtv/JrWEy6Nh2/UAru6MthMZXe2vo0XFbUMPS0WEbqOHq
Yg8xpGNQS/j8lvUeKHlTFbdN6Nhk1ZGUEmINFjs5XIYs6DjnQZ+n7FEryKmT
Jgva0vE5o3Wp8/ct4Jup3j1zRzpelTLU265uBnIDbranXei4TLIjXT/dGMID
ji3XedCxMFvsQsFbQ1iXXG66w5+OBdm3xR1g+U8bodYZnyA6HvLJwv03deBa
8X/XroXS8drD/ucFJhowrE426Ayn4/AQxbBBw12g8Epsgv0YHec5rc976S8P
UfZamXrH6ZgeRgnTdJSCxmF7neiTdNxykXZ6ii4M7OGHhx+epuOE4QzuEDNO
sCOnnv+ZTMf13bURIWyLjLyMElWJC3S8sZW2W92mlzEm0TzolEHHf+bYhYRb
oxi7Hn45lZ5FxzrF3Setng4yYvDyjpardEwKPa4aL73MaP4g2M3Mo+Nx0S6R
Y6/WA5fHruMaRXS86Xb/nvPjwuA0ab4tpJiOjyi05c+0S0Hh8YPvb99j7Y+g
TzlD8jDBefro0AM6nveajPoStQvUcvM3C1bSsWL5sV6dIA1oqfl06HQdC//r
Ol4OHl3gNZkRqG+gY7aj1qrEbn1w7eN69q+ZjudyR2d/XTKE2/5yB3a8oWNK
9O1zvWAMU/N7uHzf07E45cZTw9emoJnk9eRaBx3/yx6TjdxiAQmCx907u+m4
cErptfNmK2i9lUPj6Kfj/dxNcW00axBUqyzTG6Ljyz1uqXKvrcGz+YND9Hc6
Tg3h9/JxtoE7tr/WHo7ScYEDb5pPPauffqcV/xyn4+DuSnHRSRvQCZO0lJii
4+0pjWZpv2zgDBHmnWbo2PTt1v3dj22gPX3fjfR5OuYZ/vh1k4UNiIgf3duy
TMe71icl5z2xBp8H6VNMJh335N7/d3XaCv4HIrJGfA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5790303081642723`*^9, 3.579030436685006*^9, 
  3.579030484125579*^9, 3.579030527076194*^9, 3.579031012580888*^9, 
  3.5790310682174463`*^9, 3.579034574085943*^9, 3.579036078254725*^9, 
  3.579036253902549*^9, 3.579036367780862*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "1.1920928955078125`*^-7", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5790303081642723`*^9, 3.579030436685006*^9, 
  3.579030484125579*^9, 3.579030527076194*^9, 3.579031012580888*^9, 
  3.5790310682174463`*^9, 3.579034574085943*^9, 3.579036078254725*^9, 
  3.579036253902549*^9, 3.579036368842445*^9}]
}, Open  ]]
}, Open  ]],

Cell["Tunneling", "Section",
 CellChangeTimes->{{3.5777348050636663`*^9, 3.577734806087233*^9}}],

Cell[CellGroupData[{

Cell["1D Tunneling Rates:", "Subsection",
 CellChangeTimes->{{3.5777373721865892`*^9, 3.577737377466237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numbasis", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OneDTunelChangingB", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{"V", ",", ".5", ",", 
             RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
             ",", "4"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}], "-", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"computePlaneMatrix2Well", "[", 
            RowBox[{"V", ",", ".5", ",", 
             RowBox[{"b", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
             ",", "4"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "4", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"OneDTunelChangingB", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<J (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"OneDTunelChangingB", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Log10", "[", "y", "]"}]}], "}"}]}]}], ")"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Log10[J] (Hz)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", "\[IndentingNewLine]", 
  RowBox[{"Convergence", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
          RowBox[{"numbasis", "+", "1"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
          ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.577737407344186*^9, 3.577737502773499*^9}, {
  3.577737548854089*^9, 3.577737647489102*^9}, {3.577737748974976*^9, 
  3.577737780221456*^9}, {3.577737997284216*^9, 3.5777381005647087`*^9}, {
  3.5777381342143908`*^9, 3.5777381594469*^9}, {3.577738208983036*^9, 
  3.577738212128584*^9}, {3.57773831179104*^9, 3.577738361127925*^9}, {
  3.57773840197786*^9, 3.577738402471366*^9}, {3.5777386903102503`*^9, 
  3.5777386932104073`*^9}, {3.577738738505402*^9, 3.5777387473385*^9}, {
  3.5777388152468157`*^9, 3.577738833001874*^9}, {3.577738941181526*^9, 
  3.57773894625285*^9}, {3.577738982238099*^9, 3.57773898315442*^9}, {
  3.579036947330117*^9, 3.579036958505705*^9}, {3.579037081328868*^9, 
  3.579037100259746*^9}, {3.579037217659397*^9, 3.57903722329909*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJw10EsoBHEcwPG/ZVnrsS6ruTFx8FgHjwM5/Mbr4CCvspvINl6x2JVVysGW
cuZIqU1bpD1sbpymiNSq1SKKGo88NnkueWzi95+fX03Tt/n/P/+ZEWVnS6+O
MZb/d+H9fzwP9kDUeCQtzOOsgxpzNS+rh9S7kD1j3s6UD6WyUpwwKFO5Qv7s
AT0/AY9NCTw4wpKmqcAKfMrj2z6tvwRFf3PGikJSfx/ONajidEOuEKT9d8Am
s0xLxh1pL4hzD4owLAYjCnlPwKz1ekvaGq1/BjaUo8L5BPmvwNjQRnb0BbT9
0b9m3sKLBtDOe8dW1xKsoHkfeLf5fQOgeZ+8T80joHnf2LeRdjt5Mb6v87iC
vB9saXm3lTyG7+m7WR2l9byZe8VFfhx2rWlulPbrsD8aBSedF48dqpO7yUvA
domWFvJ4M2Wrijw97yahi7xEbC+er3lJ/LxNt4s8A3beQvIAeby93eX95CVL
2v/qJM+IrVyMV5KXgt2U5O8gLxXbfvUlk8c7r6TaQV4atmWm5v9707El59gg
eSbsgKG4h7wM/r3Ni23wC54X5Lc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"J (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 4.}, {0, 22571.823265297804`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.08, 0.08}, {451.43646530595606`, 
   451.43646530595606`}}]], "Output",
 CellChangeTimes->{3.579037286880101*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQPm/YviebMEHWbNBIGd9vsW/d+8JQ3GP2mvkrA6
vytG0MHEGAQu23cLaLeoecPkb9qXmr0NPGAo6AAx7YG9zqbKoJ98MPWP7a8V
Pv2Q80DAIT0NBJ7ZCzU7lqxdKADV/9L+aUMHX6OngMPZMyDwxn7trwN+xg38
UPM+2KtqFE/IDOSFqv9o386Rob3nDAvU/M/2Lxp61Rdd3WQP0f/F/s5bo/iv
gRwHIPZ9s+96dmPWrItsByDm/bCvL8haw83JcgBi3k/7CWV5Np+rmA9AzPtt
36Ll/4ZvJusBiHl/7DdsVhCaac0NNe+f/eLlM4xkI9ih5jE49HgknXjymgmq
nsHBQaqwzkqBGWo+o0Peb/FFfz8wQfUzOQjdkLw9PRZmH7NDzfyUTR8ZWaHm
sThUii61ub2YHWoei0O9mfDcKAUuqHmsDus/ebhIHWOFmsfm0LRc+yTIfoh5
7A7Sva2+wtrMUPM4HOp/P77pJ8cCNY/DweBly8TgRJj/OR3m/JP7WvQSZh6X
w7m3FxTXsnJDzeN2aJebpOPEBws/HodzL8xKV4vAwofHYZfUbc9tl2D+5XX4
ds1heSkDM9Q8PoetsWYny97C/Mvv0MQlsHPRXRaoeQIOCuoPt0U8ZDsAAHOQ
Ebc=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"Log10[J] (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 4.}, {-3.4041005531530217`, 4.353566641136971}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.08, 0.08}, {0.15515334388579985`, 
   0.15515334388579985`}}]], "Output",
 CellChangeTimes->{3.579037286896674*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "4.76837158203125`*^-7", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5790372879378633`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.577738734127557*^9, 3.57773931488902*^9}],

Cell[CellGroupData[{

Cell["2D Tunneling:", "Subsection",
 CellChangeTimes->{{3.577738481458289*^9, 3.57773848545809*^9}, {
  3.577738535138115*^9, 3.5777385389622393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"100", "*", "Vt"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"numbasis", "=", "20"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"LengthofBox", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"TwoDTunelChangingB", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"Tunneling2D", "[", 
         RowBox[{"V", ",", "LengthofBox", ",", "numbasis", ",", "b"}], "]"}], 
        "*", 
        RowBox[{
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
         "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "2", ",", ".3"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"TwoDTunelChangingB", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<J (Hz)\>\""}], 
     "}"}]}]}], "]"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"TwoDTunelChangingB", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"Log10", "[", "y", "]"}]}], "}"}]}]}], ")"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Interwell Sep. (waist)\>\"", ",", "\"\<Log10[J] (Hz)\>\""}],
      "}"}]}]}], "]"}], "\n", 
 RowBox[{"Convergence", "=", "\n", 
  RowBox[{"Convergence", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
          RowBox[{"numbasis", "+", "1"}], ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"computePlaneMatrix2Well", "[", 
         RowBox[{"V", ",", ".5", ",", 
          RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", "numbasis", 
          ",", "1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.5777385408369017`*^9, 3.577738540837858*^9}, {
  3.577738590674645*^9, 3.5777386721006317`*^9}, {3.577738884439488*^9, 
  3.5777389333486834`*^9}, {3.5777389717375813`*^9, 3.577738971812562*^9}, {
  3.577739132189596*^9, 3.577739135889667*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{0., 61950.731518645196`}, {0.3, 55717.10081826792}, {0.6, 
     39048.43187939341}, {0.8999999999999999, 17108.314527454775`}, {1.2, 
     2420.144325380774}, {1.5, 3093.838570560557}, {1.7999999999999998`, 
     3083.2314669810357`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"J (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1.7999999999999998`}, {0, 61950.731518645196`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.036, 0.036}, {1239.0146303729039`, 
   1239.0146303729039`}}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739106876429*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    PointBox[{{0., 4.792046438922498}, {0.3, 4.745988510275514}, {0.6, 
     4.591603598013558}, {0.8999999999999999, 4.233207225936092}, {1.2, 
     3.3838412659174053`}, {1.5, 3.4904976494590914`}, {1.7999999999999998`, 
     3.4890061296759627`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"Interwell Sep. (waist)\"", TraditionalForm], 
    FormBox["\"Log10[J] (Hz)\"", TraditionalForm]},
  AxesOrigin->{0, 3.3838412659174053`},
  ImageSize->{590., Automatic},
  Method->{},
  PlotRange->{{0, 1.7999999999999998`}, {3.3838412659174053`, 
    4.792046438922498}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.036, 0.036}, {0.028164103460101862`, 
   0.028164103460101862`}}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739106893743*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.3328521251678467`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5777388941812897`*^9, 3.577738928552676*^9}, 
   3.5777389688952208`*^9, 3.577738999210435*^9, 3.577739107057926*^9}]
}, Open  ]],

Cell["\<\
Note, the seemingly periodic nature is (I beleive), due to noise/convergence \
issues.When the well\[CloseCurlyQuote]s are well seperated, they will be \
highly localized due to the strong nature of the potential. You could \
calculate the width of the wannier function to see if it exceeds .33, which \
is the current spatial resolution in units of the waist.\
\>", "Text",
 CellChangeTimes->{{3.577739149847639*^9, 3.577739263303409*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Sinusoid Compared to 1D Tunneling:\
\>", "Subsection",
 CellChangeTimes->{{3.577739324680344*^9, 3.577739333479993*^9}, {
  3.5777396107302237`*^9, 3.577739614729981*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Vscale", "[", "b_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"F", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"V", " ", "=", 
      RowBox[{
       RowBox[{"F", "[", "0", "]"}], "-", 
       RowBox[{
        RowBox[{"FindMinimum", "[", 
         RowBox[{
          RowBox[{"F", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"b", "/", "2"}]}], "}"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.57773970168445*^9, 3.577739710420622*^9}, {
  3.577741321569466*^9, 3.577741324641008*^9}, {3.577742029175948*^9, 
  3.5777420298921623`*^9}}],

Cell["\<\
This function will find the correct height for the sinusoid potential, so \
that it matches up with the bump height of the double gaussian potential.\
\>", "Text",
 CellChangeTimes->{{3.5777396306187*^9, 3.577739670410757*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"beff", "[", "b_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "bef"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", 
              RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}], "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "2"}], "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "+", 
             RowBox[{"b", "/", "2"}]}], ")"}], "2"]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bef", "=", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"x", "/.", 
          RowBox[{
           RowBox[{"FindMinimum", "[", 
            RowBox[{
             RowBox[{"F", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "1.1"}], "}"}]}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.5777399858764963`*^9, {3.577740048136257*^9, 3.5777400640776978`*^9}, {
   3.577740609628572*^9, 3.577740613226461*^9}}],

Cell["\<\
This function will find the effective interwell seperation. Because the two \
gaussian wells will interfere with each other, it will change where the \
bottom of each well is. This is important, as we need to be able to fit the \
wavelength of the sinusoid potential to the distance between the bottoms of \
the wells.\
\>", "Text",
 CellChangeTimes->{{3.577739886876011*^9, 3.577739950620606*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["(*Vary the potential depth*)"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"1.1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "100"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "basis", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"Rough", ":", " ", 
        RowBox[{
        "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
         " ", "V"}]}]}]}], " ", "=", 
     RowBox[{"100", " ", "Vt"}]}], ",", " ", 
    RowBox[{
     RowBox[{"depending", " ", "on", " ", 
      RowBox[{"waist", ".", " ", "For"}], " ", "V"}], " ", "=", 
     RowBox[{"700", " ", "Vt"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", 
     RowBox[{"states", ".", " ", "Converting"}], " ", "into", " ", 
     "recoils"}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "V"}], " ", "=", " ", 
     RowBox[{"46", " ", "Er"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}], 
    ",", " ", 
    RowBox[{"and", " ", "higher"}], ",", " ", 
    RowBox[{
    "depending", " ", "on", " ", "the", " ", "b", " ", "you", " ", "are", " ",
      "working", " ", 
     RowBox[{"with", ".", " ", "The"}], " ", "tunneling", " ", "rates", " ", 
     "will", " ", "start", " ", "to", " ", "curve", " ", "up", " ", "when", 
     " ", "it", " ", "stops", " ", "converging"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Also", ",", " ", 
    RowBox[{
    "if", " ", "you", " ", "make", " ", "the", " ", "b", " ", "less", " ", 
     "exact"}], ",", " ", 
    RowBox[{"it", " ", "works", " ", 
     RowBox[{"better", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bscale", "=", 
   RowBox[{"b", "/", "waist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vone", "=", 
   RowBox[{"Vscale", "[", "bscale", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bone", "=", 
   RowBox[{"beff", "[", "bscale", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "100", ",", "100", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "100", ",", "100", ",", "bscale"}], "]"}], "+", 
       RowBox[{"Vone", "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "bone"], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gaustunu1", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"V", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"computePlaneMatrix2Well", "[", 
              RowBox[{
               RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "9", 
               ",", "p", ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"computePlaneMatrix2Well", "[", 
              RowBox[{
               RowBox[{"Vt", "*", "V"}], ",", ".5", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "9", 
               ",", "p", ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Er", "/", "Vt"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
          "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"V", ",", "0", ",", "25", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sintunbu1", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"V", ",", 
      RowBox[{"SinTunnel", "[", 
       RowBox[{
        RowBox[{"V", "*", "Vone"}], ",", 
        RowBox[{"b", "*", "bone"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"V", ",", "0", ",", "25", ",", "1"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577740084166637*^9, 3.57774009740186*^9}, {
   3.577740167889823*^9, 3.577740177720357*^9}, {3.577740218025741*^9, 
   3.577740313481461*^9}, {3.577740409993051*^9, 3.577740418918713*^9}, {
   3.577740501943371*^9, 3.577740555440219*^9}, {3.577740644414019*^9, 
   3.577740659911413*^9}, {3.577740701958254*^9, 3.57774073573209*^9}, {
   3.577741124683537*^9, 3.577741149664588*^9}, {3.577741286224058*^9, 
   3.57774128683221*^9}, {3.577741326758973*^9, 3.577741343059312*^9}, {
   3.577741458801704*^9, 3.577741474971052*^9}, {3.577741523155912*^9, 
   3.577741581223626*^9}, {3.5777416222648087`*^9, 3.5777417139400454`*^9}, {
   3.5777417886450777`*^9, 3.577741828243169*^9}, {3.5777418673501463`*^9, 
   3.577741934878277*^9}, {3.577742003316772*^9, 3.577742011678339*^9}, {
   3.577742048489831*^9, 3.5777420743489227`*^9}, 3.577742294956106*^9, {
   3.577742325263598*^9, 3.577742336433667*^9}, {3.577742388020129*^9, 
   3.5777423885943947`*^9}, {3.577742530264449*^9, 3.577742565046805*^9}, {
   3.577742694313477*^9, 3.577742706217038*^9}, {3.577742772799679*^9, 
   3.577742797566413*^9}, {3.577742850521163*^9, 3.57774285170483*^9}, {
   3.5790378162630033`*^9, 3.579037831639633*^9}, {3.5790379471118927`*^9, 
   3.579037961257041*^9}, 3.57903813991964*^9, {3.5790382167720947`*^9, 
   3.5790382173369627`*^9}, {3.579038249165327*^9, 3.5790382519871597`*^9}, {
   3.579038284683404*^9, 3.579038285183272*^9}, {3.579038354472197*^9, 
   3.579038355148402*^9}, {3.579038390323279*^9, 3.579038391438093*^9}, {
   3.579038805992536*^9, 3.579038819115333*^9}, {3.5790410233573647`*^9, 
   3.5790410294701557`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 InterpretationBox[Cell["(*Vary the potential depth*)"],
  TextCell["(*Vary the potential depth*)"]]], "Output",
 CellChangeTimes->{3.5790392973918037`*^9, 3.579041030440936*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
98/8DwwS5c0=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
OXhb8ywL1lT2v9gRmIH+7/8L4P//v+B/lFSyew==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-1551.6416085255012`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5790392973918037`*^9, 3.579041030444642*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "58.518103815142965`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "17.78610577080341`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5.739853962232182`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2.11124583891469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.8617436567600393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.3805034043518047`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0.17859418474632255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0.08803684503699619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.04518695913334544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0.023996664004846388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0.013121138213667026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "0.007359137095788858`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "0.004220841009754465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "0.0024695297178857407`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "0.001470904481274659`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "0.0008903582793250231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0.0005469193524827374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "0.0003405008684616968`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "0.00021462534785211422`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "0.00013683684213867825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.00008817092961144707`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "0.000057376079161270516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "0.000037682285724274647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "0.000024962742624477648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "0.000016671298111507465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "0.000011219257570383459`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.5790392973918037`*^9, 3.579041057943013*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQPuxlemVRhaOkB4H+wXypxPYZsSCuUzOCy4dv/I
vbseUD6Hg/u0u37cETZQvoBD4eWDGx4uNoDyRRx+HXD5bquvAuVLOFj2h0X9
MZWE8mUc/Db/kTypJgDlKzg0HD+5a6IKK5Sv5HBTheWPhNUfewhfxaF1z4ct
m1Q/Q/lqDq4nZjWtSnwF5Ws47Kw02+6V/gjK13Lom/M28Na3m1C+jkNnOvPe
wp5LUL6eQ/T95f5OW09B+QYOYitE3r+pOQzlGzpU3FFf8XfSHijfyMGNXfzk
hOdboHxjh/+hvQbJXuuhfBOHS9Efm97MWg7lmzpY/IzXWXNxIZRv5vD1avXT
lQtmQfnmDhcOBh0Oq54C5Vs4dLKr/ild1g/lWzokTuoqLNdutwcAEW51Vw==

         "]]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQNpf85ZBjr5OkB4H+y1zgRY2Z00hPIZHHZkvnOb
81UMyudw0Fu8//aVxwxQvoDDZ+tXeemTX9tD+CIOyV65n7WibkD5Eg73HsTN
1rlzDMqXcVB64qY1tXMblK/g0P08dv8+peVQvpKDz7KSO1MmzYDyVRzOrJSJ
cbzfBeWrOUhUFwfNVamD8jUcAhsmJ973LITytRx0W/+t/mWVAuXrOEyfobAy
WzICytdz8JjccOOuji+Ub+BwMPxg7JPXjlC+ocNNMxWJFQFmUL6RQ16ixuaF
ijpQvrHDRU+Rtur3ilC+iUPtwWhOXllxKN/U4URYr+BjET4o38zhtXpr1cKD
zFC+uYPdvtw5j3R+2UH4Fg6VR3491Kr+COVbOjRvecXi3f7cDgCryW3/
         
         "]]}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {{0, 25.}, {0, 14.348814526551731`}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.5, 0.5}, {0.28697629053103463`, 
     0.28697629053103463`}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.5790392973918037`*^9, 3.579041058168146*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQPGxZd42S9wOkB4H+zzKmzyf1wRhPIZHLKKsoPu
O/BD+RwOyioxmdEHuaB8AYc3VecEZtexQfkiDqsEPZQb65igfAmHBpuD91aU
/LWH8GUc/r67kXg35BuUr+DwvUW8rUryPZSv5PBztVBvg9YjKF/F4bHLbyHd
P8egfDUH2XVGnrO2ndgP4Ws4lFuwvT2++SGUr+Uw9er9qKZ7b6B8HQcRhhDG
mxc+Q/l6DozXstw3C/2E8g0c1N+zaM2X/QflGzoEbnGdPKOL8QCEb+Qgl51x
YjUXC5Rv7PChbv1PnRg2KN/EYcLxr2oZczmgfFOHXULfLXzvckH5Zg5Wvyy6
LY14oXxzh5dpjy8v8eaH8i0c0mROu35eKwDlWzokBFiyhb4VPAAAE6lxfw==

          "]]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQP/z1/iZ3AXcIDwPth7Lm0//Z+NHcpncIgVCZCp
/frbHsLlcNg8oZNpy8vnUL6Aw7sjBZGnuQ/vh/BFHARul2fNev0OypdwCIoq
F3/X/xvKl3H4FsF7ZHEB8wEIX8HB6VIQS88xDihfySG/SmzGtmu8UL6Kw/Og
LNHOUEEoX80hdU658aalwlC+hsOB6EcWn+6JQvlaDqJn7NUvMktA+ToO6fv7
FdLFpKB8PQfR8jm7SyVkoHwDh+2Pr+dUcctB+YYOAW+sDfZ8kIfyjRyioj+8
W/VEAco3drC7xsMrf1oRyjdxqNs46bDaGiUo39Rh3dyDlxU7lKF8M4f4K5dS
UuNVoHxzh+BHD6fZGqlC+RYO/Fs+nn/HoAblWzooF6kf23Za7QAAzMZ0Ew==

          "]]}, {}}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0, -11.397878830256621`}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-11.512925464970229`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-6.907755278982137, 
         FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
         FormBox["10", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
         FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {2.302585092994046, 
         FormBox["\"\"", TraditionalForm]}, {-9.028018815182229, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-8.377431249041079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.986564940354067, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.706262975199909, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.487573774235079, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.308232845579262, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.156216638280637, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-7.024289095238088, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-4.422848629194137, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.7722610630529876`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3813947543659757`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.101092789211817, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.882403588246988, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.703062659591171, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.551046452292545, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.419118909249997, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.1823215567939546, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {0.8329091229351039, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.2237754316221159`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.5040773967762742`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.7227665977411037`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {1.9021075263969205`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.0541237336955462`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.186051276738094, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0, 25.}, {-11.397878830256621`, 4.45797895247061}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.5, 0.5}, {0.3171171556545446, 
     0.3171171556545446}}, Ticks -> {Automatic, {{-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-6.907755278982137, 
        FormBox["0.001`", TraditionalForm]}, {-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {2.302585092994046, 
        FormBox["10", TraditionalForm]}, {-9.028018815182229, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-8.377431249041079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.986564940354067, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.706262975199909, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.487573774235079, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.308232845579262, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.156216638280637, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-7.024289095238088, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-4.422848629194137, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.7722610630529876`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.3813947543659757`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.101092789211817, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.882403588246988, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.703062659591171, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.551046452292545, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.419118909249997, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.1823215567939546, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {0.8329091229351039, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.2237754316221159`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.5040773967762742`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.7227665977411037`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {1.9021075263969205`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.0541237336955462`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.186051276738094, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.5790392973918037`*^9, 3.5790410581994343`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.22973918914794922`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5790392973918037`*^9, 3.579041058201919*^9}],

Cell[CellGroupData[{

Cell[BoxData["bone"], "Input",
 CellChangeTimes->{{3.579038472176196*^9, 3.5790384724481297`*^9}}],

Cell[BoxData["1.4220946920684279`"], "Output",
 CellChangeTimes->{{3.577740140648861*^9, 3.577740179601384*^9}, 
   3.577740223462821*^9, 3.577740320869038*^9, 3.577740422611869*^9, {
   3.577740503956991*^9, 3.577740516013585*^9}, {3.5777405503582993`*^9, 
   3.577740568182604*^9}, {3.577740649489306*^9, 3.577740660647127*^9}, 
   3.577740708169272*^9, 3.57774074842931*^9, {3.577741139638466*^9, 
   3.577741150198987*^9}, 3.57774128881253*^9, {3.577741328287745*^9, 
   3.577741347296815*^9}, {3.577741459939106*^9, 3.577741478151298*^9}, 
   3.57774158270098*^9, 3.577741626556786*^9, 3.577741682147077*^9, 
   3.5777417158778763`*^9, {3.577741801563052*^9, 3.577741829011788*^9}, {
   3.5777418700410013`*^9, 3.577741880532897*^9}, {3.577741914295204*^9, 
   3.577741939674159*^9}, 3.577741975127586*^9, {3.577742012740636*^9, 
   3.5777420716465063`*^9}, 3.577742295677795*^9, 3.577742365962278*^9, 
   3.577742537845385*^9, {3.5777427871255217`*^9, 3.577742816838475*^9}, 
   3.577742852864826*^9, 3.579037764138275*^9, 3.579037862940428*^9, 
   3.5790379624343433`*^9, 3.5790381409938097`*^9, 3.579038219245119*^9, {
   3.579038257616482*^9, 3.5790382859219437`*^9}, 3.579038356181519*^9, 
   3.579038391936956*^9, 3.57903847301492*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{Cell["(*Vary the interwellsep*)"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{".9", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "400"}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Number", " ", "of", " ", "basis", " ", 
      RowBox[{"states", ".", " ", 
       RowBox[{"Rough", ":", " ", 
        RowBox[{
        "100", " ", "is", " ", "fine", " ", "up", " ", "to", " ", "around", 
         " ", "V"}]}]}]}], " ", "=", 
     RowBox[{"100", " ", "Vt"}]}], ",", " ", 
    RowBox[{
     RowBox[{"depending", " ", "on", " ", 
      RowBox[{"waist", ".", " ", "For"}], " ", "V"}], " ", "=", 
     RowBox[{"700", " ", "Vt"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", 
     RowBox[{"states", ".", " ", "Converting"}], " ", "into", " ", 
     "recoils"}], ",", " ", 
    RowBox[{
     RowBox[{"for", " ", "V"}], " ", "=", " ", 
     RowBox[{"46", " ", "Er"}]}], ",", " ", 
    RowBox[{"you", " ", "need", " ", "300", " ", "basis", " ", "states"}], 
    ",", " ", 
    RowBox[{"and", " ", "higher"}], ",", " ", 
    RowBox[{
    "depending", " ", "on", " ", "the", " ", "b", " ", "you", " ", "are", " ",
      "working", " ", 
     RowBox[{"with", ".", " ", "The"}], " ", "tunneling", " ", "rates", " ", 
     "will", " ", "start", " ", "to", " ", "curve", " ", "up", " ", "when", 
     " ", "it", " ", "stops", " ", "converging"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"bscale", "=", 
   RowBox[{"b", "/", "waist"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vone", "=", 
   RowBox[{"Vscale", "[", "bscale", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bone", "=", 
    RowBox[{"beff", "[", "bscale", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"x", ",", "100", ",", "100", ",", "bscale"}], "]"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"0", ",", "100", ",", "100", ",", "bscale"}], "]"}], "+", 
       RowBox[{"Vone", "*", "Vt", "*", 
        RowBox[{"100", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "bone"], "*", "x"}], "]"}]}], ")"}]}]}], 
      ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gaustunu1", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"computePlaneMatrix2Well", "[", 
             RowBox[{
              RowBox[{"V", "*", "Vt"}], ",", ".5", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "13", 
              ",", "p", ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"computePlaneMatrix2Well", "[", 
             RowBox[{
              RowBox[{"V", "*", "Vt"}], ",", ".5", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "/", "waist"}], ")"}], "/", "2."}], ",", "13", 
              ",", "p", ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
        RowBox[{
         RowBox[{
          RowBox[{"Er", "/", "Vt"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}], "/", 
         "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", ".4", ",", "2", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btable", "  ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", 
       RowBox[{"Vscale", "[", "b", "]"}], ",", 
       RowBox[{"beff", "[", "b", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "2", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sintunbu1", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"btable", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"SinTunnel", "[", 
        RowBox[{
         RowBox[{"V", "*", 
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"waist", "*", 
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{
           RowBox[{"btable", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], " ", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", 
       RowBox[{"Length", "[", "btable", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gaustunu1", ",", "sintunbu1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Gauss\>\"", ",", "\"\<Sin\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<V/Er\>\"", ",", "\"\<J(Hz)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Convergence", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<The convergence of basis states E(p+1)-E(p) is given by:\>\"", ",", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         RowBox[{"numberofbasisstates", "+", "1"}], ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", ".5", ",", 
         RowBox[{"1.5", "/", "2."}], ",", "LengthofBox", ",", 
         "numberofbasisstates", ",", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.577742728256281*^9, 3.577742738397813*^9}, {
   3.577742862959629*^9, 3.577743050022099*^9}, {3.577743115185073*^9, 
   3.577743123559214*^9}, {3.577743156101325*^9, 3.577743157042273*^9}, 
   3.577743560537919*^9, {3.5777436044745607`*^9, 3.577743653057329*^9}, {
   3.577743702416944*^9, 3.577743805452799*^9}, {3.577744223100657*^9, 
   3.577744224000914*^9}, {3.577744259425549*^9, 3.57774426044716*^9}, {
   3.579037563905545*^9, 3.5790375971760473`*^9}, {3.579038924766767*^9, 
   3.579038934353497*^9}, {3.57903897690241*^9, 3.579038984446568*^9}, {
   3.579039014666923*^9, 3.579039019203413*^9}, {3.579039696570127*^9, 
   3.579039697156952*^9}, {3.579040289883266*^9, 3.579040292389792*^9}, {
   3.5790404892701387`*^9, 3.579040492188504*^9}, {3.579040535528767*^9, 
   3.579040535884368*^9}, {3.579040809585414*^9, 3.579040813432428*^9}, 
   3.579040909666072*^9, {3.579041069652031*^9, 3.579041074778075*^9}, {
   3.5790411388549023`*^9, 3.5790411586805897`*^9}, {3.579041252183867*^9, 
   3.579041252582384*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 InterpretationBox[Cell["(*Vary the interwellsep*)"],
  TextCell["(*Vary the interwellsep*)"]]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9, 
   3.579037510725956*^9, 3.579037566333042*^9, {3.5790389994129744`*^9, 
   3.579039020222887*^9}, 3.579039698951249*^9, 3.579040069967304*^9, 
   3.579040293655694*^9, 3.579040493704454*^9, 3.579040537892115*^9, 
   3.579040814815241*^9, 3.5790409105998707`*^9, 3.57904107629431*^9, 
   3.579041160128916*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwUl3c8Vf8fx+297pDRkBEySpJEOrcSURkZlayS7JEdIrKVCrmuJCNFSaJS
uOfzTkjxVUn2TmZG9va7v7/u43U/533e85z380he9jzrwMLExHScg4np/7/2
r+5NbW6KwK3ii2fM35tXkFfFZbXWROBGPU1WO/JcRbVunpX/kgjI29qjZr8L
FbI9H778nRaBFY+wU4kt1hVjfL9z2/tFoMzUQVsj6EqFl8uB86WfRIAt3j1X
VdunInRXB1yNEQGHxcSfkY33KtIfSif9JyACoZlvJHc8rKt43BvracK9BS6p
RGy7FEKp3PLd1Gi3sDBE7Bl5df9nfqVYo1yrK0EYSoMX1A6mPK/c1rBqU8Qv
DLZTNztkfAsrJetyPfZzCIOAZ3LMmTPFlUowe0d7kQzY39+PWK+8rdyLfxa+
OUuG3fVHugmD7ypVKx8+qpoiQ+8do7EPoe8rD74//lJvhAyqbepa2ryVlceK
kxtM2slwoc3igahNVeWZ/N/jF7+SwU6GXrWFp67yfNZ+3qsVZJg7b6ma4vmt
0iajU3y8lAyalDq/gcUflVfSbil4FZKhkBqSaRHXXOmSoqg5/4QMt5bkgoMC
Wis97/3UD3pEhpCE+Ya93zoqfW8HX9h8QIY4uazJrY97KoNipZ0jE8nw5aik
9Uxwf+XNyPpA7hgyGJMXP2ou/K6MvukTmxhGBjXVsIeyX4Yqb4dsTSMFksG9
0sp+nGms8n7gp2dpXmT4dPjPk6svJipT/Kl7O93IUM+nVhRWPFWZ6utatt2Z
DBy/N4wV/05XZniRPudcIoOhKl3tv9OzlY89hg3/WJOBt1uOgy9jrjLHraJF
zpIMp1WSFejMC5VPXO7auFiQ4YjvA3GrsMXKZ072Q4VnyYCnurLc2LJc+fzq
QY8pQzKsroWea6xbqSy8wruw7xQZoq9ExYinrVWW2JWylx0nQ+DtT/9eGzDR
39rE3FnGyHBUqfzQF3tm+nuri8KHD5OBy/qY8/27LPRyy72PQjXIkJLQj+l8
Y6XTz7Pu+qhGBiMs4dNeGXY6WLQWsu4jQ87L9fiyuxz0KrMXarrKZGB1/b7N
gsRFrzM21anfRYbgYyVHtJ156QppxLxKSTIUV9bF7XPip9/u/cFetJ0MM52O
Lm0JgvRJ2ftXH4sx6mWgE+MwLkQ39jD+fE+YDIl3y6JGdhHpJW8F5SMIZHA1
/FH7z59EJ683xvrwk6FMht1OtI9Mb0s4Y2DBTgab/Q+vFTCL0jV/8r3QYybD
HvGLsa10MXqGeAPvoXUSXEkVCy6ibaVvXEpwU1gmwejbxkJH6na6XYHBf1vn
ScD3123Y/oMEvWqaew//PxKEcIazizBL0mU0viRu/CVB1eNr80c0pegjtXrG
/YMkKHGNqoBpGbqBAOfrpj4ShPXUcJtck6UXmtcSqrtI8EnqCk7ml6cLPIry
fttGgraM+/v/1eymew3q/HzaTAIFZU3yxCNFepMim1radxLwT8pmqFKV6Wo+
n1LiGkiwC65uEN7spS8xH7NwqyZBZkzIYYt9qnRLfeYyayBBu9ietsmQ/fTK
eyBiVEmCmpu08P961eg72sICKe9JUOd/QT3xojr9pgTWvu8NCR4p0ZhG/x2k
D1zdOCRdTAIpMaG20ieH6DpF9HRyIQk6zzzPGfTTonNpH7ZazCVBR9meY2vB
GN0lcrVy5DEJ7B8/1PzYQaE31Jdv73hIgly1Z0oXeI/R95CCQuupJEictdeQ
MjlOv2d5qLcymQRL/F+k7r3Uoc9kL2FFd0nwZYdL9V4pXbrZaFnW4wQSTO+w
Lc0v1qOLBqpfjrhFgsO6v3TMpU7Rg9B8lU8YCc68bDLy4D5D7+J4K+0QTAJp
tv7He4lG9COGvpEWASQ4uW8cXXtsTM96sP+Png8JjEcD8PU6EzpL98yJQ54M
f/5nQrk5TelXZEqeKriS4A937MaSpRldvlTFid+e0f9n6o8SDM7R41em6jZs
SDD4mzDgM3qe/vfoq93Tlox8qm5n//fEkm4Y5xHfb0ECR7Zkw8hQK3rxd+Xx
prMkGPqkvJEbaEMnik6cqjYkgZm4e/VLAzu6r21h4VsDEkR+dHUMc71E15hU
8Eg7RgJZM4+xu6P29PQDY41xR0iQveV1SLy+A30tpGBvsCYJ5h5dlPL7eJVu
U+10z02dBIQ0LvLYWSc68Mr/s1Ylgcnf5tuZm850KdNhE6M9JNCz+C/uyhdX
emT60xKKAmMeC7/kKZW400/u3uUrLUWCRuu6iw/mvOhWnJMyljtIMCC7NhTO
7U33+vPu1z1xEny4ORbbvNeHHvkpLPrzFhJsm8rNz3LypVOzTx7cIJKg+dJ2
N563fvTnYYQRNUFGPzMM3+ttCaDj1h1prrwk8OK1oGTfCaQPibmttLGSgHec
nKNSHUxfWVR7IcjEsE9cNLOLvkEXaFm/qLtGhPCrywk5V8LoUm9q+W4sEUEn
IEH0fPFN+oGku/TSOSI8kLSw34OH0096nfcYmyZC2z339fquCLqVoaSE5AQR
shpUCw7yR9IjeUpvJv4hAiF3aO/gs2h62kjwvpp+IuyZa7KMIsfSC2t1Bla7
iWASlYqVUePo8IQ/WbWDCF48C1Htqgn0nxEtx51biPDdjbvPbvg2fcju8dzj
JiIYCb/TbXuXSF854pTX0kiEh4/2y1wzuUeXWl3m0PlMhJO/NEw6XZPo6u1V
ZUGfiKA9Jeghk5RMNyhLcHqNiKCgt2B882sK3eaBmdhIBREM3fRcOLak0r19
tn/d8Z5h31WNevyo9GiToSDzN0RwPTrx+9h4Gj197yvF28VEOHTPbzU0IJ3+
cZxyZzmfCGVLL9aIHY/ozV+4j6jkEaE+T5DoUvqYPvKsafJqNhEClUsWGpqz
6GtRDx8/ekQEiYsRkXt6s+lCV64YN9OIsDvDYP7Tcg5d5pgyM28qEcz3kM9G
7XpC19i58PpoEhFa99EOXLfPo9t1xZBexRPhb+nxMTvxfLpvuXH1n2giJJtn
PCh5UECPTRPz23aLCPyl0c5zci/oGf4Du0zDiHDpEsXzVlMh/ZXZi5a4YCKs
LHYI/kgtolep+sZAAKMeCtclVLWK6S1C2hqLPkR470m66H7oNX2joZF2xY0I
XSeSCK+vlNKJL6gGD52IcN0tBktNfkOXjbNb/XGFCGwP7sw/a35LP3Nixgqz
JoJNUPeO5/ff0+2kK/j9LxDhyKYCPiVYTvdljsQLzRnzJLYuIpBXQc+gC+8U
NySCR0PxXV0xRC9+2PPd2IAIfFW6PE9vAL36+rPwGF0i1G23KmO+8ZE+fuDQ
77kjjHrrqF1QfP6JvkFiSVHUIsJ/y2dSG9qr6cSZrzqXDxKhWaS+wmNrLV2z
yOrpt71EGGnzbFloq6O//CWk8laRCE4CqRd2BX6l71yv/pAuR4ScX/JRC/sa
6Mky14/flCbC8a8HpkS4Gukcp5X/c5Agwg77ixUma9/o1336LU5tJYLweb2t
Olw/6H/TH/SpiBChn55XYyPdRG8aXZ9dFSDC5IF9rUP3muknCCU3+nmIoMnd
6V/w5xf9vcZVzs8cRFi83sAtatxKV7QTv1/Iwnhe8qnzt3+00TNjGsWTNgjA
fICvJcC1g054FfEkYIUAUxIrVTYSXfTIFvU91gsEMIgiFfROdtNddj0+Kj9J
AE7asufP2T5692nTev4xAtB4jpVb8AzQjX05zWf/EKA/aHLUSfU3/dPDip62
fgLsez0qvtN9kK7+ydMJ7ybA6dpRvdyKP/SCMemZ3HYCpBivGyhKDNO3EduC
434R4AWRaYKVNkJnuUS5a/YfAUxtZJ5p/Rqn+8XOiWp+IUDczKbjw/QJ+sir
/ByJGgKw274qMgqZol9stVJi/0iAG9R3iTz4NL1xQ+jdWCUBHlr3Rvf/949+
VLYG+/6eAAXJF+8/nZyhvzlz/cvbNwSojVG+fllyjp6e0d91s5AAwmx3j6h+
XKDzVz+4ejWfAHXxPeXPVZboN8f1p089IcCncu1zf94t02eJG9f3ZRHglGH+
0nHzVfpVzRJWkQwCdD6MSNbmX6e3X7p6Z41KgB05sQ62fRv003HiIgPJBPB4
1bBTzokJV22LUHiZQIBX3xxON0Wz4Hmb6m+SYgiQ1Nqr7PaKFReVG9cOvEUA
S6XvHppjbHiC4ePP1mEEUGiqjDDX4MA3/ExNjgcTQCvE+spQOid+7RFnp3wA
ATYzQ+PkSNz4YHXFFQEfAsyuZQ465PDgX0kyge0uBJhs3DvkxSuAa2u1MaOr
BCDV7kXaI4J48eXbCU8uE6Doa7YJ+z8hXDqeIhxvQwBHXJiov07AU1/PZXpa
EqDRv8K0WYyEc7fny5tbEEAmtHsqU4+MhzBZl2ieJcCyjIPyqxhh/LJRTQ27
AQHUhORrOI6L4r/8rxuNnyDArfv/PJ+DGH4yU7n9+1EC8DpEHzE034rvmXjw
9+EhAjz577qY2JcdeDbZwD/8ACOeI/Z+6eY7cfLhjc2r+wjwYF7bdoe5JL4S
f5WkupsAMxUb4ysR0nhRpGeNwi6GvxfN7QEvZfDLoYEB0pIEUGl/vtN7dBf+
9Vp8J1mMAKN7ydPTNHk81DX5Dr8wAbD979xzhRRwVYcMjINAAPGf+xpVHini
6eeLche5CPCsofLM37U9uOHZMvNpNgLok725nJxVcJbTwDnKRIB7o06b65f2
4S5Yk2vHkhCQCt5raoXtx3cc6tz+c04IMo7+3X8/Tw1vUh38Vj8tBDnUn0Oj
XQfwQ7IL++kjQnDq1WpUfIQG/ldi88/bQSFg/TjwaWTmEJ4lxpVW1CcEyYYq
/QGBWjgXv/ja4zYhOBwUqL75+QheySFdlNYsBNIhMfW6BhTci0nJ7v53IRjs
lQunax/F22a1qyPqhKDMY9NMw+g4fntC1z+4WgheOtkatXjo4JRhI3lfEIKP
8t0FbZkn8PyOS7cd3gvBT537O9H+k7hVs8sRmzdCYOFTsyUzXR8XavSZtigW
guy9OZFtwqfwwI9RZifzheCrox7f3BlDXKkikePoEyEYeab+JJfDGO97Q31/
KEsIUvm6lidmjPGT+QXbFNOEoILef15j7iy+ll3SKJ0iBAfbDd+X85jhxQ8r
bm67JwS7+ocjf6uY4yJ3/xvkjxWCtGG+3CevzuFfY1tSOSIZ9Ug6rybGcwEP
jeg9uRkmBLn1GgsTAZb4kN+/wukAIXitOiDNmmSNp3uu2Iz6CMFNuT2ciRRb
3NCZlTDgKQTkKsevMbfs8HdWwn4/HYVAnbQz5bHXZdzFYodcg70QXGZuO9Mb
bI/vMJZrr7YVgqjm9PK/D67g0ccPab87JwTXrr+aeLV8FdfUPjZVZCoEuzMJ
8ztPOOGT6qeynxkx6s+Nm7fmOOMWCtbsND0hsFTe6BCiueE8MlfL7h8Xgg9S
J8Xf7PfA8e2ezvGYECjeJZ3qGfTEZQnh/wUfFILV/aK1vz5fwzt44sN89wuB
b1PH0FyNN57IlrzPfa8QbD9RFzv7wwefX3zywEZOCPRVmR0St/jjlrFl1Axp
IZhUjqjcoRWAg+hXWocEQ5t9+xvsEYjfPjT1yEJUCPJTBiyS2ILxmS/MWSlk
IahfsKN0O4Xg5yzJOU1CQqDG8vuIWO8NXCr40FNDbiGwOhIuHxxxE4/lPZ1/
m10IHkdPjmtfDMcnH9o8/8rMiF9jUKXnSATufZ3T+s6cINw2yJzvlo/Ej6Qr
XeKeEISQFouzl1SicO4KE4eoP4LwpfZlDM+JaDxr7aH7jRZBcNmJZTukxeJu
2z9eW24UBPO6Gz3+bXH4wSNDfn6fBWFW+fkld/kEvDFMJdT9vSD47H7CJr96
B0/PMo8YLRYEt4O9b5LC7uIOH4OiHQoEAeNyNE9LuIevsdQkWqcLQnDjz7yB
o0l4nfRYUnuSIFieedxxUTkZT9YRpJonCALdIHjeRSYFV4i+8PhMiCA4/viX
Gn8wFZ9/Gpr7xVcQhLZ79tebUXH4nPvshLsgeOxXP8h+Mw0/xz35SttGEE43
K5URWR/iUgqkNx8sBEHgbN5VM6sMfNJA4/0BI0GAkV9DzrWP8MjbEaBMEYTI
zg5xWacs3Pjls+oCDUF49F9Z2LBGNr61saFu1z5BGOgA9S+kHLxEUOTHdilB
qBmd1u0ezcVDVQ7/ookLwuJqUZ3w0BNc3+RSuzCJcf9jK17Bk3l4X9KLfn42
QUBRMgckZPPxwtLvf+LWBKDM0KYr1aIAD2ieH2WfF4Bz+0StXj14jgtsocys
/xGAwz8aC2OOvcQ71B0WrvcIwEdWtl346yI871z8ynyLAPCd+EU/KlaMH6Y1
s0x+ZlzvHpjE9u41zlm+zOECAnDGwdlKJ7kEb+rYwTv0XgC4Hysf5w0uxZ23
OZN6CgQgZzhcV87tLa6mnShimSMAPOd+icX4v8OZbEq3tqQLQIeA6eKtO2V4
6uN16cYEATArCEsu+v0BvwxS8gaRAtB4XHenuEwFrtyvp1QbIgCt7pxjmT6V
eLVUkhruLgCi+jyf4RjCDVvujFEdBGDQrPJukjfgbXFxWdesGfnbR1e5GX7E
/07f5Nt1RgD2M93WOiz/Cfd/ElK1oSMApVsN403lqnGm84GBbYcFYJdyfuK5
/TU4CXkOJigJwJuXU5YffD/jGd6u6Q4yAkA78qTG90UdLivraIxtE4BtNzOH
2/59wTXv2FTO8ArA0OeGkbfFDXg1xdK7gVUADM06/vup0IgbzpnLP13lB+a2
J+Z/yr7hly+eSbkwzg/N2ZOlRjE/8L8C+gb7f/ND0rePeyXdm3D/Kh0m/k5+
aDwg6ulo8xOP333YDb7yQ9uZ5sZ7Dr9wcvdBqfQqfrjos6H0JKQFz7y3v82n
nB9q30853sluxV8vKujIPeeH9alLRskiHbjmC9kVphx+mMjalNzu0olX20gV
d9D4wSjobtu5/7rwthqxbYlx/KDPMqe79Usvfvm6cJNjOD/MGV3qL3zdh/9V
IsQevc4PrfIDnzpi+3GmFK65OSd+UJrqYTt77jcer8f2vNGOHwpS3COyjQZx
8uqmbf55fnhrc9eBz+wPLn95sf7iSX5Q+PPzYtStYbxEeDb8AIUfgjF8reHV
CH74y+RBQQ1+oLGc+pA7NoobqQzlVsnxQzHbBfNPiX/xtt/9FzIk+GGz1rkn
YnkCv0ztFvQX4QeTHwG3kd8U7r/RHLybkx8+vZMz3Tz7D2cq+b6PdZMP/izH
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
+L/5IPD/80H+B7TNxOI=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
wAoi3nfUeBJgtly/yqt+AQs18+wTCSOACH2du8/vBazqQ6tSMPKVuelZMf+x
BSwttM2LIhb1Q6tyT0OoFrGAYXu2y4kEeHmczyTh7CIW1iLQdC4fvf7t0N+i
D4vYa5vzz990E+DZtllyad0ipvSjIZuA7t9G3XaDjx2LGPOha0efjxFAfrKu
+MvyIvae9s/VukUCcIq99f0pu4TNXtLsHWIkQmOaF/tszhJ2eT01T/ksEcjn
578ulC1hyXd1RKc0iCCPOXqu1C5h30+VnHyhT4TsXvM/2yNL2NnK8HuMZkR4
xK/6kvHgMuZ0xXls1QO9Pp5J4QhpGRPjZ4xXfkOEO8PBU1I5yxhr1FeVunfo
/XJ7L2TLlrFznFHkmh+IwNWyQCHfvoyNyl3REakhwhzz728a7CtYpPypFPU+
9PrQdOsbT1awe4/zbI2YkX/eORfkkVawGoNjYgacaL//o7C7nLuCSXSWlUrv
I0GU9K+k4MYVLOBigF8i2t892yl+ZzOuYlKpTgmUZ1B+7TWLzP23ip1M2PJn
Qv33pHiS+2mpVWxnL0dpSQ3l+cPjHPV6qxj71SfsV1C+aAjf0P8buYpdm3fN
s7UkAZm+bPKxlFWsKT0hWAP1/x89tye981cxM+G8OHI7lCeN8WEMP1Yx8aqh
mR0nEkwsWf826l/FRnqbBVVcSZAhcFQ0aW4VC1d10/73/BTP3Zqvkmxr2Jgx
MZEM5enPxFgOd6E1rFTVrysBeSm82uJ6hewaFjxCo7aH8ld99kgh1bk1bCn6
k7sSyudd3tVdvYtr2JMeOU79wH/PN1XpJ1xfwz7JH2iUDUKevB2V3Ht3DXtn
Zq43jvJfKuHalEjgGlYYt3XJNRR5qVL0jEvcGiYzYZDRhPyQNrEYVpqxhrUe
WtpbR764xoH/3i1awwoSO5XWkT+4lCJENb+uYe7DOrL/13Tm8VB/UR8f+zC2
2UPJUrJGQrbMSYrsW5S1pGyRX0VZSpZQlqQyM4UsaUMRbaJukqVS2SmpJClE
2izhufO8nufP85r5zvfec++5n/f53vs908Ljpd3uEac6/rLMrP/eC8E8k3pK
uaHn01+WtMpU7Xtsm9+foCj8+ssiztaorcQ89G/wwc5AwWlWUyDrf3npjnhq
RQVtmhU23b9kBbbDDVwXp1dMs4Su7LzwjlePYYeC/Qb9adYqB1JKYDrvedlY
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
2hTz3t/7v/8ThP//P8H/AZruoCA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-6, 6}, {-1635.308549211102, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9, 
   3.579037510725956*^9, 3.579037566333042*^9, {3.5790389994129744`*^9, 
   3.579039020222887*^9}, 3.579039698951249*^9, 3.579040069967304*^9, 
   3.579040293655694*^9, 3.579040493704454*^9, 3.579040537892115*^9, 
   3.579040814815241*^9, 3.5790409105998707`*^9, 3.57904107629431*^9, 
   3.579041160132922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.579040511372492*^9, {3.579040804251429*^9, 3.579040832737555*^9}, 
   3.579040928622374*^9, 3.579041094497387*^9, 3.579041236138185*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMinimum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindMinimum/lstol\\\", ButtonNote -> \
\\\"FindMinimum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.579040511372492*^9, {3.579040804251429*^9, 3.579040832737555*^9}, 
   3.579040928622374*^9, 3.579041094497387*^9, 3.5790412363548203`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{}, {
        RGBColor[0.24720000000000014`, 0.24, 0.6], 
        PointBox[{{0.4, 0.0005545771894504216}, {0.5, 696.4900415282724}, {
         0.6000000000000001, 0.000788732002773933}, {0.7000000000000001, 
         32.900562890772214`}, {0.8, 0.0020088018195648606`}, {0.9, 
         0.0007517601901439049}, {1., 151.8522309459321}, {1.1, 
         0.0005422532519070789}, {1.2000000000000002`, 410.19628402045333`}, {
         1.3, 0.00008626756280339892}, {1.4, 0.009267601032593713}, {1.5, 
         6.14721701843197}, {1.6, 0.0008503516904906465}, {
         1.7000000000000002`, 905.0215647564179}, {1.8000000000000003`, 
         0.00014788725052011244`}, {1.9, 0.23278685625620033`}}]}, {
        RGBColor[0.6, 0.24, 0.4428931686004542], 
        PointBox[{{1., 7.977934082072088*^9}, {1.1, 382.4222616076792}, {1.2, 
         158.7533874056493}, {1.3, 76.11886227897152}, {1.4, 
         33.60120455053031}, {1.5, 12.556282859957998`}, {1.6, 
         3.951741605183419}, {1.7000000000000002`, 1.0793719124132075`}, {1.8,
          0.2628615680387928}, {1.9, 0.05807617437757985}, {2., 
         0.011777208853237566`}}]}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, AxesOrigin -> {0.4, 0}, 
    Method -> {}, PlotRange -> {{0.4, 2.}, {0, 956.0545263789129}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.032, 0.032}, {19.121090527578257`, 
     19.121090527578257`}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9, 
   3.579037510725956*^9, 3.579037566333042*^9, {3.5790389994129744`*^9, 
   3.579039020222887*^9}, 3.579039698951249*^9, 3.579040069967304*^9, 
   3.579040293655694*^9, 3.579040493704454*^9, 3.579040537892115*^9, 
   3.579040814815241*^9, 3.5790409105998707`*^9, 3.57904107629431*^9, 
   3.5790412363674707`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {{}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         PointBox[{{0.4, -7.497304555360828}, {0.5, 6.546053495240074}, {
          0.6000000000000001, -7.145083961771475}, {0.7000000000000001, 
          3.493489766766979}, {0.8, -6.2102168443243855`}, {
          0.9, -7.1930931809578365`}, {1., 5.022907883158165}, {
          1.1, -7.519777411212886}, {1.2000000000000002`, 
          6.016635786651498}, {1.3, -9.358056896075833}, {
          1.4, -4.681230721181308}, {1.5, 1.8159994620734272`}, {
          1.6, -7.069860540533888}, {1.7000000000000002`, 
          6.807958771876163}, {1.8000000000000003`, -8.819060395343147}, {
          1.9, -1.457632024099328}}]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointBox[{{1., 22.79994532793273}, {1.1, 5.946525394984043}, {1.2, 
          5.067351975533492}, {1.3, 4.3322960959023185`}, {1.4, 
          3.514561916044737}, {1.5, 2.5302211665977326`}, {1.6, 
          1.3741563944442492`}, {1.7000000000000002`, 0.07637930938265446}, {
          1.8, -1.336127742645935}, {1.9, -2.8459997787896154`}, {
          2., -4.441589068286801}}]}, {}}, {}}, {}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {
      FormBox["\"V/Er\"", TraditionalForm], 
      FormBox["\"J(Hz)\"", TraditionalForm]}, 
    AxesOrigin -> {0.4, -9.358056896075833}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Part[#, 1], 
        Exp[
         Part[#, 2]]}& )}, FrameTicks -> {{{{-9.210340371976182, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["0.1`", TraditionalForm]}, {4.605170185988092, 
         FormBox["100", TraditionalForm]}, {11.512925464970229`, 
         FormBox[
          
          TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {18.420680743952367`, 
         FormBox[
          
          TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm]}, {-4.491841500681089, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.803168600516064, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3991993789994823`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.1122660898099426`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.8895720777256004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.707550326060559, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.553613847797791, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.420243136462278, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.4159137783010487`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.104586678466073, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.5085558999826545`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.7954891891721947`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.018183201256536, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.200204952921578, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.354141431184346, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.487512142519859, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {9.323669057283185, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.01234195744821, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.416311178964792`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.703244468154331`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.925938480238674`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.107960231903714`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.261896710166482`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.395267421501996`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.231424336265324`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.920097236430347`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.32406645794693, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.610999747136468`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.83369375922081, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.01571551088585, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.16965198914862, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.30302270048413, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}, {{-9.210340371976182, 
         FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
         FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
         FormBox["\"\"", TraditionalForm]}, {11.512925464970229`, 
         FormBox["\"\"", TraditionalForm]}, {18.420680743952367`, 
         FormBox["\"\"", TraditionalForm]}, {-4.491841500681089, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.803168600516064, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.3991993789994823`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-3.1122660898099426`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.8895720777256004`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.707550326060559, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.553613847797791, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {-2.420243136462278, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {2.4159137783010487`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.104586678466073, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.5085558999826545`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {3.7954891891721947`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.018183201256536, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.200204952921578, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.354141431184346, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {4.487512142519859, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {9.323669057283185, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.01234195744821, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.416311178964792`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.703244468154331`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {10.925938480238674`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.107960231903714`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.261896710166482`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {11.395267421501996`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.231424336265324`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {16.920097236430347`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.32406645794693, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.610999747136468`, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {17.83369375922081, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.01571551088585, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.16965198914862, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}, {18.30302270048413, 
         FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
          Thickness[0.001]}}}}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, Method -> {}, 
    PlotRange -> {{0.4, 2.}, {-9.358056896075833, 22.79994532793273}}, 
    PlotRangeClipping -> True, 
    PlotRangePadding -> {{0.032, 0.032}, {0.6431600444801713, 
     0.6431600444801713}}, Ticks -> {Automatic, {{-9.210340371976182, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm]}, {-2.3025850929940455`, 
        FormBox["0.1`", TraditionalForm]}, {4.605170185988092, 
        FormBox["100", TraditionalForm]}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {18.420680743952367`, 
        FormBox[
         TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm]}, {-4.491841500681089, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.803168600516064, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.3991993789994823`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-3.1122660898099426`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.8895720777256004`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.707550326060559, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.553613847797791, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {-2.420243136462278, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {2.4159137783010487`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {3.104586678466073, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {3.5085558999826545`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {3.7954891891721947`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.018183201256536, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.200204952921578, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.354141431184346, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {4.487512142519859, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {9.323669057283185, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.01234195744821, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.416311178964792`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.703244468154331`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {10.925938480238674`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.107960231903714`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.261896710166482`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {11.395267421501996`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {16.231424336265324`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {16.920097236430347`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {17.32406645794693, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {17.610999747136468`, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {17.83369375922081, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {18.01571551088585, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {18.16965198914862, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}, {18.30302270048413, 
        FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
         Thickness[0.001]}}}}],
   TemplateBox[{"\"Gauss\"", "\"Sin\""}, "PointLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                 ImageSize -> {10, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], "}"}]}], 
       "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9, 
   3.579037510725956*^9, 3.579037566333042*^9, {3.5790389994129744`*^9, 
   3.579039020222887*^9}, 3.579039698951249*^9, 3.579040069967304*^9, 
   3.579040293655694*^9, 3.579040493704454*^9, 3.579040537892115*^9, 
   3.579040814815241*^9, 3.5790409105998707`*^9, 3.57904107629431*^9, 
   3.579041236405751*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"The convergence of basis states E(p+1)-E(p) is given by:\"\>", 
   ",", 
   RowBox[{"{", "0.0007344484329223633`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.577742981939505*^9, 3.5777430196753683`*^9}, 
   3.5777430509339867`*^9, 3.57774312545063*^9, 3.577743158073464*^9, 
   3.57774371555696*^9, 3.577744224743462*^9, 3.577744261560507*^9, 
   3.579037510725956*^9, 3.579037566333042*^9, {3.5790389994129744`*^9, 
   3.579039020222887*^9}, 3.579039698951249*^9, 3.579040069967304*^9, 
   3.579040293655694*^9, 3.579040493704454*^9, 3.579040537892115*^9, 
   3.579040814815241*^9, 3.5790409105998707`*^9, 3.57904107629431*^9, 
   3.579041236408567*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions\[LineSeparator]", "Section",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572127540901985*^9, 3.572127543317565*^9}, 
   3.575817698221333*^9, 3.5777145227096167`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "h", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "M", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"1.05457173", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "34"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", 
   RowBox[{"1.443161", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "25"}]]}]}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574185133439817*^9, 3.574185134190959*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPsi]", "[", 
   RowBox[{"n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   FractionBox["1", "L"], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "*", "2", 
     FractionBox["\[Pi]", "L"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "*", "x"}], "+", 
       RowBox[{"y", "*", "m"}]}], ")"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5702150251058083`*^9, 3.5702151013501663`*^9}, {
  3.5702151520355673`*^9, 3.5702151802910624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hp", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570215184883725*^9, 3.570215228654123*^9}, {
  3.5702153656843147`*^9, 3.570215463928651*^9}, {3.570215779092273*^9, 
  3.5702157938471527`*^9}, {3.570218779153079*^9, 3.5702188635205073`*^9}, {
  3.5702269284039097`*^9, 3.5702269306252174`*^9}, {3.5709307596086063`*^9, 
  3.5709307707939215`*^9}, {3.570931186897369*^9, 3.570931197833276*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2p", "[", 
   RowBox[{
   "n_", ",", "x_", ",", "m_", ",", "y_", ",", "L_", ",", "\[CapitalPhi]_", 
    ",", "V_", ",", "c_", ",", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "q", ",", "m", ",", "y", ",", "L"}], "]"}], 
            ",", "q"}], "]"}], ",", "q"}], "]"}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[CapitalPhi]", "[", 
             RowBox[{"n", ",", "x", ",", "m", ",", "w", ",", "L"}], "]"}], 
            ",", "w"}], "]"}], ",", "w"}], "]"}]}], ")"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "+", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}], "-", 
     RowBox[{"V", "*", 
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "b"}], ")"}], "2"], "+", 
           SuperscriptBox["y", "2"]}], ")"}]}], 
        SuperscriptBox["c", "2"]], "]"}], 
      RowBox[{"\[CapitalPhi]", "[", 
       RowBox[{"n", ",", "x", ",", "m", ",", "y", ",", "L"}], "]"}]}]}], 
    ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", "x"}], ",", 
     RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5702154106369686`*^9, 3.5702154108509626`*^9}, {
   3.5702154668880014`*^9, 3.570215485975391*^9}, 3.5702155610089054`*^9, {
   3.570218870051346*^9, 3.570218903945597*^9}, {3.5709307108269043`*^9, 
   3.570930774381958*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlane", "[", 
   RowBox[{"V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"n", "-", "l"}], ")"}], "2"]}], "8"], "]"}], "*", "\[Pi]", 
    "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"m", "-", "q"}], ")"}], "2"]}], "8"], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570219192838127*^9, 3.570219197234665*^9}, {
  3.5702192436695185`*^9, 3.5702192900733156`*^9}, {3.570219442121977*^9, 
  3.5702194661109934`*^9}, {3.5702195202318*^9, 3.5702195321232705`*^9}, {
  3.570219576136772*^9, 3.570219634658684*^9}, {3.5702266841284084`*^9, 
  3.5702266845615516`*^9}, {3.5702267770386944`*^9, 3.570226779349032*^9}, {
  3.5702270814494915`*^9, 3.5702270844568915`*^9}, {3.570227414095292*^9, 
  3.570227435630989*^9}, {3.5709312774251366`*^9, 3.5709312862704563`*^9}, {
  3.5709884254526167`*^9, 3.570988425836464*^9}, {3.570988497677177*^9, 
  3.570988498140882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HPlanebtest", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "n_", ",", "m_", ",", "l_", ",", "q_", ",", "b_"}], 
   "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "had", " ", "some", " ", "trouble", " ", "getting", " ", "the", 
     " ", "factors", " ", "in", " ", "EXp", " ", "right"}], ",", " ", 
    RowBox[{"but", " ", "this", " ", "configuration", " ", 
     RowBox[{"worked", ".", " ", "This"}], " ", "is", " ", "for", " ", "one", 
     " ", "well", " ", 
     RowBox[{"only", "!"}], " ", "This", " ", "is", " ", "the", " ", 
     "generalizating", " ", "of", " ", "HPlane"}], ",", " ", 
    RowBox[{"which", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "worry", " ", "about", " ", 
     RowBox[{"b", ".", " ", "This"}], " ", "basically", " ", "lets", " ", 
     "me", " ", "offset", " ", "my", " ", "one", " ", "well", " ", "wherever",
      " ", "I", " ", "want", " ", "to", " ", "double", " ", "check", " ", 
     "that", " ", "I", " ", "have", " ", "the", " ", "right", " ", "form", 
     " ", "of", " ", "the", " ", "analytics"}]}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"n", ",", "l"}], "]"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"m", ",", "q"}], "]"}], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "*", 
       FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["n", "2"], "+", 
       SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
   RowBox[{"V", "*", 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4", 
        SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
    FractionBox["1", 
     RowBox[{"2", "*", 
      SuperscriptBox["L", "2"]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57093125165367*^9, 3.5709312898272624`*^9}, {
   3.570931341167391*^9, 3.5709313441782713`*^9}, {3.570932250439*^9, 
   3.5709322589567027`*^9}, {3.5709323074822006`*^9, 3.570932308387007*^9}, 
   3.570932577634177*^9, {3.5709335178890133`*^9, 3.57093352824736*^9}, {
   3.5709883475675707`*^9, 3.570988361948283*^9}, {3.5721278186849003`*^9, 
   3.572127906953497*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"H2Plane", "[", 
   RowBox[{
   "V_", ",", "L_", ",", "b_", ",", "n_", ",", "m_", ",", "l_", ",", "q_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"n", ",", "l"}], "]"}], "*", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"m", ",", "q"}], "]"}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "*", 
        FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "2"], "+", 
        SuperscriptBox["m", "2"]}], ")"}], "2"]}], "-", " ", 
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}], "-", 
    
    RowBox[{"V", "*", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], "b"}], "+", 
           RowBox[{"\[ImaginaryI]", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], 
            FractionBox[
             RowBox[{"(", 
              RowBox[{"n", "-", "l"}], ")"}], "2"]}]}], ")"}], "2"], "-", 
        RowBox[{"4", 
         SuperscriptBox["b", "2"]}]}], "2"], "]"}], "*", "\[Pi]", "*", 
     FractionBox["1", 
      RowBox[{"2", "*", 
       SuperscriptBox["L", "2"]}]], 
     RowBox[{"Exp", "[", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            FractionBox["\[Pi]", "L"]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"m", "-", "q"}], ")"}]}], ")"}], "2"], "8"], "]"}]}]}], "//",
    "N"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.570680082568841*^9, {3.5706801506789513`*^9, 3.5706802608984394`*^9}, {
   3.5706814558960094`*^9, 3.5706814689845357`*^9}, {3.5709335633165245`*^9, 
   3.5709335716938066`*^9}, {3.5709338675326557`*^9, 3.570933869451476*^9}, {
   3.570988352349019*^9, 3.570988358289434*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMatrix", "[", 
   RowBox[{"V_", ",", "L_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"HPlane", "[", 
       RowBox[{"V", ",", "L", ",", "m", ",", "l", ",", "n", ",", "q"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", 
        RowBox[{"-", "size"}], ",", "size"}], "}"}]}], "]"}], "//", "N"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128069191348*^9, 3.5721280745519753`*^9}, {
  3.5721281434915953`*^9, 3.572128143907481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"groundState", "[", 
   RowBox[{"EM_", ",", "L_", ",", "x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Size", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "EM", "]"}], "]"}]}], ",", " ", "i", ",", 
      "j"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Given", " ", "an", " ", "eigenvector"}], ",", " ", 
      RowBox[{
      "this", " ", "will", " ", "compute", " ", "a", " ", "plottable", " ", 
       "version", " ", "of", " ", "the", " ", 
       RowBox[{"wavefunction", ".", " ", "However"}]}], ",", " ", 
      RowBox[{"there", " ", "is", " ", "little", " ", "sophistication"}], ",",
       " ", 
      RowBox[{
      "the", " ", "user", " ", "must", " ", "still", " ", "change", " ", 
       "the", " ", "index", " ", "conversion", " ", "number", " ", "by", " ", 
       
       RowBox[{"hand", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Note", ":", " ", 
         RowBox[{"there", " ", "was", " ", "a", " ", "problem"}], ":", " ", 
         RowBox[{
         "use", " ", "ky", " ", "for", " ", "calculating", " ", "the", " ", 
          "number", " ", "on", " ", "x", " ", "and", " ", "y"}]}]}]}], ",", 
      " ", 
      RowBox[{
      "as", " ", "the", " ", "kx", " ", "function", " ", "gives", " ", "the", 
       " ", "row", " ", "of", " ", "a", " ", "matrix"}], ",", " ", "but", ",",
       " ", 
      RowBox[{"for", " ", "the", " ", "eigenvector"}], ",", " ", 
      RowBox[{"it", " ", "is", " ", "just", " ", 
       RowBox[{"a", " ", "'"}], 
       RowBox[{"column", "'"}], " ", "vector"}], ",", " ", 
      RowBox[{"so", " ", "just", " ", "use", " ", "ky"}]}], "*)"}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normalize", "[", "EM", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "*", "Size"}], "+", "j"}], "]"}], 
        "]"}], "*", 
       RowBox[{"N", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "*", "2.", "*", 
            FractionBox["\[Pi]", "L"], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "Size"}], "]"}], "*", "x"}], "+", 
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "Size"}], "]"}], "*", "y"}]}], ")"}]}], 
           "]"}], "L"], ",", "8"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "Size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "Size"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128189351035*^9, 3.572128241737421*^9}, {
  3.5721323143106318`*^9, 3.572132352087255*^9}, {3.572132390263721*^9, 
  3.5721324988055277`*^9}, {3.572132711589464*^9, 3.572132747301024*^9}, {
  3.5721327948084507`*^9, 3.572132818413868*^9}, {3.5721338657642384`*^9, 
  3.572133926723633*^9}, {3.5721879922029543`*^9, 3.572188001611438*^9}, {
  3.5723693482479753`*^9, 3.572369349644309*^9}, {3.57902669257828*^9, 
  3.579026693681678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", "HMatrix", "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"GroundStatePlane", "[", 
   RowBox[{"p_", ",", "l_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "HMatrix", ",", "EN", ",", "G", ",", "m", ",", "k", ",", "n", ",", "q"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"HPlane", "[", 
         RowBox[{"1.5", ",", "10", ",", "m", ",", "l", ",", "n", ",", "q"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "p"}], ",", "p"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EN", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"HMatrix", "//", "N"}], "]"}], "-", 
        RowBox[{"100", "*", 
         RowBox[{"IdentityMatrix", "[", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "p"}], "+", "1"}], ")"}], "2"], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"EN", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "100"}], ",", 
        RowBox[{
         RowBox[{"EN", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell["\<\
Harmonic Oscillator Functions:
HMV1[1,2,.1,0,.5]\
\>", "Text",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.572128489356292*^9, 3.572128494635808*^9}, {
  3.573407653101918*^9, 3.573407667661433*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "1", ",", ".1", ",", "0", ",", "0.5"}], "]"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573407672423072*^9, 3.573407727825686*^9}}],

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "1", ",", "0.1`", ",", "0", ",", "0.5`"}], 
  "]"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.573407696376131*^9, 3.5734077282896643`*^9}, 
   3.573570694402162*^9, 3.5752242210311537`*^9, 3.575737648780871*^9, 
   3.575817377749691*^9, 3.575817706253395*^9, 3.577715915402133*^9, 
   3.5777344176688347`*^9, 3.57773646164006*^9, 3.579033621811659*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{3.573407691626629*^9}],

Cell[BoxData[
 RowBox[{"HMV1", "[", 
  RowBox[{"1", ",", "2", ",", "0.1`", ",", "0.5`"}], "]"}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.573407691906547*^9, 3.573570694439014*^9, 
  3.575224221064781*^9, 3.5757376488542347`*^9, 3.575817377862462*^9, 
  3.575817706329053*^9, 3.577715915432088*^9, 3.577734417725507*^9, 
  3.577736461716659*^9, 3.579033621820608*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HMV1", "[", 
   RowBox[{"l_", ",", "m_", ",", "\[Omega]_", ",", "b_", ",", "c_"}], "]"}], ":=",
   " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Sqrt", "[", "\[Omega]", "]"}], 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"l", "+", "m"}]], 
        RowBox[{"Factorial", "[", "l", "]"}], "*", 
        RowBox[{"Factorial", "[", "m", "]"}]}], "]"}]], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["2", "k"], 
         RowBox[{"Factorial", "[", "k", "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"l", ",", "k"}], "]"}], "*", 
         RowBox[{"Binomial", "[", 
          RowBox[{"m", ",", "k"}], "]"}], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"\[Omega]", "*", 
               SuperscriptBox["c", "2"]}], 
              RowBox[{"1", "+", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"], "\[Omega]"}]}]]}]}], ")"}], 
          RowBox[{
           FractionBox[
            RowBox[{"(", 
             RowBox[{"m", "+", "l"}], ")"}], "2"], "-", "k"}]], "*", 
         RowBox[{"HermiteH", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"m", "+", "l", "-", 
             RowBox[{"2", "*", "k"}]}], ")"}], ",", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             FractionBox["\[Omega]", 
              RowBox[{"1", "+", 
               RowBox[{"2", "*", 
                SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "*", 
            "b"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", 
         RowBox[{"Min", "[", 
          RowBox[{"m", ",", "l"}], "]"}]}], "}"}]}], "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       FractionBox[
        SuperscriptBox["b", "2"], 
        RowBox[{"2", 
         SuperscriptBox["c", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           RowBox[{"2", 
            SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "-", "1"}], 
        ")"}]}], "]"}], "*", 
     RowBox[{"Sqrt", "[", 
      FractionBox["2", 
       RowBox[{"1", "+", 
        RowBox[{"2", 
         SuperscriptBox["c", "2"], "*", "\[Omega]"}]}]], "]"}], "c"}], ")"}], 
   "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.573407687335093*^9, 3.573407718292557*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hx2Anal2", "[", 
   RowBox[{"l_", ",", "m_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "*", "l"}], "+", "1"}], ")"}], "*", 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{"l", ",", "m"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"l", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "+", "1"}], ",", 
      RowBox[{"m", "-", "1"}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"m", "+", "2"}], ")"}]}], "]"}], 
    RowBox[{"KroneckerDelta", "[", 
     RowBox[{
      RowBox[{"l", "-", "1"}], ",", 
      RowBox[{"m", "+", "1"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       FractionBox[
        RowBox[{"2", "V"}], 
        SuperscriptBox["c", "2"]], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570885920269978*^9, 3.5708859340123653`*^9}, {
   3.570885984099249*^9, 3.570886075990157*^9}, {3.570886223990593*^9, 
   3.5708862621362886`*^9}, {3.570895371759161*^9, 3.570895424848665*^9}, {
   3.57089810518782*^9, 3.570898171012825*^9}, {3.5709835339686947`*^9, 
   3.5709835367828827`*^9}, 3.5709835802714243`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HOBasis1Well", "[", 
   RowBox[{"V_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         SuperscriptBox["c", "2"]]}], "]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "+", 
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"l", ",", "q"}], "]"}], "*", 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "n"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "0", ",", "c"}], "]"}], 
        "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "0", ",", "c"}], 
         "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", 
        RowBox[{"size", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570898267668626*^9, 3.5708982805480013`*^9}, {
  3.570898960568728*^9, 3.570898981594881*^9}, {3.5708990116585703`*^9, 
  3.570899011963595*^9}, {3.5708990660276012`*^9, 3.570899066203285*^9}, {
  3.570983297935081*^9, 3.5709833033580017`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "H_", ",", "V_", ",", "c_", ",", "b_", ",", "size_",
     ","}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "k", ",", "Em", ",", "M", ",", "HOBasis"}], "}"}], ",",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{"k", ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{"n", ",", "x", ",", "V", ",", "c"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"n", "+", "1"}], "]"}], "]"}]}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"n", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"-", "V"}], 
           RowBox[{"c", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]], 
          RowBox[{"Exp", "[", 
           FractionBox[
            RowBox[{"-", 
             SuperscriptBox["x", "2"]}], 
            RowBox[{"4.", "*", "V", "*", 
             SuperscriptBox["c", "2"]}]], "]"}]}], "//", "N"}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57089525831597*^9, 3.570895279711782*^9}, {
  3.570897367385829*^9, 3.570897529953704*^9}, {3.572367062116728*^9, 
  3.572367076496973*^9}, {3.572367132873954*^9, 3.572367134357418*^9}, {
  3.579026648618623*^9, 3.579026649386161*^9}}],

Cell[CellGroupData[{

Cell[BoxData["plotGround"], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.570895283855715*^9, 3.57089528638737*^9}}],

Cell[BoxData["plotGround"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.572131566533577*^9, {3.57219536311866*^9, 3.572195382524304*^9}, {
   3.573570693286043*^9, 3.573570694562139*^9}, 3.573579524206863*^9, {
   3.5752242204868183`*^9, 3.575224221166127*^9}, 3.575737648954505*^9, 
   3.575816603692075*^9, {3.575817376189972*^9, 3.575817378113659*^9}, {
   3.575817704970214*^9, 3.5758177064428263`*^9}, 3.575818790559903*^9, 
   3.575833241092887*^9, 3.575852920247225*^9, 3.577715915529087*^9, 
   3.577734417817246*^9, 3.5777364618075247`*^9, 3.5790336220582*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2d", "[", 
   RowBox[{"\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          RowBox[{
           RowBox[{"6", "b", "*", "c"}], "+", 
           RowBox[{"9", 
            SuperscriptBox["c", "2"]}]}]]}], "]"}]}], ",", "HOBasis", ",", 
      "Em"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HOBasis", "[", 
       RowBox[{"V", ",", "b", ",", "c", ",", "size", ",", "\[Omega]"}], "]"}],
       ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"n", ",", "m"}], "]"}]}], "+", 
           RowBox[{
            FractionBox["\[Omega]", "2"], "*", 
            RowBox[{"Hx2Anal2", "[", 
             RowBox[{"l", ",", "q"}], "]"}]}], "-", 
           RowBox[{"V", "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
              RowBox[{"-", "b"}], ",", "c"}], "]"}], "*", 
            RowBox[{"HMV1", "[", 
             RowBox[{"l", ",", "q", ",", "\[Omega]", ",", "b", ",", "c"}], 
             "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", "size"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"q", ",", "0", ",", "size"}], "}"}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Em", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigensystem", "[", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{
          RowBox[{"HOBasis", "[", 
           RowBox[{
            SuperscriptBox["1.5", "2"], ",", "1", ",", ".5", ",", "7", ",", 
            "\[Omega]"}], "]"}], "-", 
          RowBox[{"1000", "*", 
           RowBox[{"IdentityMatrix", "[", "42", "]"}]}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{"\[CapitalPsi]", "[", 
                RowBox[{
                 RowBox[{"j", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
                 "\[Omega]"}], "]"}], "*", 
               RowBox[{
                RowBox[{"Normalize", "[", 
                 RowBox[{
                  RowBox[{"Em", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}], "*", 
                   RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "17"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "17"}], "}"}]}], "]"}], "]"}], 
           "2"], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57089533059254*^9, 3.570895347632304*^9}, {
   3.570895446145853*^9, 3.570895467825232*^9}, {3.570895522605443*^9, 
   3.570895560099419*^9}, {3.57089559772987*^9, 3.570895653763194*^9}, 
   3.570895741827547*^9, {3.570895806483992*^9, 3.570895821797204*^9}, {
   3.570895897602663*^9, 3.570895939687346*^9}, {3.5708960985682507`*^9, 
   3.570896117688366*^9}, {3.570896269414405*^9, 3.570896280191505*^9}, {
   3.570896341423107*^9, 3.5708964735857277`*^9}, {3.570896543131679*^9, 
   3.5708965723200207`*^9}, {3.570896614956777*^9, 3.570896645902726*^9}, {
   3.5708967228948307`*^9, 3.570896745810275*^9}, {3.570896796370328*^9, 
   3.570896798411419*^9}, {3.5708968441754827`*^9, 3.57089694268522*^9}, {
   3.57089699795343*^9, 3.5708970388476458`*^9}, 3.570897361581813*^9, {
   3.570897531315144*^9, 3.570897552919519*^9}, {3.570897584404173*^9, 
   3.570897648554591*^9}, {3.5734064731875877`*^9, 3.5734064779188223`*^9}, {
   3.573406542217595*^9, 3.573406566120376*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotGround2wellHO2dT", "[", 
   RowBox[{
   "\[CapitalPsi]_", ",", "V_", ",", "b_", ",", "c_", ",", "size_", ",", 
    "Em_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", 
         FractionBox["V", 
          SuperscriptBox["c", "2"]]}], "]"}]}], ",", "x", ",", "y"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{"\[CapitalPsi]", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
          "\[Omega]"}], "]"}], "*", 
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"Em", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}], "*", 
            RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "x", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{"\[CapitalPsi]", "[", 
              RowBox[{
               RowBox[{"j", "-", "1"}], ",", "y", ",", "V", ",", "c", ",", 
               "\[Omega]"}], "]"}], "*", 
             RowBox[{
              RowBox[{"Normalize", "[", 
               RowBox[{
                RowBox[{"Em", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "*", 
                 RowBox[{"(", "size", ")"}]}], "+", "j"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "size"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "size"}], "}"}]}], "]"}], "]"}], 
         "2"], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5708977492067337`*^9, 3.570897780689465*^9}, {
  3.5708978643700943`*^9, 3.570897879854721*^9}, {3.5708979105684958`*^9, 
  3.570897916455763*^9}, {3.570898041434421*^9, 3.570898046376409*^9}, {
  3.570988847464078*^9, 3.5709888590488987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HM2Well", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Omega]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        FractionBox["V", 
         RowBox[{
          RowBox[{"6", "*", "b", "*", "c"}], "+", 
          RowBox[{"9", 
           SuperscriptBox["c", "2"]}]}]]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["\[Omega]", "2"], "*", 
        RowBox[{"Hx2Anal2", "[", 
         RowBox[{"n", ",", "m"}], "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", "b", ",", "c"}], 
         "]"}]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"HMV1", "[", 
         RowBox[{"n", ",", "m", ",", "\[Omega]", ",", 
          RowBox[{"-", "b"}], ",", "c"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "size"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "0", ",", "size"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnGround2wellHO", "[", 
   RowBox[{"V_", ",", "b_", ",", "c_", ",", "size_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"EnGround2wellHO", "[", 
    RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Em", ",", "M"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"M", "=", 
        RowBox[{
         RowBox[{"HM2Well", "[", 
          RowBox[{"V", ",", "b", ",", "c", ",", "size"}], "]"}], "-", 
         RowBox[{"1000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"size", "+", "1"}], "]"}]}]}]}], ")"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"Em", "=", 
        RowBox[{"Eigenvalues", "[", "M", "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573406922906785*^9, 3.573406929084024*^9}, {
  3.573406970688098*^9, 3.5734070010456753`*^9}, {3.573407201441255*^9, 
  3.573407202800108*^9}, {3.5734080558973*^9, 3.5734080794661493`*^9}}],

Cell[CellGroupData[{

Cell["Sparse Matrices Stuff:", "Subsection",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721285859014063`*^9, 3.572128594332904*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"deltaK_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R", "[", "deltaK", "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "*", 
           FractionBox["\[Pi]", "L"]}], ")"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", "deltaK", ")"}], "2"]}], "8."], "]"}], "//", 
    "N"}]}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571000978783464*^9, 3.571000995356388*^9}, {
   3.57100108162978*^9, 3.571001117827796*^9}, {3.571001225972803*^9, 
   3.571001269343255*^9}, {3.571001381201169*^9, 3.571001395328429*^9}, 
   3.571004628985114*^9, {3.571007252187564*^9, 3.5710072677402973`*^9}}],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004666397975*^9, 3.571004700102571*^9}, {
  3.57100473234347*^9, 3.571004781941791*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"yIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], " ", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004907370202*^9, 3.571004924473065*^9}, {
  3.5710054483336563`*^9, 3.5710054492613583`*^9}, {3.571005547198454*^9, 
  3.571005548798235*^9}, {3.571005578974455*^9, 3.571005581518189*^9}, {
  3.571005916080695*^9, 3.571005917216366*^9}, {3.571006207794964*^9, 
  3.571006207937745*^9}, {3.571006840166703*^9, 3.57100684024616*^9}, {
  3.571076210663637*^9, 3.571076210823251*^9}}],

Cell[BoxData[
 RowBox[{"Mod", "[", 
  RowBox[{"i", ",", "size", ",", "1"}], "]"}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.5710762115073767`*^9, 3.5721253050147667`*^9, 3.57213035834122*^9, 
   3.5721315666206703`*^9, {3.5721953632791653`*^9, 3.57219538266177*^9}, {
   3.573570693423429*^9, 3.5735706947368727`*^9}, 3.573579524299315*^9, {
   3.575224220553619*^9, 3.575224221276437*^9}, 3.5757376492299633`*^9, 
   3.5758166038261967`*^9, {3.575817376324524*^9, 3.5758173786914053`*^9}, {
   3.575817705450605*^9, 3.575817706569316*^9}, 3.575818790637588*^9, 
   3.575833241198072*^9, 3.575852920395009*^9, 3.5777159156315804`*^9, 
   3.577734417921591*^9, 3.577736461907537*^9, 3.579033629032349*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076026372032*^9, 3.57107602933237*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "y", " ", "index", " ", "will", " ", "take", " ", "a", " ", "number", " ",
      "from", " ", "1"}], "-", "n"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "and", " ", "convert", " ", "it", " ", "into", " ", "a", " ", "quantum",
        " ", "number", " ", "for", " ", 
       RowBox[{"ky", ".", " ", "This"}], " ", "will", " ", "be", " ", "an", 
       " ", "integer", " ", "starting", " ", "from"}], " ", "-", "p"}], 
     ".."}], 
    RowBox[{"p", "."}]}]}], "*)"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.57107603194378*^9, 3.571076091161105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yIndex", "[", 
  RowBox[{"2", ",", "4"}], "]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571005038934815*^9, 3.5710050672733603`*^9}, {
  3.571005382620392*^9, 3.571005387291419*^9}, {3.5710054932604113`*^9, 
  3.571005504204275*^9}, {3.571005555084961*^9, 3.571005607580825*^9}, {
  3.57100564708575*^9, 3.571005649037367*^9}, {3.571005791198532*^9, 
  3.571005816590447*^9}, {3.5710060719045067`*^9, 3.571006073328672*^9}, {
  3.571006203681294*^9, 3.5710062607534933`*^9}, {3.571076215942932*^9, 
  3.5710762331426697`*^9}}],

Cell[BoxData["2"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{
  3.5721315666774054`*^9, {3.5721953633743763`*^9, 3.5721953827609253`*^9}, {
   3.573570693466408*^9, 3.573570694803196*^9}, 3.573579524375761*^9, {
   3.575224220603209*^9, 3.57522422135889*^9}, 3.575737649303508*^9, 
   3.575816603921591*^9, {3.575817376560095*^9, 3.575817378810993*^9}, {
   3.575817705567575*^9, 3.575817706656191*^9}, 3.575818790850029*^9, 
   3.575833241277789*^9, 3.57585292046043*^9, 3.57771591568229*^9, 
   3.57773441798673*^9, 3.577736461972054*^9, 3.579033629217517*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ky", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"yIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710763687580748`*^9, 3.5710763940246277`*^9}, {
  3.5710765462181892`*^9, 3.571076615531767*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  RowBox[{"Mod", "[", 
   RowBox[{"i", ",", "size", ",", "1"}], "]"}]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.572130355085424*^9, 3.57213156672609*^9, {3.572195363481542*^9, 
   3.572195382827812*^9}, {3.573570693475769*^9, 3.573570694853084*^9}, {
   3.575224220639934*^9, 3.575224221397727*^9}, 3.575737649368555*^9, 
   3.575816603993815*^9, {3.575817376637787*^9, 3.575817378817274*^9}, {
   3.575817705575276*^9, 3.575817706727754*^9}, 3.57581879089436*^9, 
   3.575833241337905*^9, 3.575852920529865*^9, 3.577715915710659*^9, 
   3.5777344179952593`*^9, 3.5777364619798107`*^9, 3.579033629380251*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "this", " ", "will", " ", "convert", " ", "our", " ", "index", " ", 
   "number", " ", "to", " ", "a", " ", "range", " ", "that", " ", "runs", " ",
    "over", " ", "negative", " ", "numbers", " ", "so", " ", "we", " ", "can",
    " ", "get", " ", "backwards", " ", "waves"}], "*)"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721268972365522`*^9, 3.572126923589943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kx", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"xIndex", "[", 
    RowBox[{"i", ",", "size"}], "]"}], "-", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"size", "-", "1"}], ")"}], "2"], "-", "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076590427719*^9, 3.571076619339654*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  FractionBox[
   RowBox[{"1", "-", "size"}], "2"], "+", 
  RowBox[{"xIndex", "[", 
   RowBox[{"i", ",", "size"}], "]"}]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710765950937767`*^9, 3.5710766201886*^9}, 
   3.5721252970286217`*^9, 3.572130353784877*^9, 3.5721315667749777`*^9, {
   3.57219536382935*^9, 3.572195382936722*^9}, {3.5735706935200367`*^9, 
   3.573570694900206*^9}, 3.573579524437887*^9, {3.57522422068004*^9, 
   3.575224221439724*^9}, 3.575737649437277*^9, 3.575816604078075*^9, {
   3.575817376797573*^9, 3.575817378954172*^9}, {3.575817705657205*^9, 
   3.575817706793379*^9}, 3.575818790942137*^9, 3.575833241395426*^9, 
   3.575852920777462*^9, 3.5777159157505083`*^9, 3.57773441805926*^9, 
   3.577736462048901*^9, 3.579033629600985*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kx", "[", 
  RowBox[{"6", ",", "5"}], "]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571076600371318*^9, 3.571076677513527*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "+", 
  RowBox[{"xIndex", "[", 
   RowBox[{"6", ",", "5"}], "]"}]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5710766086620207`*^9, 3.5710766778473263`*^9}, 
   3.572130351320689*^9, 3.572131566815014*^9, {3.5721953638982*^9, 
   3.572195383002089*^9}, {3.573570693567792*^9, 3.5735706949483356`*^9}, 
   3.573579524501046*^9, {3.575224220712759*^9, 3.575224221480337*^9}, 
   3.5757376495003443`*^9, 3.575816604148945*^9, {3.5758173768720417`*^9, 
   3.575817379025963*^9}, {3.575817705723372*^9, 3.57581770684501*^9}, 
   3.57581879099172*^9, 3.575833241455241*^9, 3.575852920804045*^9, 
   3.577715915778459*^9, 3.577734418108492*^9, 3.577736462053852*^9, 
   3.5790336297458277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xIndex", "[", 
   RowBox[{"i_", ",", "size_"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{"i", "-", 
      RowBox[{"Mod", "[", 
       RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], ")"}], "size"], "+", 
   "1"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.571004930287951*^9, 3.5710049523452063`*^9}, {
  3.571005317372704*^9, 3.571005318764783*^9}, {3.5710057394878883`*^9, 
  3.571005751535363*^9}, {3.571005930832862*^9, 3.571005931200572*^9}, {
  3.5710060235052032`*^9, 3.5710060497785254`*^9}, {3.571006165012313*^9, 
  3.5710061653792467`*^9}, {3.571006835208407*^9, 3.571006835303487*^9}, {
  3.571076261305995*^9, 3.571076261433284*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"i", "-", 
    RowBox[{"Mod", "[", 
     RowBox[{"i", ",", "size", ",", "1"}], "]"}]}], "size"]}]], "Output",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{
  3.571004952693384*^9, 3.5710053193684464`*^9, 3.571005466457485*^9, 
   3.5710057520114*^9, 3.571006050237624*^9, 3.5710061663504143`*^9, 
   3.571006836195053*^9, 3.571073692860424*^9, 3.571076262340887*^9, 
   3.57212529925669*^9, 3.572130349645472*^9, 3.57213156685341*^9, {
   3.5721953639946547`*^9, 3.5721953830777283`*^9}, {3.573570693897833*^9, 
   3.573570694994968*^9}, 3.573579524566012*^9, {3.5752242207454*^9, 
   3.5752242214850693`*^9}, 3.575737649504718*^9, 3.575816604220639*^9, {
   3.575817376965431*^9, 3.575817379098336*^9}, {3.575817705791737*^9, 
   3.5758177069149323`*^9}, 3.575818791032305*^9, 3.57583324151337*^9, 
   3.575852920833896*^9, 3.577715915808127*^9, 3.577734418182539*^9, 
   3.5777364620990877`*^9, 3.579033629753212*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BuildPlaneMatrix", "[", 
    RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MDense", " ", "=", " ", 
       RowBox[{
        RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
        FractionBox["1", 
         RowBox[{"2", "*", 
          SuperscriptBox["L", "2"]}]], "*", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
           RowBox[{
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"kx", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
            RowBox[{"R", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ky", "[", 
                RowBox[{"j", ",", "p"}], "]"}], "-", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
          
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["p", "2"], ",", 
            SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MDiag", " ", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "*", 
              FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ky", "[", 
                 RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
            "2"]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eTcycPqs185KhzsPg2i133KuAqiw7hF74Poy1nn
v4Fol4UHf4Hok/OmGmkA6SKNFWC6ZIrsbRD96fD1xyCaz/L5SxDNYdn+BkSv
qF39EURv0tj3E0R3bU8X0ATSfa+mgWnRuU/kQfQbIUUNEJ0/X1kfRH8xswHT
bF/djEF0Q2eRGYi2OPE4FkR7lrwF03wnTnp4Aukfl+M9QfQiq12nQTST5dQr
IHqOy40FnnNfOZ5yYV4EolW0drwA0deOy78E0aLa5Z9BdNW0LWDa4MsZGx8g
7a14DUwvXrTvKYi+5lrwDEQDAJ4CnhI=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuildPlaneMatrix2D2Well", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "I", " ", "am", " ", "choosing", " ", "the", " ", "wells", " ", "to", 
        " ", "be", " ", "on", " ", "the", " ", "x"}], "-", "axis"}], ",", " ", 
      RowBox[{
       RowBox[{"so", " ", "the", " ", "y"}], "-", 
       RowBox[{"axis", " ", "dynamics", " ", 
        RowBox[{"shouldn", "'"}], "t", "\[IndentingNewLine]", 
        RowBox[{"change", ".", " ", "Notice"}]}]}], ",", " ", 
      RowBox[{
      "the", " ", "R2W", " ", "contains", " ", "b", " ", "information"}], ",",
       " ", 
      RowBox[{
      "and", " ", "will", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       RowBox[{"kx", "'"}], "s"}], ",", " ", 
      RowBox[{"while", " ", "the", " ", "R", " ", 
       RowBox[{"doesn", "'"}], "t"}], ",", " ", 
      RowBox[{
      "and", " ", "can", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       
       RowBox[{"ky", "'"}], "s", " ", "without", " ", "loss", " ", "of", " ", 
       "generality"}], ",", " ", 
      RowBox[{"because", " ", "there", " ", "are", " ", "two", " ", "wells"}],
       ",", " ", 
      RowBox[{
      "there", " ", "is", " ", "another", " ", "term", " ", "in", " ", "our", 
       " ", "MDense"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", "b"}], 
              "]"}], "+", 
             RowBox[{"R2W", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"kx", "[", 
                 RowBox[{"j", ",", "p"}], "]"}], "-", 
                RowBox[{"kx", "[", 
                 RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", 
               RowBox[{"-", "b"}]}], "]"}]}], ")"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721267052277822`*^9, 3.572126705773741*^9}, {
  3.572127033781926*^9, 3.5721272320948067`*^9}, {3.572129464968992*^9, 
  3.5721294673137836`*^9}, {3.579025731435368*^9, 3.579025795531987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuildPlaneMatrix2D2WellBias", "[", 
   RowBox[{"V1_", ",", "V2_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "I", " ", "am", " ", "choosing", " ", "the", " ", "wells", " ", "to", 
        " ", "be", " ", "on", " ", "the", " ", "x"}], "-", "axis"}], ",", " ", 
      RowBox[{
       RowBox[{"so", " ", "the", " ", "y"}], "-", 
       RowBox[{"axis", " ", "dynamics", " ", 
        RowBox[{"shouldn", "'"}], "t", "\[IndentingNewLine]", 
        RowBox[{"change", ".", " ", "Notice"}]}]}], ",", " ", 
      RowBox[{
      "the", " ", "R2W", " ", "contains", " ", "b", " ", "information"}], ",",
       " ", 
      RowBox[{
      "and", " ", "will", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       RowBox[{"kx", "'"}], "s"}], ",", " ", 
      RowBox[{"while", " ", "the", " ", "R", " ", 
       RowBox[{"doesn", "'"}], "t"}], ",", " ", 
      RowBox[{
      "and", " ", "can", " ", "be", " ", "used", " ", "for", " ", "the", " ", 
       
       RowBox[{"ky", "'"}], "s", " ", "without", " ", "loss", " ", "of", " ", 
       "generality"}], ",", " ", 
      RowBox[{"because", " ", "there", " ", "are", " ", "two", " ", "wells"}],
       ",", " ", 
      RowBox[{
      "there", " ", "is", " ", "another", " ", "term", " ", "in", " ", "our", 
       " ", "MDense"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"V1", "*", 
              RowBox[{"R2W", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"kx", "[", 
                  RowBox[{"j", ",", "p"}], "]"}], "-", 
                 RowBox[{"kx", "[", 
                  RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", "b"}], 
               "]"}]}], "+", 
             RowBox[{"V2", "*", 
              RowBox[{"R2W", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"kx", "[", 
                  RowBox[{"j", ",", "p"}], "]"}], "-", 
                 RowBox[{"kx", "[", 
                  RowBox[{"i", ",", "p"}], "]"}]}], ",", "L", ",", 
                RowBox[{"-", "b"}]}], "]"}]}]}], ")"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.579025783964324*^9, 3.5790258075589523`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"R2W", "[", 
   RowBox[{"deltaK_", ",", "L_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"R2W", "[", 
    RowBox[{"deltaK", ",", "L", ",", "b"}], "]"}], "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2.", "*", "b"}], "+", 
          RowBox[{"\[ImaginaryI]", 
           RowBox[{"(", 
            RowBox[{"2.", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], 
           FractionBox[
            RowBox[{"(", "deltaK", ")"}], "2"]}]}], ")"}], "2"], "-", 
       RowBox[{"4.", "*", 
        SuperscriptBox["b", "2"]}]}], "2."], "]"}], "//", "N"}]}]}]], "Input",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.5721268078315277`*^9, 3.5721268599771137`*^9}, {
  3.5721269456740294`*^9, 3.572126964026145*^9}, {3.5721296396950617`*^9, 
  3.572129651772911*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Tunneling", " ", "for", " ", "a", " ", "2", "D", " ", "2", "Well", " ", 
    "case"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Tunneling2DWellListGen", "[", "basisnum_", "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Need", " ", "to", " ", "double", " ", "check", " ", "that", " ", "L"}], 
     "=", 
     RowBox[{
     "1", " ", "is", " ", "okay", " ", "for", " ", "small", " ", "b"}]}], 
    "*)"}], 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EnergyList", ",", "TunnelingList"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EnergyList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{
            RowBox[{"Eigenvalues", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"BuildPlaneMatrix2D2Well", "[", 
                RowBox[{"10", ",", "8", ",", "basisnum", ",", 
                 RowBox[{"b", "/", "2."}]}], "]"}], "-", 
               RowBox[{"1000.", "*", 
                RowBox[{"IdentityMatrix", "[", 
                 SuperscriptBox["basisnum", "2"], "]"}]}]}], ",", "2"}], 
             "]"}], "+", "1000"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", ".1", ",", "4", ",", ".2"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TunnelingList", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"EnergyList", "[", 
             RowBox[{"[", "p", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"EnergyList", "[", 
               RowBox[{"[", "p", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", 
           RowBox[{"Length", "[", "EnergyList", "]"}]}], "}"}]}], "]"}]}]}]}],
     "\n", "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.572898683635507*^9, 3.5728988670804653`*^9}, {
   3.572898901199182*^9, 3.572898908059278*^9}, {3.572898958257339*^9, 
   3.572899076096239*^9}, {3.572899111755712*^9, 3.572899116962686*^9}, {
   3.5728991821113167`*^9, 3.5728991835178823`*^9}, {3.572899285183936*^9, 
   3.5728992989466867`*^9}, {3.572899424272739*^9, 3.5728994247352858`*^9}, {
   3.572899523970052*^9, 3.57289954929869*^9}, {3.572899660527895*^9, 
   3.5728996867980127`*^9}, {3.57289972612869*^9, 3.572899729216799*^9}, {
   3.5728997782653093`*^9, 3.572899778496242*^9}, {3.572899830738913*^9, 
   3.572899830980447*^9}, {3.572899887016218*^9, 3.572899911705093*^9}, {
   3.572899942805539*^9, 3.572899943366991*^9}, {3.572899987685001*^9, 
   3.57290000312385*^9}, {3.572900132235516*^9, 3.572900139162187*^9}, {
   3.572901797175879*^9, 3.5729017980865717`*^9}, 3.572902212202299*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "/", "25."}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5729021970625763`*^9, 3.572902198714232*^9}}],

Cell[BoxData["0.4`"], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.572902199044324*^9, 3.573570695535983*^9, 
  3.575224221549406*^9, 3.575737649586453*^9, 3.5758173792079268`*^9, 
  3.575817707366509*^9, 3.577715915890727*^9, 3.577734418276532*^9, 
  3.577736462197853*^9, 3.579033632123644*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "1", "D", " ", "Functions", " ", "for", " ", "plane", " ", "waves"}], 
  "*)"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5723789053583527`*^9, 3.572378913475903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellH", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"H", "[", 
         RowBox[{
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["l", "length"]}], ",", 
          RowBox[{"2", "\[Pi]", "*", 
           FractionBox["m", "length"]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{
           RowBox[{"-", "p"}], "/", "2."}], ",", 
          RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5747071527500343`*^9, 3.574707154566564*^9}, {
  3.5747137432894573`*^9, 3.5747137631212177`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellBox", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_"}], "]"}], ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "First", " ", "normalize", " ", "the", " ", "plane", " ", "wave", " ", 
      "on", " ", "the", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "b"}], "+", 
                 RowBox[{"\[ImaginaryI]", "*", 
                  SuperscriptBox["c", "2"], 
                  RowBox[{"(", 
                   RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
             FractionBox[
              SuperscriptBox["b", "2"], 
              RowBox[{"2", 
               SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], ")"}]}], 
       "-", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "+", 
          RowBox[{"V", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", 
                 SuperscriptBox["c", "2"]}]], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"b", "+", 
                  RowBox[{"\[ImaginaryI]", "*", 
                   SuperscriptBox["c", "2"], 
                   RowBox[{"(", 
                    RowBox[{"m", "-", "l"}], ")"}]}]}], ")"}], "2"]}], "-", 
              FractionBox[
               SuperscriptBox["b", "2"], 
               RowBox[{"2", 
                SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
           RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
           FractionBox[
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}], 
         ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "p"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "p"}], "}"}]}], "]"}], "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", "p", "]"}]}]}], ",", "3"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574707165480566*^9, 3.5747072595388327`*^9}, {
  3.574707552637498*^9, 3.574707559551119*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputePlaneWaveEN", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MDense", ",", "MDiag", ",", "i", ",", "j", ",", "M", ",", "EM"}], "}"}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MDense", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", "V"}], "*", "\[Pi]", "*", 
       FractionBox["1", 
        RowBox[{"2", "*", 
         SuperscriptBox["L", "2"]}]], "*", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"kx", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"kx", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}], "*", 
           RowBox[{"R", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ky", "[", 
               RowBox[{"j", ",", "p"}], "]"}], "-", 
              RowBox[{"ky", "[", 
               RowBox[{"i", ",", "p"}], "]"}]}], ",", "L"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["p", "2"], ",", 
           SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MDiag", " ", "=", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i_", ",", "i_"}], "}"}], "\[Rule]", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "L"]}], ")"}], "2"], 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"kx", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ky", "[", 
                RowBox[{"i", ",", "p"}], "]"}], ")"}], "2"]}], ")"}], 
           "2"]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["p", "2"], ",", 
          SuperscriptBox["p", "2"]}], "}"}], ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"MDense", "+", "MDiag"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"EM", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{"M", "-", 
         RowBox[{"10000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["p", "2"], "]"}]}]}], ",", "3"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573404541555847*^9, 3.5734045459797707`*^9}, {
  3.573404580765032*^9, 3.5734046331788597`*^9}, {3.573404814204865*^9, 
  3.573404814542769*^9}, {3.573404896059642*^9, 3.573404922409494*^9}, {
  3.573571238341179*^9, 3.5735712400845823`*^9}, {3.573571293679434*^9, 
  3.573571296611291*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573404617802964*^9, 3.5734046283493023`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "bsep"}], "+", 
     RowBox[{"\[ImaginaryI]", "*", 
      SuperscriptBox["c", "2"], 
      RowBox[{"(", 
       RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"], "//", 
  "Expand"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706402122661*^9, 3.574706409689583*^9}, {
  3.574706447660687*^9, 3.574706449022266*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["bsep", "2"], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "l"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["l", "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep", " ", 
   SuperscriptBox["c", "2"], " ", "m"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["c", "4"], " ", "l", " ", "m"}], "-", 
  RowBox[{
   SuperscriptBox["c", "4"], " ", 
   SuperscriptBox["m", "2"]}]}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706406720368*^9, 3.574706411096586*^9}, 
   3.574706449668106*^9, 3.575224221623282*^9, 3.575737649698388*^9, 
   3.5758173793308277`*^9, 3.5758177075147467`*^9, 3.577715915984013*^9, 
   3.577734418372916*^9, 3.5777364622895927`*^9, 3.5790336323340282`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"k", "-", "l"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "bsep"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "l"}], ")"}], " ", 
      SuperscriptBox["w", "2"]}]}], ")"}]}], "//", "Expand"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574706477055162*^9, 3.574706478734951*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "k"}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "bsep", " ", "l"}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"], "+", 
  RowBox[{"k", " ", "l", " ", 
   SuperscriptBox["w", "2"]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["l", "2"], " ", 
    SuperscriptBox["w", "2"]}], "2"]}]], "Output",
 InitializationGroup->True,
 CellChangeTimes->{3.57470647932559*^9, 3.57522422165774*^9, 
  3.575737649862588*^9, 3.575817379435689*^9, 3.575817707733026*^9, 
  3.577715916019743*^9, 3.577734418439754*^9, 3.5777364623394814`*^9, 
  3.5790336325156393`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tunneling2D", "[", 
   RowBox[{"V_", ",", "L_", ",", "p_", ",", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"En0", ",", "En1", ",", " ", "EnList", ",", "T"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EnList", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigenvalues", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"BuildPlaneMatrix2D2Well", "[", 
           RowBox[{"V", ",", "L", ",", "p", ",", 
            RowBox[{"b", "/", "2."}]}], "]"}], "-", 
          RowBox[{"1000.", "*", 
           RowBox[{"IdentityMatrix", "[", 
            SuperscriptBox["p", "2"], "]"}]}]}], ",", "2"}], "]"}], "+", 
       "1000"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En1", " ", "=", " ", 
      RowBox[{"EnList", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"En0", "  ", "=", 
      RowBox[{"EnList", " ", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"T", " ", "=", " ", 
      RowBox[{"En1", "-", "En0"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.573571325737472*^9, 3.573571459262435*^9}, {
  3.5735714965490923`*^9, 3.5735715264031076`*^9}, {3.573571872298934*^9, 
  3.573571889803364*^9}, {3.573573308234858*^9, 3.573573316009892*^9}, {
  3.5735735718194237`*^9, 3.573573572316063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2Well", "[", 
   RowBox[{
   "V_", ",", "c_", ",", "b_", ",", "length_", ",", "p_", ",", 
    "numberofstates_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm", ",", 
      "Energies"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Compute", " ", "eigenvalues", " ", "for", " ", "the", " ", "gaussian", 
       " ", 
       RowBox[{"well", ".", " ", "Note"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "all", " ", "the", " ", "work", " ", "I", " ", "am", " ", 
        "doing", " ", "c"}], "=", ".5"}], ",", " ", 
      RowBox[{
      "this", " ", "is", " ", "because", " ", "the", " ", 
       "experimentalists"}], ",", " ", 
      RowBox[{"work", " ", "with", " ", "a", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], "]"}]}], ",", " ", 
      RowBox[{"where", " ", "I", " ", "defined", " ", "my", " ", "c", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", ")"}], "2"]}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            SuperscriptBox["c", "2"]}], ")"}]}], "]"}], ".", " ", "Since"}], 
       " ", "I", " ", "work", " ", "in", " ", "units", " ", "of", " ", "the", 
       " ", "waist"}], ",", " ", 
      RowBox[{"c", "=", "1"}], ",", " ", "but", ",", " ", 
      RowBox[{
       RowBox[{"by", " ", "putting", " ", "it", " ", "c"}], "=", ".5"}], ",", 
      " ", 
      RowBox[{
      "I", " ", "get", " ", "to", " ", "pop", " ", "out", " ", "the", " ", 
       "2", " ", "on", " ", "the", " ", 
       RowBox[{"top", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}], "-", 
         RowBox[{"1000000000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"p", "+", "1"}], "]"}]}]}], ",", "numberofstates"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Energies", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1000000000"}], ",", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575225448791072*^9, 3.575225449138295*^9}, {
  3.575843959070161*^9, 3.575844049089106*^9}, {3.577715884860284*^9, 
  3.577715895925346*^9}, {3.577729614583228*^9, 3.577729671390502*^9}, {
  3.5777297162324123`*^9, 3.5777297458060083`*^9}, {3.577729779134789*^9, 
  3.5777298323570013`*^9}, {3.579029299987281*^9, 3.579029300593554*^9}, {
  3.579029652536113*^9, 3.57902965423907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computePlaneMatrix2WellBias", "[", 
   RowBox[{
   "V1_", ",", "V2_", ",", "c_", ",", "b_", ",", "length_", ",", "p_", ",", 
    "numberofstates_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "l", ",", "m", ",", "H", ",", "Em", ",", "M", ",", "norm", ",", 
      "Energies"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Compute", " ", "eigenvalues", " ", "for", " ", "the", " ", "gaussian", 
       " ", 
       RowBox[{"well", ".", " ", "Note"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "for", " ", "all", " ", "the", " ", "work", " ", "I", " ", "am", " ", 
        "doing", " ", "c"}], "=", ".5"}], ",", " ", 
      RowBox[{
      "this", " ", "is", " ", "because", " ", "the", " ", 
       "experimentalists"}], ",", " ", 
      RowBox[{"work", " ", "with", " ", "a", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", ")"}], "2"], "/", 
          SuperscriptBox["c", "2"]}]}], "]"}]}], ",", " ", 
      RowBox[{"where", " ", "I", " ", "defined", " ", "my", " ", "c", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", ")"}], "2"]}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            SuperscriptBox["c", "2"]}], ")"}]}], "]"}], ".", " ", "Since"}], 
       " ", "I", " ", "work", " ", "in", " ", "units", " ", "of", " ", "the", 
       " ", "waist"}], ",", " ", 
      RowBox[{"c", "=", "1"}], ",", " ", "but", ",", " ", 
      RowBox[{
       RowBox[{"by", " ", "putting", " ", "it", " ", "c"}], "=", ".5"}], ",", 
      " ", 
      RowBox[{
      "I", " ", "get", " ", "to", " ", "pop", " ", "out", " ", "the", " ", 
       "2", " ", "on", " ", "the", " ", 
       RowBox[{"top", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"l_", ",", "m_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox[
         SuperscriptBox["m", "2"], "2"], 
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"m", ",", "l"}], "]"}]}], " ", "-", " ", 
       RowBox[{"V1", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "b"}], "+", 
              RowBox[{"\[ImaginaryI]", "*", 
               SuperscriptBox["c", "2"], 
               RowBox[{"(", 
                RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
          FractionBox[
           SuperscriptBox["b", "2"], 
           RowBox[{"2", 
            SuperscriptBox["c", "2"]}]]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}], "-", 
       RowBox[{"V2", "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{"2", 
              SuperscriptBox["c", "2"]}]], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"b", "+", 
               RowBox[{"\[ImaginaryI]", "*", 
                SuperscriptBox["c", "2"], 
                RowBox[{"(", 
                 RowBox[{"l", "-", "m"}], ")"}]}]}], ")"}], "2"]}], "-", 
           FractionBox[
            SuperscriptBox["b", "2"], 
            RowBox[{"2", 
             SuperscriptBox["c", "2"]}]]}], ")"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "\[Pi]", "]"}], "*", 
        FractionBox[
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], "c"}], "length"]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["l", "length"]}], ",", 
             RowBox[{"2", "\[Pi]", "*", 
              FractionBox["m", "length"]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{
              RowBox[{"-", "p"}], "/", "2."}], ",", 
             RowBox[{"p", "/", "2."}]}], "}"}]}], "]"}], "-", 
         RowBox[{"1000000000", "*", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"p", "+", "1"}], "]"}]}]}], ",", "numberofstates"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Energies", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1000000000"}], ",", 
        RowBox[{
         RowBox[{"M", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.579020735614525*^9, 3.579020754205987*^9}, {
  3.579029200089849*^9, 3.5790292030800734`*^9}, {3.5790292419351883`*^9, 
  3.5790292603229237`*^9}, {3.579029666557528*^9, 3.579029669938107*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.574614917735589*^9, 3.5746149215112333`*^9}, {
   3.575225666969421*^9, 3.575225667267716*^9}, {3.575392421034246*^9, 
   3.575392424448786*^9}, 3.575843949513698*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "1", "]"}], "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"N", "@", 
       RowBox[{"FindDivisions", "[", 
        RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "1", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575820525230095*^9, 3.575820525230957*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SinTunnel", "[", 
   RowBox[{"VEr_", ",", "\[Lambda]si_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Et", ",", "Er"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "The", " ", "mathieucharateristic", " ", "function", " ", "will", " ", 
       "give", " ", "the", " ", 
       RowBox[{"value", " ", "'"}], 
       RowBox[{"a", "'"}]}], ",", " ", 
      RowBox[{
       RowBox[{"corresponding", " ", "to", " ", "the", " ", 
        RowBox[{"equation", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "''"}], " ", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", 
             RowBox[{"2", "*", "q", "*", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", "*", "z"}], "]"}]}]}], ")"}], "y"}]}]}]}], " ", 
       "=", " ", 
       RowBox[{"0.", " ", "So"}]}], ",", " ", 
      RowBox[{
       RowBox[{
       "one", " ", "has", " ", "to", " ", "get", " ", "the", " ", "SWE", " ", 
        "into", " ", "a", " ", "form", " ", "like", " ", 
        RowBox[{"this", ".", " ", "This"}], " ", "is", " ", "why", " ", "the",
         " ", "Et", " ", "factor", " ", "comes", " ", 
        RowBox[{"in", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           FractionBox[
            SuperscriptBox["h", "2"], 
            RowBox[{"2", "*", "m"}]], 
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["dx", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "x"}], "]"}]}], "-", 
          "E"}]}]}], "=", 
       RowBox[{
        RowBox[{"0", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{
           FractionBox["V", "2"], 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox["m", 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], 
               SuperscriptBox["\[Chi]", "2"]}]]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "*", 
             FractionBox["\[Pi]", "\[Lambda]"], "*", "\[Chi]", "*", 
             "\[Theta]"}], "]"}]}], "-", "E"}]}], "=", 
        RowBox[{
        "0", "\[IndentingNewLine]", "where", " ", "\[Chi]", " ", "contains", 
         " ", "the", " ", "units", " ", "and", " ", "scaling", " ", "of", " ", 
         RowBox[{"x", ".", " ", "To"}], " ", "get", " ", "the", " ", "Cos", 
         " ", "term", " ", "to", " ", "look", " ", "right"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"this", " ", 
        RowBox[{"becomes", ":", " ", "\[Chi]"}]}], "=", 
       FractionBox["\[Lambda]", "\[Pi]"]}], ",", " ", 
      RowBox[{
       RowBox[{"and", " ", "the", " ", "equation", " ", 
        RowBox[{"becomes", ":", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           SuperscriptBox["d", "2"], 
           FractionBox[
            SuperscriptBox["\[Psi]", "2"], 
            SuperscriptBox["d\[Theta]", "2"]]}], "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["V", "4"], 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               FractionBox[
                RowBox[{"m", "*", 
                 SuperscriptBox["\[Lambda]", "2"]}], 
                RowBox[{
                 SuperscriptBox["\[HBar]", "2"], "*", 
                 SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"E", "*", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             FractionBox[
              RowBox[{"m", "*", 
               SuperscriptBox["\[Lambda]", "2"]}], 
              RowBox[{
               SuperscriptBox["\[HBar]", "2"], "*", 
               SuperscriptBox["\[Pi]", "2"]}]]}], ")"}]}]}]}]}], "=", "0"}], 
      ",", " ", 
      RowBox[{
      "so", " ", "the", " ", "term", " ", "in", " ", "brackets", " ", "is", 
       " ", "the", " ", "scaling", " ", "factor", " ", "Et"}]}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Er", "=", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], 
        SuperscriptBox["ks", "2"]}], 
       RowBox[{"2", "mRb"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Et", " ", "=", 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], "*", 
       FractionBox[
        SuperscriptBox["\[HBar]", "2"], 
        RowBox[{"2", "*", "mRb", "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Lambda]si", ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "4."], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{".999", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}], "-", 
        RowBox[{"MathieuCharacteristicA", "[", 
         RowBox[{"0", ",", 
          RowBox[{"(", 
           RowBox[{"VEr", "*", "Er", "*", 
            FractionBox["1", 
             RowBox[{"4", "Et"}]]}], ")"}]}], "]"}]}], ")"}], "*", 
      RowBox[{"Et", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Pi]", "*", "\[HBar]"}], ")"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.57582988377533*^9, 3.575830111603978*^9}, {
  3.575830396726634*^9, 3.575830398582494*^9}, {3.5758304830478477`*^9, 
  3.575830487208008*^9}, {3.575835287322336*^9, 3.5758352903300734`*^9}, {
  3.5758440598942003`*^9, 3.575844465843758*^9}, {3.5758445189049053`*^9, 
  3.575844521607729*^9}, {3.575844649878894*^9, 3.5758446802809763`*^9}, {
  3.575844804666147*^9, 3.575844808136818*^9}, {3.5758450953406763`*^9, 
  3.575845131291162*^9}, {3.577713707009363*^9, 3.577713707834486*^9}}],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.575845163398172*^9, 3.575845164496395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"groundState1D", "[", 
   RowBox[{"EM_", ",", "L_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Size", " ", "=", 
       RowBox[{"Length", "[", "EM", "]"}]}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EMn", " ", "=", " ", 
      RowBox[{"Normalize", "[", "EM", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EMn", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "*", 
        RowBox[{"N", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "*", "2.", "*", 
             FractionBox["\[Pi]", "L"], "*", 
             RowBox[{"ky", "[", 
              RowBox[{"i", ",", "Size"}], "]"}], "*", "x"}], "]"}], 
           RowBox[{"Sqrt", "[", "L", "]"}]], ",", "8"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "Size"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"groundState1Dplt", "[", 
    RowBox[{"V_", ",", "c_", ",", "b_", ",", "L_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WE", ",", "x", ",", "gstate", ",", "estate"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WE", " ", "=", " ", 
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", "c", ",", "b", ",", "L", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gstate", "[", "x_", "]"}], ":=", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"estate", "[", "x_", "]"}], ":=", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"gstate", ",", "estate"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\n", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WigMaker", "[", 
   RowBox[{"V_", ",", "c_", ",", "b_", ",", "L_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "WE", ",", "WigPsi0", ",", "WigPsi1", ",", "Wig1", ",", "Wig2", ",", "x",
       ",", "test"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WE", " ", "=", " ", 
      RowBox[{"computePlaneMatrix2Well", "[", 
       RowBox[{"V", ",", "c", ",", 
        RowBox[{"b", "/", "2."}], ",", "L", ",", "p"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"WE", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", "10000"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Now", ",", " ", 
       RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
       RowBox[{
       "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WigPsi0", " ", "[", "x_", "]"}], " ", "=", " ", 
      RowBox[{"groundState1D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"WigPsi1", "[", "x_", "]"}], " ", "=", " ", 
      RowBox[{"groundState1D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", 
       " ", "and", " ", "excite", " ", "state"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "previous", " ", "version", " ", "of", " ", "wigmaker", " ", 
        "failed"}], ",", " ", 
       RowBox[{"as", " ", "WigPsi0", " ", 
        RowBox[{"wasn", "'"}], "t", " ", "always", " ", 
        RowBox[{"real", ".", " ", 
         RowBox[{"Ansatz", ":", " ", 
          RowBox[{
          "WigPsi0", " ", "and", " ", "WigPsi1", " ", "are", 
           "\[IndentingNewLine]", "conjugate", " ", "related"}], ":", " ", 
          RowBox[{
           RowBox[{"if", " ", "Im", " ", "Psi0"}], " ", "\[Equal]", 
           "0"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"then", " ", "Re", " ", "Psi1"}], " ", "\[Equal]", "0"}]}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Wig1", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig1", "[", "x", "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", "x", "]"}], "+", 
           RowBox[{"\[ImaginaryI]", "*", 
            RowBox[{"WigPsi1", "[", "x", "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Wig2", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig2", "[", "x", "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", "x", "]"}], "-", 
           RowBox[{"\[ImaginaryI]", "*", 
            RowBox[{"WigPsi1", "[", "x", "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Wig1", ",", "Wig2", ",", 
       RowBox[{"WE", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"WigMakerBias", "[", 
   RowBox[{
   "V1_", ",", "V2_", ",", "c_", ",", "b_", ",", "L_", ",", "p_", ",", 
    "phase_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "WE", ",", "WigPsi0", ",", "WigPsi1", ",", "Wig1", ",", "Wig2", ",", "x",
       ",", "test"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WE", " ", "=", " ", 
      RowBox[{"computePlaneMatrix2WellBias", "[", 
       RowBox[{"V1", ",", "V2", ",", "c", ",", 
        RowBox[{"b", "/", "2."}], ",", "L", ",", "p", ",", "2"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"WE", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", "10000"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Now", ",", " ", 
       RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
       RowBox[{
       "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WigPsi0", " ", "[", "x_", "]"}], " ", "=", " ", 
      RowBox[{"groundState1D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
     "\n", 
     RowBox[{
      RowBox[{"WigPsi1", "[", "x_", "]"}], " ", "=", " ", 
      RowBox[{"groundState1D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "L", ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", 
       " ", "and", " ", "excite", " ", "state"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "previous", " ", "version", " ", "of", " ", "wigmaker", " ", 
        "failed"}], ",", " ", 
       RowBox[{"as", " ", "WigPsi0", " ", 
        RowBox[{"wasn", "'"}], "t", " ", "always", " ", 
        RowBox[{"real", ".", " ", 
         RowBox[{"Ansatz", ":", " ", 
          RowBox[{
          "WigPsi0", " ", "and", " ", "WigPsi1", " ", "are", 
           "\[IndentingNewLine]", "conjugate", " ", "related"}], ":", " ", 
          RowBox[{
           RowBox[{"if", " ", "Im", " ", "Psi0"}], " ", "\[Equal]", 
           "0"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"then", " ", "Re", " ", "Psi1"}], " ", "\[Equal]", "0"}]}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Wig1", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig1", "[", "x", "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", "*", "phase"}], "]"}], "*", 
            RowBox[{"WigPsi1", "[", "x", "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Wig2", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig2", "[", "x", "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", "x", "]"}], "+", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "*", "phase"}], "]"}], 
            RowBox[{"WigPsi1", "[", "x", "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Wig1", ",", "Wig2"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Onsite", "[", 
    RowBox[{"V_", ",", "c_", ",", "b_", ",", "L_", ",", "p_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "WE", ",", "WigPsi0", ",", "WigPsi1", ",", "Wig1", ",", "Wig2", ",", 
       "x", ",", "U"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WE", " ", "=", " ", 
       RowBox[{"computePlaneMatrix2Well", "[", 
        RowBox[{"V", ",", "c", ",", "b", ",", "L", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"WE", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "10000"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"groundState1D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "12", ",", "x"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Now", ",", " ", 
        RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
        RowBox[{
        "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WigPsi0", " ", "[", "x_", "]"}], " ", "=", " ", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "12", ",", "x"}], "]"}]}], ";",
       "\n", 
      RowBox[{
       RowBox[{"WigPsi1", "[", "x_", "]"}], " ", "=", " ", 
       RowBox[{"groundState1D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"WE", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", "12", ",", "x"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", 
        " ", "and", " ", "excite", " ", "state"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Wig1", "[", "x_", "]"}], "=", 
       FractionBox[
        RowBox[{
         RowBox[{"WigPsi0", "[", "x", "]"}], "+", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"WigPsi1", "[", "x", "]"}]}]}], 
        RowBox[{"Sqrt", "[", "2", "]"}]]}], ";", "\n", 
      RowBox[{
       RowBox[{"Wig2", "[", "x_", "]"}], "=", 
       FractionBox[
        RowBox[{
         RowBox[{"WigPsi0", "[", "x", "]"}], "-", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"WigPsi1", "[", "x", "]"}]}]}], 
        RowBox[{"Sqrt", "[", "2", "]"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"U", " ", "=", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"Wig1", "[", "x", "]"}], "]"}], "4"], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", "L"}], "/", "2"}], ",", 
           RowBox[{"L", "/", "2"}]}], "}"}]}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
    "make", " ", "a", " ", "wannier", " ", "generating", " ", "function", " ",
      "for", " ", "2", "D"}]}], "*)"}]}], "\n", 
 RowBox[{"groundState", "[", 
  RowBox[{"EM_", ",", "L_", ",", "x_", ",", "y_"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"WanMaker2D", "[", 
   RowBox[{"V_", ",", "b_", ",", "L_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "WE", ",", "WigPsi0", ",", "WigPsi1", ",", "Wig1", ",", "Wig2", ",", "x",
       ",", "test", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"WE", " ", "=", " ", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BuildPlaneMatrix2D2Well", "[", 
          RowBox[{"V", ",", "L", ",", "p", ",", 
           RowBox[{"b", "/", "2."}]}], "]"}], "-", 
         RowBox[{"1000.", "*", 
          RowBox[{"IdentityMatrix", "[", 
           SuperscriptBox["p", "2"], "]"}]}]}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"WE", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", "10000"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Now", ",", " ", 
       RowBox[{"take", " ", "the", " ", "eigenvectors"}], ",", " ", 
       RowBox[{
       "and", " ", "build", " ", "the", " ", "wannier", " ", "functions"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WigPsi0", " ", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
      RowBox[{"groundState", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "L", ",", "x", ",", "y"}], 
       "]"}]}], ";", "\n", 
     RowBox[{
      RowBox[{"WigPsi1", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
      RowBox[{"groundState", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"WE", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "L", ",", "x", ",", "y"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Check", " ", "normalization", " ", "of", " ", "the", " ", "ground", 
       " ", "and", " ", "excite", " ", "state"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "previous", " ", "version", " ", "of", " ", "wigmaker", " ", 
        "failed"}], ",", " ", 
       RowBox[{"as", " ", "WigPsi0", " ", 
        RowBox[{"wasn", "'"}], "t", " ", "always", " ", 
        RowBox[{"real", ".", " ", 
         RowBox[{"Ansatz", ":", " ", 
          RowBox[{
          "WigPsi0", " ", "and", " ", "WigPsi1", " ", "are", 
           "\[IndentingNewLine]", "conjugate", " ", "related"}], ":", " ", 
          RowBox[{
           RowBox[{"if", " ", "Im", " ", "Psi0"}], " ", "\[Equal]", 
           "0"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"then", " ", "Re", " ", "Psi1"}], " ", "\[Equal]", "0"}]}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Wig1", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig1", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "+", 
           RowBox[{"\[ImaginaryI]", "*", 
            RowBox[{"WigPsi1", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", "\n", 
     RowBox[{
      RowBox[{"Wig2", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Wig2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "=", 
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"WigPsi0", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "-", 
           RowBox[{"\[ImaginaryI]", "*", 
            RowBox[{"WigPsi1", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}], 
         RowBox[{"Sqrt", "[", "2", "]"}]], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Wig1", ",", "Wig2", ",", 
       RowBox[{"WE", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"width", "[", 
   RowBox[{"W1_", ",", "W2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ",", "y1", ",", "y2", ",", "w1", ",", "width1"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y1", "=", 
      RowBox[{"y", "/.", 
       RowBox[{"Last", "[", 
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"W1", "[", "y", "]"}], ",", "y"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"w1", " ", "=", " ", 
      RowBox[{"y", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"W1", "[", "y", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"W1", "[", "y1", "]"}], "/", "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"width1", " ", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"y1", "-", "w1"}], ")"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distance", "[", 
   RowBox[{"W1_", ",", "W2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"y", ",", "y1", ",", "y2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"y1", "=", 
      RowBox[{"y", "/.", 
       RowBox[{"Last", "[", 
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"W1", "[", "y", "]"}], ",", "y"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y2", "=", 
      RowBox[{"y", "/.", 
       RowBox[{"Last", "[", 
        RowBox[{"NMaximize", "[", 
         RowBox[{
          RowBox[{"W2", "[", "y", "]"}], ",", "y"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y1", "-", "y2"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findbestwan", "[", 
   RowBox[{"V1_", ",", "V2_", ",", "b_", ",", "L_", ",", "numbasis_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"W", ",", "widthtest", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Create", " ", "wan", " ", "list"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"W", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"WigMakerBias", "[", 
         RowBox[{"V1", ",", "V2", ",", ".5", ",", 
          RowBox[{"b", "/", "2"}], ",", "L", ",", "numbasis", ",", "#"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"2", "*", "\[Pi]"}], ",", ".1"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"widthtest", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"width", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", "W"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"p", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{"widthtest", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"W", "[", 
        RowBox[{"[", 
         RowBox[{"p", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"W", "[", 
        RowBox[{"[", 
         RowBox[{"p", ",", "2"}], "]"}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.57584452966441*^9, 3.57584461152061*^9}, {
   3.575845160977784*^9, 3.575845162368773*^9}, 3.579026545438237*^9, {
   3.57903142595008*^9, 3.5790314298079453`*^9}, {3.579031644572927*^9, 
   3.5790316714836607`*^9}, {3.579031869761085*^9, 3.579031905226452*^9}, {
   3.5790319798740253`*^9, 3.579031983134795*^9}, {3.579032051203521*^9, 
   3.5790320532088614`*^9}, 3.579032149654749*^9, 3.579033031280242*^9, {
   3.579035599190915*^9, 3.5790355997440557`*^9}, {3.5790356643667*^9, 
   3.579035687469288*^9}, {3.579035767558126*^9, 3.579035785987606*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["2.71828182845904523536028747135266249776`8.", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"6.283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
         "-", "0.20710678118654752440084436210484903928`7.316194318998156"}], 
         " ", "x_"}], "-", 
        RowBox[{
        "0.20710678118654752440084436210484903928`7.316194318998156", " ", 
         "y_"}]}], ")"}]}], "L_"]}]], 
  RowBox[{
   RowBox[{"Norm", "[", "EM_", "]"}], " ", "L_"}]]], "Output",
 CellChangeTimes->{
  3.579026566877153*^9, {3.579026670869362*^9, 3.579026708349539*^9}, 
   3.579031680613637*^9, 3.5790320611941433`*^9, 3.5790321509784184`*^9, 
   3.579033044898162*^9, 3.579033632779913*^9, 3.5790356903507853`*^9, 
   3.5790357914934483`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5758445424363422`*^9, 3.575844543548328*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", 
  RowBox[{"WanMaker2D", "[", 
   RowBox[{"10", ",", "1.5", ",", "8", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.579026744775959*^9, 3.5790267537463207`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Wig1$253577", ",", "Wig2$253577", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1005.2670496754519`"}], ",", 
     RowBox[{"-", "1004.4045285162608`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.579026755940333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5790267576659927`*^9, 3.579026776446113*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1XXlcTs/3p0KWFiHKFiWkkESR5pYtopKUJYTsIpWdZJdCu7ImpLSRLcRN
9p3KGuJRobL00CLUz8edc57vHff3+ed59Tafuee+58yZc86cmdtp+iLnmUr1
6tWraFivnvKf306vRp+sq9PIgt/6T00cdm2sHjTL73jMGa+miD93rd7TrXMr
62NNWwR45TdE3LKxf97U/LbWn+OWzDIYoYT4x7PlpsVfmlnP/NvPTx7wp8UT
vvxa2o+2lyM+oWaQX9OfnhSXIV4/pqnauGMLrevR/wB3PTrKPOegO7QngGdf
iOi5vNoU+kc8SPl+QseEviAP4u4jprXeO7c5yM8B3nR9h/fN4zXgfRHfO+m3
ht3k5taUH8R7db4TN7JIyZr+jbiLgfewtD98wt/Aq3F8wlPjjh0J/A2/V1JV
Tq9zHECAZ8BNVAePeBViQ4BnwLV6WR3ftc+UAM+AX18yceGA6ZMI8Ax47062
rWJLAwnwDHjfT14DjleFEeAZ8IjSbIcrSeugPco7JiznyKENrtA/4t3vdAnU
mjMB5EF8boxFVZOx5iA/B3iTfNPxGlp94X0R72Naz7z9RnP4/xG32+fdbWh6
Vxg/xHe8GPNo5B8+gWfgb4Jzsk73lC4oB+B8W25Wm7jByDP8zlb58HqKhh3y
DHji9asTfoRzyDPge0zvtnGdOB15BnxYu9XHPQ+GIc+Au44cd1Bz9h7kGfDm
jnma15fjuKBcUdt7N+oT4oE8A/6j9Y60qerTkWfAH2t0mWvvNAB5BvzQtUW5
Db9YIs+A3y7ydKydwSHPgJ9ZUKQZmNwbeQb83T7+u/UfPoFn4Cn6UOzv/Vmd
kGfAo4b2C585Gp+L+PLQLrPb6w9HnuE303LD0bvWXZBnwF09dp7sv3sO8gx4
8JGU1W0ahCDPgB/3nCr7sTsKeQb8u1+xc5e0Tcgz4LEOZW+UPMchz4A7ezdo
tER9GvIM+NqB0+bHB6L8HODrD6c1dO3PIc+A++bdGP/peh/kGfBTzhGl6TU9
kGfsf8b0e6l/+ASegQ+jtaefrB6jgTwDvmLmknenl/9E+wz4PccljTz8hqDc
gI87eLA62GIK8gy/2V37ava/vgx5Bjz+bclvTbVtyDPgmR/aLGh5eQfyDPju
x9pLNLoo7Abgm4r51G0alsgz4HG7riRf2ajQZ8AL5g6UbfaehDwDfnbr18LB
JXbIM+Cd04IizPeiHiL+et/G3Fyttsgz4HenH08J/MOnWJ/l/JQZKffkAWqM
Psv5tY4nFwf6sfos57+cWvpu8gNXRp/l/OC3nb82XbiK0Wc5r9pk6InTM/Yw
+iznK90fDLH+lczos5yPvGuR8/HycUaf/6yfZquOno0/xOiznPedWTE1LXAe
o89yPkInc0P6q02MPst5B+2MUzor1jD6LOdPLvQvi/o2jdFnOX/n5r398x/a
Mvos5z0zufKQCiNGn+X8kx4Rh7/94VPMs4w3Nr/jOrzvdIZnGd99j4FWa7cA
hmcZHzz50KXzRtsZnmV84cjSqky1dQzPMv5o2QpO+fF5hmcZr97jRUXa9nyG
Zxl//5bW0y2XZQzPMr78UUrbLY9zGJ5lfFfe2SYhLorhWcarjsma2KHhcYZn
GX9m0lL9mEkxDM8y3u7yW3PP2M0MzzLetvGiV6scVjA8y/gJDatqWjTzYXiW
8S2+vyye9IdP4BneI3xhG+/zzRYjz4CPn7/Cov+dHcgz4BuM8ys9mqOciI/e
r/ZIaaI/8gx4ek6EXNPlKvIMePsPHmkPyorx/QGPrAz91DbxC/IM/70o5BqH
TCxAngH3vX5jU/SpeOQZ8JBTeq9iC88hz4C/2hzzfueZOOQZcC314Jg+7cKQ
Z8CXmbR8/sx7K/IM+KjcU5d06gcgz4AvUgmyuveHT0afyeRWkvpMZh2S1Gey
ZLqkPpNlcyT1mTh+ltRn4m8kqc8kVFqfiZq0PhObN5L6TCrcJPWZzJsmqc/k
53lJfSZ1HSX1mdSUVErpMxmSJ9ZnkOvFrDQp+0xaTDohZZ+JzydJ+0yKv0va
Z9JLTdI+E/sZkvaZBEnbZ9Kih6R9Jkq2kvaZvO4iaZ/JBkdJ+0xk9SXtM9Ec
cFvKPpOHvwdJ2WeS0D1KZJ/h+VsvpEj5G8RMuauUv0FOqi+T8jfIjzuS/ga5
pyLpb5CB2qVS/gaJU9KR8jfIieuS/gbxuHRdyt8gHdtJ+hukdpCVlL9BFq0p
k/I3iLz5cil/gzT02ynlb5Ap+xMk/A0lbnfSfin/mfNsO0DKf+YKt3eV8p85
g2eBUv4z59VJ0n/m5p2Q9J85fz9J/5nz85X0n7lEv1Ip/5krqFKR8p85pwaS
/jN3PD1Zyn/m8srvSfnPnE+TaCn/mbs7z0PkP0N/HdYmSsWD3JdTkvEgF+8h
GQ9yuwuuScWD3LhOkvEg11FPMh7k7K0l40HuyzDJeJDrOVUyHuSaxUnGg1z5
925S8SA30HahVDzI+SbNkIoHudR3H6XiQa7L3UxRPAj/35a4ZKn8BneJNJDK
b3DGhjZS+Q3uea5kfoOz1pDMb3BvVSXzG5xhjWR+g+ve5IpUfoMLypLMb3BK
6pL5Da7qjZlUfoO7cF0yv8HlN1aSym9wjw7MlcpvcBefjxPlN+Dfm47r9ibo
33wdV/NhTIcB/+brOJNEJ50x/+bruNalaufK/83XcZEedwOq/83XcdpG/b43
+Tdfx71fH71FIl/HtfV7dDj333wdl3zlxfJl/+brODvluIIO/+bruFVZWirb
/s3Xcbz3uKqyI//k67gc39Y2Tv/m67gzEVOHjv43X8dpxC5+dugPn0I/lXTd
KeX3F7pPbLUii8Df8Bvev9nDPkqP6LjnID41eeqh4oq7gOP/p5YSrOZgnEyg
f/j/YvY2S+nj8hT7gV9f0+Pzer0uxn4AN368Kvyo+RW2HzJNuh8yVrofYpQr
7ofKST7Q92Xei6gmSb4XyT0ovNfVbmsN88+oZcHvrFuXLBskWaLeAm415+2P
08mdoT0HeNiW6NbnVaxxvAHXr4m0vPmnPcgJv95KRv7z7NYxPMh5gy5xjRy3
HkHe4d/nTHM6t37eCMShvcqFj6a2947j+0L7YY2/XdazcWb4/BPnFvy85DA9
mej9lbMOx/2w/4F7B7dGMn5OKT/ozKE08i2VkVPGj8prdlOnx0PGzynlE58b
/2wY9Ijxc0r5T8Ov6YR3z2bkkfE1rxJqbW+8ZsZXxo+f0lbevuw8GeU25Jtd
mEoW/H/KSXNzf32PQPkBL1iaa+bqvZ/xH3J4szYGMwe4Z6P8IJf8Q+KbQIsX
DJ85vJPKwpcx90oYvyKHLznY6Vzrz6Vse6Ihap+D/R8IvLPG/cNH1DP496Kj
rVJzL57H94X2G7W8Rhlsvsb4OTnk20u1ekV2hSz/pCPDP7S/zMgJz59D57vY
L8oh1312bom6mM/KSTRSxXLCc/uNF8ZF7PeWkgbVm04c3H2b1VuiuW/0X71l
9IHcHSrWB2ivsU/QW2gHv2tUVbr5OsaiPNC+aORoQ+vnPuz85eQmWVLzl9Nr
Ljl/OcNZwvyFv2EeD16qPersxRbW0D/0t/PkmTbmxZrWTPus0536J57+017s
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
ls9Poee2mH0B0uycsC8gro/KIVfjt55sVJyB+DQ6XjvpuSrA51I8iOLAP+T3
LG4v2+YfFc3uG3JTX40NvN5qN1sHTtaUX5qp6RmM/RdT3oqp/8/k+fmKDkKe
H3im+4wki+aHmX1JLqq324SKuGjE4XzT04kNm3VqEMfWn5ONmYtsxq/ejngY
zU/mj9qinfZnvACn+5Jk707SVG1tLJ5jAf/93uQlXcMa9MdzL4BPjXZzfO2q
h+coAK8cpdlx40VrrPsHXL7hw6TbuT2xTh3wIPXhed8q3LA+G/BUC5/zxqmb
sV4Z8CsbbqUo8jz16gH+NeVdalSZP9atAu5f/2VWr5Nwfk2OuJqG7SvNga5Y
jwj4j1n79Y8l9MH6OcCHv79Sem+nKdZ7Ab5j/kid3bmKexEBz3gdrPv7ggHy
CXmyhGNOG9Yr2yKfgG917rfwahcD5BPw8df8V1xaNExxvoLi2eZn5JOGDkI+
Af/k6/mmUe9pyCfgEyc02LK2XyjyCbi6754tFvYxyCfgfSodPTZt2oJ8Al6x
fNB3sxVTkE/APewftLx91gP5BHyAPHHUT01L5BPw3yNjv99cZoF8Av7L0+2q
StUgRb0XxWeM9Hs35UtPrE8CPLP8XOizLgqeIb50qJd+szwQ7zFDvFODLjed
LfWRZ8DDVqt/P71KcZ8n4M12JVft1jJDngF/0HOzzmDbWcgz4FpabTVP1ynu
88T2u3/OXT87GnkGnI/vuPuyroJnwF3bVo85ensC8gy4aZpFQ6+Fivs8ATfM
yDXUPjIYecb+lx1pfb92EPKMPISqthjbyAJ5BnzAtQ8HtGtNkGesL57Q5aXn
H96AZ4z/9niVf1XB+z8Rn6XsYFYboYM8A37Ie/TZS3eGKs4RUdxW5dYwM28n
5Bnw76W//RIb+yDPgHtoH/oZ23Q78ox1IGXmzbJ/K+6ZBNzuSO0M3XkbkGfA
h9ntDS46ao88A16zoXDC3lsKngG/q1zZNGX3WOQZ8D3aDyvuhgxBngFXTVbT
V43sgTwDnueUNE892wB5Brzf6vsWzSN1kGfwjzYebWr/2Epxzyfgl/ycW4w4
pI48A75zgu0i28LRyDPgrkl365urLESeAS9robLyXHUQ8gx4ZGWt5udmK5Bn
wP11FvFHbyxDngGPf6N2+pnLIuQZcC3VYWYnHqGdRzy4z23VK72WIs+A3zxo
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
ngeEfgF/Qu+r+T9dwqEF
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmwf8V1Mfx+8496aBlCSyynqSvaJBEw1SsopSikSpZCSjjNAiKy0lkdFA
JZQRlVGyR8jMKLIqM57Pu895Xs/r9T+v7+d+7/mde+6553z3f4/u/Tr0zZIk
6RCSJBetILqd6L1i7ie8t/BrRZIcIXyw8OviHyp8IFj8t3TdQriG6OHiHyS8
UvyWZZIsFu9V4cPEP0D8FcIv0k+4FN1L/N2EXxa/ofARwm8JHx3c503hthrn
TfV9Q3hP8XcX/xXhvYX3EH5W92oL1xReJn594X2ElwvvL7yv8FL16ayX+1r4
UtEGak8IDxB/b+Gpwt2E9xCeINxZeHfh8cJnCu8kfLvwKcL/0bhVhbfS2K15
f+Yp3ER9nha+XH3mas4H6/ov3f9XvAPTJFnDXMU/VvxCtJF+c6R4b6tPK/Fe
EL5Wv91F95YIv6T7x4j/jPAV4h8nvFh4qHAt4bHCHYU7qt+Jwqs1TmfhU4U/
E35Z47RVv21El6m1Ed5adKlaa+EqoovUGgsH0UfUdhX+Rb99Rbid8LaiC5mr
cC76qtqJwlVFz9KzTtezftQcFuu6hfgVRZ9XayZcQfRk9WmnPp9ozOd03VT8
UvRFtZbClXhXtROEK4s+rXa0cCo6R62e8G/67WPC+wn/LvyMcEPhTPQAjd8g
ft/uwp2Fv1CfbsJdhL8U7iJ8mvDnwvP0m0P027+F5wsfKrxZ+Enhw4T/EV4g
fLjwv8KzhfcS3iQ8U7iu8AbhMzVmJ435qfAs8fcUf6PwE8L7C/8p/JTwURwo
0cfV6gv/If5Npc8M+3ln8e5Ql07sYeE7hU8Vvkn3rtKeuVl0UeYzlYguzHzu
/tW9HdX/Ns5t5jPJ2cxEv9P4/4p+q9+uFD1E/DzzOaFPKrok897bSrS3+rXR
eBfwLpnP1M+6npn5rP0kPC/zmfpd+KXM57RC5nVn/SvyPsgF4cCZV6sv/I/6
n61xjxIdLvqC+HuKv1HX9XXdTPg4ZIlwc+HjhQ8R7qN3+1Hv8b76HyV+5cwy
4DDhQnQZ51D4L43zsnA94b+Fj9JvLxTuqXH6CbcXb7zoexrrAo15MN9IdF/x
x4q+K35v0QPE76/WQfwJhd8LufGnrl9BDgpvFn5U7Xa1jrr+Sr+7R/gL0U/U
p714u4tujue9u+j+GmtD4rU9SG2TcFfRVZnPxS6i76i1Eq7JO2ms+4V7CB8g
/LDw+Xxz4UeEe7MXhB9lTL6J8H3C5/A9hR8X7i/8LvJCeEfeQ/xpwt2RdYVl
4OHIc/EfE76Y76nrf4Qv5BtpTZrr3lacD13/Lv7pom+rX0vhHUS/yHym9hL9
PLPM2VP0s8znoi599Pu5Gudi5Ju+R1Pxe+n6G907S7ie6NeZz+l/RK/gXGnd
Bot+mVm27C26XO0Y4W1FX1NrIryN6HtqxwvXEl2hdqxwVdGPMsvDXUU/VjtJ
eLd4RpjDdvG37NtKoo9qnrtpXr/qucuF2wtvx9lVe4x30tzn6d4bmtsLog2Q
TeJ/Kv7+wvfxDdFvwtNYe+Fmws9xBoXrC08Vflu4OfKRMyrcqvQ+XifcSHg+
ayZ8NPKCdUX+Cz8lvEb4WOQja8ZaCj8j/I1wi9Lnaq3wfsJThN/iTAnfz7ui
k4WnC7+k+T+QWVd+rvdZJf4Kve+N4v8l/vniH8qa694KtYGJ3/tFtUnCI0rv
LXTWLaX3Lvr65tL7A319pPBs4dXYC8IPCr+Pbhd+lG+CrhReIPwVeh7dw3cT
PlT4IeEPkQPCM4Q/ED5M+GHhVcHzej7OrbH4T4r/pfg1ot2CDDuutFz4Xrxf
hP/WO87V3E4SXaU+45BRuvda4m89R/ee1ZiPiR5f+sz/oPsXq/VSnzXin1Ba
rq0Xb2Dps7er+ANK2w27CC/TvZcT69xLS5/bPcQfVPps7y58SekzuZvwFaVt
kbrCffXbnsgV7B+1XPPZQ/e76JmTkdu6X0/XK/kWwotTY2TB0epzCfIZuSne
LshA4R2CbZUlGq+OrmcK91HfKbqern5TC68la/oc31nXr4NFi+BvHkQXFV7v
i4KfvTKeBWyhH6OtyBlhTk+K3q82Q3h64d8zznXoRWwK8f9AZupdJop2KTwu
4/8jOk38P9nnjCFcTX1+EH5QeDvh79nDwhWE1/IewqXwd8L3Cf+R+Xvdz3fn
jAhPFf4989pOFP45s53QIli2vIcuCpYt7wo3jnYFcmIFdozGr4ZcFL+x+O+o
zyRd/5LZxpggvD6zjfGQcE31/0l4vPAPme2xu4S/zWyn3VlaDmIX3VFaDn4s
fHtp2feR8D3C32e2Me4WvlBj1hIdW1r+rhL/ttLy90PhW0vL3w8K2/JtE485
prR+eh+bPFhOghuK/wQ6XHhkaZ3Ee40qLUNZh9GlZSjr863wpszfqF2w7GWe
bYN1DfN5R31O1Txriv4jOhF7VfQp3XtJ330B+0v3OohXHVmVmt899Rnsr/4j
RZekPo/we6gtUquo1kJtoVqd1Gea8XnOE/rNMOQ5di86W62t2pt6RifOgegb
aqcI1yi935fHPb9S1x3F3x4Zo7aL8M8a59U4TvdIub5O7StksvrUQb9l9o9+
E/9LZFHuM9s6WFfyLdoE63e+0b+6v1R9r8GuR14IPx3P4NIo0/oFn+V/RTum
fp+2cR7gbxOvzauRh2xeFuXzr3r2b5l/y7ouiX1mF15D5NsHun+0+lZh36g1
FN46s6+2l/Am9duntB7Hzu3JOcfmEf0us11TH52v6/rid2Kv5rZ7+sf3qif+
KaKnqY0T7wONN0y8xmq7qvXSuGer/8zC3/Ph+E33wgbg7KArhLcTrxnnVM8b
qv7LdK8N8kL4D41xA3tGfa7njOje/sKnIWcS467YproeI3qSxrhVeJTwctFb
4n7iuYfz7NT9aojumfp52K1/40eo3Sx8EzJZrY+e3UO8h1gTjXUOe0l0T/Q7
fiZyPbWd2UH9pon2VquiNl+/qRa/+xWirVhvta3VdmdvqP+JhZ+PQ96eeQve
wNx1f6RaXcZGt4pOU9+rdO9q9RmNj6d2HXa1fvdI7rmfLjqwsC96pOhZuu4r
fBlnQ+1e4bMyy2O+9e2ix4oenbrfNrq+HvtcfarkPmuthG8I9kEqi7e35jNC
+HrxPkNOC3fLbV/wHa8VfTn32t4m2qrwe51ceO13iOvPO9WI6185+jgnI3cy
2/ZHiG5W64MdKzo7yoht1E4qvI7nIov026bCD4geJlqdOfDOcf22V7tZ9z4T
76bc32EntVo8P7fORfceL/yO8G2Zv//w1DpsuPhvin+r+Ccg31gf7KJ8i6uW
9MD2Vb8j1WqrPaJ2aHz25Wot1fZWO0Stcurv1zO13u8n3CnYp0CWTuZ8q2Wp
/W1s432gwb7I3Xruw2qP6/4M0Z907wzx9xU9rPA4jNdA1wNYY/Zs4bPYVvTa
wnuvneiVamcwR9HrRZuoVeDsFp7jVoXl+aIoV9hfnJFz1AbkpmfklhHIipm5
/Y5uwudrDiPwiZF1ogtS+7m81zRsItFR7MHSthA20azc8u9R0c6pfYQitS5F
huwnekqwnY9+xPdin/PsiXruNbq+RfQy5JHwpaKz1DYh59X/avEOinPoK94X
iWXI7tj27A/Re3WvUXzuJWrnRzn2pu43FJ2C3M/8LZB3E8U7ObXvNDPS3xL7
oPi526vvfqy/8Cea+xpdtxaundlPRu7gJ04QHZ/ab2wQ6Ua12bn3zJW5fffW
qefdSfSPxHIPv7aZaPXMfldT4WqZ/dFfOVN8j9x74zzsMrUbhE9Qn3p69s9x
bufG84X+bS/+D4ll/rnqv43wer5h4fuNCj//zzgHZPJf6DTR+1Ofw6pqlXKf
fWTbEbreOf2/HYkN/7auryvctyl2jtoJrLvoSal/85P6XV14HZpgOxWWOY+I
npNbjj4s2i21HGAPYyfeLH4bPacqfo9w68y25C3CbTPHlpYhxzL74MT0Lssc
13lK+NLMcaBZwhdmjv3MFr4oc+xqqfB1wnmwLZ0Fx8/wC27IHBNaIjwsc8zp
OeGrMselFglfmTku9azwkMw22g7Cn6X2EXcUXpM6bveK8I2ZY1RzOC+Z45n4
9f0yyxZkL+vSKcq6yeK/ESy7kGGciS/j+SUGwl7F798vdUzgq8SxFPYeMQy+
J3uN80ycb4XoiMyxveXCt2SOdS0QHpQ5bvek8CWZYw4vCF+TObY3X3igcCF8
mXCTzHHUV5mbcBC+VLhx5pjc83zzzH759sIfpY51IdebZ/Y1t2J+qf3dCsKr
U/vfiJ330JuF9f1ZhX1lZPU7qX3NirxvlNm/JD4D+Kxbi36f2k+tIrw2tR9f
V3iD8Ful9/Q67Be1g8XrjK0l3gjh93L7tZXU/+vUvmxl4W9T+6vs+XeFuxVe
c+IxxBX0mZIPUscVxEpWpfabdxL+Tvjj0vr7R938qLTeWl/YJ66lPt+kjiXU
4CynjiXsLLwudTxwD+FfhFsU1o+sCXEF/Ef8yCG6PhuZXFhfIANHFI4r6HHJ
x6l9/WrC76eOi1QX/jB1rKK28A+pYyF1kDvC/UvHOmtrnPMK6zv83Sej3F6T
OEZPnKqL6Ei1VPcGiZ4bHDtqUNiHRA9jS8/IbZeNEZ2a2xa4WnRhbpl9eW69
SXzjkMw6YnN81qu6d5yuH8rtb6F3Dszst+H7HyQ6X/cfS23zXZz7TKDj8PnO
Ez4481ohYxqih6M/gl9yt3h3ISOR+7ltpBMzx2+nIicz+7Xj0DvC85iL2m2p
7VNsaezF6lFGtVOfYbnlcPfcvuYU4bPFP66w3XJrtNmxhZCDzQv7YetL+zL4
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
Ok70v083etU=
         "]], Polygon3DBox[CompressedData["
1:eJxNm2UYJEWyRatLGgZncB9scHd318GdwWFxd3d3d3cGd3d3d1ncnWVheefM
zR/vR36dtyKruroqMzLujejJN91xtR3qqqrWa6qq5XPcflW9yOeJHHyJ/rkc
PBc8OfZdwN/zeX2vqn7n2Hf0X8E+Fv03ODYj9lfBY4PfAs9Uxl9Hf3WOvc81
B2Ifhf619OfCPg7tBfAJ4Bfpj057Cnwk+Cn6vzJ+PfC04CHgd7uqWhE8Cfg0
8Bi0p8FHgZ+mPzbtefDx4Bfon875p4Mn5j52Bp8KPhU8IXhH8Gng08ATgXcC
jwkeGXwN588J/oHjw7j/0WgX07+S718D+5TYz8L+MOMfBi+DbV/wunz+G/w/
2i70P8A+Jf2fOX9e7N+A5wePzPnLgI/hegdie5Gxa4FHoz2J/QjsT9L/HPu/
wHOCLwPfD36W8bty7D76v3Le7eDNwF8x5k2uPwH9Tzk2O+PfBk8E/rKX3/Mu
eBLwt+C5wZ+ApwP/CV4I/DfXe5j+dRzbxonBsdv42JX+XfRH4jsPAS8F/hb8
DudPDP66l/c5Nng08ObODd8neAD4qjr3MwZ4JPDV4Dn6uf87OPdTjv1Cfyzs
o9K/rs79vQ+eAvwTY+YBfwyeFvwf8ILgN8Djgz8Bz+bz5RrX0B9I+4r+h9in
8trg+bB/B14QPCrXXw78EXhq8K/Y5we/DB4Ifg08A/h3rnE3/R5tN/qjYR8R
+5V1vm8i8LjgW8ALgD/g+awJngp8NvhD8FrgqcHn+H3gtcGDweeCf+H8dcHT
gFcF92i3g3cD301/GeyL+y747tc8n8+zuJf9ObYv/fe53sr0J2P8GdhfY/w4
4HcYM7PzGftx4JWxbwk+i88zaStz7iq0j7Gvj306jp2HfVTOHwF8OXhW33cb
v3BJnfX8K+MvBG8EvgH8E/gs8Drga8EPgJ/nuxtO+hX8M/hs7Otivw68Gd/5
veuNMcfQ/w/2q8BbYr8Z+5/gq8FbgW8B/wG+ErwF+Cbwb+CLwBuDh4H/Bx4G
1ondAf4MvBV4dvCl4L/A14O3A9/m/AbfAN4efDv4H/CN4B3Bd4J/BJ8JXht8
Dfgk8AXgcbjXd8Bv8XmSc4tjB9D/HfsVznfG34j9U/CW4NnAl4D/Dd4CPCv4
Yt8P5xzN+ZPTrqI/As/JZXZRnfl2MeOPxLaLx+hfiv1S/R9jd3O+lPvZkPHX
g18v8+89zplFf1vmy0Dsy4Nf4bzDsW1Ee5n+8Zx/GP0RaPvRv4zxl/n+se3O
+PHK/B9WZ739DF5B/wleBTwy5xwKXho8FDwW7TnwceDn6Q+kPQs+Fvwc/WP1
F3zXpLRN6I9f9osb6/jDb8ELgEcBL+v+wX0cwdidnIP0x+TYM/SPwf4s/VHa
4S6puqzO7/0BvAR4LPAK4If4jhd68WG30f8R+3L6e+wrYT+SY/thW8053GX8
i+Dzwecz9oI282UKvvsXxh/F5wTYJ6QdTf8n7Ms7f11D2C8BX+L6xbarzwfM
JatL66y/Fzi+J+eOTTuN/gDsfFQX19kv5wPPCX4JvCL4CE7eg7HPMuht8Hvg
lbBPiv108NeMnw88Enhp8Bfg2cE1eHHnG3h68H+5xsJer837GpXrbQPemOvN
h+0T5yT9o7AfTn907Ntin6dc74Uyf44EHwYeDfu/wLeAbwHPC94bPEIXX7Q4
4zcCT4Z9QvCddb7/aPAR4DEYvx348Db7xyjgrd1b+Fytlz1zJ/pfcb196C/K
+VdgH1T2r7vAi4AnBg8G3wo+wPgBPAh8PXh/8LzgOcAvlvnwGtdb2N8HPh58
CvZTwBPwXTu4frAv4v1hPwH8Jngp8Hjgk9xfwIuCxwSfCJ657JdPlOf/KvaF
fD7g48A3Y78ZPA/X3wu8H3g33w94E/C14GvBs4D3AB8K3hc8IngLn5f7B89j
Y44dRX8D2hzgc7G/h33Ssr/fUWe//hL73uBFwJeD98e+O7hh/KbgScr+eHud
/fJJxk8G/oFrHgTeC/u24L+xbwCegjbU92ccQ/8Jxo9X9tcDwQuDR6Y/DPvG
4H04fzvs/+P8DcFPdXkfPzLmYOe3i4H+z9jXBK/tnuP8pJ2pT+P8rcXY18O+
vXtClWdwO/193C/1HRzbm/7jHNse/DX4RPo3c+wB9+cm/sj92fu9guvtB76b
4+tgb2lX09+o7Lc/YF8N+3QlPngIvCR42hKvPQheAnwAeA9wy7mbgScv8c7d
2Bf1eZV46h7wYuATwMeCx/Y+wdOU+OWBsj7f4X6XLf7oVPAhxndlP9naWJDx
e9LvOH9z7Kdy7BTs74K3Aj8GHgP7K73M97fByzifud4p7k/gpcHjg08GL98m
Xv0A/DV4Q+xzce6JHFuS/izFXzxZ4tGGdid4D/C9+lfGnAQeAr4afLn7NeeP
TruUfs2xO7Dvjv0e+vdybHPnN/gi98828cK43P+74G/0OeAVsF9Z9rvLudaI
3hP9+5vsVZ8z5jr6L3BsVqcQ449k/PPec1UN3zSPAL/k7wGOAD5af8g5l3L+
KLTHmtzvlc5F9wz639KOpr8i469ifEu7C7wn+D76n3O/Mzmfe3mfo7oGwIdj
f0L/7jsAHwp+jP5NXO8+xu7snkb/q+LP2zKfpi/x5cPgpVyvxT81ZX6t08QX
O8ddczNinxv8KPZDjSfAM4D/6sX/nct3nEf/D47tTP8c2rng38A70v+n+Jv5
Of9nxn8GntH13ct8NT6+mv7xHPua/ue0C8Ed7V76fd8htn05/wH6U7V53vfW
8RfbuR+V9zN3F/8yDf3b6viHlct+++8Szy5a9ve3SvxwE9+xatl/rqX/gH4R
/AX4ePrrdvF9O9J/g/H/Aq/Qi8+Yif5s5fc8XeL3yxi3KPYdOLYh/VnL83qq
xBOvcM484AHgY8Evd3m+I4KPAe9g/Gx8VPzZCLT7sO+H/UH6ixS+9mbZ75/p
sv/80cv7maHN/HsE+yHGQthnBv+D/XDw4Dbz9746/nCCwo9vqsNHJizx+s11
+McqJb74tA7f3Yr7+hn8i/6B/ogcu5/+/tgf0h+XeOCNEt+MQnscfBj4cfrP
dnk/8qXDwANoD4APwP4w/ZFoD4IPBD9C/+82see84Lf0J2U//7wXvjZTm+f5
WJ3rzcv1NwTPAL5A/1hnbqoRyPf37/J+fy3Xm7EON56BY1/SX4fr/Q0+m9/2
Zj/8WV//V4kHvuf8cX2WxX981yWWer3E45vyeRBjx+LYIe4dtAfpP0T7s4km
oDZwNO0Z3x/f9w7jV20ST87E8X+qcFD58wvYPwCv0USPmK2L1nEK+HXw4uAx
Gftcic9eZPyH7ldN9JLj+JwE+12FLz5inEP/Eto+xoK0xt9e5qt71Ae9cEr3
LufQ773MMefWJ4wZ4vMxRnI/LL9HzeMe9wrw3vpe/WWbfcL94mTa2/oWYwhs
0zPmfOeDY/TnTeJzY6iPetkzja2MQceuE1MbmzrHnevOIX2TMd4FnDt/L7Gf
moXaxfbYJ6K/fj/7eIOt7cI5P8B+Ri9c1GN7MXbhOmPd07xnOer4+ne+4336
qzfRb54DvwderQm/2IPPmmvNSlu/yZ7u3r4z7Wm5Dtffhf4z+jbG72fc2cse
637gce2+k4eb3Lv6i7/n/CZxt/H3FLST6F/UxDceTHvJscY39E+g/5l7A587
gsegLVnHj+hP9En6ppubcI1pwbfQX53zp6N/XonnTubzuyrXeLKJ39P/zdRL
fLQG46cv3OH9fvZEfa8++IYm8ZRj/+TYDk30Gee+a+CWLt8/pJc947Mm89j5
PKTcz4e0M3vRFDamfwVtsV6emc/uOz4npv1YRdP5usv9et8v9+OT9c1rgV/t
53ktwPgNaHvRnxn7r9g/bqJf7NQl3jfu/xj8I5839sJJ5+H57dklXrurxJ8b
8LlWL+/cd797F3yHcxv7zJxzM/gmY8LCqdQi5bByLe/Be1m37G/76q/o30f/
034+xf5m+ebJXGOw64G2bJNn6LM0xjTWHEZ7jP6j3mMXn6Xvmhm8NvjD4lM2
4/sH0b+xyZ63PPa1uJ9v6V/bCyd8nv4P/ehenzJ+atdLE5+/KnjpNs/MZ+f6
VwvSB/kOnU/LFv9wTi8xwKdlzzynyfpwL/Vcn/85xX98349u6xyYvYu+uXAv
7+AnY4E6Go2ahNqEGt4WTWJctb2Xy5ydivFDumiA/20y55x73/Wju6m/LSH/
7kdD0x/e0MUH6gu30kf/v3cg35+ynznh3ND/r91GA1SrNOZWG/yyHw1GPXZR
rvdLHY3jUPBxXdaka/MAxk/Vzz7hfnEc7U1/X5f40Djxm37ij8nAV+iT6S/X
Rq/+rjwr56ex3bDyfL7i2DtNNPET22gEvTaajNrBT/1oqHK889p8h9+l/zlY
rahL/OUz8lld2MSv6F+2abPGTyv3vBRjPwCf0WR/M16/pMu9GjOrD3n9R/VL
VX6b70Nt1ph32n6+42Ds51X5bvVr14qa8bpyUfCtvewZcg1/87aMX7LKs3C/
M1Z0zHVd5qu5AjnFukXjU+tTc5m+H3+llvIE+J4uz0ctRU3wwTIffmvC73br
EqMaq6ppq23f3eXcR7xH+nfSBvQSY7vepmDsad5rL5xGu2vxItqCPlvaLb28
023bYNeiPuIaf3+T+EYNTi3OmMLYQo4jVxmZ/mFNNAq1CjmJ3OQ3vusLfUsT
7nRsmU9i59bxtFXkKE00I2MCY4Oryvm3lO9/p8xJz1dbVC992b3F30z/+i5r
xRhiS84/ivH9OjHm/G002Q970fzUar/ooke6JlwbcoyuDgeRe3hP3tuMtAFN
NOrfeuEkatfuke6JO+p/ytpxfxuVtn+T/e3gKuvd/cl3ph7umvZdtm3u3d/Q
tdEQd6mjEaktqlnuXEcTUctUI9sJfFMV7WxwE+1VDfbiNnPKuflL8Y23dtHy
XFOuLefIM35/4Te+L7mp72/pLhrX6nU0HrUvNXq1i/FKfGUOa2vs11TJbQ1q
ojWrOZ9jLF0nt/I45/zjumrSdw8wtlSzWk1uXeaHOaXN6mio5prMKW1SRxM0
12ROxNyIGpa5LzVLtVpjfrXM8Zto2Re5p7bJQW1aR/M1N+U9eW+TNdHPz2yj
h0/SRJ+WL6/Yi/9T392ry163MW2BLhrXUK53cRXtS01iPfA5VbQKczLmitSI
zNUY4xvrqzGZqzFnZO5IDmBuTA1vrTo5NbU9NcM16+TQ1BLHaqL1q/kf30Yz
XKNOzk0t0fhJ3787bSX6u7fRgNYrsWPdJvekP9GvqHGodYxZReubuQlXl7Nf
A164KblC8N1tNK9l62iWamFqbsvU0UDV4tSI1K5d3+7najrL1dFA1XrUXJav
o1mqxdxQJxdkPKE2LgdWOxtUhRsfWOaXz08urCZ6cJ2coFqpGt9e4LuraH9q
ggfJ3apohffXyW2pEakVyRHVziavwh3nbsLN5Gg3gc9uky+ZtEm+xZzjSdhf
qpKLXKVL7GoMu4hzAftCdTSsXdvEd2ojauxq7WtjX6COZrBjm3dgbK4G5btR
01usjkap1qdGqDarRrtX4QNqv/s5R+mvyndO2YtmOQ39w7rE5rvSVjS2Y8yC
dTTKndvE/0Pdi6vsP/IFc1VqaIN9V01y0eakH2qjka4kd6+ina7GOVP3omlN
24XDG4PLr9Qq11czwLYDbbEuMb3Pxxyh+sdFbfJHUzXJZ+mD9EVTN8kv+Rv9
rX/Vyb/qD9S+jiz+4Y8msaH7l/vYwW30pX4TPXbOLnrmduAz+9FH1gF/Ukf/
ewL8BniFJvrSQm30vNeKXqHPdy9+uc5esGAbfe/Vol/M0UbffqaO3rCG7wT8
RZ184Fxt9O1ni162QBt9+5Wil5nTM1dvTsZc39xt9O7n6uhtQ9rwx8/q5NtX
b8P3P6+Tj1i/TX7rmzr5TjVZtdnFe8lvqW8NrRL/qvds2oVvGyMbK19jzIXt
W45tYpzUxp/JbT5y72iSGzC+Ns52//baxgRqFCu1yad+XEf/VCd37hljG2ub
o1NbNcY1f79Bm/zct3XysRu2yRd+VycfqwalFrUI4y9tsn8bO8gzLsT+FOPf
wr5Sk/qEp8FvV8mlqi88CX4TvGKT/P0KbfLBH9bJJ6zYJh/8UR191hjfWP+9
uuQX+sndqhGZS7q3Tf5rUa53v/6+Tb5t8Sb61ANt6h2WaKIHuUZcK0s10XMe
lzP4/JvoQQ+2qbdYson+85gcw1iviZ55X5v83WJN9L+r2ui7MzTJvxobjdNL
fGmceWyb/O+YTfTcq9voxzM2yee6B7gXDGyitxprqee4Zlfl/Cva5Lunb5I/
dQ90Lxyvid58YZt87ZRN8p36eH39Qk302rva1Ess2ESvvrONXrtAEz1a32R+
Sv3h/SY+VF86V5N8rz5EXzJCk3zTUvpQ8Lt18kGLt8m/vV0nv7Nkm3z7O3Xy
SepPzl3n8BIcu62NPjxfk3qJG9vobXM2yU/f0Uafm79Jfv/6NnrrbOBb+8kB
v1b2O/mXfMz9T81/OubiDW30ydmb5LOHtdED52iSz3ZPdG+cqUn+3GSjORPz
zSt3WVOuLfWDbbvEzMbOanT7Fz57VpN6HbU5OZhczJyh+dL32mgBPzknwM/X
yY3pM/QdI9J+qJLj937lN9bBqPkNVZuhbVrFB+zaha+qeZgPmtRYoo2Woc/U
d8qJ5Ebr9ZL/MWY2dnYOLdOFv7h3jFn4yfm0C3rRCNQK5K/qFt7z9F00CnVU
9VS1CzVs9RQ1C+/PNXtEiSdcy67xI4ve5trXR5sLcM7pu9XA1I7Uezaj/982
sbQa31ZdNKvhufEqWpYaqH5rQHne7xWfdUIVbeglxkzTS855+S4cX64vh58F
/FcbrmxO3dy6GtnwWqcq2pka5IklHpB/uKbNVTjnXOv6ALVh14i+QY3zhLK/
qn3qw/Rl1oeonQ7P4dfxOWqH8hvjjZer3J8a6vDcfBVtVU1ArqCPMB6Xkxub
3t9LfsT6A/M71iSc0CUH/UmVnID5C3NU7zXZo8xduWe7d5vzO7TEE9YSqOGp
9Z3WhQvK2eWraizuNeYMtinz/fomc869xZyLuRdz3Ob65lczoL9seV9bu//2
cmxwl3fiu1mCY1vQP7PL2pCDntVlD7ukyX7h3maOz1z8bFXiOeeD1/aaW3aZ
I84VNcLty++Vx/obTgeP30W7VSOQr6s3qON67JQuOQ1rJcxJmOswpjK2WrCX
+grz++aCrHGw1mF4jO2zoB1E/882uRI1z/PAe9AO6kVzU3vbCvsBzs1e8s/q
K+pyh5X3JQeWIxn/yI3NWbq/ykFPpn9GFy3r9PJ8fF72/y7+RL75VJOY0Pen
JqxvVoM8u4tepo6lnmVuS81L7cscyIzl/s/vZY271jfv8m6M6Yx9zQlZ22XO
yVyR+om8V/67FvaxunAROaJccWAXriink9uZH1VrUeM0nhynC9eR48h1lgU/
6voDPwoeHXxkFc4gdxitC3eQU8gtxugSyxqzGruO3YUryYnkRhODL6/CIeWS
E3XhknJAuaCaj3qDv8HfMmEXbijHlGuO0oXryHHkOuP6PKtwNLnaBF24qBxQ
LqhmdpD+t45eYHysdu2x9bQ18aXqZ/L//7Xhw/MV/WPyfnybeQz1V+vRrAfQ
B6sfn97kXbvezO/M1cW3Dy3r6T9tcgVz16UeoI0+fmsT7W+8LtqaHFWuOkE/
+/GgOvGz+ZSRevGx6vfW16iPu0bVU09toq+rhw2PJ7v4enMo2xR/uoS+oImW
uk6X2NIYc44u/kstYaQmWqe/Z4ZiNxZVnzu0ical1qUGaO7CNepa/b1NPYX1
mqv3kyMyp6CGppamvqU26j2rjzmf1JrH1391qSmxtmfeKrUm6mv9NvqKWtGI
Xd6Nz/yAMv/VaqYr/sn93jzEGMVf+r7VSuVAvt81u6wFOZpczZy/tajmEK0F
eLxOrtQcn7k+NWS1ZH2CvsEYYnjtWi/59AFdnvWg4l/MeZv7NsdtbYU5Kfn8
rE1yVVN04cZyYLnwlOBHqnBmuXOvC1eVI8oVLaaSK8pR5ap1F24qp5Xbdl24
qZxUbvob37eN77JOfccfbepT5gKv4bPswlXltHLbUbtwfzUDtYOpuuxt7nFy
a3Ns5tYWaZJ7m7wLltPL7SfpovWqKaktjddPPG+MYayhBqz2+lcT/WoQ42+t
opGplU3WRStTI1Mrm7SLVqZGplamPmDtgzlk9QD3f329OfsLuuhnrm3XuHqa
nFU96eIqXNY56Fy0hnizNnPcuWwOxvoBfdgRTcl3dInBrWVUYzI2N+a39lLN
QS5gvm/3JvWw1i67hl3LPmNrfdQrvHd/g/qGMe22dWrqjHUvK/fjGpFbG7Na
iykHN5Y1JlcPVB80VpdDWBuqBia3MOa1llNOYCzsO/ZdW0NkbY8cynh0sSrc
yhh+jBKfGtubX7E2cvGyn8jBrJWRc8vN5JDW0lijI7eUc+1TJ0aXixnzW0sm
p5YLyAms/ZKDyxXUp5wLzgn1HmNw9UX1RmNzOYC1qmoMcgPzoeZK96C/J+37
OrWrclK5qRzMWgxjfrmZHNLatKWrcEs5oLUKcgC5oZzO3P6DVbienMtaFzmO
XEwNUX1O/U9tUc5mLY6ahVzu9Tq/3+ehFmHNhrWf1iRYy2ENhLWP1nhYG6EG
Ze2vHE9tSk3S2lk5oVql+qZ7q3us+qN6q75dH6/+6hxyLp1f4hH1Q/dK90z1
STmg+q56q9xQTcVaNzUZtRY5m2tfHyCXswZiwvL+rI1Qv1NPG1RFP9QHzFXm
3yZtOKO1TnImuaR6omvbNe7al2OqN6rfyT3ldNbCy1nlenJMa5/kvHJPOZ21
23JmuZ41HP53wZozazusqVXvm7yKnnhHl1yHNajWq8pxre21Zmo49+2n1vqi
KlqVHN/aDzml3N//IPzcJKdjbseaG2vJ1ZjUmtwz3Tv1SfIp4/vhtRBVtAvf
90jF//u81HSsNZXjqvXo340dzZmZX1JTstbcPVmtyRoWa+unrFLbYg25teRq
RkPb1Bxae2L9gPqoNdGzlfm9S5uaBGsT1JQ2b1Mzau2qNZbWklrj6H8TrPm3
9tEaamupt9RHtolBjEWMaeV7Pg//m6HmMk0/62ma8vz1D+aUrbNau8S7+j9j
uce8v37ykfc00dDNFctXV+9Fk5I/zANeo5dj8ldrmP1vxxRVapvV362t3rCc
rwavFi/nsd5ajWlweT+ub/VN90L3RPVbNSn/K6CmpVZlTZD/TZiqSq2QGpv/
LVBDUnsz3/lgE01dbd2a99mLP1RXV7Pau0kOSi3rsPI+pi37u/VrcjNz2sNK
fLFlLzHWQl1qzqw9s0ZwUIkP/izvx/hEjVWtdcsSj1gzPLD4X2uJrcEdq/hb
a3NPLetzuTI/rRH0DwbmdKwdVPMcUOIf/Y81Rbty/9aQWmukZmmtnzVcC5Tz
rTXcwnijHw3U2itr1tRGrXmz9s2aMGs3rSdVS5DzyH3UNP0vkRrPkPJ91jKp
oU7YD6eT2/nOfffW58qNzIGZC1NTrcr+PFd53mqFm4Mn7kejHbHEU2q31hRa
W2gNm7Wjaqzu7/JF9RM1O/X+h6poeeor8snZy/P8PxzzujM=
         "]], 
        Polygon3DBox[CompressedData["
1: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
         "]], 
        Polygon3DBox[{{1278, 758, 889, 1564, 1132, 1133}, {1329, 874, 532, 
         533, 875, 1330}, {1279, 759, 1024, 1577, 1134, 
         1135}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ksvXHEYB+D/uI67lQgNEcFCdCGWLMRKKiGzbBeSsWKBletGJKJtmorb
zKDs8AXwBfQLtO53mkZERMQn8Ewsfuf5vav3vCenJj4UG4yEEGZkQkn3bo8X
RrNCKGUZq1nHj2xhGzvYxRi/MM4+GdDHOc5pfuUPJpniFre5yz3+Zmd2COX2
/pQD8xjrZT4jhEPzAo+4yGMu8YTLPGWCZ0wyJef6Ci+4ykuu8Yq/eM113nCD
t/yWGUKFnXNyl76BDfLHO/4173OfO9zhJjfTu5ngd85yimMc5Yj06738zB5+
Yjtb2cwm1rKKjb7DKyftLeEwP8izFJufWMRHFvKBBbxnPv8zj/8Y5Q2vJVe/
ZA7PaU04pbXhmE4Ph8xI32GojLz/D2+7ykSn
       "]]}, {
      Line3DBox[{1032, 1321, 671, 1031, 1579, 1234, 1033, 1580, 1235, 1034, 
       1581, 1236, 1035, 1582, 1237, 1036, 1583, 1238, 1037, 1584, 1476, 1660,
        1038, 1585, 1239, 1039, 1586, 1240, 1040, 1587, 1241, 1041, 1588, 
       1242, 1042, 1589, 1243, 1043, 1590, 1244, 1044, 1747, 1322, 1245, 
       1323}], Line3DBox[{1046, 1477, 1661, 1045, 686, 1047, 1591, 1246, 1048,
        1592, 1247, 1049, 1593, 1248, 1050, 1594, 1249, 1051, 1595, 1478, 
       1662, 1052, 1479, 1663, 1053, 1596, 1250, 1054, 1597, 1251, 1055, 1598,
        1252, 1056, 1599, 1253, 1057, 1600, 1254, 1058, 1601, 1255, 1059}], 
      Line3DBox[{1061, 1480, 1664, 1060, 1481, 1665, 1062, 702, 1063, 1602, 
       1256, 1064, 1603, 1257, 1065, 1604, 1258, 1066, 1605, 1482, 1666, 1067,
        1483, 1667, 1068, 1484, 1668, 1069, 710, 1070, 1606, 1259, 1071, 1607,
        1260, 1072, 1608, 1261, 1073, 1609, 1262, 1074}], 
      Line3DBox[{1076, 1485, 1669, 1075, 1486, 1670, 1077, 1487, 1671, 1078, 
       718, 1079, 1610, 1263, 1080, 1611, 1264, 1081, 1612, 1488, 1672, 1082, 
       1489, 1673, 1083, 1490, 1674, 1084, 1491, 1675, 1085, 726, 1086, 1613, 
       1265, 1087, 1614, 1266, 1088, 1615, 1267, 1089}], 
      Line3DBox[{1091, 1492, 1676, 1090, 1493, 1677, 1092, 1494, 1678, 1093, 
       1495, 1679, 1094, 870, 1324, 1095, 1749, 1326, 1327, 1096, 1750, 1329, 
       1330, 1775, 1097, 1428, 1429, 1771, 1098, 1496, 1680, 1099, 1497, 1681,
        1100, 1498, 1682, 1101, 1499, 1683, 1102, 1616, 1268, 1103, 1617, 
       1269, 1104}], 
      Line3DBox[{1106, 1500, 1684, 1105, 1501, 1685, 1107, 1502, 1686, 1108, 
       1561, 1687, 1332, 1109, 1559, 1748, 1325, 1386, 1385, 1110, 944, 1434, 
       1391, 1328, 1375, 1415, 1374, 1111, 1762, 1392, 1435, 1393, 1331, 1368,
        1367, 1752, 1112, 1431, 1432, 1430, 1317, 1776, 1113, 1447, 1688, 
       1575, 1114, 1503, 1689, 1115, 1504, 1690, 1116, 1505, 1691, 1117, 751, 
       1118, 1618, 1270, 1119}], Line3DBox[CompressedData["
1:eJwVzztOAlEUgOEDQTdBRQyLANwBVD4xVkCECokxRhK1k0ZQNyBG3YDaaYH7
sCZEe0zAJ34UX85/z52ZZDLV1spuIiJK1FIRq4sRE7PCmp6aO+QWItadP3VR
p/UGZ/qKL/u+ecDQPkNeN/h2Vzezdm909CklKnT58cy1ueR+xJFuU+CYcy74
SEb0zAceueeZJ5Y54dX7v753p2+45ZJ3+z/7JgPnF8Z2M+cWmzrs9nRZJ/S+
3tLJ+b/pbZ3Sh/of8Pkr0g==
       "]], 
      Line3DBox[{1142, 1283, 1626, 1140, 1699, 1510, 1138, 1698, 1509, 1136, 
       1697, 1508, 1134, 1577, 1696, 1468, 1132, 1564, 1695, 1448, 1450, 1449,
        1131, 1568, 1760, 1378, 1335, 1395, 1394, 1130, 1761, 1387, 1388, 
       1334, 1376, 927, 1129, 1401, 1402, 1398, 1399, 1764, 1570, 1128, 1318, 
       1333, 1566, 1751, 1369, 1127, 1416, 1417, 1396, 1777, 1454, 1453, 1126,
        1562, 1694, 1336, 1124, 1693, 1507, 1120, 1692, 1506, 1122}], 
      Line3DBox[{1145, 1511, 1700, 1144, 1628, 1285, 1146, 1629, 1286, 1147, 
       1567, 1630, 1287, 1379, 1389, 1390, 1631, 1342, 1406, 1288, 1341, 1572,
        1766, 1407, 1357, 1408, 1289, 1439, 1772, 1409, 1410, 1384, 1425, 
       1512, 1769, 1344, 1370, 1371, 1345, 1411, 768, 1358, 1444, 1445, 1443, 
       1576, 1773, 1290, 1459, 1458, 1632, 1291, 1148, 1633, 1292, 1149, 1634,
        1293, 1150, 1635, 1294, 1151, 1636, 1295, 1152}], 
      Line3DBox[{1154, 1513, 1701, 1153, 1514, 1702, 1155, 1637, 1296, 1156, 
       1574, 1638, 1297, 1433, 1560, 1639, 1427, 1451, 1452, 1346, 1754, 1414,
        1343, 1359, 1380, 1381, 1363, 1757, 1372, 1319, 1360, 1365, 1366, 
       1759, 1348, 1373, 1320, 1362, 1515, 1746, 1361, 1350, 779, 1157, 1640, 
       1298, 1158, 1641, 1299, 1159, 1642, 1300, 1160, 1643, 1301, 1161, 1644,
        1302, 1162}], 
      Line3DBox[{1164, 1516, 1703, 1163, 1517, 1704, 1165, 787, 1166, 1645, 
       1303, 1167, 1770, 1426, 1304, 1446, 1774, 1347, 1462, 1466, 1467, 1364,
        1758, 1349, 1474, 1518, 1755, 1424, 1351, 1519, 1756, 1168, 1520, 
       1705, 1169, 792, 1170, 1646, 1305, 1171, 1647, 1306, 1172, 1648, 1307, 
       1173, 1649, 1308, 1174}], 
      Line3DBox[{1176, 1521, 1706, 1175, 1522, 1707, 1177, 1523, 1708, 1178, 
       800, 1179, 1650, 1309, 1180, 1778, 1460, 1463, 1461, 1473, 1181, 1578, 
       1781, 1471, 1475, 1472, 1780, 1182, 1524, 1709, 1183, 1525, 1710, 1184,
        1526, 1711, 1185, 806, 1186, 1651, 1310, 1187, 1652, 1311, 1188, 1653,
        1312, 1189}], 
      Line3DBox[{1191, 1527, 1712, 1190, 1528, 1713, 1192, 1529, 1714, 1193, 
       1530, 1715, 1194, 814, 1195, 1654, 1313, 1196, 1655, 1531, 1716, 1197, 
       1532, 1717, 1198, 1533, 1718, 1199, 1534, 1719, 1200, 1535, 1720, 1201,
        822, 1202, 1656, 1314, 1203, 1657, 1315, 1204}], 
      Line3DBox[{1206, 1536, 1721, 1205, 1537, 1722, 1207, 1538, 1723, 1208, 
       1539, 1724, 1209, 1540, 1725, 1210, 830, 1211, 1658, 1541, 1726, 1212, 
       1542, 1727, 1213, 1543, 1728, 1214, 1544, 1729, 1215, 1545, 1730, 1216,
        1546, 1731, 1217, 838, 1218, 1659, 1316, 1219}], 
      Line3DBox[{1233, 1354, 903, 1232, 1745, 1558, 1231, 1744, 1557, 1230, 
       1743, 1556, 1229, 1742, 1555, 1228, 1741, 1554, 1227, 1740, 1553, 1226,
        1739, 1738, 1552, 1225, 1737, 1551, 1224, 1736, 1550, 1223, 1735, 
       1549, 1222, 1734, 1548, 1221, 1733, 1547, 1220, 1565, 1732, 1352, 
       1353}]}, {
      Line3DBox[{468, 672, 1579, 469, 686, 497, 1665, 701, 512, 1670, 716, 
       527, 1677, 731, 542, 1685, 743, 554, 1693, 754, 1620, 565, 765, 1628, 
       576, 1702, 775, 588, 1704, 786, 600, 1707, 798, 613, 1713, 811, 628, 
       1722, 826, 643, 1733, 841, 658}], 
      Line3DBox[{470, 673, 1580, 471, 687, 1591, 498, 702, 513, 1671, 717, 
       528, 1678, 732, 543, 1686, 744, 555, 1694, 883, 907, 755, 1621, 566, 
       766, 1629, 577, 776, 1637, 589, 787, 601, 1708, 799, 614, 1714, 812, 
       629, 1723, 827, 644, 1734, 842, 659}], 
      Line3DBox[{472, 674, 1581, 473, 688, 1592, 499, 703, 1602, 514, 718, 
       529, 1679, 733, 544, 1687, 876, 877, 950, 1014, 1777, 1015, 884, 908, 
       885, 1622, 976, 925, 926, 1630, 578, 990, 991, 1638, 590, 788, 1645, 
       602, 800, 615, 1715, 813, 630, 1724, 828, 645, 1735, 843, 660}], 
      Line3DBox[{474, 675, 1582, 475, 689, 1593, 500, 704, 1603, 515, 719, 
       1610, 530, 870, 871, 872, 1748, 854, 878, 855, 919, 879, 1751, 922, 
       859, 886, 860, 951, 1763, 887, 861, 932, 862, 1631, 943, 891, 993, 863,
        992, 864, 1639, 988, 986, 1770, 987, 603, 801, 1650, 616, 814, 631, 
       1725, 829, 646, 1736, 844, 661}], 
      Line3DBox[{476, 676, 1583, 477, 690, 1594, 501, 705, 1604, 516, 720, 
       1611, 531, 873, 1749, 994, 996, 995, 997, 944, 945, 939, 856, 952, 
       1764, 953, 954, 937, 970, 969, 1767, 971, 962, 963, 890, 961, 960, 
       1766, 910, 893, 896, 973, 1754, 972, 912, 1003, 1004, 1002, 1774, 897, 
       1022, 1020, 1778, 1021, 617, 815, 1654, 632, 830, 647, 1737, 845, 
       662}], Line3DBox[{478, 677, 1584, 480, 691, 1595, 502, 706, 1605, 517, 
       721, 1612, 532, 874, 1750, 914, 947, 946, 998, 948, 1762, 949, 880, 
       857, 882, 927, 977, 928, 888, 956, 999, 955, 1765, 957, 933, 980, 934, 
       892, 965, 1000, 1772, 964, 938, 865, 915, 924, 1757, 923, 1005, 974, 
       975, 916, 1758, 899, 1028, 1029, 1030, 1781, 1027, 1026, 618, 816, 
       1655, 633, 831, 1658, 648, 1738, 846, 663}], 
      Line3DBox[{482, 679, 1585, 483, 1663, 693, 504, 1667, 708, 519, 1673, 
       723, 534, 989, 1771, 735, 546, 858, 1776, 1012, 1013, 746, 557, 1760, 
       930, 931, 909, 959, 1001, 757, 1753, 568, 935, 981, 936, 911, 966, 768,
        580, 967, 968, 913, 1746, 778, 592, 901, 1756, 790, 605, 1709, 803, 
       620, 1717, 818, 635, 1727, 833, 650, 1740, 848, 665}], 
      Line3DBox[{484, 680, 1586, 485, 694, 1596, 505, 1668, 709, 520, 1674, 
       724, 535, 1680, 736, 547, 1688, 1011, 747, 558, 1695, 889, 758, 1768, 
       569, 1023, 895, 1017, 1018, 1019, 1773, 581, 900, 779, 593, 1705, 791, 
       606, 1710, 804, 621, 1718, 819, 636, 1728, 834, 651, 1741, 849, 666}], 
      Line3DBox[{486, 681, 1587, 487, 695, 1597, 506, 710, 521, 1675, 725, 
       536, 1681, 737, 548, 1689, 748, 559, 1696, 1024, 759, 1779, 570, 1016, 
       769, 1632, 582, 780, 1640, 594, 792, 607, 1711, 805, 622, 1719, 820, 
       637, 1729, 835, 652, 1742, 850, 667}], 
      Line3DBox[{488, 682, 1588, 489, 696, 1598, 507, 711, 1606, 522, 726, 
       537, 1682, 738, 549, 1690, 749, 560, 1697, 760, 1623, 571, 770, 1633, 
       583, 781, 1641, 595, 793, 1646, 608, 806, 623, 1720, 821, 638, 1730, 
       836, 653, 1743, 851, 668}], 
      Line3DBox[{490, 683, 1589, 491, 697, 1599, 508, 712, 1607, 523, 727, 
       1613, 538, 1683, 739, 550, 1691, 750, 561, 1698, 761, 1624, 572, 771, 
       1634, 584, 782, 1642, 596, 794, 1647, 609, 807, 1651, 624, 822, 639, 
       1731, 837, 654, 1744, 852, 669}], 
      Line3DBox[{492, 684, 1590, 493, 698, 1600, 509, 713, 1608, 524, 728, 
       1614, 539, 740, 1616, 551, 751, 562, 1699, 762, 1625, 573, 772, 1635, 
       585, 783, 1643, 597, 795, 1648, 610, 808, 1652, 625, 823, 1656, 640, 
       838, 655, 1745, 853, 670}], 
      Line3DBox[{494, 868, 1747, 869, 495, 699, 1601, 510, 714, 1609, 525, 
       729, 1615, 540, 741, 1617, 552, 752, 1618, 563, 763, 1626, 1627, 574, 
       773, 1636, 586, 784, 1644, 598, 796, 1649, 611, 809, 1653, 626, 824, 
       1657, 641, 839, 1659, 656, 903, 904, 905}], 
      Line3DBox[{657, 840, 902, 1732, 642, 825, 1721, 627, 810, 1712, 612, 
       797, 1706, 599, 785, 1703, 587, 774, 1701, 575, 764, 1700, 564, 1619, 
       753, 1692, 553, 742, 1684, 541, 730, 1676, 526, 715, 1669, 511, 700, 
       1664, 496, 685, 1661, 467, 671, 867, 906}], 
      Line3DBox[{664, 847, 1739, 649, 832, 1726, 634, 817, 1716, 619, 802, 
       1780, 1025, 604, 789, 1755, 982, 984, 983, 591, 777, 1759, 918, 898, 
       866, 579, 767, 1769, 985, 894, 929, 1008, 1010, 1009, 567, 756, 979, 
       978, 958, 940, 942, 1761, 941, 556, 745, 917, 881, 921, 1752, 920, 545,
        734, 1007, 1006, 1775, 875, 533, 722, 1672, 518, 707, 1666, 503, 692, 
       1662, 481, 678, 1660, 479}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
EXqiYsNlR+gJXN5O1Yz1RNRx5iHWk0a19a6EnkBhwZqeZCZ7R2I9adA//5rQ
EzBvlaToCYuJ1kOsJ4ybv129KmmFxlyfUPTkbVvrbawnhoXoBaEnwCm1pifd
CR3CuK8d7Td7JCtuAzMcBpS+VnfglT/ua2c8HgpcfqiPvqRPU/raRjWrftzX
TC+7yRF9DQ43rfU1pT/aPbivLbwtkSf6Gty7MEnpa7a2Dq9xX9v4NBiIvoam
lr0ofS3033nOlP+c5zzUWmaO+1RKwmIi0adgJqGT0qeeKLxpwn0qd0nvLtcF
bVQjvdanzvn1hlkTfSo6xOKg6KIaople61NZ12Pe4D7lOr7w0M35NJi7rfUp
4whBWtynRMvGrDs3ygPV7gJKnzqYklWI+xSflKQd0afAXGOtT33+QGeuT/Sp
E2EvZxLGtRHXlrU+tdNJZif2XepuN23e+ZqCALcLxXe9ryzqx75rdlJEinHA
Bq58GaH4Los9DiyThO9qLcu10dikBnvurPmuveSMW9h37e7mvvjKzg2Gmhgp
vkt8PvMT9l2yVMtkwneBiEwgxXf50LDZYt910n0mkvBd8DF6E8V3jXy9+hv7
ro/vkiQI3wU8wSYU32X+7zzngX/nOWf/neccnHLgdCF8l+EftjrCd4FGZTPF
d+nauZ9tJnxXp2PmvjIHX6AviKD4Lmr2re3ShO+qZRB8Qfgu6NssTvFdbJvu
/JUhfJep/TdfwnfBkRtrvss+e4cm9l1cyue2E74L9pmv+a6lHCoj7Lt2jfC9
qLqvD5x6/BTfNdYl9gb7rqf+d+7Uu6hD34EzFN8lszNHCeeI9m8589rz4uAX
u5YjtAypw3CO0Et269rPLwHqrms54ph1ZTrOETTGYesPKEvDDtW1HLHS5diJ
cwTnwA5+MpM4XEh9SckRZ070LOAcsTcj3tA80hJOTURTcoS4NerDOSJFpS1I
VNEbvJReU3LEUKmUCM4RfjTB0R87/ME9yXUtR/w7z7nrP+c5rboNgnCOMNxS
s+2qlQGMfnhEyRFsFbOZ24gcoTwn95nMpQwLGms5wrtYIAXnCO/6Rjruk/ww
+i2ZkiP8v27jxjnClSslN/tVPWm9xVqOuP+5jneKyBEusnVk12keANm1HNGu
2XMJ5wgylxtvOxwCS/a1HLHf9lQzzhF3SuNcb1Ltg6ONazliZZ9xDp4zHKvM
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
2ZG/YNvm8TI+2wjcutBM8BdOrlt0IX8h/tdOtm5/GaB6d9NfOCd8zxX5CxRe
PCGkn61ASuU3gr+gfr23SQjzFyyu7nzMCvdBOdJsgr/QJe1O8BdU7NyF90X7
gZtBywR/geP2RzPkL8Dx1TjMXwAniLUI/sJq4YHPyF84weGtivkLgPbK4gXk
Lwhm/xZD/kKDU5015i8AkQveBH+B4t5aLfIXuLR8YzB/AVRtmyT4CxV+nZ+8
MH9Bl+eCykEnL8D1+RnBX/hJtMCxE/MXHq9c34f5C8D65Ka/ALw6XyN/4Rjd
fpc2dQNgcX7TX1ipMdBA/sJ5ZmEhw3A9EHOujeAvRL4XfYz8hd2J7z7mf1YE
1ayb/kJwe9U48hcmueYGv2J4067Y9BdMdmAOBeb/3r3STFo1tx9SUW76v0qm
5aPI/xXqk1b/4kEGG403/V/OQvkM5P86erfHKhvxw1X9Tf93JZMyEfm/BkO2
LfQOHIBLY9P/nTyVshf5v0HhD4s6qIzhyEdZgv/bOKAGkP9Lcsi9L0rDG/4W
PEbwf3c+8bmB/N86C17w7vsN+L5nlybyfwtF26OR//tGqPh5+Vdn2JKRQvB/
aUUtKJ0x/9eqk7/9w5IYJE/jIPi/w293khhi/m/4098xxg6aMDB3H8H/Za20
khLF/F8SV766qy7iMMJj0//lEXcW88T838PsIY1haVyQkXTT/32rUTSO/N9a
/RjXAEgP9Vk3/d/qmj05yP/Nf72YbjRDB1/v3/R/G9+uBiD/9wZDZf8ghrem
A5v+b/1rPyYLaQUgt0dCMSteGz4ajCHEbRJ/FWWi+MycYeXaVx192FW8GZ8Z
urI9HsVnGnQlQhfmleCFL5vxGW4Jp6soPmO431DsSZUzTDYyIcRn5j/VjqL4
zJGnz791+mRBWwczQnxmr+S1Wyg+80Lu6T1l+nx46gYkxGf0V59wovhMB2Xe
6IXgJBiUSE+Iz/T1KT9F8RlHei7tznl7eCCCihCfydq9ZIniM9uoncV0lZyg
8txmfEavVpfFSo8VmLCH6wzsU4P7LTbjMy0v5BpQfOa4iexa7KQS1Ly5GZ/R
J3PwCu4RhnscJbW4HdVgUd5mfGZgxx+I4jOiVm2XGfikoZHHZnxGcWKotcrC
BJSeqX6lysAPBe9txrWOyHTqfcPwxkXBU/77qQFYu26vgeBODru3z2N4iwxW
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5790267784080276`*^9}]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{904, 1021},
WindowMargins->{{Automatic, 141}, {37, Automatic}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 119, 1, 93, "Title"],
Cell[701, 25, 458, 9, 111, "Text"],
Cell[CellGroupData[{
Cell[1184, 38, 130, 2, 81, "Section"],
Cell[CellGroupData[{
Cell[1339, 44, 3269, 111, 554, "Input"],
Cell[4611, 157, 108, 1, 32, "Output"]
}, Open  ]],
Cell[4734, 161, 22, 0, 45, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4793, 166, 101, 1, 81, "Section"],
Cell[CellGroupData[{
Cell[4919, 171, 156, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[5100, 177, 296, 7, 67, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[5399, 186, 1828, 54, 75, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[7264, 245, 215, 3, 29, "Subsubsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7482, 250, 4240, 113, 483, "Input"]
}, Closed]],
Cell[11737, 366, 60, 1, 28, "Text"],
Cell[CellGroupData[{
Cell[11822, 371, 712, 20, 58, "Input"],
Cell[12537, 393, 1909, 38, 363, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14483, 436, 177, 2, 29, "Subsubsection"],
Cell[14663, 440, 1945, 48, 71, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[16645, 493, 193, 2, 23, "Subsubsection"],
Cell[16841, 497, 1637, 23, 347, "Text"],
Cell[18481, 522, 92, 1, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18610, 528, 184, 4, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[18819, 536, 5918, 167, 562, "Input"],
Cell[24740, 705, 9901, 175, 399, "Output"],
Cell[34644, 882, 9203, 180, 299, "Output"]
}, Open  ]],
Cell[43862, 1065, 273, 9, 5, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44172, 1079, 136, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[44333, 1086, 8067, 222, 606, "Input"],
Cell[52403, 1310, 765, 14, 80, "Message"],
Cell[53171, 1326, 1688, 34, 331, "Output"],
Cell[54862, 1362, 23679, 597, 273, "Output"],
Cell[78544, 1961, 315, 7, 32, "Output"]
}, Open  ]],
Cell[78874, 1971, 290, 5, 51, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[79203, 1981, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[79272, 1986, 106, 1, 45, "Subsection"],
Cell[79381, 1989, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[79530, 1995, 7175, 202, 619, "Input"],
Cell[86708, 2199, 362, 7, 32, "Output"],
Cell[87073, 2208, 19565, 491, 180, "Output"]
}, Open  ]]
}, Open  ]],
Cell[106665, 2703, 131, 4, 71, "Subsection"],
Cell[CellGroupData[{
Cell[106821, 2711, 4202, 111, 505, "Input"],
Cell[111026, 2824, 98979, 1605, 302, "Output"],
Cell[210008, 4431, 100625, 1633, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310670, 6069, 6218, 172, 698, "Input"],
Cell[316891, 6243, 96770, 1573, 301, "Output"],
Cell[413664, 7818, 99464, 1615, 301, "Output"],
Cell[513131, 9435, 272, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513440, 9446, 3267, 85, 317, "Input"],
Cell[516710, 9533, 59202, 977, 248, "Output"],
Cell[575915, 10512, 59263, 978, 248, "Output"],
Cell[635181, 11492, 278, 6, 35, "Output"],
Cell[CellGroupData[{
Cell[635484, 11502, 4587, 114, 471, "Input"],
Cell[640074, 11618, 398, 8, 32, "Output"],
Cell[640475, 11628, 60929, 1005, 248, "Output"],
Cell[701407, 12635, 60668, 1000, 248, "Output"],
Cell[762078, 13637, 439, 8, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[762544, 13649, 96, 1, 81, "Section"],
Cell[CellGroupData[{
Cell[762665, 13654, 109, 1, 37, "Subsection"],
Cell[CellGroupData[{
Cell[762799, 13659, 3921, 95, 379, "Input"],
Cell[766723, 13756, 1148, 25, 187, "Output"],
Cell[767874, 13783, 1273, 27, 173, "Output"],
Cell[769150, 13812, 228, 5, 35, "Output"]
}, Open  ]]
}, Open  ]],
Cell[769405, 13821, 89, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[769519, 13826, 151, 2, 45, "Subsection"],
Cell[CellGroupData[{
Cell[769695, 13832, 2573, 70, 401, "Input"],
Cell[772271, 13904, 902, 19, 187, "Output"],
Cell[773176, 13925, 984, 21, 330, "Output"],
Cell[774163, 13948, 342, 7, 55, "Output"]
}, Open  ]],
Cell[774520, 13958, 450, 7, 95, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[775007, 13970, 181, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[775213, 13978, 1369, 41, 105, "Input"],
Cell[776585, 14021, 237, 4, 53, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[776859, 14030, 1427, 42, 121, "Input"],
Cell[778289, 14074, 408, 7, 53, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[778734, 14086, 8034, 195, 691, "Input"],
Cell[786771, 14283, 192, 3, 32, "Output"],
Cell[786966, 14288, 66955, 1106, 240, "Output"],
Cell[853924, 15396, 2197, 56, 143, "Output"],
Cell[856124, 15454, 5952, 133, 248, "Output"],
Cell[862079, 15589, 15282, 302, 239, "Output"],
Cell[877364, 15893, 269, 6, 32, "Output"],
Cell[CellGroupData[{
Cell[877658, 15903, 98, 1, 32, "Input"],
Cell[877759, 15906, 1246, 17, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[879054, 15929, 8096, 208, 741, "Input"],
Cell[887153, 16139, 639, 10, 32, "Output"],
Cell[887795, 16151, 71489, 1180, 240, "Output"],
Cell[959287, 17333, 814, 15, 80, "Message"],
Cell[960104, 17350, 816, 15, 80, "Message"],
Cell[960923, 17367, 6478, 135, 245, "Output"],
Cell[967404, 17504, 19018, 366, 241, "Output"],
Cell[986425, 17872, 704, 12, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[987178, 17890, 215, 4, 117, "Section",
 InitializationCell->True,
 InitializationGroup->True],
Cell[987396, 17896, 531, 14, 99, "Input",
 InitializationGroup->True],
Cell[987930, 17912, 616, 18, 55, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[988549, 17932, 1935, 53, 147, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[990487, 17987, 2292, 66, 173, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[992782, 18055, 2046, 57, 149, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[994831, 18114, 2983, 76, 261, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[997817, 18192, 2998, 91, 218, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1000818, 18285, 948, 27, 99, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1001769, 18314, 3375, 81, 286, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1005147, 18397, 1858, 54, 127, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1007008, 18453, 1889, 55, 127, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1008900, 18510, 242, 7, 51, "Text",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1009167, 18521, 207, 4, 32, "Input",
 InitializationGroup->True],
Cell[1009377, 18527, 429, 8, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009843, 18540, 176, 4, 32, "Input",
 InitializationGroup->True],
Cell[1010022, 18546, 386, 7, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[1010423, 18556, 2634, 78, 281, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1013060, 18636, 1071, 37, 151, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1014134, 18675, 1814, 48, 156, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1015951, 18725, 1912, 51, 200, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1017866, 18778, 2150, 58, 180, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1020041, 18840, 156, 3, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1020200, 18845, 587, 9, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[1020802, 18857, 4946, 118, 372, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1025751, 18977, 3388, 91, 250, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1029142, 19070, 1234, 36, 163, "Input",
 InitializationGroup->True],
Cell[1030379, 19108, 1147, 29, 121, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1031551, 19141, 167, 3, 45, "Subsection",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1031721, 19146, 826, 23, 69, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1032550, 19171, 195, 4, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1032770, 19179, 644, 13, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1033417, 19194, 753, 13, 32, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[1034185, 19210, 146, 3, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1034334, 19215, 697, 19, 77, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1035056, 19238, 598, 11, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1035657, 19251, 577, 9, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036271, 19265, 454, 13, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1036728, 19280, 769, 16, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[1037512, 19299, 460, 9, 55, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1037997, 19312, 399, 12, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1038399, 19326, 860, 17, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039296, 19348, 199, 5, 32, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1039498, 19355, 780, 15, 32, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040315, 19375, 757, 18, 56, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1041075, 19395, 1008, 19, 55, "Output",
 InitializationCell->True,
 InitializationGroup->True]
}, Open  ]],
Cell[1042098, 19417, 3032, 83, 289, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1045133, 19502, 4445, 116, 356, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1049581, 19620, 4338, 115, 378, "Input"],
Cell[1053922, 19737, 946, 28, 70, "Input",
 InitializationCell->True,
 InitializationGroup->True],
Cell[1054871, 19767, 3361, 80, 307, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1058257, 19851, 148, 3, 32, "Input",
 InitializationGroup->True],
Cell[1058408, 19856, 310, 5, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[1058733, 19864, 229, 6, 32, "Input",
 InitializationGroup->True],
Cell[1058965, 19872, 3313, 93, 329, "Input",
 InitializationGroup->True],
Cell[1062281, 19967, 5438, 148, 470, "Input",
 InitializationGroup->True],
Cell[1067722, 20117, 3156, 86, 312, "Input",
 InitializationGroup->True],
Cell[1070881, 20205, 122, 2, 32, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1071028, 20211, 424, 13, 37, "Input",
 InitializationGroup->True],
Cell[1071455, 20226, 829, 19, 32, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1072321, 20250, 486, 15, 55, "Input",
 InitializationGroup->True],
Cell[1072810, 20267, 685, 18, 56, "Output",
 InitializationGroup->True]
}, Open  ]],
Cell[1073510, 20288, 1463, 35, 193, "Input",
 InitializationGroup->True],
Cell[1074976, 20325, 5722, 154, 495, "Input",
 InitializationGroup->True],
Cell[1080701, 20481, 5521, 150, 495, "Input"],
Cell[1086225, 20633, 244, 4, 32, "Input",
 InitializationGroup->True],
Cell[1086472, 20639, 3882, 106, 385, "Input",
 InitializationGroup->True],
Cell[1090357, 20747, 6252, 159, 560, "Input",
 InitializationGroup->True],
Cell[1096612, 20908, 120, 2, 32, "Input",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[1096757, 20914, 21717, 582, 2506, "Input",
 InitializationGroup->True],
Cell[1118477, 21498, 934, 24, 70, "Output"]
}, Open  ]],
Cell[1119426, 21525, 122, 2, 32, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1119609, 21534, 202, 4, 32, "Input"],
Cell[1119814, 21540, 272, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120123, 21552, 480, 14, 32, "Input"],
Cell[1120606, 21568, 104422, 1699, 308, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
