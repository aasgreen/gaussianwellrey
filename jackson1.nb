(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    448341,       8618]
NotebookOptionsPosition[    441989,       8434]
NotebookOutlinePosition[    442363,       8450]
CellTagsIndexPosition[    442320,       8447]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"r", "[", "t_", "]"}], ":=", 
  RowBox[{"\[Rho]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]0", " ", "t"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Omega]0", " ", "t"}], "]"}], ",", "0"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0", ",", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "[", "t_", "]"}], ":=", 
  RowBox[{"\[Rho]", "*", "\[Omega]0", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]0", " ", "t"}], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Omega]0", " ", "t"}], "]"}], ",", "0"}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tripleproduct", "[", 
   RowBox[{"t_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
      FractionBox[
       RowBox[{"\[Beta]", "[", "t", "]"}], "c"]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int", "[", 
   RowBox[{"t_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"tripleproduct", "[", 
    RowBox[{"t", ",", "\[Theta]"}], "]"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"r", "[", "t", "]"}]}], "]"}], "c"]}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intre", "[", 
   RowBox[{"t_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"cp", "[", 
    RowBox[{"t", ",", "\[Theta]"}], "]"}], "*", 
   RowBox[{"Cos", "[", " ", 
    RowBox[{"\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"r", "[", "t", "]"}]}], "]"}], "c"]}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intim", "[", 
   RowBox[{"t_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"cp", "[", 
    RowBox[{"t", ",", "\[Theta]"}], "]"}], "*", 
   RowBox[{"Sin", "[", " ", 
    RowBox[{"\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"r", "[", "t", "]"}]}], "]"}], "c"]}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", ".9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"3", "*", 
    RowBox[{"10", "^", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]0", "=", 
   FractionBox[
    RowBox[{"b", " ", "c"}], "\[Rho]"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "Pi"}], "\[Omega]0"], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.5726538234237165`*^9, 3.5726541222027445`*^9}, {
   3.5726544637182684`*^9, 3.5726544791419477`*^9}, {3.572655117442843*^9, 
   3.572655243785166*^9}, {3.572713609812275*^9, 3.572713648392425*^9}, {
   3.5727145600239754`*^9, 3.5727145700099516`*^9}, {3.5727162377394695`*^9, 
   3.5727162689920692`*^9}, 3.5727165360884438`*^9, {3.572737440937831*^9, 
   3.572737443698183*^9}, {3.5727522495151997`*^9, 3.5727522821163425`*^9}, {
   3.5727523322759204`*^9, 3.5727523717569246`*^9}, {3.572752423147377*^9, 
   3.572752430998372*^9}, {3.572788122737236*^9, 3.572788160180997*^9}, {
   3.5727882619224195`*^9, 3.572788264094697*^9}, {3.5727884269504786`*^9, 
   3.5727884283556566`*^9}}],

Cell[BoxData["2.3271056693257725`*^-6"], "Output",
 CellChangeTimes->{3.5727882643127213`*^9, 3.5727883475923934`*^9, 
  3.572788432967246*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tripleproduct", "[", 
  RowBox[{"1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.572752490255885*^9, 3.5727524958796196`*^9}, {
  3.5727880873257303`*^9, 3.5727880933805046`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.12816240063197798`", ",", "0.5121620029672302`", ",", 
   "0.2800399543521652`"}], "}"}]], "Output",
 CellChangeTimes->{3.5727880937275667`*^9, 3.572788127461836*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.572787913031508*^9, 3.5727879317428865`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5727523756734233`*^9, 3.5727523774246454`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Omega]", "2"], "4"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Norm", "[", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"t", ",", "\[Theta]", ",", "\[Omega]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           FractionBox[
            RowBox[{"-", "T"}], "2"], ",", 
           FractionBox["T", "2"]}], "}"}]}], "]"}], "]"}], ")"}], "^", "2"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.572654273162249*^9, 3.572654323576164*^9}, {
   3.5726544005225115`*^9, 3.5726544266821012`*^9}, {3.5726552666008663`*^9, 
   3.572655304401628*^9}, {3.5726555990820656`*^9, 3.572655606863701*^9}, {
   3.572655765902973*^9, 3.572655771154275*^9}, {3.5726558546844172`*^9, 
   3.572655902552202*^9}, {3.572656093331333*^9, 3.5726561289143353`*^9}, {
   3.5726562069453816`*^9, 3.5726562729895525`*^9}, {3.572711957481855*^9, 
   3.572711971514924*^9}, {3.572713759886891*^9, 3.572713762340148*^9}, 
   3.572713885528014*^9, 3.57271622498876*^9, {3.5727162705077744`*^9, 
   3.572716285087698*^9}, {3.5727163321860905`*^9, 3.572716332545486*^9}, {
   3.572716927587222*^9, 3.5727169383221965`*^9}, {3.5727221287748013`*^9, 
   3.572722153245826*^9}, {3.572788440625221*^9, 3.5727884563182154`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.5727221139458756`*^9, 3.5727221383231745`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   SuperscriptBox[
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", "-", 
      SuperscriptBox["b", "2"]}], "]"}], 
    RowBox[{"-", "1"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]", "[", 
    RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"\[Omega]", " ", "\[Rho]"}], 
     RowBox[{"3", " ", "c"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Gamma]", 
        RowBox[{"-", "2"}]], "+", 
       SuperscriptBox["\[Theta]", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensity", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "3"], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Omega]", " ", "\[Rho]"}], "c"], ")"}], "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", 
       RowBox[{"-", "2"}]], "+", 
      SuperscriptBox["\[Theta]", "2"]}], ")"}], "2"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"BesselK", "[", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"\[Xi]", "[", "\[Theta]", "]"}]}], "]"}], ")"}], "2"], "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Theta]", "2"], 
       RowBox[{
        SuperscriptBox["\[Gamma]", 
         RowBox[{"-", "2"}]], "+", 
        SuperscriptBox["\[Theta]", "2"]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"BesselK", "[", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"\[Xi]", "[", "\[Theta]", "]"}]}], "]"}], ")"}], "2"]}]}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.5727164763145666`*^9, 3.5727165141165676`*^9}, {
  3.572722187062211*^9, 3.572722187796649*^9}, {3.57278862096198*^9, 
  3.57278862360532*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "all", "]"}]], "Input",
 CellChangeTimes->{{3.572716874486494*^9, 3.5727168754240427`*^9}, {
  3.5727526225297227`*^9, 3.572752648265995*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jackson1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Omega]", "2"], 
    RowBox[{"4", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Norm", "[", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"int", "[", 
          RowBox[{"t", ",", "\[Theta]", ",", "\[Omega]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           FractionBox[
            RowBox[{"-", "T"}], "2"], ",", 
           FractionBox["T", "2"]}], "}"}]}], "]"}], "]"}], ")"}], "^", "2"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jackson2", "[", 
   RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"3", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Omega]", " ", "\[Rho]"}], "c"], ")"}], "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Gamma]", 
       RowBox[{"-", "2"}]], "+", 
      SuperscriptBox["\[Theta]", "2"]}], ")"}], "2"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"BesselK", "[", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"\[Xi]", "[", 
          RowBox[{"\[Theta]", ",", "\[Omega]"}], "]"}]}], "]"}], ")"}], "2"], 
     "+", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Theta]", "2"], 
       RowBox[{
        SuperscriptBox["\[Gamma]", 
         RowBox[{"-", "2"}]], "+", 
        SuperscriptBox["\[Theta]", "2"]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"BesselK", "[", 
         RowBox[{
          RowBox[{"1", "/", "3"}], ",", 
          RowBox[{"\[Xi]", "[", 
           RowBox[{"\[Theta]", ",", "\[Omega]"}], "]"}]}], "]"}], ")"}], 
       "2"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.5727169419796276`*^9, 3.5727171062346354`*^9}, {
  3.5727176634774027`*^9, 3.5727176670713453`*^9}, {3.572718274153283*^9, 
  3.5727183278289804`*^9}, {3.57271943828273*^9, 3.572719443126733*^9}, {
  3.5727195224788256`*^9, 3.5727195262457137`*^9}, {3.572722243692313*^9, 
  3.5727222441610603`*^9}, {3.572788461412863*^9, 3.572788461896924*^9}, {
  3.5727886320253906`*^9, 3.57278863854722*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5727222466768475`*^9, 3.572722246692445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"Jackson1", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"1", "*", "\[Omega]0"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5727394482541156`*^9, 3.572739448418138*^9}, {
  3.572739491423608*^9, 3.5727395430741725`*^9}, {3.572739696139245*^9, 
  3.57273970457032*^9}, {3.5727399454399357`*^9, 3.5727399545931015`*^9}, {
  3.5727443265141068`*^9, 3.5727443911253233`*^9}, {3.57274503237601*^9, 
  3.572745049359164*^9}, {3.572752302989996*^9, 3.572752321730569*^9}, {
  3.5727525562862988`*^9, 3.5727525577584896`*^9}, {3.5727885257027144`*^9, 
  3.572788525772723*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727879744733143`*^9, 3.5727881875504723`*^9, {3.5727885175239935`*^9, 
   3.572788526527816*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQO/AnfItb6+aT9rJgjstN9kf8PrxHoY/6T9+WtS
3h4MN+1NjEHgsj3r2n0fjjy/DpW/ac/Foar+tuyaPcS0B/YHmMqD9xy6AlX/
2L70Z/yOCY8u2aengcAz+7wjD+Y4vrsA1f/S/pfdOZPnP87anz0DAm/s37w8
dGit0ymoeR/sP7Xcmn789jGo+o/2E/3qC9XuH4aa/9l+fvUdvT8JB6H6v9jX
9zZeFby/D2rfN/v3W143JWrsgZr3w379U4ME7ZW7oOb9tH8i/iv8d9ouqHm/
7bV/rNPalbQbat4fe55bIc/uzdgLNe+ffWpr4cqohgNQ8xgc4i24NLKPHoKq
Z3AIv/h8aWf/Uaj5jA6PC4R+SZ89AdXP5LDAPbdVIO0M1D5mhz1rTk5ZK3sB
ah6LQ8X5Xv4pwpeg5rE4tLN/zP/z7zLUPFaHxP1nYxNOXIWax+bAWmAh+C38
OtQ8doec52eZ2qffgJrH4bA/dzt7UslNqHkcDjeUNXlVHt60BwBz9fBu
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.10313387773393817`},
  Method->{},
  PlotRange->{{0, 3.1}, {0.10313387773393817`, 0.4050000000000008}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.062000000000000006`, 0.062000000000000006`}, {
   0.0060373224453212524`, 0.0060373224453212524`}}]], "Output",
 CellChangeTimes->{{3.572745036770564*^9, 3.5727450510633836`*^9}, {
   3.5727522963921537`*^9, 3.5727523236748137`*^9}, 3.572752379371894*^9, {
   3.572752412334999*^9, 3.572752441855753*^9}, 3.57275247464392*^9, {
   3.572752552882865*^9, 3.5727525596327257`*^9}, 3.5727879534606457`*^9, 
   3.5727880133233232`*^9, 3.572788196037573*^9, {3.572788522900354*^9, 
   3.5727885276789875`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"Jackson3", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Omega]0", "*", "\[Theta]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "1", ",", "6", ",", ".1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5727397323428497`*^9, 3.572739751591297*^9}, {
  3.5727398534092374`*^9, 3.572739864903699*^9}, {3.5727399735775876`*^9, 
  3.5727399801543427`*^9}, {3.572740407047752*^9, 3.5727404071117773`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], LineBox[CompressedData["
1:eJwt0mtIU2EYB/DjvKSlNec2JU0zykuRX5aLTHiekMAPfZCJaFd1oKIIgRp9
MRBB6sNqBDGwoEjCJCUCyxKnaAwvYSiGOZHUeZ+Kzm2OvBS68/4fOJwv5/29
z/N/TqLxvqFEIUmS7vDxv0W5aNfo1CyefEcvG/21ReUpOck9uS2kk8tDj772
Gh572ujnsL+8FP/k1I3T/z5RqVw+ymmc2fO2t5Pw/tItc/O3a6874O2QvqKq
PsTaSZdkb49WU7NuZkV0w9uny2Wm+P3sXnj/ab51x6I69x2exKI/G76XuNZ0
+1X1+X74ASz6HcR5BVv1A502yw/cF8h1cv/D8IL4/YdMd3DFCLwgFvOMwgvm
BO/dpljDGLwQFvP9gneErQ+bCtrOjMMLZTHvb3ihnDa7FvslyQ4vjMX8k1Qm
e0e55mLGevq9KXjHWOTxB144mwufDqUNTcMLZ5HPLLwIpi735IjOAe84i7zm
4J3gs1fe5tni5uEpkd8C5lFyZerYRE3CInwl8lzC+UhONjUUOa4u475I5LsC
T8XXi7s2w6qc8FTIexWeikdbqhs2+tbgRSH/dXhRPGj8mGi+sAFPjX1sYh41
vxhIn3uQ74Knxn5c+B817LOM6xXNW/A02Jcbnpafv+l4VhnggaflXHl/Hnha
LnLYnZ/LvegvGvvchhfNJXcys6emt+HFYL8+OgCUwmLQ
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 6.}, {0, 1.4136368954577478`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.12, 0.12}, {0.02827273790915496, 
   0.02827273790915496}}]], "Output",
 CellChangeTimes->{3.572739936143754*^9, 3.572739984550907*^9, 
  3.5727404108682504`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jackson2", "[", 
  RowBox[{"1", ",", 
   RowBox[{"2", "*", "\[Omega]0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5727886877327657`*^9, 3.57278870304411*^9}}],

Cell[BoxData["0.12687562599132834`"], "Output",
 CellChangeTimes->{{3.572788698608548*^9, 3.572788703342149*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p31", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"Jackson2", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "-", 
            RowBox[{"\[Pi]", "/", "2."}]}], ",", 
           RowBox[{"\[Omega]0", "*", "4"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "\"\<Intensity\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5727887902375045`*^9, 3.572788845770562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p32", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"Jackson1", "[", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"\[Omega]0", "*", "4"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "\"\<Intensity\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.572788850345147*^9, 3.5727888674533186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p31", ",", "p32"}], "]"}]], "Input",
 CellChangeTimes->{{3.5727888717234125`*^9, 3.5727888760669622`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQO/l1rPeM3Caz9rJgjstE/ZKVGwxc4Yyj9p73Yn
jXfphBB7E2MQuGy//h5jy9HPhVD5m/YPNESmn/3aaQ8x7YG9i8qcpget86Hq
H9vX/uq1veS1wT49DQSe2Vs/2WP6VWAvVP9L+8PzPJfIrz9mf/YMCLyx95bh
X/0p8zzUvA/2k14+Pp8y9TJU/Uf7ghndoZ9Cr0HN/2wfZXfzvOqu61D9X+zf
8U04mfrzOtS+b/ZCx0In1c64DjXvh33QxF9edzWvQ837af/pzPp3YULXoeb9
trfkMOU7kwIz74/9BaFAk923Yeb9s5/E9m1P20eYeQwOQplmvEuFYeoZHKRr
/uxc8PgK1HxGhwgP9QDmnItQ/UwOy85uShIMPQW1j9lhTxmTBffhg1DzWBwe
pHy1eSC6FWoeiwOXnR9T7M6lUPNYHa6yX7oZrjkZah6bw9ul1frXumug5rE7
bH19ibVlWyLUPA6Hx9NCpPv5naDmcTioFVY7R92QtQcA7qDj9A==
      "]]}, {}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQNRTSXPVNbPtJw1EwR22gedl/z64vENOwj/pL3E
pkmNjGvN7E2MQeCy/W4WyU/xa7LtIfI37d8aH7n3L7XfHmLaA/vrjR/nb7mx
DKr+sb2tT6vd0eU77NPTQOCZfYHK6fM2sUeh+l/aM7p63nlre97+7BkQeGOv
N1P9bcfny1DzPtg/KJZdV3jrGlT9R/u9C5m8WlluQM3/bO+hymHLse46VP8X
+3039u70LrwGte+bvUJS6oU7rFeh5v2w3/yJQekAxxWoeT/t43P/t2ncvAw1
77d9ro/ZUsGOK1Dz/tjnT7aat+3qVah5/+wvdF84t9n6OtQ8BgfOk+k7brDf
gKpncDjmseTZje7rUPMZHY5N8vB/EAPTz+QQfFCaMa73ItQ+Zofc5BcG12tO
Qs1jcYi5VvtHaed+qHksDu8+rnQysdwANY/VQVsrJ/nsxJlQ89gc9Mokdz84
WQ01j91BOvf48keLA6DmcTh86Gu+fMKHA2oeh0PRamXum28S7ABo/ujF
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\[Theta]", TraditionalForm], 
    FormBox["\"Intensity\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 3.1}, {0, 0.37459702190265787`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.062000000000000006`, 0.062000000000000006`}, {
   0.007491940438053158, 0.007491940438053158}}]], "Output",
 CellChangeTimes->{3.5727888763129964`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "n", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Jackson1", "[", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"\[Omega]0", "*", "n"}]}], "]"}], "-", 
            RowBox[{"Jackson2", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "-", 
               RowBox[{"\[Pi]", "/", "2."}]}], ",", 
              RowBox[{"\[Omega]0", "*", "n"}]}], "]"}]}], "]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "10", ",", ".5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
      "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "n", ",", "\"\<Intensity\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.572739906153942*^9, 3.572739907671135*^9}, {
   3.5727418530199013`*^9, 3.572741860051792*^9}, {3.572741890967725*^9, 
   3.5727419039303727`*^9}, {3.5727422023556128`*^9, 
   3.5727422288929996`*^9}, {3.5727426266517086`*^9, 
   3.5727426296390886`*^9}, {3.5727427298558245`*^9, 3.572742734009352*^9}, {
   3.572742767418603*^9, 3.5727427858549423`*^9}, 3.5727428431642323`*^9, {
   3.5727896793502803`*^9, 3.572789679898345*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.572789680901474*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896809534817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.1`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.1`]\\)\\) \[Cross] \
\\(\\((\\(\\(1.`[0.1`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896810054903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896810394917`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896960721455`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.572789697314889*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896986306987`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-7.817982278289202`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(4.632211430296955`*^-23 + \
\\(\\(4.632211430296955`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.210021168159708`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896987137213`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-1.\
16355283445993040832670732231368204446577500556234104685682934077`65.\
954589770191*^-6\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.845501307182415`*^-22\\)\\) - \
\\(\\(1.3234889800848443`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.85779070238057`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896988337555`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.572789698938275*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: izero\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727896989742785`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727897015291758`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-6.272638669752558`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(\\(\\(-5.1285197978287716`*^-23\\)\\) + \
\\(\\(4.963083675318166`*^-24\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.2451046395509926`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727897016121836`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727897016491885`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727897070526896`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727418613219547`*^9, 3.572741905296542*^9, 
  3.572742229783099*^9, 3.5727426299521265`*^9, 3.5727427344754114`*^9, 
  3.5727427924547825`*^9, 3.5727428465520806`*^9, 3.5727428940638695`*^9, 
  3.572788595949182*^9, 3.572788665600654*^9, 3.572788705360406*^9, 
  3.5727897070877023`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
8r73juD3HaEPPDFn0aXvjdCF/uL7vx4i9H/3Xtc0xprleecN/JP3icUj9BeW
dPbN3Ff5fSQ4bPWBO/7j0q95Y/SVp0dXvFcO7Tlx0pqnNjcs/anZkdh5+dLT
g2dVnod+5Wt81N0eUvfnj/U1m03Vun/3xHU9z7ySmHbJlo7PrVl+/w597Pzm
z96o1r9+Z9zlXU8K/cHPHQ9vaw2p++v+7MubN7dWzj864pLW29ZW63U3Fw8u
HrQrMXb4LUcPrVLPE1Wv9xY3JSLV6nx98fyrhlj3N+YXM2urZ/05MWlKy7pB
wYg+8XerH6kb+TaeV48l6iaOvHaw9X7+wgl691ihX9y4vLfZOk/eT+yKtXct
uLpav/fIPR3Lx1eeBx94Ye+S0LsuPTxmQfO82oi636b5ZwbWW3Nk2ZIJb3+v
PbG/61/ZDQti6n737z4dzzVH1P1O3PbBsCXPRvXHJvc9N+3oq4m3br1j3R3P
Vp4n962cPvTkkajeM7C7bfvSNxOjHrr/opQ17zE2NvjvE/rImaZjYWNE3W/r
lV/UN1jzpil3/+zj61z6qt2LjEUfVZ5vbniqt6GhLaqXfjvNM/ZUW2Lf1j3h
O5vV93+V+XnD7K5Vlefb1vYdQzZa998yc0btqq4jick3tUwI18b0w5/MG9KW
eRfPE8cSh3b2bo3UxtT39wurV2lN1vl/nH7y2tRkoW/YuenjBW2V56uxhz9c
0/iINb8+6tvffbny8/zd3xz+dFCnS1+x9NEte2bH1P1P2LJ3yS41V1W1XjCp
7/oHY+p+587a6p60Jq4/vm78hLq9ryWO/aP9ydo1lZ//Q8e5h1zQHte7Hi88
/YMdbyU2/XJGYEB75XmgcOHIy7+Riuudx3tf0890J+LOtX3DrPn+d0603jvc
pTeuXHjttljl7zf3s57Vm635Mm/zyp6fC33WpS9tf3F5TP39br/uRMtua3Z/
5YzcttCld0z54saVr1V+nk3a11M3dEPl3/+ujd+avsTqoR2vr1tf8z6+7536
h1fNe+C4GdfvG9+0ua7JqS8wzYP9s7yfDSd7+u6y/O4b1wdis4U+0Tu1YZjl
v7z+96f3Nsp/3xp1f8e3nsxtuSeu/w/8rmyT
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxdm3nYj2UWx5/7se9Zem1ZwovXvu9bloqJkCgtKNmyK1tTEkKlrKmsLYiR
NJUpQpZkQoppGak0EhXtIltzvnM+z/X7XfPHuc59tns7n/v5vbpmrrxjRPfh
cRRFmdmjKJvpCiayNa6EtlCU2ySPSVX88uUwyWVS2SQntnSmSV6TLGqqYecz
KWhSyKQW62i9YFLApIZJfvKkq5vUJKa6OtRexrq52U/FtP3WIV7YpKhJPZMi
Jk1NSpqUMmlhUtrkCpNiJpebNDBpZJJhUhzdkFhb9lmRWtWVYdzS5FaT+qxX
jFhZYuVMWmG3xi7PfFdy9sLssS7z1GOuWpy3tkkX7Nqcsx370d1XMbmae29P
PAd2JXROcquSnwtdmXFVeqWe9TLpyX1cS0z+a6ipSk+z6KvGHbEzmbODyV+I
VUfy0+N82NU4TyH6VoN+X0e/a2HXJCYOOmPXouZ65lDPSpg05m6zcT/F6G19
1qzBvupy5/W4/7rMVxdfN7TquuPvSo44asJ64kksNTNZZrLcZCv7aMJdSou/
m9iLmGpIrBG50jfiL8V8qhFL4qgFPq3VnB5cS0901+r/XSY3U5fUN2G/vfE1
Z70SxIqnra81biGnOWvJd0fkb0DM3Wby18iZF89iuxx7LIstfxuTPuxLexxg
0oPz64ztma8S+69MbivWaMk8t+NrSz/bUXsnY9X2x5eJ3Z671X2PM7mBHtan
rxqPipyDISadGIsNsTeQPV9LTGyL1UH4OpLfCX9n6sTlMOwurFs/Sn1bdO4M
cpUzlHlk3x05012IaZ0s1tI6gxkPJ0fcd0XXYS3d7z2s1wOfzjuS3ITphOdu
+K/h7qsQU91o5tI8N3KfYyP/Lmj92ml7GMG4J7mNqGuILf+9afM0oTcV6OtV
2GJ3vMmLJjNMZppMwN8brTxxPRHfLejmjMWN+LkVuQ//rWjxLKbuJ68PdmvG
D2Ar1oqx9qg30I+cviaTIme8L74h7Hcwcy+O/J2oTqxOiZxTjcWnOL0Ln3La
EZNvKv7+1MkvJqdH/o5uYw3NL04GER9I/BpyBxKbgR7MPqU74euIfRXn1BnF
4iPkaiw+xeqYyLm4Ab98j5o8HjmXI/DpDTyGlp28h+H4RpLbFd/12OJxFPE6
9sNY2KRucN9s/JInyJe/O3sahZ7DGsPZ12j2PTfyt3Y357oHv84yH1uMjkX3
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
k5omzzJHBer/C6sD6YI=
           "]], 
          PolygonBox[CompressedData["
1:eJwtk8lOlFEQhf+usAUbngBYtuCWJWxQBjVMEQSE2BLmScMQh2ZGiBJUlEmZ
noLhOUBZwxsAPgDfSdXiS5/b9966VXXqL8mONY1akiQVkAdtLD6mkqQTmtFd
sf4E3eb/aa8SmtDv4S/6H3xAP4FidAk8RT+Ga+KmWNeij6AaMrAHy/CfvTS/
n6ERqlh3QQO6Bq4Sj6FYU3DL3g1Mmp/R2VdQh34R625oRffCb/Qf6EOvwwPz
977BF8g3j7ei2uL8LrSg38AJ+hiy6DUog4fwVb0xr/1SPULPRX53sIregEIo
gp/mb+gtnZlFP4PSlNes2l/DTsp7rt6PmOeinNrRQ5HPKbwzz0m56Y7uTkb8
c5hAD5qf1Z0B9Gj4dQE95mfOY1+x30Y9OjNm7pm8k6f15p7KW+Ws3HejH+Vw
CL/C2/zo7Yx5L1RvLjxOhwdLsGCei94bRi/GXgFMm3soL3Py2LzH6rVmRrPz
PeKpxz9ipjLhz775nVz0T972m8/CGYyjN+NsJnLfjlpU05ZmIXJRTvPmd85i
3tWrDvPZ08w9Rx9EPN3fCc/l/SO9Cy/NvyX5q2/tHuMLZ6o=
           "]]}]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1:eJztmuk/Vu3bxZGESiUKIRSFRFSG4pCESEpIkcqUECmhuahIKQkZKnNJxhQy
U+apZErm8br2QIZMiee4/4rnze9NfTrv07723uc61vqu2yVu7Wpsx8bCwhKD
fyzBv7nHitgPkjSs+H2zymGMAmUpRUvNCgI+zMxk32qhYSZfdOwqQcESFUZh
4DcC2CofE44fadj54kCVcDcF70YsWJq7CfDIeBH+2IeG3yE/6W/1FHibxr38
/IeAF6w8ojP7aBjp73Ucz6FA/qFOi9BaEnSnh+5OUBRw32C9E/aSAmKky3KH
KgmSgX3JoncocNj/9q2hFwXt+i/+jZ8noV1UZbPdBAlHNjsJnjlIweGUYruF
RBJeFngNNe8kISNIXqGJiwLb17TGqQUSGONnDr5dSUCv0aV827ck7Kg5szTS
m4I+ox1qiwZD8DtuU+337GHgODX+2E2JBqs9qnW5e5mw8dsA/+ezJFz4krN0
Zw9eb66k2WQbAcY6TmlRGSSIrrwQ1+FOgXB7lc14CAGVI/v/tTaRED7n3/Lo
AO7/4yuhWkPAA4U8yZdDJAQ56mSkyFEQWOHMFtCP74nUnssZIeH4dtWXFRIU
FGwsALdhAsopR8Wlv0mQUM834BKnoI1hflWmjYA2izIemiChXLr2aO8WCrxq
j5+JSCdgWNE2Mq+ThGSXgg8RqhRMvd31weIsno+MjP/hLySwxHYKbzhFwZ2q
vmiuAiawD9yL9n5MwsI56+ScNxTIHd3r2xM6DBe6fRIu1zAhs4UnaF6NhsWb
tQ8VtZmg7KwbvtuWhHFhZuCvDgoEuEsy+OoI+LipPU9tmISmUKf4tm0UnPqn
NtD/ngTjlv1VvjsosHJcJbGsigSPfSU8UvoUWJ45sf2wPQX7Rt43inmTIPxR
t4QspSBXv8Ih+AkFSlH9OUsPkaDy3nKzrDgNZhsXgC2VAvuWxORacRI4hD+r
uDrSMNcuMHyxnIJip6zpWRYSGnX3X5uPoeHTd+4j022oq6zAX+sYBPSwmNct
qaZhNDTn/pEhCvLvl67e2kIAx4oNQTIDNEyLv17BNYrvPS7528VqAnIvLRn6
TOD1hS+vUkX980gcvXYH9f/rIu/qzHa8vkJ+dw9Jwdciu0ep9QSUtYhfOJxH
w9XxlC6HXgrCXx+dKOwgwOSgqvJXPxo6KW3jJ98oqL7ets9mgoDrr6eL7NVp
eN426uGcTcHTHS5ZUvwknO896X+7gYK4bOWN5UEUSNR3a9nokFBsmGrmLkOB
VMp3r3wLCh5Ps385FkhCoHL0xTgeErYvXWW6/h8JCs6F81dXUaBJ39ipdmAQ
aqX0FKPWDMHNZ1s53OVosPwpERmehboqTQvM6ybBWyOZIHajrmKt+DfFoA7u
G9aOoS6rL12zaavD87SraexbTcEZ98DsXccoWBAIlKyMJKFyz3KzIEOct8r7
dpfOUfBQBzTD7pCQzv78apULBbx7bk/fv0QBWCq3Z7nhuUzeTZ+7TcGDbUFv
9+H8hh7JFV7iiM81WZX8yJeCFzwuoRXXKKiP2W4eZU/C3j4jyPGjIO3h8kbZ
67juuitdANd3bzGaWn6PgqCP0gMvr1JQ+f1GlIIDCVLPHm9y9aRApEdWxuEK
6o2TU6L1Agk2Zcf2M1Hv89JP9Aed0U/40w11rpLQvOu8sf929COzJ7qC+N97
dj+Qvv2EhJDVNRJn20gwEfpYc0oTfebQki8Cn0hQ3vao+MwOEgSCvy1J4aRg
c11YNXORBCvtIyEB1kxoeszKZeZCwopd6yS18Pw+kIuDDaoEfCW77otmoV41
3gY24nvxy004fLSahOEOvRMpeyhg3Xz8ul0eCQ63Wt/ceI73GcHB9uUWnv+I
SeMB9BvBg18l0/houDUW6NX2joL3opLXbLegT+qrp3U402DO3btZs4KC2GU+
Af2LBOSRS7V7E2lgFXzSuP8XBR/XTuxhGSSgorCxN6OBhrKVZk67GBSwr3oW
9/IHAXSO4b78QRp0uflZnqL+U2ttOvKrCEj+GzdctnsYRAWer+XewQRL486P
NSo03PFRn39nNAgClossthJDoD3yYSQdddWoJJDyuo8JHlpX/nGHk7D5a/fl
vhAKyu0PiN2QJmEoJFphOQcFwcs+LLu8hIJLV2Sq9rXgcw+fiEgE1Nva6O0r
8D19W+4lcRzPxedZwS5OPBdhET6BUDwX9jjG0Dr0968RS0on7FBXQYxDEegb
pR3+BlryFGz/uiPGDPeP7lxZuA33P7Zo8OHtJUHn9rWh/fspYHuoVaOEPv1A
JPzz6DESevZGaSjxUaDny2Lh8p+/Ggn3aZ5GX02T6ogoJWHaSOTOCisKxvZx
fuccGIbu071rnXXR1wvjOgr30iC/ae7Yio1MeCXtpvjjOAnaQTnid2gKEi0M
3QL3oJ87ZQt+xOfJJTa+5sJz1zi8MqzmPQGHA7y3iXeQwB14YV0pnj+hfp1z
sp0AgiuX7RdJgie3QUKMFAXmL0+eM+hDX12yMs8Qc0FD2iv9+CYKwhKf3pEu
I+CUxcac0AES5H88a7RVoODN4usUlysELEy2arKgvqYGPNuFTTCH053bR/OY
sEsu/N1m9Hm+P08Yu9/iffY9/7DEZgjuOT+wqOsYBotAr95pzLtkPtEXBp+Z
sOVNqOT+RyQs5U/otkukYOdgw7lLqC9rTWs3jhkS2hJcDuitw8911T2nlkaC
zDuNwnhFnO+QBSO/ChI+JilWnuWnYIffpO8nvI+RpLR7X1EXng3b/R5qoy4F
TDe52lIgsy3cOv4eCW+EXLcr4rwVL2r4zVtTcFuN1A59gDlp6mtngXoROPqu
5MNhCo657S9tRZ96fWndgsYtzD8uLnkjzMtNZmv/XMXc6/pEa0Y9IGBO/2Ru
XgPOc76e/flDeM5F1c5lTgxo9tjvxS1Mwv26Ztbv6L+8qrcuSW8dhjt3U5UC
BZnwtcrb1QN1Hn/a5uLvExQcChHbFeREwd6wqZaV11HHqtffCTzA+w+x7DRA
v7qS9OPJgXMkcOazZang/PgL9Bw5+Qrz9frI320qJLQEBMq5W9Cgcfk5+6US
CnQajFanLyMhq+jH47kUGrbeeyk4jTmaOl7tmY3nHaZR/V6ji4ZLnN4PV6Ge
vs38GF2P+cpRCszfmEcbrZrPGWAe5ahzN5/DPDo+l/buShMNNxOXyNcyKQiI
i5W79p2Am19K3ZgRNIT1RZ2NbKFATZ1W1CIJOOMjd2Y1Pre+v8Y7I8wdPc5b
DoaYO1s+j3Q2ZlHwO20+5ZE/BZd5+cTcjpKwJ05j2hRzZWp6Ljcd36PP+QdH
/eNJiB6kDBt/E1DY/6hPEvnLuJ87ulkYfejqqI3WHAP+dLQEPjEggadgweLv
P/QBs8laQ3sGSJ8Ne5UrQMKa6gyRbKAhN6L42OpEJmw4mrLh3n30/bBgEdF0
9GUnlnvbkD9qK8cuqD4jwdxaz9EmmoK5EKmNPNuZcKd+l2mTJQnPZmbYKjDP
X5JjBwf3DMG7VfBv/NUwBCpqh6xFPXPUCD7aa0xAhyHnq/2FJOxcV2Tda0PB
yfeX5rdgjlk9r1CekMX7y3l99ME3El5FlrhMXES9Cjh+0LhMgUcKV2rhRRJG
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
/9/6/9b/t/7/tv5/qOnYjw==
       "]], {}}, AspectRatio -> 1, AxesLabel -> {
      FormBox["\[Theta]", TraditionalForm], 
      FormBox["n", TraditionalForm], 
      FormBox["\"Intensity\"", TraditionalForm]}, Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, 
    PlotRange -> {{0., 3.1}, {1., 10.}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, ColorFunction -> (Blend[{
              RGBColor[0.293416, 0.0574044, 0.529412], 
              RGBColor[
              0.563820859082933, 0.527565423056382, 0.909498741130694], 
              RGBColor[0.762631, 0.846998, 0.914031], 
              RGBColor[0.941176, 0.906538, 0.834043]}, #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.5, -110.49107142857143`}, 
                   Offset[{4., 0}, {7.5, -110.49107142857143`}]}, {{
                   7.5, -70.3125}, 
                   Offset[{4., 0}, {7.5, -70.3125}]}, {{
                   7.5, -30.133928571428573`}, 
                   Offset[{4., 0}, {7.5, -30.133928571428573`}]}, {{7.5, 
                   10.044642857142858`}, 
                   Offset[{4., 0}, {7.5, 10.044642857142858`}]}, {{7.5, 
                   50.223214285714285`}, 
                   Offset[{4., 0}, {7.5, 50.223214285714285`}]}, {{7.5, 
                   90.40178571428572}, 
                   Offset[{4., 0}, {7.5, 90.40178571428572}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.5, -100.44642857142857`}, 
                   Offset[{2.5, 0.}, {7.5, -100.44642857142857`}]}, {{
                   7.5, -90.40178571428572}, 
                   Offset[{2.5, 0.}, {7.5, -90.40178571428572}]}, {{
                   7.5, -80.35714285714286}, 
                   Offset[{2.5, 0.}, {7.5, -80.35714285714286}]}, {{
                   7.5, -60.267857142857146`}, 
                   Offset[{2.5, 0.}, {7.5, -60.267857142857146`}]}, {{
                   7.5, -50.223214285714285`}, 
                   Offset[{2.5, 0.}, {7.5, -50.223214285714285`}]}, {{
                   7.5, -40.17857142857143}, 
                   Offset[{2.5, 0.}, {7.5, -40.17857142857143}]}, {{
                   7.5, -20.089285714285715`}, 
                   Offset[{2.5, 0.}, {7.5, -20.089285714285715`}]}, {{
                   7.5, -10.044642857142858`}, 
                   Offset[{2.5, 0.}, {7.5, -10.044642857142858`}]}, {{7.5, 
                   0.}, 
                   Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 20.089285714285715`}, 
                   Offset[{2.5, 0.}, {7.5, 20.089285714285715`}]}, {{7.5, 
                   30.133928571428573`}, 
                   Offset[{2.5, 0.}, {7.5, 30.133928571428573`}]}, {{7.5, 
                   40.17857142857143}, 
                   Offset[{2.5, 0.}, {7.5, 40.17857142857143}]}, {{7.5, 
                   60.267857142857146`}, 
                   Offset[{2.5, 0.}, {7.5, 60.267857142857146`}]}, {{7.5, 
                   70.3125}, 
                   Offset[{2.5, 0.}, {7.5, 70.3125}]}, {{7.5, 
                   80.35714285714286}, 
                   Offset[{2.5, 0.}, {7.5, 80.35714285714286}]}, {{7.5, 
                   100.44642857142857`}, 
                   Offset[{2.5, 0.}, {7.5, 100.44642857142857`}]}, {{7.5, 
                   110.49107142857143`}, 
                   Offset[{2.5, 0.}, {7.5, 110.49107142857143`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  RowBox[{"-", "12"}], 
                  Offset[{7., 0.}, {7.5, -110.49107142857143`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "10"}], 
                  Offset[{7., 0.}, {7.5, -70.3125}], {-1, 0.}, Automatic, {1, 
                  0}], 
                 InsetBox[
                  RowBox[{"-", "8"}], 
                  Offset[{7., 0.}, {7.5, -30.133928571428573`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "6"}], 
                  Offset[{7., 0.}, {7.5, 10.044642857142858`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "4"}], 
                  Offset[{7., 0.}, {7.5, 50.223214285714285`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "2"}], 
                  Offset[{7., 0.}, {7.5, 90.40178571428572}], {-1, 0.}, 
                  Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> 
           False]}, AspectRatio -> Automatic, Frame -> True, FrameStyle -> 
         Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.293416`", ",", "0.0574044`", ",", "0.529412`"}], "]"}],
                     ",", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.563820859082933`", ",", "0.527565423056382`", ",", 
                    "0.909498741130694`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.762631`", ",", "0.846998`", ",", "0.914031`"}],
                     "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.941176`", ",", "0.906538`", ",", "0.834043`"}],
                     "]"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "12.052297033195654`"}], ",", 
                 RowBox[{"-", "0.8627534742238818`"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.5727418776870327`*^9, 3.5727419222267084`*^9, 
  3.572742250190693*^9, 3.5727426512578373`*^9, 3.572742755766118*^9, 
  3.5727428136404796`*^9, 3.572742868232913*^9, 3.5727429168467655`*^9, 
  3.572788622725277*^9, 3.5727886860105457`*^9, 3.5727887370987473`*^9, 
  3.5727897324861016`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "This", " ", "is", " ", "the", " ", "error", " ", "plot", " ", "to", " ", 
    "compare", " ", "the", " ", "exact", " ", "jackson", " ", "result", " ", 
    "to", " ", "the", " ", "approx", " ", "jackson", " ", 
    RowBox[{"result", ".", " ", "I"}], " ", "took", " ", "the", " ", 
    "log10"}], ",", " ", 
   RowBox[{
   "so", " ", "this", " ", "will", " ", "show", " ", "the", " ", "magnitude", 
    " ", "of", " ", "the", " ", "error", " ", "between", " ", 
    RowBox[{"them", ".", " ", "Note"}]}], ",", " ", 
   RowBox[{"that", " ", "for", " ", "some", " ", "regions"}], ",", " ", 
   RowBox[{
   "the", " ", "magnitude", " ", "of", " ", "the", " ", "error", " ", "is", 
    " ", "larger", " ", "than", " ", 
    SuperscriptBox["10", "0"]}], ",", " ", 
   RowBox[{
   "which", " ", "means", " ", "that", " ", "for", " ", "some", " ", 
    "regions"}], ",", " ", 
   RowBox[{
   "the", " ", "approximate", " ", "result", " ", "is", " ", "very", " ", 
    RowBox[{"poor", ".", " ", "Note"}]}], ",", " ", 
   RowBox[{"for", " ", "small", " ", "\[Omega]"}], ",", " ", 
   RowBox[{"and", " ", "angles", " ", "close", " ", "to", " ", 
    RowBox[{"\[Pi]", "/", "2"}]}], ",", " ", 
   RowBox[{
   "we", " ", "have", " ", "very", " ", "good", " ", "agreement", " ", 
    "between", " ", "the", " ", "exact", " ", "jackson"}], ",", " ", 
   RowBox[{"and", " ", "the", " ", "approximate", " ", 
    RowBox[{"jackson", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.572742378500006*^9, 3.572742393101867*^9}, {
  3.5727424304706106`*^9, 3.5727424749024153`*^9}, {3.5727425190570316`*^9, 
  3.5727425930474367`*^9}, {3.572742645770136*^9, 3.572742647570364*^9}, {
  3.5727426959675164`*^9, 3.5727426975877485`*^9}, {3.572742968193367*^9, 
  3.572743021753806*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5727417243335414`*^9, 3.5727417278229856`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newint", "[", 
   RowBox[{"t_", ",", "\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "t", "]"}]}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "\[Omega]", " ", 
     RowBox[{"(", 
      RowBox[{"t", "-", 
       FractionBox[
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"n", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"r", "[", "t", "]"}]}], "]"}], "c"]}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jackson3", "[", 
   RowBox[{"\[Theta]_", ",", "\[Omega]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Omega]", "2"], 
    RowBox[{"4", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Norm", "[", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"newint", "[", 
          RowBox[{"t", ",", "\[Theta]", ",", "\[Omega]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           FractionBox[
            RowBox[{"-", "T"}], "2"], ",", 
           FractionBox["T", "2"]}], "}"}]}], "]"}], "]"}], ")"}], "^", "2"}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.5727185615986433`*^9, 3.572718562176802*^9}, {
   3.572718606040613*^9, 3.57271863618386*^9}, 3.5727187243500814`*^9, {
   3.5727188040616703`*^9, 3.572718815937313*^9}, {3.5727188564883957`*^9, 
   3.5727188755206165`*^9}, {3.572718907430702*^9, 3.572718953497678*^9}, {
   3.572719008143241*^9, 3.5727190573666697`*^9}, {3.5727190963697243`*^9, 
   3.5727191032607164`*^9}, {3.572722302619263*^9, 3.5727223030255337`*^9}, {
   3.5727380681678257`*^9, 3.572738069712018*^9}, {3.5727885013899455`*^9, 
   3.572788502637103*^9}, {3.5727885402321*^9, 3.572788543151466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "n", ",", 
         RowBox[{
          RowBox[{"Jackson1", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"\[Omega]0", "*", "n"}]}], "]"}], "-", 
          RowBox[{"Jackson3", "[", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"\[Omega]0", "*", "n"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
      "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5727405129182253`*^9, 3.572740588113016*^9}, {
   3.5727407259135327`*^9, 3.572740826400378*^9}, {3.57274089813555*^9, 
   3.572740928337657*^9}, 3.5727409839158*^9, {3.5727410365164137`*^9, 
   3.5727410646239805`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(1[0.`]\\)\\) . \\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), 0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \
\\(\\(\\(\\(1[0.`]\\)\\) \[Cross] \\(\\((\\(\\(1[0.`]\\)\\) \[Cross] \
\\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\
\\)\\), \\(\\(0.9`\\\\ \\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \
0}\\)\\))\\)\\)\\)\\)\\)\[NoBreak] has evaluated to non-numerical values for \
all sampling points in the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.5727410653900814`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(1[0.`]\\)\\) . \\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), 0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \
\\(\\(\\(\\(1[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0}\\)\\)\\)\\)\\)\[NoBreak] \
has evaluated to non-numerical values for all sampling points in the region \
with boundaries \[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.5727410654470863`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(1[0.`]\\)\\) . \\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\), 0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \
\\(\\(\\(\\(1[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0}\\)\\)\\)\\)\\)\[NoBreak] \
has evaluated to non-numerical values for all sampling points in the region \
with boundaries \[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.5727410656721163`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.572741065676115*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.572741077411607*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.572740552107435*^9, 3.572740588466058*^9, 3.572740929001742*^9, 
   3.572740987609194*^9, {3.5727410498921113`*^9, 3.5727410775666294`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.572740552107435*^9, 3.572740588466058*^9, 
  3.572740929001742*^9, 3.572740987609194*^9, 3.5727410498921113`*^9, 
  3.572741080305941*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: izero\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.572740552107435*^9, 3.572740588466058*^9, 
  3.572740929001742*^9, 3.572740987609194*^9, 3.5727410498921113`*^9, 
  3.5727410803439817`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJytfXuYVcWV76HpRiSKoIjQAv2AcTLXuXMno/Pde3M7OTvJzGdyhzuJmS8z
o/EbmIyDZpKMxCcaDTsqPiIqIigo0VYBERUbGhDlKIfmLajdgG+jDQq0gjSN
dEM3Tfc9e69HnfWrrpnh+7L/2ZxfL1atqvrVqlW161H1k6t++K8lmUzmTwZm
Mv0z+BzKyr8emZs8L2UtHuUI3wL4d2suvCB5dgA+keXfQz019G4GPJMhPZ94
+BWTkmcv4JNrSP9nHv76tuQ5AHhcY3+jnjbEc2TPl16+SP+RgJ0dgN/M6R4D
/Eoun04Pp3SPA34rp9sdSLfHyxf/OcJyID2IT2F7+qF8jvSXAC7l0x9weUo9
nNL1cUq3DPDLOd0BgH+X0z0F8Mty9B4IeMT59XFrr5QH8l/wicB/wa8E/gse
A/9VD/DfpWv573DLf8FnAP8dbvkveC3wH/W0IQ78d/my/Ec7OwCfB/wX/C7g
v8Mt/wV/EviP6fZ4+QI5LQfLf3nPAf6rPPAfy6c/4PKUerjlP/KtDPDbgf/K
N+C/4DcD/x3fLP+Rh/Lo34H/gk8G/gs+Bfgv+Ezgv+Ax8N+la/nvcMt/wWuB
/4IvAv4Lvhz4j3raUA/wX+WB/2hnh2cPvY8BPgf473DLf7Uf+I/p9nj54j9H
WA6W/y6/lv8uXct/wZH/zh56Sj3c8h/5Vgb4HOC/46Hlv7PH/lZ54L/Drb1D
wB7hv+Ax8F/wu4D/gtcC/1UP8N+la/nvcMt/weuA/w63/Bc8D/xHPW2IA/9d
viz/0c4OwHPAf8EXAf8dbvkveAPwH9Pt8fLFf46wHCz/BV8F/Fd54D+WT3/A
5Sn1cMt/5FsZ4POB/8o34L/g84D/jm+W/8hDeYaBPcJ/we8C/gs+B/gv+CLg
v+AzgP8uXct/h1v+C74K+C94Hvgv+GbgP+ppQz3Af8HrgP9oZwfg64H/To/l
v9oD/Bd8G/Af0+1B/cB/Vw6W/y6/lv8uXct/Z7/lv7OHnlIPt/xHvpUBXgf8
V/4A/wWfD/xX3gL/kYfyjAB7hP+CzwD+C478F3wZ8F/wWuC/S9fy3+GW/4Ln
gf+Cbwb+C74T+I962lAP8F/lgf9oZ4dnD72PAb4K+O9wy3+1H/iP6fZ4+eI/
R1gOlv8uv5b/Ll3Lf8GR/84eeko93PIf+VYG+Crgv+Oh5b+zh94DUR7473Br
7yiwR/gv+Bzgv+CLgP+CrwL+C478d+la/jvc8l/wzcB/wRuB/6OiOAFqkP+o
pw31AP8FR/6jnR2A7wT+Oz2W/w63/B8V/bd+hdeQd4D/mG4P6gH+u3Kw/Hf5
tfx36Vr+o539AZen1MMt/5FvZYDngf/KH+C/4MuB/8pb4L/Drb2VYI/wX/Ba
4L/gyH/B88B/1QP8d+la/jvc8l/wRuC/wy3/KwP8Rz1tiAP/Xb4s/9HOjkC6
x0B+M/Df4Zb/lQH+Y7o9Xr74zxHaY/nv9Fv+Vwb4j+XTH3B5Sj3c8h/5Vgb4
euC/8g34L3gO+O/4ZvmPPJSnGuwR/guO/Be8Dvgv+Hrgv+oB/rt0Lf8dbvkv
OPK/Gur3gIfT70MebvlfrfVu+a/pAv/Rzo5Ausc8PZb/gqP/rw7wH9PtQT3A
fywfh/fN/+oA/9HO/oDLU+rhlv8Ot/wXfDPwX/A64L/gDcB/wZH/gi8C/o8D
e4T/gi8C/gu+Cvgv+Gbgv+B1wH+XruW/wy3/xwFvP/Nwy/9xAf6jnjbF++a/
2IP8Rzs7Auke8/RY/mO6xz3c8h/T7UH9wH8sH4f3zf9xAf47+y3/nT30lHq4
5T/yrQzwRuC/8gf4L/h64L/yFvjveCg8oXIZoeVTPuidpybf+0V2YpLMGecq
LvXy0o8KT9lILZ97EvMXHM/+UaJ2d7mrxx+uGjPtb/YH4vBMhOl+dM370dOv
f+HJH3j92buvODsTXd41//tds84F3vaLZifidzl7lq0uPOv6RXcmdv73cz17
ouS/7RqtetYsLjyPdHnxdsXH37/34SUHs+V/ctn9DQucvOQX5S/dddOwJY/3
evZXDfjN7O+c5cfh/5bY99d+vH3x/Q3tX93m44e/uTp+90h79sejd35r9Kdj
VI+0u3zyGuP0nzNt/8WrXu3IXpRU29gKxa9L9N/clf2n1J2N9urxg97CM9rh
9QXxy7K9XrntK8D3X/25F+/VPzX5G4P+uNXDH+z+yZb/8ReZqHJo4Smr8Noj
1WOFl1/Us/P3hWdPv+jDpN5uHaPy2984+nefrPDjT/GTxOcqxX+VlNffd6m8
6JmS5Peq1ux1yd8vdXouTX5v9ONS+n3I0/+d00rOv/O8Q9nnC8XxzpsOv3fY
kot2be/x7Cyf0Hb2hC1+XLrp3278l9Lz/ThW/Da1Oyd/RnXh+YvD2X9P+PWt
KleeSb1+pcTTL+X8w0Lybfc6/Qf/6Zute3Z0ZP/h1MOzKm9w9v8ykbuuK3vh
zHHfm3nA6Tma6D+lO3taor6jqHwqCkQc0eLFRctPv/b96H/2ZpsPFp4ul25T
QodCOST6pp7i9AwsuKVvZDPRz5Pe8J+LyvPri277+j/68dveiwvt/Vw/3vte
Uo+/PuzJSz9L9ThW5an+2j09f5rI/e+S6KwE/qWz894Jf9q54TU/DqxL9FzQ
5aUr5Ya45Ktp5S8+WHmxn6/apPp/7+xsTtpd/14vXSlP1C/lGSof4pWT/7Dg
3i4aWeLpkfL5alIeOafnsTUPvnW4oyP7qx+cct0P/mYs8LaT9Y9VPV9P/Nq4
7uyUDwoZ3u70fzSzUKB79nhxxfmJf1vSkyW/5fSfl/D/tUz0ZOIfBjg9/+f8
8lOP/W0mOvjgNz978OtjA/wZF+DPuAB/nHz82XlfGziv3ZMfk9hzXkn0YmJP
rbNHygfl307y81M/LpLyQfymQvE/Na/H0/Ojgvn7V/hxzt/e+/C/n3mRHxeV
JXz4doknHyr/UHsJtfeQHw71I6H+OhRXnGw8E4o3Qv1+qF8L9Rck91/vF0L+
KtTeQ/wM8TnkT0L+82T7l5BfDfmTk21HIT8T8s+hfi0UV/yh4qtQHBLqT0P9
Rch/nqzfCPnbUH8U6t9D8VIongzF1Sc7jgjF26F4NRSnheKTUP8b6o9O1g+H
+qlQfx2Ki0JxYyg+D41H6Lc//gqNs0Ljl1A8H4pXQ/FbKA4J9deh/ivU34Xi
gVBcFIo/Q/F5aPwSGt+d7Lg1NB4MjYNCcX4oXg3FdaG4JRQnUDlsZr5xfxJ/
u8bi3F/Ff834u4ofSuzu/WPAD2cHpu9vc7nttnoyMq/SAris696d7Zf+1nWs
/LSC/HUsf1jxkvQ9KSf66feRbGn6vpnmQ+rbVT71K/FVNW+k8v56b5uu+Kd7
aq5Mwyi33rslKYbstTlKr1fxIen7erWT/t7B5XNLLk33NLd++9TUnptyj6by
JYrvTsv5ipzY353+7lD7U3vO89dp/2Uq79Zpk50/yUl+O1I9R7Ofp+9bcmIn
lX//aED6fpjyFbn125sT8TWXAH+4ncX/avkTy/+7HniSiYg/F2l5tqe/j7Gd
s4A/uC5X9PSLKunPOcsrt65Y6oXS6+T33exXW0F+do1JN9b1vBnLt0xEeu/Q
ekzbaaY9+430r9Nzlm+ZiOrr/hqxk8q5hPXMAh669dXCh7bU7uPMhztzloeZ
SMrN5CsuiSidJ2ssPzMR8fMh5c+uVK+u185YfmYi4ucjwM9MJPYI3z5Nf5/I
NievF36j5dCT/J7aX8vB8tbVr+Wt5OtW5eG+VH9Ptil5VdykfD6e4v2jY+n7
AeBtJiLe3gg8/wqX/0LL5/gM/n93gD/kedn4OuDzwIja5dXK59SeqaXRnvQt
+kX+VOb/FZZv3vrbFsVT8d4FWo+UTym/WuDtqaqHnlbVk+Y7fhr8J+OZp5TP
aZw1tYzfC3KWt4NYfjH41YHRoPT9KPDZrRMW/pD9ZcofY2c8iOvlBfC3A7U8
LZ8HRiPS9zPKq7R8p7r2a/k8kNvr88DngR6f0/65d0D0YfKaMFv5nKYfn8Z8
fgH47OrR8nlg9FFq12zlJ/3/TLQ65fmNwOevcDk9AXweGDWkeu61fI6HRtTf
LbV8jmQd6TTgM+PxNODzEOWn5fNp3B6XWz7HQ6J8Kv994DOup20BvA74fBrZ
Hy+1evK4XrcV9KwAPg/Rdm35fHqU5mPNSugvhjKflwGfh2j9Wj679c+Wz6cz
f562fI5E/8vA5yFanpbPQ9g/rwQ+D9ZysHwewv75ZeDzELXH8nkw+fs1Tyif
U3jN0ACfXflbPov9Tyo/j6R2nhG9kSqcq3xO/X/vUCr/3meBz0PYP89VPqdi
U4fz3/PAZ14XGs8GPjOenw18Hsb1M1XL/0Rq95nR+ym8Bvh8DvtziAe89bEt
ipN/fkX5nP7/qWdqPVo+4/rbVtVD7XgN8HkY83ml8pl4fCaUj9hzDtuzHvg8
jHmyEvg8LCpL38uVP5T/M/vmc57rJW4APg/T8rR8HsZxWk55ldZH9iwtB8vn
YdHgNJ11wOdhHp870/TOinak5fEc8Plsza/lsyt/y+dh0Tvpf3xO+dmV6jmL
8/Uk8Pls/n+rgM+sZ8KTwFtZz4m8ZTxG3o7gepgJvB3O/eBG4O0I5vn9wFtc
19qiOPFkA/B2eETjlHXAW1w326p6iLebgLeMZ9YBb4cT36ItwNuRrH8z8HYE
xxWrgbdu/a3l7fCAHx7J7eg14O0ILU/L2xEcV2xR/qTlksf18NL/iv6NwM9z
uN9fAeO+ERyHvA48H6H2Wz6P1HKw/Dwn2pC8H38+Z3nu6svyfIS1R/k8kv3z
auDzCI43ngc+8/rMeAHwmfH8AuDzKOWnlH9aX9nyaG+KNwGfR3EccifwGdep
tihOfH4d+Fyu9Wj5jOtgW63++E3g8yitX8vncuZzE/B5NOtvBD6PYr+0Efjs
1tNaPpczH15UPqd8i0ZT+4q2A59HaXlaf3uu5tfydnSAt+dGjek7B7wdRTzM
7wDejlI7TX6jMSRfKE/L23PZry4D3rp6sbwdxf45B7wdzbxdB7xl+QnLNF+n
pHaMYv6/YvlcyestPT4j/q7iwk8p/zR+zY/um89RZZSOiwtxiOUzrjttAbzR
yk/E9aiHVb5vfo6BeT/WHzv9lodufa/UL40rRmv9Wr5VRl+k/NoJ/tPNJ1se
VvRtf76S552agG9u/tPyrZLt2WT95MeVAb5VRFvTv78EfHPlaflWyfFtg/KN
/Esl820r8K2S49iXlG9pf72miuPtDcC3avp/8XPAN8YzzwPfqpU/llfVPP66
CnglepBX+J1XeOXk6WkNyLvvhtS/v631lbbHCVUBvjk9lm/VUQfXo9QvzRdV
eX4vfdVWe7xK/eTjVWq/5ZVvp6TbN6+qPT9GvKqm8VFmu/Iqrd+Pq8ifPJ4H
XrnytLyq5nmyDcArVw6WV9Wq3/JqLPvDbZZXsm4wvwL4M47738eBJ7jusUVx
KWdp12m9ZMfC96lWT97yZFyAJ2Ptd8Z6/zuy5cNYbe/Wz4wL8GGs5svW+7hA
vY+z+rV+x3I/1QD168rN1u84rRdbj4xPaAD7R0Vj0vc2LWeab+F+M7MDyrlo
3YUpN+f3jHwt+OGC307Nq3Dt1NZvFcelTaDf8d/6/2pPj+BfTd+Yrqt36wfG
cT+zE/qXcVa+UI8zEniR+44s+aV8Vnj5vTD585RKz86V6TqBCo/n85N0JuM+
lBZaH3J/lSf/9+m6kWqvXi5L3leN/U/1hOwP6fnP8oX2hPIVKodQOdv19rx+
If4Rr8dbybi0Mznnp5blpH38Ffur56yezA9zdn21zP8sz6XqJzVAut+Ddf6M
V07kdSCNFq+T8yh2gJ7r2M63Qc8vYV+A5pf1f4j2w34BPS+H173v8nC7j8Dh
5C/3AH5rjd1fIPbI/O0+xSlMmAb7Dpw8/d4P+u+G/QgiL/NgBz15eh/y9KfZ
qgc8cwvsX1B54sP4wxbP3wb7Glx9peWwF/DM1bDfwZUn/b92xak/ubLG7oNg
+caZVA7jj0K6v2CeHLN4ZZyj/Pq4/Z4t7eK3nK96xgcxLucFPcjpyXzvd3Mm
H0X5su1R9P/EtlNtdz+DfRzOTspvl8UnToP2Jfp/VmNw0R9dW2P3g7CeP5fz
YbaDHvke97rqIf9/KezTYfn4Vtt+Jd38vbDfBOv9BOCX1dh2LfZMsrjoj6fU
2H0rjuep/Mhe0H838f+Cj0H/D1j/B1Av14Pf0O+uGYOrvD6RtYfb6SWA5++r
sX7G6Td4kX5ZJ2P0VPK5PVE/i9fOYp7vBf3TOd1PQf+14MdEfqbFVf5R3T8C
+SU+fAl4/kHmyWeefusPBZ9lcU33qRq7n8j5qzS/ecAztzLPD4D+J1j/58Cr
BeBvRf4pi2v7kv2b/SFdrq/pPk7ptqp+qqc54Ldd+Ri8qPzpLXEv6L/Ex6kc
2kD/7cSf2Oknex6AfkHrJWdwVy/c3v100ycqs3h8PfQjov8Oi2u9iL9C+ZvZ
Tx4Bey6HuIXTbb6J+enwNL+NN0A/5dqjwYvaI9nZYeXjOTV235nGP8xPwGv/
JWf7O9HzmO0HJd3m+czDo2Dn1dz/gnz0uxq73036U+6XpwOex/5U9N9jcdU/
i+3vDMjLd3cXpxE/fZzsF15JPyvz2748/a7j30P579fm5qT1fiPnR75nRdBf
oz/np6h+bb/s8mXwonKw/b7ED9dCvy/5uoX983GrP3qC5Ed2QX/6KOzrZPn8
fIuL/Iw6iBPEnl9DnMD25CUubQL5aVxu26x8fCPLd6s9NO97G/T72I66A+1o
h01X+hGNKzjdib9je06A/snMnxOg/yGIE7Bf6wn0a+9BOcQQhwxWnMZBH4G8
nBv5PsjfxHgv2IPnDbp+x+BF/Q7BzZCuPM2QbiZD4S3qv4PjB6ef/NTTsM9X
5B/NGVztER5+4tlj4xlnD/H/U5CfwfOQe0B+MeU3Fju0H4d9x1puFnfllrNx
jqQ7H+Ic9T86P2DlF/N4pATS5XN+3oN0M0tgH7TIz7C4yst5WZ956dq4SNrj
Erb/c5Bfyv7/gJWPchwnS3wicchEsmehs0fWVdo4B+PV/mC/tPcDYM+LEEeJ
/3mF4/NWlad0n6P2tTeQ7jV+uvSUevIG9+QPeXwweBEfKL9tID+L4xCQL8ST
1O4C9kS+PTaOQv/py9s4TXkCcZryhOME1M/naV8i8Za88Rxj0V8LcdpgxYmH
R9B/Un8Xo/wjEKdJu7nT4mJP7YNczgNA/npudyA/+QGI65xfsnGd80vULjqA
nyshrpNy+6k9Z0DL7Rfcj59i5eObuH2BfP4aiAPFzjqIA8XOl9gPHAX523l+
EuRrV0AcKPFGbM9DEHsm/pbmdcc7+XTefer11F/knTzvL4BzKsSexyBulPJc
wOl2BuQl3tP5kxqDu/kT9mO+PMW3vjyVT5uND+NXIc4EPdsC6c59hu2XedEY
4kzsl/lBvs31y8HGma7cbDwpce9tFtd8yTreLtD/LPuBLqt/4qsQZ4o8nCuo
/iRv40yxJ55h40yxJ3qYy7MR7L+D+f8a2D+L+d+t9tB3uScgzsR23e21axtP
SrpP2ThT0+V1PhecAP2cr5E9oH8xxJkYV6D88xBPajlYXMcvsn7s9yA/hdvF
+yB/H8v3gj31EGe6ftngRf0ywc2QrjzNkK7wGfVPpu8F56H+FyHOFPklEGeK
/AobZxbZY/AiewjfA/JSLyjP44hJ0v7FnhUQZ2q5QZyp5WbjTE233saZyjcp
B9Rfz/F5Ceivg3hS5OdBPCnt9FkbT6o9K208qeUg6133g7ycD4zy+RrZpyT2
0G885xzHBRK/uXZq40NJd52NG7XcNjHu66d4xtdPT6knb3BP/pBXjwYvqkfC
20Cez/8fifKyTt63x8aBAdzrRzDdlTYOdPXLPJH+TPTP5Pkx1H81xHuif6HF
Vf8LjB8B+TkcV6D8EogDHZ9tHCh8fpL1D1B54ttvOT5x8ileC+euF/kNgxf5
DcLbVZ6+3y2FOFDsnAJxoJQbz0tnTgH5+6gcpoN8fLeNA8XOKG/jQLGzdh3j
RyFfj1F7jEF+YgPEgWLPgxAHip+Zy+Xm5LtoXROPF5w8zf/MhnhP7HnW4sr/
FxjvtOXcuxjiQJ1PgzhQ59O4Hfny1O/48lRu8n0T9zX4emwc6PTQexXp0fXk
93F5PsX5Kmd8io0Pvf6UH68/7bTlGcP55xpfvWjjQM3XdMa7QM8aXucDevIY
77F8foPFlVdbYb5R0pXvGo2Ayzn83aqf7tRaYeM6r512B/r3HaBf4ocToIf7
/b2oZzLEaSJfZ3GVr7NxWlF+Kd0PAZ/BenpB/8sQd7n+zuBF/R3BzaCfnxj1
8Pntp4Ge/AYbd6n8aht3abprYH7PpUvzdZ8CzufmjZe4SOMHiJeEh+strnze
CvN1ol/mr0pAP/drC0FP/jWIi7R+Le7qF+bfJF3ev3PBfsA3M6+cfv6uZ+Mf
L17tD+nivJnol/Xqvh5ab+7roafUkze4J3/IK2eyB3F+Yl+/jU8CuOff2rCc
eZ6nDPTwfrT3UM/lME8lelaxvz0CeB3EFcLDRRZXHr7A8dsAkH8c5pdc+dh4
QOy/x8YJ2r7u5/E46n+Y8nUNyOdnwHyRpLuR+XkU82v7fY0r4DxwjSt4XFzv
5OX7Duk7Bvrh/HA3L2H7azcvwfP5vjz5K1+e7MR1aLW2vy4aRxu8aBxN+HL2
57Kv5EGu97mcL1kPD/11Uf3aeRvHN9P/SjwQz7C4xgOzuR67PP7beRjBm2w/
q/rnwnc91h8/xd9Ttlv5yjpazznpDbDnSq6vbk23hO2x8y2uHEz/K/onLoPv
d6xfx+/vqTzx6mG2/wTor4V5FS1n2/9q3FVrcc2X4B+DvNzj9iHIz2K+9WK9
wPyJ88/0bgb98jSDfvn+9Yknn2Z3EurH9T/IE1+PnScpB3wvyL/K5fwpyC/i
7zIyLyHpvgbzIY6fpr9WfubtvIfq38D4Z2CP3HtSAvobYN4D/TnoieGeC033
dcYPWPn8DvYPn0M7amLcpUv1VwvzG1hfrZCvBk7Xl6enNIAf8srT4EXlSb/b
IN0NXD4ov4i/X/vp2vkH9HttWM7wvUnLmcvnsOI0vtvCflXG0VKez9l+XO2H
+6RUP95zofE2r/88Anrk/k3Us5zXvaOeebZ/j3Df7pFA+zoF9CxmO9uhHORc
BSdP+wvn2v5d090C34Mk3Sbbz7pxH38/PQr1tZTL/yjwfD3zAfXIfTfHQM8q
GO+LPa/AONrpofweg3LI8Xok+U4v+nn+aqTEaaL/SRunFdlj4zpnD+FLKd1a
2V/2EK8XupvjAdmvNNn2+54/56eo3k084NnT6ZWP/V4jcchci2scwt+DRh63
+qMd3C66QP8WGL+Xw36BLTbdgh+w4/cKxaldbgN5+b7QBPIruN11q510jkGt
jR+8dtQdaEc7oHxegv0Cki5/vxvfE+jXToD+RTaucH4G5gHUz8B3GXcfk50H
qFCc8vURyMt9rx+A/Bxup71Yvzau8PZHN4MeiBOK/LMd76N//sTTb8f7Tj/5
SZQX/uwBeb5Pbbp8b9Z+lvks8wDaz9q4Qu3faeMK5cMWG1doum9wuX0Gdjba
9cNa70thfkDK52UbVxTpsfMDFYrbdTiCbyf8vP6aLrUr/v5e79KleHu5jSu8
uK6/ygtuv4/45/qKPfZc1laVp/1tb1K896WfLqXnp0tPad/yOv+A8oe8ejR4
UT2adTVa/qthHY7I8z0med8e0uPbY+Iczy/58vZ7Ct7/hfY08vz/YcWpv+P5
0ksGQLoP8zyA679oHn+FjX/y7lwCO+9RobiJi1T/A/CdQvL1CK8DPwL65d46
1M/36513Cujn7z71qH+hjaPyeF7EEc/PmDhK/SHc36F+g++LHNmu+mnf+grm
s9ND7et2jpOdHhqHLrDzGG78Dt8ddPzO67uOaroUv/E6pW0dmi/iAfvzvK+f
+Onrp/cxaC9rYR5Gym2jjbtQ/zZfP/HB12PnweT8kLzFVX6d/e5WkKd5yRx8
pxN5OQ+N9xs2VzM+08ZdXn8nD55X0OmVj52fwXy9BHFgLcRjVYpTvXWBnib4
DuKfzyzyfcZdkm682MZdmu4L7N+awM6lrH8ryM/nuL1b0yX+523c5bW77kC7
22HTjdbCOhlON16XM+thVP/LPG9wAvTDfI7Kr4N5HpHfZuMrV18Qj2l9cXv5
CORvZ/3vg/w8br+9Xr/JxRH9h3hRf0q/myFdeZohXYiviuRtPObkyf49IL+R
ywHla4k/18h3EP/85P8QL+Ktia803UYbd2m6cn9iSE+Jpkt/XwfzOVrvEHdV
QTyzX+2x5f+5J2/XpVT0PW/jxb1OXnATR9XiPvQDXrr0ncLXT/n19dNT6skb
3JM/5KVL3798PdQefT32u0zovlH0t21aDtSfvsX9/mHF6ZyEN/n7BfQjhbia
3tiPwLpi5dsGiH+Eb2/A9xTx/0/AvJDoX2j3i6n+5XZ/mernczymo/6nYV2H
6H/RxjlF7drGP+gH5PuL6F9h4xzVL+XWrnrovKNnmW9OD+H/wPlyemifdb2d
Xyris11nguchDFT9ZOdcmHfS+QqOr46q/j9P/zGP+enrIX4G9Eico/3ma7Ce
RMrzTRv/FOm381FOP6Xr6zFxjvaDGyAukn5wE8fDA1SezgV80cYzXr/ATxEf
TNyi+d1g4xmVX2vjFomjYtmP6eSJr5tsfFJb2Xfckq/qO25R/bKOsRHit0Xc
vrpV/+npP96wcYjXLroD7WKH1Z/fkDP7vIr6QXqf8PpBE1eo/FaIQ0S+wcYV
mq+nmSe/B3wer7PqDfRHHCeEcK99NYN+2Y/gy5v5nFr/PgWRt/X7iaffnGuh
OJfDJf08/SZOCOFF6Zo4Qfmzg+dDSjw91I+E9Dh5snMrxBVajzZ+KKRr/dt+
D6d1j04/lct8Gyd4cZr07463Jh4o0k9yvh5qL74eeko9eYN78oe8dKn/8vWY
/j2Ee36pTfWber8E/GS82u4zUj2zbD+ufIP7Ot34CPp3HR/xuOMI6OHx5peg
J1rF+49AT7zU9tdF7cL0v2rPq7ZfVj1red67XfXQPAB/l8k7PYQ/ZPfXFPRQ
v/yq7ZeRP9LPFo2DDF7k94hXR1UPnXu81u6LwfHUSF8PvY959WX6Uy2fJ2Hd
heiR8+1lHzvribeSntMGKH6Cz/XKFD/or+Iuj4em/2oO3PuM9Vt/AvBltl9Q
nNeZj+8N1EsmQtz44SJ7SLqfhxv/WYTTuU8lHm78nrOT10c5nNZV5qwfKyoH
isd8nJ5SD0/VXOPjxm+gngjqPbPatmvF+Tv+e4BHq227E7yZ1wMsdDi1r2fs
PJ6Li6gfvwZwvOdX5Z+147toRN/jvrjc9iMXwHe6/E7hc4R6DF6kh/4ffsdZ
x/GVk6f12Otr7LpK+N53SYnVk1nJ/hm+v2Tke6L/HYH0y31/FTC+7vBwO44Y
1TeO8rIfrWheguzz59lSNQvd/Azpy5EfvsDNz9Ab2qOOC5psvKTyb9t9NzKf
mdli4wr1e9vt94sinPyqGy/TeX2yzsGN34m3LK/fF/DcTh8neX+8Rv6ty4vz
yf+7uHFY+g9eB7vXxQ/pee+ZV+24o4DTeP8N7n+7+/bD1zi/R+cNvlrzj4n+
ZT4/6R5Jv31NSe5xu+ILr309fNGum4bd53/XXpzgfbSvIUsKfxjst685yf19
O/x5MHM/ZhFvL0jwrX34gf0XrxqzZ79n518VsnX6hQc9PWf/ZvZ37hnvt4v9
Nyy79KMpPj5w/JEblr3st5fDyf1l9/rtZfoNhWdfl1c+5h7APNy73dvr5Suf
lOfGXi9fXyb3nd3oz5f+dN/xZ9rK/fnS6J6f7zv+NX++tH/rwYMHP3K42PO7
uwrPFJ8n6T2nh127Ez3/77L7G9rf/dwrnzuTe/3G+vNj9v5KJ//4o+sr6xr8
+ZDG5F65n/ntaH7Zj+vKVvvz/Gn5X9Hl4WXJPX9t/rg7LecBvZ49lyT31l3o
jx/TdnTYn199JLm/b6kbZ4n88uSexKf9c0fN/adF8nWJf7j8sJab6L8hucdx
ku9/zD2kRX5gV5Lul+1eusOS++/ebvfq5WfJ/Y8tftzblOh50/dvVyblc6DT
S9fcR1lkZ5T4pe90eXh6/+kZvZ7+muTe2//rx3Xm3sOiejR4kX5zP2OR/v+V
6P/LEk/PPyflOabE02PumS3K7599beBzo15r98rN3LNZJP+tJN21flz6Z0n5
nF/i4SFeXZHcy/nrFq/cTrad/qH87cn2IyH/HCd8+PKgZ2eoHYX8TKh9heox
1L5C7fEP1e5C/vAP1U+F/GqoXYf8QKi9h9p1yG+H/PPJ9qehOCTUz4b6i5C/
CrXfs9J67PHKJ+TH0ntvz/TnJ0P9+MnGAycbd51snBDqB0N+NeS3Q37vZP15
yqvz/bgxFLeE4t5Q/Bnq30+2vwj68zRul/XY8h1DztPIMT/1fFSO/zdY+czP
ebzmzpVNx0eRzO+9pfI0X3Mnnxftn6dK8rtBv3wn3Qf4ozyO+wLwJTw/0644
7df+DX+H8s8tJD2yLkvP6+Bxeh5wsXMT65H9v7fyOOs4pCv7nd9VPTSe4vO1
Ju20euR8y714Hp18v9jt2UP14p/zRvNpcP5YvIC/V+6DdOXcsC8AX83fO9o1
XVofxeU/3j/Ph+wRXsl+sTou5/WKk74reZ5kNfsf2Z/F++VjOGcmeoV59Y7q
oXHobzldOL8l4nMJ6uHclbycm7cb7JHv4/55JjRdDeeQRC9yPbaoHirfeh6/
B873mF6iesj+xVw+B0FPju38AuzZxPvZ/fMfiD94jsHNPP/g77un8lzH9Svr
8yfTfrHxsL87kv2zb6s8nQst53rh/mjZ17AL9DNv34P9xZk8t5cWlad1kmt5
HUsJyC9hf3IQ9K/n/YP+PlOaJ4R9nRPl3Il2SLee5rUity+S5ufl/jjc/yjr
/Ndq/0j4FMbfAnwRz1PtAlza9T7AZT/UQcBlfgn3y6zleULYPxLzd9LY36dw
QbF/0/kxmf8XfyjzY3dxObj4R+6JIJ68q3ruSstzAu9D3Al6VnK990K+trCf
99e3E2/3Ac7rkfYe1nSpHhu4HELrAzdoXER65HyqnMZRhD/E8u+oPK2vm8d+
dSfIy3q53aBf9vf568Ho6WNcn6bbAnpknVVg/ZX4mbzcj/Yy9y9uXJCu987u
YP649QbUf73G/tOtc0jnJ9ds4Ppar/En/b6P7XlbcfIL4v93gbz4q9B36hYv
viV9JSrPfpLL56AnT/kKfCeN3biJyoe/p+x137mo/5L1tLgucTv3j19o+dv5
7dA6CrfegOZ7N9SE4snQODQUz4fG46HxQmje4GTnqULzePRbzvOUdbh3wb3n
ndn0/MD4rhp7709nlu67uw3u93Hnitv7fTr5vvob4X6fzmx6v25W7qGQ+5gk
PrqyxuAad11jcUk3+jHj7ypem6Z7Dvd3u63+jPhzP7618nBuvJ43684rtnhn
ltqp3BuC58nLOcaHFadyv8/GaQU9KZ6XfSjtKi/3wlu8M1uelsNNcF+YOx/b
4u4+C3t/UD+6x23NXMA7s3S/2yy4t6gff7+eU2PvjerH9zb+Du6N6qf3hhs8
dvebWz2d2VRP7Uzgm6tHgxfVo+Wh5GtazuAF+fQe5jUzgYdy3vWvgIcSh99u
+RbzPZC9kywfZNzRWws8kfMSn7E8kXFZZgHwh8/djZ+3/In5HOD4MeCPnLu1
wPKnIE/3Uc4C/gyiOCFeYPlTNC6z/HHnYRqeFOTl3nnLn0F0j9vUJZY/Bfn0
vtH4CfA/g/ge0ueBV4OYV0stTwp6ziT7gW+D+B7vh4E/brxmeTKI77ucCzwZ
HLWm/Mf75QfxfYUPWLwgn94/OHUOyPeLpqX4r0C+jO6N/fjOnPVjg/R+ecu3
wYpbf4Xj0N2WtxnwY0XjTfprK+D1wDcZHy30xpX0/5cC3wbrPekWd/enW765
cavF3fljlm+D9V54iw+NPkvrZTXwbTD5q3y95VtBXu4ft7wayvfEvQJ8G0w8
jFaBHxuq9xFbfLDi1l+5ca7FXX1ZHg5lP7YQ+DM02pSWw2PWj+l5NdOtH9Px
F9yjXZDvk28FeboP8RboZ4fzOge4R7soXwb3zlPCcfpy6ydV/hXwnzIebADe
sp74ZYsX9JD+NeBXeZyYX2t5XpAnv7oC/KqMr1+1PC/Ip3zIr7B8LuB033G9
5Wf+LL3/3frJ4dFBjucNPwvylek/VoOfHM68bQA/OTw6I/1/myxvC3povgvv
ix/eN28L8n3ytqgerf8cHh1I87XM+s+CfHqf48fPgT8czvc8LrK4yE+Fe+Gl
vvD+94jvf5/6APhDPB9jN4zHgYcR3/M+daPlg+wLjtdBPDY8+kr6ftH6tyh0
D7ublzB40Xjf8CHi+9bxHs/I3bdu6jfie9Lj18FflbM9TbZ+I7k//RnwV+Xc
b66w9V5UbtZfuXkSU+8R359e0GP9WDn3sy9Dv+zqy/Ah4nvVe58Hv1dO/Wx2
Kfg9tid6Avxbud6rbv0V7jtuAXwr+CV37zn9vVXliSfboN+U/eMbrT/Ju3vS
bf9YznFO3vIqL/ehb4F+053XYf2Pm1ex/WO5vfd8r/suJrjtH8vZ/2yx/qcg
X5X+4007TsyPsvdfn+fvY7L17uaRrB/ge8k/rge/UcF+A/rfWrnnusHyQcsB
7yuvANzNj8l95ba/q1Dc+hnct9UCeCP0O279m+1fKvrmSSFfdF5HI/ifCr3H
1uC17n5b63/cfluDF80v2f6lgteh7bT1XpBP+5d4B/Q7bp7B4EXzFabei+bf
bH9UwfW4zvqNWr5nfCrcX1/L94lnc9CPVNG4Y0Ie+qNRUWOq/xWLF9KleHKt
5VVzNftD4JWuJ3wa4iuZ13rO8qe2su97yQvyfd53X1Q+No7CfQ0wDxk3QjxT
BfsB3XqDtP+KmyBuqeL7tTdbnjTDvdsZ9117XPoP4EPRPJvBi757Gj4UzUNa
f+LuNzf1VZD/JC22LeBnXPkYPjTz/eBT1wIfmCd477zYEy219VXAyQ/cY+ur
yH5TL0XzePTXVg839SXztJm3bX01y36B7VaPnluyGeJenm/PNkG9jCL/EL0F
8afwf4fFvX1M/nymTbdoPZjpX6psve/19wUYXhWVz/8HWiM8xg==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
         "]], Polygon3DBox[CompressedData["
1:eJxFmwf4j+X3x5/Ps+4vZbREhWSUSlMRSXsvpD2kIioaaKNIUklUiIYiaUdK
GghpaO9SUSlZDQ0tfu+X9/2//tfl+N77uce5z33O+5xPo669O/ZKkyR5L0uS
XH+r6b8qUXXRRqKGogai7USNRYeITlO700VHKP2T+h2n9PGiX5QeHJLkFA14
DWWqf1ZlJyrdWfSM0q+I5ojmiuaJvs48FmN+ofRvojOVPkO0OvO36csYzOFB
lXVSem9942p9a7zyHZXvILpb6Z8zz4m5/Jp5LdTRhjUxh2mi6ZnndoHKBqpu
gOh8pY8SXaR0L9ExSp+Yey7M6WSlT4plpE8RBdH1qrtONFLj3Zx5L9iTG5W+
K/P399R8r9R8W9NP+VNF+yr9XO5vM4fnc+/ZcaJBwXt5ndKTVHee+k8K3qPP
RV/FvatBW9V3Vf0Dql+q/Gjlx4i+V/oqtblSdLXoGtF+ub/dTu2vD57jENGw
OHfO5GTVn5T4rK5Qmz1Sr4d9Zf8fED0kmixKiyR5WXUvidZr7GvVvpXan0D7
Mkl2Vv1OohaiXUTNRE1F26ldY9GZuff2APW5QfluqjtP9KHSHwXvBfyxX+o9
GaYxn6gkyRvKb1yVJDM0h+6qP1z5W1TfV30XsZfKp6rfXe3rqv1S5XPl71Z9
UP5T5asr/5bGn6f2c0WvK72F2q9T+n0uRZXLXhMtzN32S9ECVU1Q/adxjs8o
/VXiua9hj5Vur7IbVddEZY1F24t2EJ2v8buLDhEdKnpXZT+r/Xy1X6v2Dyv/
l/ILlV+nfHvl9xO9pfTbooWiyar7GJ5S+SHKP6D1PKayX5V+VmUrOTvlf1P+
Uc3nPOUPUX6Y8v31zWfVPlX578p/zh1V/XTRx7m/8ShrS/xtvrGH6M347duV
LtT/Y7Wp0v58qj6vMn/Rh0p/xnxU95ryWyl9eeTPwaIrlG6W+7zOF+2g9FzR
K0rPEV2Umy6kLNZ9rDHuSd1mS6W30PcnKP1A4nbcudtFZbyLh9Gfu6s+I9S+
Dmcq2lJUV3RNsOxAhtTOLTPGisZlliW0pQ7+3TLKwY5R3tB328K8As/Ax/ur
/oLE3zxQ6TqF53hhXEu93PvfTbS10mP0ja5Kny3anzussq9E34i+FbVS371F
bUX7Ft7TD0Sf5N7rRoXn0DTepeEqu5y9Fd2u9FYqqydqyFxFNZSerbpZyD+l
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
ktA=
         "]], Polygon3DBox[CompressedData["
1:eJwt13n4l1Max/Hv9/er7y/taJRpT6ZCMy2apFJTSQ0X1yVEpbQoQtsUIoRC
0UJayBJlCklatTdNExMhLSpFu0xc7btlXvf1PH+8r3Pfn3Pf55znec72VO3W
9+Y+eZlM5ksUxrv5mcwM3F2QyVyh4lAuk9nNfpNdTcAlqI7H0vpZYj/EbDxL
X0bbo+459ghMo7fSbg16LfysvaGFMpknMEncPbTiyh/FHsBZdmE5LZU5Md3k
thLTEqflLqc/yp6vbiE+xnhaa1pp9vm4AFdoo4jc41l5qM3vrP0dtAViZ6MD
v2eMhdaFfye68sfQR2OfdjPymivX0T/HSvZT4srFmNUdwAnjakJ7kfYFfx0G
shvQjqvbyh7J3iv/BxzANO1PRT11a9T9phyFuuyV8v+DNfgHrRytD7sv+mGz
vE34Xd0GdQ2Ur+FmdkNtX4VGeBnjMFldv3g/ys38+R5rLH84NkWsMTb1jn7l
/4Tq/Pfo7+JNOQ/RLlSu0PdyDEjHeUzcFjHfYBXtGdrFyun0N7X3nn6epVXx
IUaKGYFX1N9PKxnPVSQZ/zeepZSc0tgbJe0ytJZ/m/5+kbeM/QptHM7wX5V/
Y8SxL4/vjWzhZBKvUTdBXT77Xvpd7OcwU/U0/iF6zvi20LbhKvHFacXwKfvV
GB+7gr5jbRwWewhV+aXUP0AchhnxHrVX3HOs5S+UsxhL0D3mbnwD8Z3VFVGW
8WwltZPTzn5aWf5Esfu1s4L/L9QWtyj9XhNjjcQ7wzzMxZR0/v9BuTT9Nu/T
P8As9Ii+0Qtz1Z0QMyjWFPsa/Q7GI3gQg3BnWvedsRyX/yJ7MCYb04mYS2JK
ss8Yd5beiN8EpWlnaYVoTflHtTOT3Va/N+ImHKHNiHp2c/wNT8c7EP9JzB9t
7E5jD7Knaq9E2lYzfV+Dp9i3ic0ph6p7Al3YlWg/aOt8dv+8ZJ7FfHtVzr+1
twonY93S17B3xX6h/mX+COzkV9eWInNEv0dxKf9bdKQ1jXmBrfyD+rk0L9mH
Yj+aRNsjcXf0la7tPyrb8x9T34l/B27mn8JJrFb/Uuxh7NfkT0Z3Ws1Yc9q/
ML6d3Gv51+Fc9Gncq2lv8KfE/ht7j7ymtCr8inicv5c+lf0X8QPlDYr1jGae
6bdoC034DdGY9kuMA3/ll9NvWTyujb/TfqXVRyNxZ/knUY//UX6yHmNd1sZh
WntaA9rFsV7iefn9Y56zu7N7xDmC+9FIXAX6RegVc1D+Pn18xJ8e88rY62Oz
uC30b9BazH1ie6NTug/uzyWxV+HqWDvZpK0qqMN+EctQkT+jcLK37pf7Lvs9
NMMWfRwQ8wPains0/Q5v6edtTI1nFbdV3JxYX/Ht+bPFdWDf6n11QEfUpdVB
MXvA+fKuY0+Js0zuSrGr85L6CrTyaKG/NfodoPxffnJuPKz+EPswFmA+eka7
6o6Km4l35LRX3o478JC2FuUlZ1mcaUv5t+Jb9vw4l9EunjWXvKN4V21yyfPe
gnaoZszl9XVDrNNcsm/HXj1abnlaEzmNsS1dx3+K/UZ8Y31UjjmPAfy6OKeP
UrEfq6vD/8m7WcQeTxuFg3FOpGfnF+z1+BrPx/PJnY5/ZpNn64XN2eScWhBr
gn8ZytCKaPsCtNHWeNp22i7sRDf+iFzSVrT5PrrwT3uGV9iTUAPH+SU953pj
uVI72+K9xX4vtrL6g7G3xFnGL1Ek2UPqx/nMHx1nXnrWbTX+7diBF+gfyt1O
3xN7bUHyLPG9Fmj7g2zyrJPwLbuzckLs/zjheZrJuQTNYl/lXyanFtama7u6
cqzYJXLX0b/CemygfU+bgB3pO6gpX5E5xj+BWvG+4r3RfuEX1d4uAQNif6V1
i3sPztPHleKK007F3oEG/Iu8g91xhsk5D0XRKdqj/S6mrPiu/DLidoYW57CY
LC6OvZj7Ov01VI59kP5ZNtn792AvKsk9pn40fXY2eX+T4x7CHoUZ6besLO5C
fc3h/zmbnKEF8lfoY3KcmSgU37Mgmcc/e8bDOILBtGq0F+SPxwScxqnYj9Q1
j/1Oe3fFGYMO6V62L/YqbRbS3+a4r6Chuje0+XrAHki7QDlc7DZxe+L50u98
tZjexndDrMkYX+Sm51orddeidcwlfeTJ2UTfGPuzmM+N4w65V8dcxdr4lmKv
w1j1LWi/0T5K7xk96P3QH/Vif8KT6d0wX7kwvX+Noo+Ou27ca+MuqY+vY23i
U/4YcdXZPxr/Tu3vwqVxZsZ9Ob17ZZQ71ReJvQEtSC3FjcpP5nHM56px3vK/
S+9kFeO+EfcvjEvf+Zk4h7VbGO3pt8U9Xd2H6m5n30Jvh5fS/bdAOSt99lP6
v17dDaiCnvptQ78+3ou657U9El3Tb3+AVlvcPeLa8m9CNtYz/Ufv/tZcci+P
+3mOXRi/FiTzv2lB8o9yXO4GsaXzk/+V0eld/0v+RmyKPVzcufivov8Xc/ln
xJXKT3KjjfivmJf+Az1tTMMwvFCyF8WeNFTfq2Jdh52eB0vkL8UyPEYfgv7i
Vosbyv4+zrq85H/uY1qf9P/tg/iu/E/iHss/XpDcWWdlk70p9qhitLtpQzFN
/pCYR/R+cX+KuUMfyL4v+on2+fNwb3wv49ke98p03oyJdZXm1CxIxhnj3Z7e
gyooz2r/HI6l37qGsqOYTuldMe6MvY3/deNrka7pd+Kc5k/JJmdUjO+wsSzm
L8ID6b0vL87SOEOyyd69M73XV1KWFVMunlffRTGkIPl/PKuvOewe7MH0R/Ao
Fqfr+y3225haKNl7Yw8+XZCcIxvZC2JNGktf/pC468TdMPa3OJ/5y3F5zDVx
z9B6xrtDCdqDtEGYkPZfVPlT3M/FXcNvHGdS/AvFvIr7ckGy1zZW9s0l3zq+
+Ve4X/1n8b/AHiPmydg3+DNjzdPih/9hlJH7uNjdtCX8xagVZ3x6v35Sf8Mw
HBPT+2FFbVRCZfwfBDQgOA==
         "]], 
        Polygon3DBox[{{1620, 484, 483, 474, 473, 1618}, {1632, 448, 447, 778, 
         746, 1855}, {1638, 454, 1602, 1993, 671, 1825}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkT0vg1EUx88tz62GRQedOkiklRDFQKxIRAekA4m3BIMwVCIWgwQDiUns
SHwBfADxln6BLk1I+Q4NbYrB7+Tc4Z/f/zn33HPPOU/3+k6hGBORPtSCZpxI
GU7CFS9Sw39EIrm4yCuJv7CnTSRFch6f5myC3GdyT+AQukA/xFOwAfdgBzpA
GfKSMAvHuF+lZif1xvGt1MziZzmbJ+cRbsI6PezCG2qtwjfiyyGu5wVUweed
1eyCNXIHyRvF57zdbZBzHVl9nfEI/x1ZD3/cW/LW56K32Yv4B3jorOaZs5xt
eOftvtaZwz9524Puo4n28e/E1tApvhR8ghl7mbHJmyPEv2LWg/ZWhwPe9qY9
X0Y21xWc4nua+AasBK+xe9iPjlE7tYedvfHC2YKz3m7RVphL6+ubybBz/Ref
YVfn+Cr8ByvhQGc=
         "]], Polygon3DBox[CompressedData["
1:eJwtkssrhVEUxc+H7/vomrgDRgZKGHgPyFRKSV5DjwFGKLckJZRHGcjEwBDl
D/CYezMzk5vyyMRYEffmMfBb9hmsWvucffbae+1TNpLqm8xxzjWCPPAUOfca
ONcM6uH9YAw+Dgbg2dC5DPgC32CPswXuCkEC/s5ZMXwRpIkrQAN8FWzAb8EU
PIPWG7lb4JIGCnOda4udO+B+xteT3jEYhr+TPxSZRjXxemDaj2AFXhJYP5X5
zEGtFPEVd/dgAp7l/S73h8TLgdVQreXQakvjhPiZOAmfA0fEp6ATfkNON7yK
+gXUb+SsMjJNefHge5E/6uWFmYrITYIPeBNnNZHN2Au/cza7aqiWPJJX22At
MA+V3xHbLJqpnFq/xNc5Ns8n7+ti83KQnFnyS0PrVT2f+f3Jy2mwH9kONFvS
6yX8vTyXNz2Rve8ivlA/ofXaRzxG/OP1pSlt9a9aca55M6qe/Xztke1Dd8pp
JX8ntN5VQ7XS/k/oL+jvLMFH/b61G82kv6E/Ij35KW/lcW1kHsnbzcC8k6a0
/z3298V+H3ornYzXl5dFvp5yWmL7M/N+HvV+rp35/cvbP1vJZnk=
         "]], 
        Polygon3DBox[{{1503, 1502, 2084, 772, 1858}, {1410, 1409, 1616, 343, 
         1665}, {1526, 247, 363, 377, 1529}, {1522, 1521, 2044, 733, 1849}, {
         2043, 707, 1437, 1438, 1439}, {1439, 1438, 1641, 350, 1442}, {1583, 
         279, 387, 400, 1584}, {2088, 775, 380, 391, 1633}, {2065, 733, 1525, 
         1526, 1527}, {1583, 311, 761, 756, 1582}, {1724, 366, 1629, 1502, 
         1503}, {1726, 342, 1615, 1409, 1410}, {1733, 462, 779, 777, 1633}, {
         1502, 242, 355, 791, 2084}}]}]}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtks0rRGEUh9/33u7MGAsbhFhYkEHZsJGFjzLCSD5KPlLTkGJIEhtWlLKw
4Q9QPmJsFMrGUmOysbCQmpqtfC5mSZ7TuYtfz++ce95zz3nvrY4vDS06xphm
5KI8wZ41ppTg2zOmBP8JrwLGDOP74TvxMj6Nj8IM5zphF3E3fITXaAQfgxk/
L8/T9J/FV9C/I8g7YW3ImBfyBeSz8I/+EfwvvOdMGTWRkM6zQv6J3BlsQJtC
4h9Ha1aJC9EMOvW05zFsDWrvSmp6qe8jfwTLXZ1H5tqn7pldDmRv8uPkras7
yC438BAVk6uhzwD+y+idyNkxah6kN4rhz+EczFMzAQet9u+B01bPjsIp3y9Y
vY84THH2kp4J/Aa+jfnr8U5A7y2Mv/D0W0j/Dzgvz8i3wzVYh3as7ivfKErN
HXET2vbrpD4Bs7AF7Vp9V477qArpLm8ys6f3LP9DI3x19J5z/vcK+7NNoiT+
Fq7DIrRlNS8+Q+2Jpz1T8B+pW0tc
         "]], Polygon3DBox[CompressedData["
1:eJwtk7FL11EUxd/72ff9tIaWXMSGBkUraAoiHFILTTQjaNAKRQqCzFpCEU2C
GqKhxZpV1AZtqMTwH0i0BAscJAhag8oCcSr8HM4bDt9z3333vXfOvd9jA/eu
DJVCCGfAAbBQhPCDb6wIoQKMpBCuxRB2WXtJ7g04RPyVovrKEJrJr5O7wNog
/GfhvbeJN5UjPgwfAe+Ia5LjUfAc/oL8FvsvEw8T73HuJPwp+AO/WA7hcXSN
ak+Cavgj8AVexxu22XefeJq4nPy+B+A1fJHzD8KrwCv4XGGuGtWuEf/m/j7W
JpL3zBf2QbX/8n6d8T/HjfAd6mup70yuv8HaUr7/BPwv+aPkGyutQ3o+kDuL
ngZpBVPJHspLnd9ctp/nwE1wK79fb1EvlNdaS7Tn2isPnxCfyv6ob73wgega
aTzCtz9ae4k9x6M1SM/5ZP+7iT8ma/pWsmZpnU3ure7rgG+A9uga1Qqt4FPO
vQWD0Z7IW83EnaxJ79Ud67lGtZdAF1gG7zOu5nrl5OH3knsqb2dAT/SMqk/K
y2tpasKfX4XnYwKsJs+c3qS3aBY1Ew+je6Tz2vO868yxrF+9VY/Uq7bC2tuI
7ybP3DP46ehZ/Jw8i7pzh70rybOteb2e/M9oxjXb+pfWkr2Wf5Osj6vP0fr0
b+0D42FufQ==
         "]], Polygon3DBox[CompressedData["
1:eJwtjr0LQVEYxt97bxfZDITNokSZLLL7uBhYDAbJ6iur8k9glkIxGfwNPiar
lLIKMcjqdzuGX+c5z/O87zmhervU0kXEAyb0HSKWJpLjTGNkQEe78c4Ur5By
iizxvIaIBjfmLIfq2jNNdEFT3pP7A47oHt4LnUeX0Ru7B0UIQhzvw34fO7O8
McHr4J3wLpDEC7tEDPIVWYNszb4Inh9vwN0LUbItdNH3//v2P3Z4AXo7dn1E
ZQfYw4CsSb/KOTZVbveC9C2nokI+JBuZqjODGt6UmTl6ATF0Au/L7FtXf/kB
aRAsvg==
         "]]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1NdvTmEAgPFTpbZS1Kb2FZFwYdML48KVvwAXCElLi4tKxN6ktFq09t5i
1oraW1FKjWjtPUIIQf1eLp4+zznfec95z9f3/VqPSB2aEhNFUQt/KnHo5Ngo
as1ZnI1kXalyFMViuE7hVEzThbyOG1aJokSc0hk8GeX6Hpcixo3bx7kvt8F7
D2vL7fBBt+cO+Kg78nKswBxjVvKgqlFUz1zy9GTn8nkDr+IxvJo38yas0Vt4
K9bqddim1/MA96ntPhv0RswNY3gnbw7jMC+M5UXYjjzHO8I1WKB38W7M13t4
Ie/lxfhi/p24M/ahvmfl+3y/PhCu0YtwUB/CFH2YU7iAU3kcjuijKNDHOJOP
h3N8gpegC2q4/0kuxDGfneIsPs1T+QxP57M8ns9xGp/nkXyBLyJdX+IzfJnr
uO8MfUUv5at8Dat0FndFNxThBgb7XhOMuamzXXOLBzpX17liHc8znb+tJ/Ed
nsgTUKJH8Wjc1fdwXRehVN/HLP0grAt+yMv4EefgMYodl3E5cnUOnuineIYh
5tLMHEqcf+44g1+EZ/FLfoVS/Zpn8xt+G9ZgWH94F9Ys1uhc7o6f/tc9uCd+
6V7cG791H+6LP7of90c/Y5PC+g/7IO7/Ziu2N26hzGE6p6FQ1+a1fML+Oo6p
eiyPwTAdcYX36S8zOYlbIc7zWob9jFjdnJuF/aubcpMwVjemRqgwh8Swf/Fb
N+D6+KUTuB5+6rocjx9hbYT54buuxTXxLaxFro6vuhr7yqMvOryq14k+x/yb
dmS60aeY/783fwGbhpdB
       "]], 
      Line3DBox[{392, 296, 752, 297, 298, 754, 299, 425, 382, 1709, 373, 357, 
       1661, 356, 1707, 354, 346, 789, 1706, 333, 1645, 327, 322, 1637, 1636, 
       321, 1643, 1644, 325, 1700, 331, 1660, 345, 1698, 352, 788, 1697, 368, 
       1696, 375, 392}], 
      Line3DBox[{396, 300, 433, 386, 1713, 374, 1712, 362, 361, 1711, 372, 
       381, 1710, 396}], 
      Line3DBox[{757, 303, 446, 389, 1679, 378, 1721, 365, 1663, 351, 341, 
       1719, 1718, 340, 1717, 339, 1716, 349, 364, 1714, 1715, 376, 388, 1865,
        790, 399, 757}], 
      Line3DBox[{402, 305, 306, 779, 462, 1733, 391, 380, 1732, 367, 1866, 
       791, 355, 1665, 343, 1730, 334, 324, 1729, 323, 1728, 332, 1727, 342, 
       1726, 353, 1725, 366, 1724, 379, 1681, 390, 402}], 
      Line3DBox[{759, 309, 478, 395, 1746, 385, 1745, 371, 1744, 360, 347, 
       1656, 1655, 336, 328, 1741, 1740, 326, 1738, 1739, 335, 1737, 344, 
       1867, 794, 358, 793, 1736, 369, 1735, 383, 792, 1734, 393, 404, 759}], 
      Line3DBox[{405, 310, 761, 311, 494, 1757, 400, 387, 1756, 1755, 377, 
       363, 1754, 350, 1641, 338, 330, 1635, 329, 1751, 337, 1860, 780, 1657, 
       348, 359, 370, 1748, 1749, 384, 394, 1694, 405}]}, {
      Line3DBox[CompressedData["
1:eJwVzstKglEYhtEvAruJIEztnFppRxsEBU60+kEtDFGJIuiATmySg5rUoOgW
u5PWP1g8e7+Dzc4OX5LnmYhocjIbscA8WVpzEYuaI0+Btm1Jl1lhlWvbmq6z
wSZdW1FLlNmiYdvWHSpU6dl2dY99DujbDvWIGscMbad6Rp2/TMStreHc5DKt
e6IdrtI/8GC70UH6Bnec2+71kSdGXNjGOuGVt/RN21Tf+eCTxPal3/zwyz9N
FRtw
       "]], Line3DBox[CompressedData["
1:eJwVzzFLAgEYx+FXEvsWQZ+lIZCQCJFoiAgEJTSjMioDlyhwlYZwaxC3hmhr
iaZoiaYQKiK1QQoiWiLoueHh/d9vubvp1fWFaioicrQnIqaY4SUTkZ+MmLWz
zPGq1bR5O0+BN21RW7KXWWGgbWhFu8waQ21Tq9lb1HnStrU9u0GTkbajHdpH
tHjXdrUT+5QOY21fO7O79PjUDrRz+4JLvrSmdmVfc0PJ8617xz0PyTdqj26f
5+QfqGij5F188M2x9uP+8kekI/4BRyQyzw==
       "]], Line3DBox[CompressedData["
1:eJwVzD9LQmEYh+GnhFr6Cg19kYYGQSICJSIpRPujiOgQDdIQQSREWzhEUw7R
VEM05RJO4RJN0aBD4RJN0RKBXWe4+L3n5uHMlRrZ+kRELDFORfzxyw+t6Yhv
+8UnI2rahx3wxitV7cU+0+eJstazj3R5YEe7t3fccsO2dm2v6HDJpnZhz2lz
SlE7sccccUhBO7D7NJlnQ9uzuzSos65VbYWt5P/ktUJyzxqrvt+nIla8cywz
MxmxaDOkk+5m6GbBe5Yz/gEa5y5J
       "]], Line3DBox[CompressedData["
1:eJwVzz1LgmEYhuE7XjWkrUHaIqLNQdoaoqaGhhCXaIoaQhD0T4RD9EFEFCLh
0hQuTtLSFk1t0tQgTRlIWUQEQYfDwX09Jwi+c7u1UnUiIjZIUhGrScQlb5mI
2mTEld3imqF2oN3YbTp8aIda177ljk/tSLu3H3jkSzvWevYTz5yMaX33hVdO
vQfuOyN++PbbMz3t/2WZ4lc716btHDP8aRfarD3PAuHdIG8XWCTxbrJkL7NC
ZvytrNnrFNn3LrmbbLFNXdtx9yhT4R9RVCwn
       "]], Line3DBox[CompressedData["
1:eJwNzrErxHEcx+EPdyHTGa6bKJeJ4TK5QWc5g8V1hsskqUsZTkmSRFw3yB9g
ksWkW0yyXBbdpFt0k+EyHSUMks0zPL0/31f96je5sb1SG4iIZbaSEZtUWacx
HLFmV6lQpq6V7BKLFDnVCnaePHOcaLM2xwzTHGtTNssE4xxpGZtmjBSH2qgd
IclfIuJA+7XffLLv/TMU0Xe/0uPNe09/cXd5psOu9mTbPPLAjtay99xx7v3l
+1t3kxvOtA/t2n3FJTXtXbtwLzDo//4BOjEpuw==
       "]], Line3DBox[CompressedData["
1:eJwVzz1LQnEYxuHH3k5Eb5Qt0eIULU3R4hQuDeIQbdFiexJEiyAtQrQE0RJE
Q4phhFgcqA7W9xJCuxou/r/7WQ6nUK0dnOYiokJtKuJ2MiLxDmcinpKIBb1E
nl+3ttu63qDA2O3ZbVNvsc2E3WVH71Jk2n5lT5fYZ+RbPbeyrnBIYvc50sec
MGu/cabPuWDOfqeuG1wyb6c09RXXLNof3Pz/G3cs21/c6wceWbEzWrrDC6v2
gJ7uk7Jm//CpM775A6BtJgs=
       "]], Line3DBox[CompressedData["
1:eJwVz71LglEcBeCfJLpES1O02BItTeHSFC0OUUPiIk3ibEE0GIhDQTgUfVFG
SF8YhUiDRAj9XwZB9Nzh4Zx7eF+4d6G2u93IRMQW39mIMV988piPGMkPhgx4
sL3LPs880bP15D1dblO3XckLzjjlztaRJxxzlL63tWWLQ5rc2A7kPnvUubbV
5A5VKlzaynKTDSa5iHNbSV9nLd3ZOcuqXmSFN+cMy/oSi7w6//m/oM8zx4vt
1zarzzCd3mv7seXS26YiGvIfmO4o6g==
       "]], Line3DBox[CompressedData["
1:eJwVzbFKAmAYBdDPMqRCRIjmeiEHH6HNpcClhpYaXHJoqaElB6OQIkqKIEKF
JLChQGqoxQZblFpqCAQ7Dod77wc///LKWn41ERE5msmIBEVmUxEN1vUNNpm3
j9jStymRtlvs6GV2ydg19vR9DsjaZxzqFaoUOHc7liecsmC3udAvuWbRfpj8
o9/Tpm535CNPPHPl9iJfeeN98t6tJz/o88mN20AO+eKbrtuP/OWWpWnp9qeP
GDM1E3HnlpQp5kjzD4W1MrA=
       "]], 
      Line3DBox[{1302, 1133, 1219, 1815, 2006, 1223, 1225, 1229, 1816, 2007, 
       1234, 1236, 1240, 1817, 2008, 1245, 1247, 1251, 1818, 2009, 1256, 1258,
        1702}], 
      Line3DBox[{1394, 1390, 1386, 1384, 2004, 1381, 1377, 1373, 1369, 2001, 
       1297, 1295, 1364, 1362, 1999, 1356, 1354, 1349, 1347, 1997, 1342, 1608,
        1338, 1336, 1995, 1330, 1605, 1639}], 
      Line3DBox[{1403, 1215, 1306, 1824, 2029, 1311, 1313, 1318, 1827, 2031, 
       1324, 1326, 1329, 1829, 2032, 1333, 1335, 1340, 1830, 2033, 1345, 1346,
        1699}], 
      Line3DBox[{1490, 1486, 1483, 1479, 2025, 1476, 1472, 1468, 1399, 2050, 
       1397, 1464, 1460, 1458, 2023, 1455, 1453, 1449, 2022, 1842, 1443, 1621,
        1753}], 
      Line3DBox[{1497, 1300, 1407, 1834, 2054, 1412, 1414, 1419, 1836, 2056, 
       1425, 1427, 1432, 1838, 2058, 1434, 1436, 1441, 1841, 1863}], 
      Line3DBox[{1569, 1566, 1563, 1560, 2048, 1557, 1554, 1551, 1495, 2047, 
       1493, 1548, 1545, 1544, 2045, 1541, 1539, 1536, 1535, 2027, 1531, 
       1689}], Line3DBox[{1573, 1401, 1500, 1846, 2073, 1504, 1505, 1509, 
       1847, 2074, 1514, 1515, 1519, 1848, 2075, 1523, 1524, 1528, 1671}], 
      Line3DBox[{1599, 1598, 1597, 1596, 2071, 1595, 1594, 1593, 1572, 2069, 
       1571, 1592, 1591, 1590, 2067, 1589, 1588, 1587, 1586, 2052, 1585, 
       1695}], Line3DBox[{1638, 1825, 2018, 1316, 1320, 1322, 1828, 2020, 
       1653}], Line3DBox[{1640, 1606, 1331, 1996, 1337, 1658}], 
      Line3DBox[{1642, 1344, 1341, 2010, 1339, 1334, 1332, 676, 1328, 1325, 
       1323, 2030, 1826, 1317, 1312, 1310, 2028, 1823, 1305, 1214, 1402}], 
      Line3DBox[{1646, 2015, 1383, 1379, 1375, 1371, 1831, 2013, 1366, 1360, 
       1358, 1353, 2081, 1705}], 
      Line3DBox[{1648, 1389, 1393, 1396, 2039, 1405, 1408, 1666}], 
      Line3DBox[{1649, 1404, 1832, 2017, 1392, 1388, 1647}], 
      Line3DBox[{1650, 1308, 1304, 2016, 1294, 1292, 1289, 1286, 2014, 1283, 
       1281, 1278, 1275, 2012, 1272, 1271, 1267, 1265, 2011, 1819, 1704}], 
      Line3DBox[{1651, 2019, 1416, 1420, 1422, 2021, 1654}], 
      Line3DBox[{1652, 1327, 1994, 1321, 1319, 1315, 1314, 1993, 1602, 1307, 
       1303, 1822, 1992, 1291, 1288, 1285, 1821, 1990, 1280, 1277, 1274, 1820,
        1988, 1270, 1266, 1264, 1261, 2080, 1703}], 
      Line3DBox[{1659, 1622, 2059, 1840, 1440, 1435, 1433, 2057, 1837, 1431, 
       1426, 1424, 2055, 1835, 1418, 1413, 1411, 2053, 1833, 1406, 1299, 
       1496}], Line3DBox[{1662, 2037, 1380, 1376, 1372, 2035, 1368, 1367, 
       1361, 1359, 2034, 1861}], 
      Line3DBox[{1664, 1498, 1844, 2040, 1488, 1485, 1720}], 
      Line3DBox[{1667, 1506, 1507, 1510, 1512, 2042, 1862}], 
      Line3DBox[{1668, 2041, 1856, 1423, 1421, 1417, 1415, 2083, 1731}], 
      Line3DBox[{1669, 1630, 1686}], 
      Line3DBox[{1670, 1444, 2046, 1448, 1450, 1454, 1456, 2024, 1459, 1461, 
       1465, 1398, 2051, 1400, 1469, 1473, 1477, 2026, 1480, 1484, 1487, 
       1491}], Line3DBox[{1672, 1623, 1624, 1462, 2036, 1463, 1466, 1470, 
       1474, 2038, 1843, 1677}], Line3DBox[{1673, 1631, 1691}], 
      Line3DBox[{1674, 2060, 1467, 1471, 1475, 1478, 2061, 1678}], 
      Line3DBox[{1675, 1625, 1708}], 
      Line3DBox[{1676, 1854, 2078, 1550, 1553, 1556, 1559, 2079, 1692}], 
      Line3DBox[{1680, 1489, 1492, 2062, 1499, 1501, 1683}], 
      Line3DBox[{1682, 1508, 1511, 1513, 1859, 2064, 1684}], 
      Line3DBox[{1685, 1634, 1747}], Line3DBox[{1688, 1687}], 
      Line3DBox[{1690, 1532, 1851, 2068, 1537, 1540, 1542, 1853, 2070, 1546, 
       1549, 1494, 1845, 2072, 1552, 1555, 1558, 2049, 1561, 1564, 1567, 
       1570}], Line3DBox[{1693, 1576, 1577, 1578, 1864}], 
      Line3DBox[{1701, 1257, 1255, 1252, 1987, 1250, 1246, 1244, 1241, 1986, 
       1239, 1235, 1233, 1230, 1984, 1228, 1224, 1222, 638, 1218, 1132, 
       1301}], Line3DBox[{1722, 1565, 1568, 2063, 1855, 1632, 1723}], 
      Line3DBox[{1743, 1618, 1620, 1868}], 
      Line3DBox[{1750, 2082, 1619, 1617, 1742}], 
      Line3DBox[{1752, 1609, 1343, 1998, 1348, 1350, 1355, 1357, 2000, 1363, 
       1365, 1296, 1298, 2002, 1370, 1374, 1378, 1382, 2005, 1385, 1387, 1391,
        1395}]}, {
      Line3DBox[{496, 495, 1877, 519, 1875, 1876, 520, 550, 1902, 1903, 549, 
       580, 579, 1953, 1954, 610, 609, 1983, 639, 638, 2006, 669, 668, 2028, 
       2029, 699, 698, 2053, 2054, 725, 724, 2073, 749}], 
      Line3DBox[{497, 498, 1878, 521, 524, 1904, 551, 553, 1929, 1930, 581, 
       583, 1955, 1956, 611, 1957, 613, 640, 1984, 642, 2007, 670, 672, 2030, 
       2031, 700, 702, 2055, 2056, 726, 727, 2074, 750}], 
      Line3DBox[{499, 501, 1881, 523, 1879, 1880, 528, 554, 557, 1931, 1932, 
       584, 587, 1958, 1959, 614, 617, 1985, 643, 1986, 646, 2008, 673, 676, 
       2032, 703, 705, 2057, 2058, 728, 730, 2075, 751}], 
      Line3DBox[{500, 504, 1883, 525, 1882, 532, 1905, 555, 1906, 561, 1933, 
       585, 591, 1960, 1961, 615, 1962, 621, 644, 1987, 650, 2009, 674, 2010, 
       680, 2033, 704, 708, 2059, 785}], 
      Line3DBox[{502, 1869, 507, 527, 1884, 536, 1907, 558, 1908, 565, 1934, 
       588, 595, 1963, 1964, 618, 1965, 625, 647, 2080, 654, 2011, 677, 2081, 
       684, 2034, 781}], 
      Line3DBox[{503, 510, 1886, 529, 1885, 517, 1909, 559, 1910, 548, 1935, 
       589, 1936, 578, 1966, 619, 1967, 608, 648, 1988, 658, 2012, 678, 2013, 
       687, 2035, 706, 2036, 714, 2060, 732, 739, 2078, 755}], 
      Line3DBox[{505, 513, 1888, 531, 1887, 542, 1911, 562, 1912, 572, 1937, 
       592, 1938, 602, 1968, 622, 632, 1989, 651, 1990, 662, 2014, 681, 2015, 
       691, 2037, 770, 2038, 717, 2061, 774, 742, 2079, 787}], 
      Line3DBox[{506, 516, 1890, 533, 1889, 546, 1913, 563, 1914, 576, 1939, 
       593, 1940, 606, 1969, 623, 636, 1991, 652, 1992, 666, 2016, 682, 2017, 
       695, 2039, 709, 2040, 721, 2062, 735, 2063, 746, 778}], 
      Line3DBox[{508, 522, 1892, 535, 1891, 552, 1915, 566, 1916, 582, 1941, 
       596, 1942, 612, 1970, 626, 1971, 641, 655, 1993, 671, 2018, 685, 2019, 
       701, 2083, 711, 782}], 
      Line3DBox[{509, 1870, 526, 537, 1893, 556, 1917, 567, 1918, 586, 1943, 
       597, 1944, 616, 1972, 627, 1973, 645, 656, 1994, 675, 2020, 767, 2021, 
       768, 2041, 783}], 
      Line3DBox[{511, 530, 1897, 539, 1894, 560, 1920, 569, 1919, 590, 1946, 
       599, 1945, 620, 1975, 629, 1974, 649, 660, 1995, 1996, 679, 689, 2082, 
       795}], Line3DBox[{512, 1871, 534, 540, 1895, 1896, 564, 570, 1921, 594,
        1948, 600, 1947, 624, 1977, 630, 1976, 653, 661, 1997, 1998, 683, 690,
        2022, 710, 2046, 716, 2027, 736, 2068, 741, 2052, 758, 762}], 
      Line3DBox[{514, 1872, 538, 543, 1898, 1899, 568, 573, 1922, 598, 1950, 
       603, 1949, 628, 1978, 633, 657, 2003, 664, 1999, 2000, 686, 693, 2023, 
       2024, 713, 719, 2045, 738, 2070, 744, 2067, 760, 764}], 
      Line3DBox[{515, 1873, 541, 544, 1900, 1901, 571, 574, 1923, 1924, 601, 
       604, 1951, 631, 1980, 634, 1979, 659, 665, 2001, 2002, 688, 694, 697, 
       2050, 2051, 720, 2047, 723, 2072, 745, 2069, 748, 765}], 
      Line3DBox[{518, 1874, 545, 547, 575, 1927, 1928, 577, 1925, 1926, 605, 
       607, 1952, 635, 1982, 637, 1981, 663, 667, 2004, 2005, 692, 696, 2025, 
       2026, 718, 722, 2048, 2049, 743, 747, 2071, 763, 766}], 
      Line3DBox[{784, 2042, 773, 2064, 776, 786}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
xpDdwIf5AujtgmNkX82Uj9xU6+k9gG8srwJtx56TjQG35TElX5CTgVc9TDjJ
H1ed8MTVerrr9na4q/ahj75feTDU3ajx+VmPd79Z89fw7Rlw5K145nHMt8XR
vQ8+ntfo+9DK313142oft+t5Tjk7Z+GVVb9m2c80LGNew/MLq/4Y1CmsUtF8
JY04n0u/v3CY5aVNQIMEmY7vYPvbMfXw3iXq2OazEPw3Vpy14QPF2+d07Mdz
swkvB/0oUU7D+nA+0W6Md0DLgYuteNX6uiD/9nBznmSfyohrZfsnofED2Q3w
hVniyfPCyc/478ddkByf05iJeWZN31ytf1b9kyGZ5cDf1XAFr0jS93+20Y1D
mo6xPXwY9mWPJD2C5U/Yr9ZdlvUB72XCY7c0P90sOZsRnzfoo7cmc95rnerd
b3wzzN2o3mVYxQ7Vg7Pcl/jZkaNzFi5iTP8w3ysxm3752+dxfKGmT6WzAsa2
5PjRn037xRx3bqkHV9d2K24Epce7Vw6Yl+V81lT1T5kVV9zIefz92KGDso7v
rZdr63dicroo9VCd18i/Pf+udWYGTKri7hTvMX9t3csNW5QyCsyZFH6/FPMp
or85jCWJK0b4zWc+O3H4mVmRQ/IYpVMDerTJPcX0GwYd6HTq/bX3yH6eyS9M
8TMljLfxZH9uUkJIn/2nXjCK15u6vml81vv4/xr8s05PETE1v6M23m3+2Woj
SN6+xnV7cEwmDqO4er93rfCrUwToUALr+9Dj7n6v/RFsp4Xc6RGp9Wvmp97q
0bE+xUUnc3vIUcVnC/ijOjS36omN5gkDelZn67iL/QTk9Hl8riHnh/4gpGq/
vYsJx3dWfSq/0sZvz4BDHl24UNfx4Pz6mkocmDZW1wuqZ8J7wn8xWraBfMf+
Beh1wet0faoWJhzy38sbJeyWZQaZcPgFNqyVMeif8xoOwl68Rvu/GE51jVbS
fnkz/cd7R60vJU+zwt0WSdRjWcVyFOxUrUIF9P73uB8Md3OH8IYewfpUPiWX
zorU9g2Wc7C/63cJyC/lbfUlXt8qILf4s/1kuvr7Y5soz3Qvw73VB6/cLGGX
GuNrxbceUq6DHam1VX4uu4HqG5xmeb6FglceIT9R8JXsn0pVH9Z8h/gMftFu
JjxFwbNFiC9hX2T8OaXgX4WLLjY49NgeKyT040D2GxJfHqvzUD636gstl2l9
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
jpMhvXQq8eVM+YCwy8XOlrg/pCXTf9ij+gXJDjb+C3neI1Lrs7b7JnzDdV0L
zqul/s+LjHvAMuCD1Px2b5D/UnbWTpznjvfwMAn7303my3Q/Wbyg/D+mYyvx
DNH3CXI+C5VL2isCKI7OSm/LHRVh4Nsfme2h7yVHC/KzjLN+V1i8KKTUxGYs
v31L3yUbYH2Yv9O5TZd0HxbLb2QX26/vC2O9ryPm3V/QfRp8jsA32ybK+qBv
nGdNcR4PdH6Zrd61500dt8N4fgn56ccl6S/sv9ij5LDxSbISJYZY5a6n8hXd
p8D3qWE8j0NyO+GhCV+HfdokTyGOj/0U0AvaXxM9f1MfwPovPZ3r0ru6J4Xi
CZJ1/BLjLeh89eyO0dhH1isRV7fX3RGhyHNZllfBt1qcliT3DTDbg881uSRh
R0/kvGm0u3Fd/gvteT0pHvK6rKG6j5lt/S7fO8IL/IfpM91rclgGYt832fj1
dUl2FI6TofiZG7IS9D62J2AaOc5LdFdsve17r8kXKZ/X7J/uO7ut7xPhfBBs
U680iW2TzK+h9kael4gzqsJxxb/TQZck1wdZ5ZnAZFke+j7nF4APbr4ie9jG
pXt/4vU9Jmz/d1z7cULIXTdH31E7j66bw/hDde/D/zK/ht1nazbHGrpfwOwH
fP9GLsceG/wI5JN0UQbzYrqUcU/BcZy78WZ7wo9IMZDyXq16weVYkQh+yvya
7iF9LHZh321yo88d0ZrqY5hwuvftqM5LZfs2PX0/jAGeMN3wwzwuS5JHWB+h
ehfXJd0nw3SM8uL2SopPHmXtP+2uHGY7X9A3J9+WNQBn+yHqwoTt0HUXmb/D
XvfgntyNQBDOA0L+4ytuxjzMi/XxQMxji0wDHnE/3VSzenf0PaR8r+JQ0J99
MgHt2f+FelXe+4i/+/L9U8gnKX+O+JEP38uDvLvbR+ViMH6On8T3xD8QBfHh
TB+gb1+7peUHxnPIMX4H5EDS10w49LX6j0S2e1Y+iL9fns1B9lu222Tcm0Z0
nf1T4Ef+T3RgKdstwU/7RQlSbKZb+2mYKCahH5ZP4Df8KFJE2OR54HlAsCD6
NMPaz4WVWh7g+3OJ3RzUeYXMF1ZrOZDiK16z8inPPZpfs9yL93ZXBckhtjr8
u24LOz+F/HohUna2ySFEf6LkOpsc8ioxQAF6dYHzPel+l6sC9nXPrOvDU/2u
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
9tarCz54hfHkeef/3w3/Pyj2Nyc=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{442.897620402186, 269.8262500562451},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0., 3.1}, {1., 10.}, {-1.2802259252709424`*^-15, 
   1.1234069230426156`*^-15}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-2.357616768073612, 2.0158652405815207`, 1.352009802743066},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.5727405217053456`*^9, 3.5727405529885483`*^9}, 
   3.5727406046321855`*^9, 3.5727409594346128`*^9, 3.5727410091850157`*^9, 
   3.572741053688592*^9, 3.5727411049381094`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Looking", " ", "at", " ", "the", " ", "scale", " ", "of", " ", "this", 
    " ", "graph"}], ",", " ", 
   RowBox[{
   "we", " ", "can", " ", "see", " ", "that", " ", "an", " ", "error", " ", 
    "of", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "15"}]]}], ",", " ", 
   RowBox[{
   "is", " ", "probably", " ", "numerical", " ", "in", " ", "origin"}], ",", 
   " ", 
   RowBox[{
   "and", " ", "the", " ", "two", " ", "results", " ", "agree", " ", "very", 
    " ", 
    RowBox[{"well", ".", " ", "Jackson1"}], " ", "uses", " ", 
    SuperscriptBox["B", "2"]}], ",", " ", 
   RowBox[{"Jackson3", " ", "uses", " ", 
    SuperscriptBox["E", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"n", " ", "cross", " ", "B"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.5727430369688067`*^9, 3.572743097572445*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"besselp", "[", 
   RowBox[{"n_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"n", ",", "x"}], "]"}], ",", "x"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "y"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Landau", "[", 
   RowBox[{"\[Theta]_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["n", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Tan", "[", "\[Theta]", "]"}], "2"], 
      SuperscriptBox[
       RowBox[{"BesselJ", "[", 
        RowBox[{"n", ",", 
         RowBox[{"b", " ", "n", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["b", 
       RowBox[{"2", " "}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"BesselJ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], ",", 
             RowBox[{"b", " ", "n", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], "-", 
           RowBox[{"BesselJ", "[", 
            RowBox[{
             RowBox[{"1", "+", "n"}], ",", 
             RowBox[{"b", " ", "n", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}]}], ")"}]}], 
        ")"}], "2"]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.5727193450102005`*^9, 3.5727194071238384`*^9}, {
   3.572719585861407*^9, 3.5727196030352464`*^9}, {3.572719665212498*^9, 
   3.5727196726045356`*^9}, {3.5727197958818436`*^9, 
   3.5727198770423555`*^9}, {3.572720008038835*^9, 3.5727201264086256`*^9}, {
   3.5727201876024885`*^9, 3.5727203817771935`*^9}, {3.5727204411886415`*^9, 
   3.5727205039138327`*^9}, {3.5727205380427084`*^9, 3.572720612410164*^9}, {
   3.572720674853047*^9, 3.5727207853641305`*^9}, {3.5727208591523695`*^9, 
   3.572720860308693*^9}, 3.5727209201430607`*^9, {3.572721135336522*^9, 
   3.572721183153576*^9}, 3.5727213551958895`*^9, {3.572721427028881*^9, 
   3.572721477517986*^9}, {3.5727215230068207`*^9, 3.572721525147558*^9}, {
   3.572721671003067*^9, 3.572721675737691*^9}, 3.5727223276059895`*^9, {
   3.572722576645132*^9, 3.572722589881246*^9}, {3.5727239354051876`*^9, 
   3.57272393723341*^9}, {3.572745230530195*^9, 3.5727452359148836`*^9}, {
   3.5727453486892157`*^9, 3.5727453490522656`*^9}, {3.572746109460926*^9, 
   3.572746115516696*^9}, {3.572746350584578*^9, 3.572746350979624*^9}, {
   3.5727465495972633`*^9, 3.5727465881211596`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Landau", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"\[Pi]", "/", "2"}]}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.5727412507146416`*^9, 3.5727412576165185`*^9}, {
  3.5727448724756813`*^9, 3.5727448725566936`*^9}, {3.5727520557788315`*^9, 
  3.5727520568359666`*^9}, {3.5727521512024345`*^9, 3.5727521533287077`*^9}, {
  3.572752191512562*^9, 3.572752192451662*^9}}],

Cell[BoxData["0.34394666340596824`"], "Output",
 CellChangeTimes->{
  3.572741257854546*^9, {3.5727448697113285`*^9, 3.5727448728737307`*^9}, 
   3.572745576058011*^9, 3.572746591756618*^9, 3.5727520576530704`*^9, 
   3.5727521540147943`*^9, 3.5727521933817654`*^9, 3.572752583859804*^9, 
   3.5727877393069143`*^9, 3.572787967534436*^9, 3.5727889257652807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jackson3", "[", 
  RowBox[{"1", ",", 
   RowBox[{"3", "*", "\[Omega]0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.572752019531227*^9, 3.5727520507721953`*^9}, {
  3.572752176291627*^9, 3.572752204534217*^9}, {3.572752590743678*^9, 
  3.572752591498777*^9}}],

Cell[BoxData["3.180683014779933`*^16"], "Output",
 CellChangeTimes->{{3.5727520315177474`*^9, 3.5727520517143145`*^9}, {
   3.572752159461484*^9, 3.5727522058803844`*^9}, 3.5727525923348804`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"n", ",", "x"}], "]"}], ",", "x"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ",", "x"}], "]"}], "-", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "+", "n"}], ",", "x"}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.572746540079049*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DataLandau", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "\[Theta]", ",", 
      RowBox[{"Log10", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Jackson1", "[", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"\[Omega]0", "*", "n"}]}], "]"}], "-", 
         RowBox[{"Landau", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "-", 
            FractionBox["\[Pi]", "2"]}], ",", "n"}], "]"}]}], "]"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10", ",", ".2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".5"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5727390206744733`*^9, 3.57273914178836*^9}, {
  3.5727391895434237`*^9, 3.572739203715225*^9}, {3.572741272899458*^9, 
  3.5727413464728155`*^9}, {3.572743269638317*^9, 3.572743269673393*^9}, {
  3.572788943579587*^9, 3.572788948602229*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, {3.572788929336735*^9, 3.572788948956274*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, {3.572788929336735*^9, 3.572788949008277*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, {3.572788929336735*^9, 3.572788949056285*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, {3.572788929336735*^9, 3.5727889490922904`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889647587805`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889650938234`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889654378676`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: izero\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889654798727`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889663940334`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-7.817982278289202`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(4.632211430296955`*^-23 + \
\\(\\(4.632211430296955`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.210021168159708`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.572788966475042*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-1.\
16355283445993040832670732231368204446577500556234104685682934077`65.\
954589770191*^-6\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.845501307182415`*^-22\\)\\) - \
\\(\\(1.3234889800848443`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.85779070238057`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.57278896659506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889680272436`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-6.272638669752558`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(\\(\\(-5.1285197978287716`*^-23\\)\\) + \
\\(\\(4.963083675318166`*^-24\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.2451046395509926`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889681072536`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.572788968142255*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.572788971172676*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.57273908180466*^9, 3.5727391086840787`*^9}, 
   3.5727391426174583`*^9, {3.572739190576556*^9, 3.5727392087288647`*^9}, 
   3.5727397866467514`*^9, 3.572741126206811*^9, {3.5727412977906237`*^9, 
   3.5727413161279535`*^9}, 3.5727413474649363`*^9, 3.5727432704844213`*^9, 
   3.5727461186510906`*^9, 3.572788929336735*^9, 3.5727889712096825`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"DataLandau", ",", "1"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "\"\<n\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5727414018568544`*^9, 3.5727414295293713`*^9}, {
   3.5727431192351947`*^9, 3.5727431941747217`*^9}, 3.572743389476551*^9, {
   3.572743453106636*^9, 3.5727434692646933`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJx12EuKVFEQhOFsTeSKIr7fb92Bzuu6BZcgqEPXo2vSPdQSEgRJwYF0SeQh
fvBMig+aCPreOF3QLz58ef/xQkS8O4s4//x36hB25OPBzc+GY3cnvO1vTufn
9LmPB3fBDQfyEt72T6fza/rcx4O74IYDeQlv+7ev5+f39LmPB3fBDQfyEt72
H9/Pz5/pcx8P7oIbDuQlvO36ufCzq8/NXTTMz4T1PM+mz63nKRfccCAv4W1/
e9rPxelzHw/ughsO5CWs9ze/d7j1/tY9cjccyEtY9+HS9Ll1H+SCGw7kJbzh
U0c+YlcF9392JyesvVyePrf2IhfccCAvYe3lyvS5tRe54IYDeQlrL1enz629
yAU3HMhLeNs/n97ntelzHw/ughsO5CWs93h9+tzai1xww9qLnLCe5+pz63mu
PnfDgbyEtc8b0+fWPuWCGw7kJaz7fnP63LrvcsENB/IS1n24NX1u3Qe54IYD
eQlrL7enz619yA1rH3LC2sfKd2sfq8/dcCAvYe3jzvS5tQ+54IYDeQnrft+d
Prfut1xww4G8hLWPe9Pn1j7kghsO5CWsfdyfPrf+nsgFN6y9yAlrL6vPrb2s
PnfDgbyEtZcH0+fWXuSCGw7kJay9PJw+t/YiF9xwIC9h7eXR9Lm1F7nghgN5
CWsvj6fPrb3IBTesvcgJay+rz629rD53w4G8hLWXJ9Pn1l7kghsO5CWsvTyd
Prf2IhfccCAvYe3l2fS5tRe54IYDeQlrL8+nz629yAU3rL3ICev7fPW59X2+
+twNB/IS1j5Xn1v7XH3uhgN5Cev9vZg+t96fXHDDgbyEdR9Wn1v3YfW5Gw7k
Jay9vJw+t/YiF9yw9iInrPu3+ty6f6vP3XAgL2HtZfW5tZfV5244kJew/p/0
avrc+n+SXHDDgbyEtZfV59ZeVp+74UBewtrL6+lzay9ywQ1rL3LC2/4XzIND
zg==
      "], {{
        GrayLevel[0.8], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJxN2HmcV2UVBnCGRWTfGXZmhmXY90F2BaUwsRA0JEUURSkRF9QUzQTJWELR
0EyQVExkyXApUBQEEzVFUhZTRFOgQEzNFMSCes9nvvfD/ePhnvc8z3Oec++d
+c0wxROvHD21YoUKFZqlfyqla7WEExPqqCs6V0+okVDZOfoFFco91fUr6Ver
cHxWdbMaJxQm1DOnOr5ubnZNc6rxBHdCQhVcTXVlXD3eWglVaVsltExoK6+x
c/2EBmZU5aktp9C8GnRZVugbJjTRr8cTvUZ6NfQL6erxNpTRkCfqpjxN7FpT
f2TCGQmj8U1lF9q9lV6z3E4NnFvjmtC1VjfEN4dGekX0rfWCa5HQzjPrjC/i
b4VrrW7rHHxxLqOZc93cew5de97m+BJooVdqVnu94NokdLFLL3wpfztce3Vn
5+A75DKKnbvi2tN1VZfgO0IbvUL32YSuyP7dzAl/b3v1V/fRjzndE3rI6oXv
LqtUvzd9H3O78nQyI3plfEMThiUM5BvAV0bXRy92OcWMmNXTrA7m9KYZwNs3
t2vUJ8koy80cqO6J7+faky/yvp0wgn4oz6muw+i6yxiUMFg9gH+omX1xZXTZ
TtEbAln+oFzO9xJGJZxuj9jnu7jT+PvxnyxzhNxBdFnGYJ7T9YfxDE/4lt53
aEbQDeM9jW44zxDaU+mG8oS+jXfTyf6x7zneZzyrUnNiZnwujJQ/3MwzcnkZ
PwoXWWepR/EFf6b+aJ4RciP/+/LP5zuLJuNGqc9xHuEcWaekHwIDEvonjOUd
JTOyxiScqz+Wf7x6jL1G4s/lORN3Nm3sdTHv+Xo/wI+B8I0zY5zzBc5Z1ji+
8bjoT6CJ8yVyfqSO6+X0F+sFJtGPd75Ab4I6rhfm8qK+CM7Tu8TsSfIn0F+q
nkQbnom0sc/V+EvNPdu88zyfsZ5/8JfRTHGeZM4U9UU0k2Gi3hX0U/SC+2HC
NfJvwF/Bfzluivpq5+Cn5jIuc56Gm0I3TT0Zf6V7Gmf/a+mn2SP4qxJutMtP
8dfyX4Obpr7BOfjrchlTnafjptFNV1+Jvx6u0ruJfrpecD9OuNUut3uOF7rn
a3muM/9W3hvp4zyDJvoz1TPMDt/NCT+Rc33OM10vuFsSfi5/vl74bku4M2Fu
whyzZ+Ju5Zmhvt15Jt/N8rL8nyXMS/hFwmy6GbjQz5IxE3+LXvgWmj0fP4cn
enfQz+KJeb/kma9/m3uYTT/H9U71LPw857k88+TPkjXbzvH5Hz9vBppxb8KC
hIcTHkp4jH6hnHvo7tC7J9e/N/eMF+SeUVzvUsf17oRFCYv5QvsrXPTvl71Q
vchzuF9vgazMM09vrvwFdIvMv8m7u052eO7DP2yPxWZm9/GA+XfT/pr+IZ7g
l9D8Bn+fOQ/k9luCX6q/mH+pOvPfB3fpPUK/1OzQPJiw3Dv5vXoFTfC/TXjU
/Mfwj+gv0V9OvwK3lOdBM6K3kmdNwtqEJ/hW862kW6EXu/zRjJi1zKwl5iyn
Wc27Krdr1L+TsTI38wn1Mvzjrsv41sh8nn4NT+z7pPpROav0nlKv5l1j5irc
Srpsp+g9DVn+MzSR81LC5oQNCevt8ieaZ/kf5/+DvOdpn6TLMp7i2aC/lmdd
wnN6L9Csp1vL+yzdOp6naZ+hW8OTPZuVns9L9n0tYUvCy+5nnZkbEzbJX2fm
xlxexm/GbTDjBb3n8C/qv8KzXm7kvy7/Lb6XaTJus/o15/XOG8zeaO7r7iH0
hxK+SvhvwhtmbqHZpn7VXpvwb5jzIu7P9G/xBL+V5i/40L2b8GHCLudX6Lbz
bOHfnsvdasY2898x529m7eDdrv8ObpvzdnXmC/3O3Nytzrtw2S47cO/iov92
wpt8bzr/NeE9+l12ivx/0O2k20G30/PIZvwr4YuEj/G7afYnfJZwwMyPzI+8
9xM+0HtPf4/6I3m76fbb5VP8HtwB9Ud0exP2ydqv/yHvftq9ubm7nd+309uw
E7dfRszZ5F2/6p5il6/c80FzPpD/d95PaffQZfvt5flc/wDPJwn/1Nuj/xnd
Ad6DdJ/w7PP8P6bbZ4+4p/i9LX53nGzOIZqW6f8tbRLaJvxbZsz72qzDzge9
18P6nzsflPeJczYjrl/Kie/FownHzD3seoTnKE2lgnL90VzO1zSH9D43+wv+
bO5hdeWC8vNR8+L8P3OO2embhP+4fmleaOIPejGzoOA4/41+9E4wq4pndSSn
OUJXheaYXarYJ36ex8/NJbJjXkXamBvehgm1EhrYu3pCDahpVmXnKnonqONa
teD4rlGfCBX1wlefL3Jq09Xir0kbnmq09RKa4GvRF8iJ+mvPLu6/Bn19WdWd
T5RVJ6Gpea3pGsithq/rWo2vludSm74pT1ybqRvQ1aRpgg9fo1x2bedmuAYy
quLi2Vaydx3axpDt1Vi/RUJxQvPcvOa4yC7SL3Kv7dXF+qV6XRMKC8q/D1sl
dE/omNChoPx7Mr43O8ltQdeSJ3olcrNdWtihm1kd7NNafpHsYlyJukRWltGi
4PjnQiu9Up5iO5Y4d3MfffQ78Ra5x1LolsvsSFPK201O5LVzLyX2iM+rr3wG
tDW/c8KghMEJffnL3HM3u8S5h6zu5oavi2s7eaHpaW6vHN9Zv5d9Gnp3XfR6
03Si62tWd9l9c++zB13sexKuzJ4D8Sfl8voVlP9Nqb+cXvh+OU1P5zIz4nkM
oRvMe3JB+d+o+tPGOb6W42unkHeQfXrTDTBjCM8Qvn76PegHmD004f9nCrlQ

          "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1: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
ivrgcsCiet+ZXiBOWvoIp5PwP+fqPPA=
       "]], {}}, AspectRatio -> 1, AxesLabel -> 
    FormBox["\"n\"", TraditionalForm], Frame -> True, 
    FrameLabel -> {None, None}, Method -> {}, 
    PlotRange -> {{1., 10.}, {0., 3.}}, PlotRangeClipping -> True, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[
           NCache[{{0}, {
              Rational[1, 200]}, {
              Rational[1, 100]}, {
              Rational[3, 200]}, {
              Rational[1, 50]}, {
              Rational[1, 40]}, {
              Rational[3, 100]}, {
              Rational[7, 200]}, {
              Rational[1, 25]}, {
              Rational[9, 200]}, {
              Rational[1, 20]}, {
              Rational[11, 200]}, {
              Rational[3, 50]}, {
              Rational[13, 200]}, {
              Rational[7, 100]}, {
              Rational[3, 40]}, {
              Rational[2, 25]}, {
              Rational[17, 200]}, {
              Rational[9, 100]}, {
              Rational[19, 200]}, {
              Rational[1, 10]}, {
              Rational[21, 200]}, {
              Rational[11, 100]}, {
              Rational[23, 200]}, {
              Rational[3, 25]}, {
              Rational[1, 8]}, {
              Rational[13, 100]}, {
              Rational[27, 200]}, {
              Rational[7, 50]}, {
              Rational[29, 200]}, {
              Rational[3, 20]}, {
              Rational[31, 200]}, {
              Rational[4, 25]}, {
              Rational[33, 200]}, {
              Rational[17, 100]}, {
              Rational[7, 40]}, {
              Rational[9, 50]}, {
              Rational[37, 200]}, {
              Rational[19, 100]}, {
              Rational[39, 200]}, {
              Rational[1, 5]}, {
              Rational[41, 200]}, {
              Rational[21, 100]}, {
              Rational[43, 200]}, {
              Rational[11, 50]}, {
              Rational[9, 40]}, {
              Rational[23, 100]}, {
              Rational[47, 200]}, {
              Rational[6, 25]}, {
              Rational[49, 200]}, {
              Rational[1, 4]}, {
              Rational[51, 200]}, {
              Rational[13, 50]}, {
              Rational[53, 200]}, {
              Rational[27, 100]}, {
              Rational[11, 40]}, {
              Rational[7, 25]}, {
              Rational[57, 200]}, {
              Rational[29, 100]}, {
              Rational[59, 200]}, {
              Rational[3, 10]}, {
              Rational[61, 200]}, {
              Rational[31, 100]}, {
              Rational[63, 200]}, {
              Rational[8, 25]}, {
              Rational[13, 40]}, {
              Rational[33, 100]}, {
              Rational[67, 200]}, {
              Rational[17, 50]}, {
              Rational[69, 200]}, {
              Rational[7, 20]}, {
              Rational[71, 200]}, {
              Rational[9, 25]}, {
              Rational[73, 200]}, {
              Rational[37, 100]}, {
              Rational[3, 8]}, {
              Rational[19, 50]}, {
              Rational[77, 200]}, {
              Rational[39, 100]}, {
              Rational[79, 200]}, {
              Rational[2, 5]}, {
              Rational[81, 200]}, {
              Rational[41, 100]}, {
              Rational[83, 200]}, {
              Rational[21, 50]}, {
              Rational[17, 40]}, {
              Rational[43, 100]}, {
              Rational[87, 200]}, {
              Rational[11, 25]}, {
              Rational[89, 200]}, {
              Rational[9, 20]}, {
              Rational[91, 200]}, {
              Rational[23, 50]}, {
              Rational[93, 200]}, {
              Rational[47, 100]}, {
              Rational[19, 40]}, {
              Rational[12, 25]}, {
              Rational[97, 200]}, {
              Rational[49, 100]}, {
              Rational[99, 200]}, {
              Rational[1, 2]}, {
              Rational[101, 200]}, {
              Rational[51, 100]}, {
              Rational[103, 200]}, {
              Rational[13, 25]}, {
              Rational[21, 40]}, {
              Rational[53, 100]}, {
              Rational[107, 200]}, {
              Rational[27, 50]}, {
              Rational[109, 200]}, {
              Rational[11, 20]}, {
              Rational[111, 200]}, {
              Rational[14, 25]}, {
              Rational[113, 200]}, {
              Rational[57, 100]}, {
              Rational[23, 40]}, {
              Rational[29, 50]}, {
              Rational[117, 200]}, {
              Rational[59, 100]}, {
              Rational[119, 200]}, {
              Rational[3, 5]}, {
              Rational[121, 200]}, {
              Rational[61, 100]}, {
              Rational[123, 200]}, {
              Rational[31, 50]}, {
              Rational[5, 8]}, {
              Rational[63, 100]}, {
              Rational[127, 200]}, {
              Rational[16, 25]}, {
              Rational[129, 200]}, {
              Rational[13, 20]}, {
              Rational[131, 200]}, {
              Rational[33, 50]}, {
              Rational[133, 200]}, {
              Rational[67, 100]}, {
              Rational[27, 40]}, {
              Rational[17, 25]}, {
              Rational[137, 200]}, {
              Rational[69, 100]}, {
              Rational[139, 200]}, {
              Rational[7, 10]}, {
              Rational[141, 200]}, {
              Rational[71, 100]}, {
              Rational[143, 200]}, {
              Rational[18, 25]}, {
              Rational[29, 40]}, {
              Rational[73, 100]}, {
              Rational[147, 200]}, {
              Rational[37, 50]}, {
              Rational[149, 200]}, {
              Rational[3, 4]}, {
              Rational[151, 200]}, {
              Rational[19, 25]}, {
              Rational[153, 200]}, {
              Rational[77, 100]}, {
              Rational[31, 40]}, {
              Rational[39, 50]}, {
              Rational[157, 200]}, {
              Rational[79, 100]}, {
              Rational[159, 200]}, {
              Rational[4, 5]}, {
              Rational[161, 200]}, {
              Rational[81, 100]}, {
              Rational[163, 200]}, {
              Rational[41, 50]}, {
              Rational[33, 40]}, {
              Rational[83, 100]}, {
              Rational[167, 200]}, {
              Rational[21, 25]}, {
              Rational[169, 200]}, {
              Rational[17, 20]}, {
              Rational[171, 200]}, {
              Rational[43, 50]}, {
              Rational[173, 200]}, {
              Rational[87, 100]}, {
              Rational[7, 8]}, {
              Rational[22, 25]}, {
              Rational[177, 200]}, {
              Rational[89, 100]}, {
              Rational[179, 200]}, {
              Rational[9, 10]}, {
              Rational[181, 200]}, {
              Rational[91, 100]}, {
              Rational[183, 200]}, {
              Rational[23, 25]}, {
              Rational[37, 40]}, {
              Rational[93, 100]}, {
              Rational[187, 200]}, {
              Rational[47, 50]}, {
              Rational[189, 200]}, {
              Rational[19, 20]}, {
              Rational[191, 200]}, {
              Rational[24, 25]}, {
              Rational[193, 200]}, {
              Rational[97, 100]}, {
              Rational[39, 40]}, {
              Rational[49, 50]}, {
              Rational[197, 200]}, {
              Rational[99, 100]}, {
              Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
             0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
             0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
             0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
             0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
             0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
             0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
             0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
             0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
             0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
             0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
             0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
             0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
             0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
             0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
             0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
             0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
             0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
             0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
             0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
             0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
             0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
             0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
             0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
             0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
             0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
             0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
             0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
             0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
             1}}], {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}, ColorFunction -> (Blend[{
              RGBColor[0.293416, 0.0574044, 0.529412], 
              RGBColor[
              0.563820859082933, 0.527565423056382, 0.909498741130694], 
              RGBColor[0.762631, 0.846998, 0.914031], 
              RGBColor[0.941176, 0.906538, 0.834043]}, #]& )], 
          StyleBox[{}, Antialiasing -> False], 
          StyleBox[
           StyleBox[{{
              GrayLevel[0], 
              AbsoluteThickness[0.2], 
              Opacity[0.3], 
              
              LineBox[{{7.500000000000001, -112.50000000000001`}, {
               7.500000000000001, 112.50000000000001`}}]}, {{{
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                LineBox[{{{7.500000000000001, -103.76213592233012`}, 
                   
                   Offset[{4., 0}, {
                    7.500000000000001, -103.76213592233012`}]}, {{
                   7.500000000000001, -30.946601941747577`}, 
                   
                   Offset[{4., 0}, {
                    7.500000000000001, -30.946601941747577`}]}, {{
                   7.500000000000001, 41.868932038834956`}, 
                   
                   Offset[{4., 0}, {7.500000000000001, 
                    41.868932038834956`}]}}]}, {
                GrayLevel[0.4], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{{7.500000000000001, -89.1990291262136}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -89.1990291262136}]}, {{
                   7.500000000000001, -74.6359223300971}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -74.6359223300971}]}, {{
                   7.500000000000001, -60.07281553398059}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -60.07281553398059}]}, {{
                   7.500000000000001, -45.50970873786408}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -45.50970873786408}]}, {{
                   7.500000000000001, -16.38349514563107}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -16.38349514563107}]}, {{
                   7.500000000000001, -1.8203883495145634`}, 
                   
                   Offset[{2.5, 0.}, {
                    7.500000000000001, -1.8203883495145634`}]}, {{
                   7.500000000000001, 12.742718446601943`}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    12.742718446601943`}]}, {{7.500000000000001, 
                   27.30582524271845}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    27.30582524271845}]}, {{7.500000000000001, 
                   56.43203883495146}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    56.43203883495146}]}, {{7.500000000000001, 
                   70.99514563106797}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    70.99514563106797}]}, {{7.500000000000001, 
                   85.55825242718447}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    85.55825242718447}]}, {{7.500000000000001, 
                   100.12135922330098`}, 
                   
                   Offset[{2.5, 0.}, {7.500000000000001, 
                    100.12135922330098`}]}}]}}, {
               GrayLevel[0.3], 
               DynamicBox[
                Directive[
                 CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                ImageSizeCache -> {{
                 4.503599627370496*^15, -4.503599627370496*^15}, {
                 4.503599627370496*^15, -4.503599627370496*^15}}], {{
                 GrayLevel[0.3], 
                 InsetBox[
                  RowBox[{"-", "30"}], 
                  
                  Offset[{7., 0.}, {
                   7.500000000000001, -103.76213592233012`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "20"}], 
                  
                  Offset[{7., 0.}, {
                   7.500000000000001, -30.946601941747577`}], {-1, 0.}, 
                  Automatic, {1, 0}], 
                 InsetBox[
                  RowBox[{"-", "10"}], 
                  
                  Offset[{7., 0.}, {7.500000000000001, 
                   41.868932038834956`}], {-1, 0.}, Automatic, {1, 0}]}, {
                 GrayLevel[
                 0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
         AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
           Opacity[0.3], 
           GrayLevel[0]], FrameTicks -> False, ImageSize -> {Automatic, 225}, 
         PlotRange -> All, PlotRangePadding -> None], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], StripOnInput -> False, LineIndent -> 
       0], StripOnInput -> False, FontFamily -> "Times", Background -> 
      Automatic]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.293416`", ",", "0.0574044`", ",", "0.529412`"}], "]"}],
                     ",", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.563820859082933`", ",", "0.527565423056382`", ",", 
                    "0.909498741130694`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.762631`", ",", "0.846998`", ",", "0.914031`"}],
                     "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.941176`", ",", "0.906538`", ",", "0.834043`"}],
                     "]"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "31.2351865636653`"}], ",", 
                 RowBox[{"-", "0.2885305397501487`"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.572741430138468*^9, 3.5727431958789387`*^9, 3.5727433212628765`*^9, 
   3.572743390514681*^9, {3.57274345885437*^9, 3.5727434697387514`*^9}, 
   3.5727889976580963`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "They", " ", "both", " ", "seem", " ", "to", " ", "agree", " ", "very", 
    " ", "well", " ", "when", " ", "they", " ", "have", " ", "integer", " ", 
    RowBox[{"values", ".", " ", "As"}], " ", "you", " ", "move", " ", "away", 
    " ", "from", " ", "integer", " ", "values"}], ",", " ", 
   RowBox[{"the", " ", "agreement", " ", "becomes", " ", "very", " ", 
    RowBox[{"poor", ".", " ", "I"}], " ", "am", " ", "plotting", " ", "the", 
    " ", "Log10", " ", "of", " ", "the", " ", "difference", " ", "between", 
    " ", "the", " ", "jackson", " ", "exact"}], ",", " ", 
   RowBox[{"and", " ", "the", " ", "landau", " ", "formula"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5727433340395007`*^9, 3.572743354383116*^9}, {
  3.5727890551346383`*^9, 3.572789059702297*^9}, {3.57278913927942*^9, 
  3.5727891752265434`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DataLandau2", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ListDensityPlot", "[", 
     RowBox[{
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "\[Theta]", ",", 
            RowBox[{"Landau", "[", 
             RowBox[{
              RowBox[{"\[Theta]", "-", 
               FractionBox["\[Pi]", "2"]}], ",", "n"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "10", ",", ".2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
         "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    RowBox[{"ListDensityPlot", "[", 
     RowBox[{
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "\[Theta]", ",", 
            RowBox[{"Jackson1", "[", 
             RowBox[{"\[Theta]", ",", 
              RowBox[{"\[Omega]0", "*", "n"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "10", ",", ".2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
         "]"}], ",", "1"}], "]"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5727415178175945`*^9, 3.5727415708533335`*^9}, {
  3.5727436330555153`*^9, 3.572743659880925*^9}, {3.572743716609133*^9, 
  3.5727437205036316`*^9}, {3.572743778974065*^9, 3.5727437903355045`*^9}, {
  3.572743864125889*^9, 3.572743868311421*^9}, {3.572789231542013*^9, 
  3.572789242384388*^9}, {3.5727893068474855`*^9, 3.5727893101168995`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\
\\((\\(\\(1.`[0.`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789311446067*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.1`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.1`]\\)\\) \[Cross] \
\\(\\((\\(\\(1.`[0.1`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893115000715`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \[NoBreak]\\!\\(\[ExponentialE]\\^\\(\\(\\((\
\\(\\(0.` \[VeryThinSpace]\\)\\) + \\(\\(2.7`*^6\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((t - \\(\\(\\(1.`[0.2`]\\)\\) . \
\\(\\({\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\
\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
0}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\\(\\(\\(1.`[0.2`]\\)\\) \[Cross] \
\\(\\((\\(\\(1.`[0.2`]\\)\\) \[Cross] \\(\\({\\(\\(\\(\\(-0.9`\\)\\)\\\\ \
\\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \\(\\(0.9`\\\\ \
\\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0.`}\\)\\))\\)\\)\\)\\)\\)\
\[NoBreak] has evaluated to non-numerical values for all sampling points in \
the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893115550814`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789311590085*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789329608989*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789330847146*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893321042786`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: izero\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893321413155`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893358895087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-7.817982278289202`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(4.632211430296955`*^-23 + \
\\(\\(4.632211430296955`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.210021168159708`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789335972517*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-1.\
16355283445993040832670732231368204446577500556234104685682934077`65.\
954589770191*^-6\\)}\\)\[NoBreak]. NIntegrate obtained \
\[NoBreak]\\!\\(\\(\\(-2.845501307182415`*^-22\\)\\) - \
\\(\\(1.3234889800848443`*^-23\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(6.85779070238057`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893360955334`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893429762135`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"NIntegrate failed to converge to prescribed accuracy after \
\[NoBreak]\\!\\(9\\)\[NoBreak] recursive bisections in \[NoBreak]\\!\\(t\\)\
\[NoBreak] near \[NoBreak]\\!\\({t}\\)\[NoBreak] = \
\[NoBreak]\\!\\({\\(-6.272638669752558`*^-7\\)}\\)\[NoBreak]. NIntegrate \
obtained \[NoBreak]\\!\\(\\(\\(-5.1285197978287716`*^-23\\)\\) + \
\\(\\(4.963083675318166`*^-24\\\\ \[ImaginaryI]\\)\\)\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.2451046395509926`*^-22\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/ncvb\\\", ButtonNote -> \
\\\"NIntegrate::ncvb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.5727893430642242`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: ncvb\\), \\\"MessageName\\\"]\\)\
\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.57278934310323*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789357251025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5727437218828063`*^9, {3.572743780891306*^9, 3.5727437919467087`*^9}, 
   3.572743869401557*^9, 3.5727891836356087`*^9, 3.5727892432284946`*^9, 
   3.572789357298031*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxl3M2K3dgVxfFT9x5Jx9g05a/290c5foPOvM4z5BEC6QzzPMmbeJbphWTU
o5oJBIECDyQkhISECMbsfVj/qolZXfv8jruXrbtVhNz89R9/+dsphPDvKoQf
v/786m+DfPW3//rnj69vt5ovnv/824+vP/D9u1v1Wsx3nv/++4+v/+H8vef/
/ufH13d4PeYH+CPOT7hvhrPAW+Ft8HZ4B7yQdb7kn/5V1vMnzz/vO2f1IrwI
r4JXw2vgJXgp/yb/3UKwbP1rvni2/vX7d7fqtZjvPFv/ev7es/WvXo/5Af6I
8xPum+Et8FZ4G7wd3gEvZJ0v2frX86es953RR4QX4VXwangNvAQv5d/l70UI
lq1/zRfP1r9+/+5WvRbznWfrX8/fe7b+1esxP8AfcX7CfTO8Bd4Kb4O3wzvg
hazzJVv/ev7k2fpXL8KL8Cp4NbwGXoKXsj73QrBs/Wu+eLb+9ft3eI62mO88
W/96/t6z9c/nss4P8Eecn3DfDG+Bt8Lb4O3wDngh63zJ1r+eP2W974w+IrwI
r4JXw2vgJXgp6+daCPrv+Q3/3hfP1r9+/w6fky3mO8/Wv56/92z983NX5wf4
I85PuG+GtzzoVb0N3g7vgBeyzpVs/ev5U9b7zugjwovwKng1vAZegmf7gO0p
/pV1/7N88az7n33/zrP1r/OdZ93/7Pw9/jt+h9djfoA/4vyE+2Z4y4O/t+pt
D3pV74BXftX9z/yrrOdPnnX/s3PRs+5/5lWedf8zr/H885fStz7//fcV9Dn1
Dc+ti2d9/l95/+q1mO886/P/yvvXvyff4fWYH+CPOD/hvhne8uC5rN724O+t
escte9X5kvmrPv+vsj7/zYvwIpwKXg2vgZfgJf65C/r7+IbPpYtn61+/f4f3
mBbznWfrX8/f4zn4/cF7kc4P8Eecn3DfDG958Lmr3vbguazeccu/tzofHvSq
509Z7zujjwgvwqvg1XAaeAle4nMl6J+zb9g7Lrf6+/gD37+7Va/FfOdZP/+j
96+fc9/h9Zgf4I84P+G+Gd4Cb4W3PfjcVe+AV57T+vn/8O+xfv4/7Nn6Vy/C
q+DV8Bp4CY69D/jnRrCs73+19/+7/Dn7A9+/u1WvxXznWd//au/fsr7/lZ9r
6PwAf8T5CffN8BZ4K7wN3g7vgBeyzpes73+196/3ndFHhBfhVfBqeA28BC/5
Pw/ylbx/zRfPuv8l71+9FvOdZ93/kvevf06/w+sxP8AfcX7CfTO8Bd4Kb4O3
wzvglT1L9z/uWQn7Hz+HzXv491a9Cl4Nr4GX4JnzyH7/wbLuf4+8f8u6/z3y
/tVrMd951v3vkfdvWfc/83rMD/BHnJ9w3wxvgbfC2+Dt8A54Iet8ybq3PcL+
9wif6+ZFeBFeBa+G18BL8OzPyWPv37Luf4+9f8u6/z32/tVrMd951v3vsfdv
Wfc/83rMD/BHnJ9w3wxvgbfC2+Dt8A54Iet8ybr/Pcb+99j7Vy/Ci/AqeDW8
Bl6CZ8+BJ96/Zd3/nnj/lnX/e+L9q9divvOs+98T79+y7n/m9Zgf4I84P+G+
Gd4Cb4W3wdvhHfBC1vmSdf97gv3vifevXoQX4VXwangNvATPPjd+8f4tW/+a
L56tf/3+3a16LeY7z9a/nr/3bP2r12N+gD/i/IT7ZngLvBXeBm+Hd8ALWedL
1vf0X7x/ve+MPiK8CK+CV8Nr4CV4tg9ce/+Wdf+79v4t6/537f2r12K+86z7
37X3b1n3P/N6zA/wR5yfcN8Mb4G3wtvg7fAOeLbvXXv/6l9lPX/yrPufeRFe
hFfBq+E18BI8ex6U/i3r8/8az/9rPP+v8fwv/et851mf/9d4/l/j+V/61/kB
/ojzE+6b4S3wVngbvB3eAS9knS9Zn//XeP5f4/lf+lcvwqvg1fAaeAme7YNP
vX/Luv8/9f4t6/7/1PtXr8V851n3/6fev2Xd/83rMT/AH3F+wn0zvAXeCm+D
t8M74IWs8yXr/v/U+9f7zugjwovwKng1vAZegmc/D3jm/Vu2/jVfPOvPf555
/+q1mO88689/nnn/lvXnP+b1mB/gjzg/4b4Z3gJvhbfB2+Ed8ELW+ZKtfz1/
8qw//zEvwovwKng1vAZegmfvA8+9f8v6/vfc+7es73/PvX/1Wsx3nvX977n3
b1nf/8zrMT/AH3F+wn0zvAXeCm+Dt8M74IWs8yXr+99z71/vO6OPCC/Cq+DV
8Bp4CZ7tAy+8f8u6/73w/i3r/vfC+1evxXznWfe/F96/Zd3/zOsxP8AfcX7C
fTO8Bd4Kb4O3wzvg2b73wvtX/yrr+ZNn3f/Mi/AivApeDa+Bl+DZPlD6t6z7
X+nfsu5/pX/1Wsx3nnX/K/1b1v2v9K/zA/wR5yfcN8Nb4K3wNng7vANeyDpf
su5/L7D/lf7Vi/AivApeDa+Bl+DZPvDS+7es+99L79+y7n8vvX/1Wsx3nnX/
e+n9W9b9z7we8wP8Eecn3DfDW+Ct8DZ4O7wDXsg6X7Lufy+x/730/tWL8CK8
Cl4Nr4GX4NnPA371/i1b/5ovnvXnP796/+q1mO88689/fvX+LevPf8zrMT/A
H3F+wn0zvAXeCm+Dt8M74IWs8yVb/3r+lPW+M/qI8CK8Cl4Nr4GX4Nk+8Mr7
t6z73yvv37Luf6+8f/VazHeedf975f1b1v3PvB7zA/wR5yfcN8Nb4K3wNng7
vANeyDpfsu5/r7x/ve+MPiK8CK+CV8Nr4CV4tg+89v4t6/732vu3rPvfa+9f
vRbznWfd/157/5Z1/zOvx/wAf8T5CffN8BZ4K7wN3g7vgGf73mvvX/2rrOdP
nnX/My/Ci/AqeDW8Bl6CZ/tA6d+y7n+lf8u6/5X+1Wsx33nW/a/0b1n3v9K/
zg/wR5yfcN8Mb4G3wtvg7fAOeCHrfMm6/5X+9b4z+ojwIrwKXg2vgZfg2T7w
xvu3rPvfG+/fsu5/b7x/9VrMd551/3vj/VvW/c+8HvMD/BHnJ9w3w1vgrfA2
eDu8A17IOl+y7n9vvH+974w+IrwIr4JXw2vgJXi2D7z1/i3r/vfW+7es+99b
71+9FvOdZ93/3nr/lnX/M6/H/AB/xPkJ983wFngrvA3eDu+AF7LOl6z731vv
X+87o48IL8Kr4NXwGngJnu0D77x/y7r/vfP+Lev+9877V6/FfOdZ97933r9l
3f/M6zE/wB9xfsJ9M7wF3gpvg7fDO+CFrPMl6/73zvvX+87oI8KL8Cp4NbwG
XoJn+8B779+y7n/vvX/Luv+99/7VazHfedb97733b1n3P/N6zA/wR5yfcN8M
b4G3wtvg7fAOeLbvvff+1b/Kev7kWfc/8yK8CK+CV8Nr4CV4tg+U/i3r/lf6
t6z7X+lfvRbznWfd/0r/lnX/K/3r/AB/xPkJ983wFngrvA3eDu+AF7LOl6z7
X+lf7zujjwgvwqvg1fAaeAme7QMfvH/Luv998P4t6/73wftXr8V851n3vw/e
v2Xd/8zrMT/AH3F+wn0zvAXeCm+Dt8M74IWs8yXr/vfB+9f7zugjwovwKng1
vAZegmf7wEfv37Lufx+9f8u6/330/tVrMd951v3vo/dvWfc/83rMD/BHnJ9w
3wxvgbfC2+Dt8A54Iet8ybr/ffT+9b4z+ojwIrwKXg2vgZfg2T7wyfu3rPvf
J+/fsu5/n7x/9VrMd551//vk/VvW/c+8HvMD/BHnJ9w3w1vgrfA2eDu8A17I
Ol+y7n+fvH+974w+IrwIr4JXw2vgJXi2D3z2/i3r/vfZ+7es+99n71+9FvOd
Z93/Pnv/lnX/M6/H/AB/xPkJ983wFngrvA3eDu+AZ/veZ+9f/aus50+edf8z
L8KL8Cp4NbwGXoJn/3uQ0r9l61/zxbP1r9+/u1WvxXzn2frX8/eerX/1eswP
8Eecn3DfDG+Bt8Lb4O3wDngh63zJ1r+eP3m2/tWL8CK8Cl4Nr4GX4Nk+WPq3
rPt/6d+y7v+lf/VazHeedf8v/VvW/b/0r/MD/BHnJ9w3w1vgrfA2eDu8A17I
Ol+y7v+lf73vjD4ivAivglfDa+AlePZ5cOP9W9bP/xt8/t/g8/8Gn//mtZjv
POvn/w0+/2/w+W9ej/kB/ojzE+6b4S3wVngbvB3eAS9knS9ZP/9v8Pl/4/2r
F+FFeBW8Gl4DL8Gz94HSv2V9/yv9W9b3v9K/ei3mO8/6/lf6t6zvf6V/nR/g
jzg/4b4Z3gJvhbfB2+Ed8ELW+ZL1/a/0r/ed0UeEF+FV8Gp4DbwEz/aBL96/
Zd3/vnj/lnX/++L9q9divvOs+98X79+y7n/m9Zgf4I84P+G+Gd4Cb4W3wdvh
HfBs3/vi/at/lfX8ybPuf+ZFeBFeBa+G18BL8Ox90H//wbK+/5f+Lev7f+lf
vRbznWd9/y/9W9b3f/N6zA/wR5yfcN8Mb4G3wtvg7fAOeCHrfMn6/l/61/vO
6CPCi/AqeDW8Bl6CZ/tA6d+y7n+lf8u6/5X+1Wsx33nW/a/0b1n3v9K/zg/w
R5yfcN8Mb4G3wtvg7fAOeCHrfMm6/5X+9b4z+ojwIrwKXg2vgZfg2f8f5J+8
f8vWv+aLZ+tfv393q16L+c6z9a/n7z1b/+r1mB/gjzg/4b4Z3gJvhbfB2+Ed
8ELW+ZKtfz1/ynrfGX1EeBFeBa+G18BL8GwfKP1b1v2v9G9Z97/Sv3ot5jvP
uv+V/i3r/lf61/kB/ojzE+6b4S3wVngbvB3eAS9knS9Z97/Sv953Rh8RXoRX
wavhNfASPNsHvnr/lnX/++r9W9b976v3r16L+c6z7n9fvX/Luv+Z12N+gD/i
/IT7ZngLvBXeBm+Hd8Czfe+r96/+VdbzJ8+6/5kX4UV4FbwaXgMvwUv5/xWW
PiU=
        "], {{
          GrayLevel[0.8], 
          EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[CompressedData["
1:eJxNnXXYVdXThs+OQ4MoKal0d0uotDSCUoLS3Z1Kd3eqhDQIiCBlkAoYCAIi
+BNERUJCEAX91vPNfa7z/jHXnnhm1tpr3fsFsZ5t26txTz8SiVxNFokE7lnM
WUNnxZ0960w1z1kOZy84e9FZGmdPOSvhLJezqLMwYv0+2oBnTp4+83KjV18i
4jzOkjrL7ywZcV5nidHkSeBH6VE9Cfl8+HlZNyf7SUotP34S4pysH1IrwLp6
Jsd/wllRZ6mdFXaW0lkKrKCzQlhhckXQFKavGL2pyBdhZhHq1dhDVc46NT05
OOOcrJOcfeXg/F7A2qJLgUbaJ5lTHCvBPb3IOjnRFCdflT3k5E6lL+ksk7MK
zjJTr86Zq5YWbWln6Yhz8T7SlSInbTlnGZ1loFaDuyxFf1rmViefnpmq1XJW
m/spw4z0WGlyeemriV+L+81LrhbPPKxdlj1lwM/AnCe4pyL012LdBtyV8k/T
W559FUBTN2IcFKSWCa3il5zV4VmAvgpoyqMpQP1pzqocPXWpV3KW1VlFcoVZ
rx5+XWY+x31lRpuFZ1b8zGgq8j6FmVGEZ31nTZz1d9aUPq2djZxq/TiT3hH7
GZGdemVnXXmPLhFj8y1no9GoXiVifDegtwGxzlc8v0Gf2GwUibPY2NnLEWNY
9ao82+E3oqchfuMEvSWIn2Ef2kN7+tRfDb89tefRNqFf61an3iFirOhsXiHu
GIkzr57S5GqQb4Je+Vfpf4VnaWrS16SnC2coTsRgJ2ed6W0WMTaqs2/tqSyz
Xo3EWe/EfkqyflnqMXbLMasWs2vz7IJfnnpzZy2I5ffhfHuzR913N3w9xazY
EmMtI8ZkeWZU4Pkc5yweWtOj3ro8u+O3YIb0PSLGp2pitGfE2KlPTXGriLFa
EV095tTHl+41NK3QtcRXfy9mVkJXmV7lipBrTb4ST3HfJmLMVMFak2vEeYm9
hpyZcq+jb0OuAWuLZ/Ef+2becfYumhnOZpIfEzFuxZ7ufyzWntrLrNmXmaPR
j0HTDo3q/dhjX3o6MGsctSZoxZO46khtPP5nzlY5Wxmxnw8DIsZzZ3omRIz1
ptQmkB9PXrmB2KvkxqPRfPE12dkUZ4PQSDvR2aSI8dqZuAt16WLs6jmYGV3p
mYQf651A/5CIMdccG0yuK+uLzaFohnB/I52NoiZNd55T8YdHjBsxNixivLUg
bkluKM8W9PWgdxr+VN5pMO/Tk9r0iHEhPnoliHux5oiIsdiTOdPwp6MZwf5b
47/GfsXZFmdbecfW6H5ydpk71zu/Tv1NfOXE6yfOPo0YP+JqtrNZEeNsJs9Z
1KQXO2JTnIr9d6jPRjManTRznc2LxLkZQNwP/RysPznNHkvvOPxVzOmfQDuX
WavQrES/OmI86rkGP3aXOqv3IsaPamJiobNF7E37mh8xttZGjLuJ9KzFn0C8
gDuejw1ihnTr6F3A/EHceews1zBHe5uMdj02iX7tbXCC/Q0lNwXdBvzJxAvR
D0K7mHdeTKwZHTijjvRvjBir0ixBr9w08pvwlTvMe2vvYm9ZxBhbSqyznU7P
ZuIl1BWLzxn0Laf37YixuCJi7H7p7KuIcTkS3XT6ZzBjJv4o6ivQTGPtmcya
Re1NtMvYp/Yj1v8Xse9DnIpffQPbI8aVGHvf2baIMSq9vqGV6D/Fn0NdOvF2
0NkhnqvomUNds8XJB852ol+FVvl51N5n71vZyw5qO4i3U3+ftQ9xN7qXI9zR
YfQf0LsanTQfsp72sJaeo85Ocv466wVoPkTzHrrPI8baMTSqLyReh/YE93Cc
+i40R9FJs4jcLnLr6f/I2Z6IcbOB/Of4en5Br/p2o1+Mv5h4SYJ4Eb3q28jz
OP4UalPp0bp7I8btMHKbeZ+T1MSQ+NnnbH/E+NvM+54gvwztEp5LOdctaJeh
W85eNrGfFeQ092vuV9/CgYh9Jyuw/eQ08w80W3mq52P0Mc1W1hazYjzGvee5
v7b3rEfrbUOjmrgd6mrDnLV0diVinOrXku1ov+H9vnd2IWK8qfYtT9VPJYhP
0X+Q+cqfpk9s/hwxbsXJL85+jRijH6A7jb8D7VX00h4hvop/mJlX0J6JGIs7
sdPkYt/qFdY9wrzv0Esj7n6PGDvi7qyzc+i1x2Poz1K/Rs9vPK/RH4uP0S9W
d3N2+zjL8+RVvxExpq6zl++Y/zu542jVs4e9/Mb8L9AdR3sCfy/a7+n7nvgk
693EP0EcdXefyLNz1R5/iBh/PxBr72JQnN2i/xbxSWL5YuGOs7v0X3R2iTkX
yWnOE26t1J7Fqoth8ShOL/N81lkOZz9GjPVL2McJ9GJcfN+OGNux7+QPYs0J
mKn4NnvcxdnvJneHfBKnTerZGesdxO4panfxf+a8ruKHnsXyrxAHfEuXmXEv
YizeI76LThpplf8Tje7/QcQ4O0P+fsTuR8xeJX+a2gPi+7CR2LP3SIxefd+h
eYDmF3RZnWVz9m/E3vs36qmcX8Sze1L+Gswlw1cupxd/VzH2N5w9hDmd7+/0
JPcs/ou64hSeMau+f+i9CY8pPTP50n2P5hEzk9ObAs11+lW/gOYaa99knt7p
ESxeYN3z7Ocx+Vj9Mbz+CHMReC3qrJhn9X8jcb4vEuu8xJ6+DbH7grMXPdOo
/l/E5jyJTtyl8YwHserBvfJPeVbTzNg3J1afpC7/D+JU6G6ybk7uJRd3lJM1
n6LX59sKWOMeTEbpye2soLNC3F1aNGlgPUSXmJ8bealLJybVn4daAc/uIT9z
0qGJso4092E5HbMS0Z/RM2YewKtq+Vg3H5zfpy+9swyeaWN+xgTxA76RJPQm
5Zkf/wF8noUJ+Rnh9ixxct5HZ/O0ZwxJm9kzPv9GkwxdJjTSPmTe05xrCs5W
mszo8tObFFb/YXYR2NMdZ4G/R1hmcoX5ZgrBQ2H6UpEvTC0la2uGvv9/eSrW
nP9gNRtrNoT5+s56OOuJRvXsaFKzt1LccUlnxWGuGPVixBH6n/HM5GenVhxG
9c1UhVExUs1ZdVhVvQTaEsTS5kRfDTarYrmoaeYbztqyv7TMS8OckvTr+3uB
dXMxLy3vJs5qeMZmbnKlyVenlhuuajqr5Rl76dApn5daDfw8xHnJ6dcp/Xqj
33uJ4bKecVPbM6bESHm4eZqZtcjXQpefPvWXwS/nxfkrx4yXmFmbfEZqytXx
jPMKrFWeM2zLuape1zOmMqGLsfics4r010FTgbw0uu/Kzqo4q+cZm3XpzYyu
rhdnVrOyUhePvZz1JlfJMxYrEVekT7wW4dnAM05jcVE09YizM6MycyoTp+fe
yrBuUWYV4OzqcB5vORvt7HnPmNZ7NfbinOrcxJT4a0Qu9l01JNacdpxtI/qL
M+sZ9liSmap1cNbRM2aaUHuZZ2P89p7xq7nViTvgVyNuh691SzGrNH5JYr1/
Bs6jOjNi6zZF35A7aYRe+VfYY4z3zs66eMabamXR1qJWG1/6TvidqL2KXn1i
tJmz5tyB7qKrs9e5gzas8xIzu+J3YU4zZpRjhthu4RmjsZnq6UZcAY3u+B1n
77KXV5khXXfPmH3NM4ZakatHXky3JN+DfHfyylWkT/2VyVUiXx99D/bSgj79
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
4lFci9dG1BviNybWfbXzjdMmvrH1MvUSaEriK9feN1bbMb8tvSWpv0ytGnkx
0dTZK1hZcqXoaYKvp76N6vS2x+/gG79NmFOa/tLE1dFK19E3TqXvhK9cD860
u2/sqNbZWQvf+Gju7FX2pj128Y272ui64Ncilt/MN7bL0tsMvyu96imPphlr
1+NOa7E37aMOPd3wXyJuzt7K89Ren0PXnTl1iOuia0afdC2dtaKvJbnYGdUg
Vr0iM6Ywtz7npX95Sny1dtaGfD1qr/nGXyt0YrgBmp74ldBV5sz0rhN8Y32G
s5nUNFvMvs6zDfMaMuf5BHX9THnHt59h4k5cv8U6rZkntvv4xmIf4t70jvGN
zbbE7dD09ePsyu/nbKxvXI3B2qNXrQna/vixnOKmnHN7ZnTgOY536s2eFI/n
PjpzNhN9408zBjBvAHHsm+yLthP94/E7stY4/IG+cRn77gaQG0Q+VlfcjLUn
+cZtZ2L5YmOyb3w0RzuYXFd6JuF3Yd5gdEN84685NpjccO4sxs80Z9PRDvWN
V6031Tcmh1Ibgj/Mj/PdklgzetDTjf1MRjOMNaei6c6d6Sxns4cezBAXYuod
9jjCj38DI52NQq/99qI+MoGmNbHqM9DM4N7li/stzrayN30nFZnzGvt80zfe
tZZY/8S3X7N70y9mZ/FMGPdFr1/bx9D/Ovuaxbv25R3fRbPKNz5XYmPJ90M/
B+tPbq6zeb7xNI7+1fhjifujG0BtjW+czqWmeQucLfSNiYFo56GdgH4gufnO
3iOv+kTitfgTiDVzEPpxrD0e3TrfOB2EbjC9a8kPIbeQu1jGPQ4ht4gZk9Fv
cLbRN6ZUG4pW3K6nvh69+hajWYRmMvX57Gkg+Q3MXMY+lrLONPKb8Dcyc4kf
53sJ+qX0DseGUZtO7yZ8PTf79vu/2K+risXnDPaw3I9zP5JYLP7P2U9oZ6If
RX0F9iY5sf6ls6+cvU1+Bfn36d/uGx9zuLeDzg75xq00s1n3M984nUXf+9g2
NLPxtzNjFT3iXd/0J2i2s9ZnaFZyP4s5r9XkNUO8fOgbB9rjDj/O5QfOdqLX
ftdQ/yCBZh6x6ofR6Pke/hH8w9zLZs5zB+tpr2vRHGEvC1h3Lbmj2DHfeFtL
vA79Lva/k17t63PfGDxGTZrdxOvpXUhuEc/F+B/hKxdjXfNO+MbVcTR70H1B
biPvpXf6lvoSNBvQSbOU/B76NpHf52y/b5xtJn8CX8+T9Kpvr28ML6VvGc/l
PJei2UzfFp5f4u9gj7q7FfTtp74Vzce+MX0Ae9uPsy3exaa+FT+w7+VrZ9+Q
V3zZNwa/Jqcecf4JfYpvOfuD/E/oxZLYvIIdZJbOdRtrrGC/B6gdpHc79VM8
t7H2IWb9zHtvR6O/56a/d6y/r6faVd9Y1dl97+yCb1zpnE7Te5pYDIrPX7Aj
9F/F1xxxc83Z787O+MbrTuw0uaP0/+rsOzTKn/ONM3F41jeGP0Qv7TH0Z8nv
RnOWNbX2b2h/Qx+bdY7c5+QPcTaxPWu/4nUD8ReY8sd5XsfXGe3jzM5zbjFG
9xB/RE3xDfrUfwL/BvWP2NtJcjd9Y0SsfJkg/pI1f4CDk8y6gX8TjeoX0fxA
j/b7n7MfnV2idjGBr+cBnh/ja31xKpbFrhcY97JnneUIbP9/874x/u7Qc5tY
+iAwZm9T09wwMD5VO0XfXe4kGhhTV/B/pvYt6wT0XkajWdLdQyPtT6x9mRmJ
mKm6dKfZzx32qdyffpzR08RJXF/SwJiSJQ4sd4b6few7+qT5Bd0D9/zLN/4e
oJFW82KcJnd+isDYOIdWPeJNTCcLbJZmJmIvyv9G7RrzEqG5yhzNeMj9nMf/
nR6t+ZD8OfLJ2YP0/3CnOQM7W513ysBY014vUJfuMZw9oibNdZj7h7xYecHZ
i4FxqlmpAqv9gFb5G9R+YK4Yza7/WEZg/F4i9y/1f4k164nAvhNpxbn0yom1
W8xPFcR//qqWOrCZ/6L/jns6i0b129xZOuenh/ucnIlqTwZxdp9yfhq+kRxo
VH8KzZP0aG4uzlaz7sLhU/R6fGNpYFr1vHCQh1zawPhLS5yGb0Bzc2N54CJK
HPNDdPdhWO+mOemYWdE9szrLwozE9Cp+LrB6BvhOz/cgjfZYnHcu5qxAYLzl
d5aPZ1L0+fA1Q7PEa370yj8dGIviNJPzMwfGU3I0BeBYz4LwnJG+TPTGZmSi
V+tkZK3k9KXgWQj/Id9ORvhUn9YuzDdQiLPJFhg3qcgX5nwew3wqckXQK58F
jtWXjVzWBHOKwPGTnKN4eCYwpvUd6Pt5w1lb9pGSPf/HPGmKBsbXE+w/M/tK
TU33kgO+XiBfjDWrsF5sraqB8ZmDOCfnW85Z+cCY0x5LsN8SxLnhqxqWi1lV
8XNy/+KlprOSgfGXBitBLjf91Z2VQqN8mcDuMj350oGxmxttHrSlyKdDU4b1
tG4NtDXQp6Oenlxe8oof8DMgH/21AmM4L++Rj1x+nrXxK3BeOquynFuM0YzE
GahlpK8AvS/h16aegf0VpFbHWd3AGCuUIJafibUzoy9AT0F0hag/hyYTe1Ku
HjM1Kwt16YpQq49fmLibsynOugfGcqXAWKxEXJE70502dtYgMN6KMqc+vvSV
6a2PTvns5MVmG2fP44tHfQdVeb7lbDSzGwbGYzHmNEQv3vX9NKLekPnZWENz
2jGzOLoSrPkM6zbiPZRvHxif7bBq9L4cGHslscbkxFuHIM5ee+ImzpoGxmgT
emP6auheDl3eWUlnnQLjsGNgbIiLV511dtYlMGbKMPMVdDVZtwzrNKWnDJqy
xGKyFvpO+J2YXYtnbXTNnDV3NsrZ69yP1n8JTVd85cRWi8BYKkdfeZ4V8MXA
a9xFHXq74uvZjRkV6FMs7sSqmBGPPbB61CqyZkvmdEPfHU1dNKq3Yn5Leuoz
qye1SmhLcU+l2W8l6q9yJnq/KrxHazSticVc78A40pk9z7n1otaAdXsGcXZ7
0VOFOW2o90Ij7t9x9q6zMYHx0o78GHyt1ycwFsW5voO38EejUb0vmj70aN2x
zNSsl6lLJ3bFVg3yyvXDmpDTPqezV+X6B8Zef2JpxwfGmGaNI+6IbmBgfEo/
gFwHdDHNAHRic4Kzic4GORvMfYxwNpKzG8Q9xfSd6BlI/hWeg4I4382Y1ZnZ
XXhOwm/D7JHM6sQ7qN4VjfgQV8MCY0xzhwbG4+TAfoZ2Qz8ZzVB6pgXG4VR0
enanPgzNZHonUe+B5jXevzVr6j2GOBtOrRU2jNxQdEO4u2ncn2wG9ziC3uFo
eqDTz3P9zNbvPd4MjO9RnO08Z/OdzeUu53BuI9Fodm/mzwqMv5nkZuD3odaX
fCy3gvU0R9/AJ84+DYzr2Dcxh3XFm/gR0+OINW82s2cTq28lvavQr6RH8Wp6
ZzN7JRrpF/DO89mDvrN3WF/vP4D+NYFxMpfzGcD81eTF2HvO1jJvADrlJ1Bb
gz+eeAK5cexHex3EnnT36wJjZRLn0B7dRNaZxHMd/iDWXoAtZI5sUWCcrGfm
OvILqVV3v1a1d9YhtHgo+ino15NbHMT5W+JsqbMNzjYGceY34A9HK92mwLjb
yIwl1A45O8w5aNYI+qajV98y8kvJK7cZ2xIYc9OJZ6BfHhivG5mj/bwdGHti
cBT15cyYSe8ocivIqbY1MMbExSfklRODYvd/zn5y9j65mF61leS3Bcafcp+R
n0VtNu+3jD3NIace8bYjMJbmkNvOjFXMOcC7raA2F63YPMgZH0T/GfPmol1N
/iD+Ie5Cmg9Ydx7+TmdHAmNXdybGPgyMoXnU5/NcgL+WnqP0xL6DD9HsRPMe
OrEh/j7C13MJ+l1BnNeFxGuZLZ6PBcbpOjSq72bGIvyj6KTZgP5zfD2/cHbJ
2cecq+LjgXG0z9n+wPjQzD3sTdyJyRPYJnqO46t3Kfq9+EuIN9Nzktoy6mLo
q8D42MA+NqL7MjAuNxNvoW9fEGd3OXvVe7zNu3zJ3C1ol7HmVmpf0bsf/eec
j85LfHvuZ4Pv7BZa9XzNHhVfDoyjz8ipto3ey+SV+yaIc7yN+FN0n/Guv3N+
26mfCozNK85+DuJMX6G2A62e3wbGq3RXA+PuEPFheg6yp51oT9N3mviXwHi8
ih2hdyeaM86+C4xL+Ufp+RX/CPGH6HbxPBvEudxFfJS+Yzx/w/+W99H7XeM+
fuNsrnM+5wJjcTd2ltwZ1t7JeV6j7wvmXGPW56ylGecDY/I88Tn874M4u3uI
bwTG7XXsBPu5GRgfYuNCYJyp7yQ9N/FPEO9lXkz7Q2D8/UCsvLjQz1jxdzsw
hv4IjFFpLzr7MTDWL9F7MYhzfJH8V+xNvf8503+w90f2c5M9i+9nneUITf8H
693n/s4Qax/iUkxFQ2PkJ/ovkw9Dq51Ce4ec+AtCM/mXmXcH3V3u/hR2h5y+
kU84C5/+y2jvBcal1kvEfu5Ru4v/ZxBn9zRx4tA4VY/2fIU9nqF+n5o0mqmf
yfp9gH6e/kp/EmcPOB/pFScNjS/lVBOXOtOc7Fts/eXsIfW/gji7Z4l/ZdZv
6M5TF8fiN5mrpQyNoxSh1f+Gp7/RP0QvbXJM2uvkk+Orrpna9wVm/MOcf4iT
hvHvJgXrqvcCmkfOUofGzBOhcfgY/sSX9NrvYxiVPlVo2lv0/AGjN6nJv8SM
f7n3HJzhJXJi+Um+Da3/iPnaV3YXPxMa69L9yLyb7CUVa6am/zaz7rCWl+B7
eMHZi6HVnwrjXOr5FGdbwFlB7jlkn7nwlROHaUNj6y59abB75MRDhtAYiNKb
i29Jz9yhzZA+DXEeuBcvYjIvlpjafXhOx5zc6POgSYRG9fTMT8c+kzArH7UH
cP6Y87/IfpVPz5nqbAuHxp/eI2Nomoy8l84qGedVAD8/lozvJwlryn86NBYf
YhnJ5aNHmkxolM8CZ2JB+cyhMZqc+0mBNlMYZ1fPzOxb+y+EthD6R9SzkEtJ
PhU9RZxlZV1p9P3+ws+IVNSf4FkUP3sCNtWbLYwzrWc23rEW76m+1PQWwy9K
fzbmVXH2fGjcp4HVEs6Kh8au+sSzuH6BGcWoPYlOPWK9amjcyn/DWVvqJdDk
oCZNWWfluONqobFalT1Irz8PLAVb8nOjq46fizgtunQ8S4dxLtMR56YvD88a
+FWZo/3UDI3bGpxfbc6wTGgspsdKkyvJ2mk485r05WNOTWblZa0MvHNGnhmY
o78G1O8bN8BiRs5FZ9yQ83uaXHn2VYC91XFWNzS+VMuEVhy+RL2+swbcewU0
5dEUQJeJWmbydZgpxsRmJdYpTL4efl36ngvjrMuvSE8W/CzUVStCbz38euzx
JfZTm97KYfz70FN8N+Rc9D5iNxs6cfaWs9HUivG+2alX4ZmNmW2cvR4a96o9
g7YIe1GvOBXvb3DXjUP7s+oXWa8qz3b4jbirhvjSxzguQVycmuL29Km/Gr5y
sX+vTP9OWXVqyteLunNzVjdqf+7QMTS+mjhrGhr7rzlrzbuWIf8Kz9JoyuAr
p/kdmPMqNenFbidnnZ115W66hMatdOXwyxDXRFuLZxfuMRbXZl5N9q3+Zs6a
09+MXMcw/t10Yd3a1KQVtz1CY6Z7aOy1CI2rOui7kqtAj3R1qXenV3E3YuUr
MqMlZ6czbENeuVbOeoXGVn3mVmA/9dlTT3SV6KvDXrqhqZdA14tcJe6sMs9K
zOgdGke9sIasrbOc4Gwi+4vxW5lYvvjqExpvb4bGeRtm9KYuZvqHxoAYFuOx
7+cdZ+8yoxE9yo8JjVXxIh7HYu2pab2+zvoxczT6MWjaoVH9Zeb3JdeBWeOo
N0HTgvN/jv02od6Ns53MOwxwNhDNAHI6q06c1wT88Zj8jqw7Dl/9YjH2vQzE
H0ePNIPQqDaE/TUnPzg0jjtzP13QDgrjrDdDN5n9T0I7CX1z6kPIdSX/qbP/
OfuJd1f/FGcznW11Nou8ct15TsXX/lfzDsND46wVprMd5mxaaGyqZyg51XpS
m+5sBL2aMSM0LnpRm4EvzUh0PZk5DX86GtVbo5mKpjvv0ptZbdCMZJ/DWLcN
uVGhsd0GX0yIpdmcRR/mieNPOD/xKMbfoT6LnlWhsbcSvZ5jqM9GM9fZvNDY
Wolemv7UlF/h7G32NYdaP2w2ud7sqw/3soq7ka3hjubSOwfNWHQDWUf7eC80
ptdwrjrjTWhUn09tAjPXOlsXGlOqDUI7kVmqb3C2kTtZgGY+mgnoBlEbTH4t
MxeHxs0i1plMfj3+OvoWhnG+F6JfRO8QbDC1KfSux1/PHqVtgXYoaw8jp7gl
ZzGN9xlOfYmzZaExupTaNN53OPWlzFtCz3RmbaY2Au0U9jKVnOaKywPOPg6N
g1HkllNfTqxZW0LjXN/uTOIt+DNYdzO+uHqTeaOYo5xYFcvi+/3QeNW8P5x9
5exWaNx/Fhqzs9DN5l4/cLYzNM62OdtOfVsY53U28bvMWoluLnVxKzYPOjsS
GiOHqe8IjcUdxNvRS3sIk3YN+UP4B5n5Gfucx1538JxHbRX7Ocy6a3ifBfSt
ZU9HnX1Ifif596h9HhpXx6hLt5BY+XXoj+IfpSb/B2ePnV10tjs0bsSyuPgi
NL7EjFjaQ349a27g+QU9u5jxEXNi/h76pTvOzMXUlD8RGp/HWUv6vZylzvFK
aBxJd5LaMrT7nO0PjafNzDlBfhla/XpzmfNW/5ehcboMXaz3JPkV5DT369B4
Eov6Lt6mvoL6AWpbmXvJ2Y+hfT9bqb1PbSvzxaB4j/1a6LnfC/tRu7dd3N37
rL2Nc9nEuV3hTPQ+26l/4+zb0Ng6Re0g77ud+inmfUPPIWb9TG0H2k/Z02fk
NFe8iplfnP0aGn/KnaZ+mlizrobGsrRHiK/iH2bdn/HPhPbOO7HT5BZxBrtY
9wjzvkMvzW1nd3gf5c8m0GuP4lu8XXP2e2gs7kKn/OfUfsM/Rvw5ud1oz4XG
6fnQuLweGl/HObdv2McXrHOc53X88/Sfw/8+jPMt/4KzG8y8Tn4PtTBqdxRE
4/vQvk7SczM0/vTtXiKvnFgT1/q295O7Rf4H9Pvp+ZgZB8hdRPsV+gvM0r7+
CyP//z/PE9/iVfu6zLon2JPyzzrLEbUZ+jn+NevuY574Evvi/id6LqO7zZne
Jla/fs+jn91jOAudyWXOWXeWLGp3niRqd3c3NC5PYXfIibto1Hj8mfNVfM/5
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
FczYT24f8T7ivZz/22j/Dww0Ntw=
            "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1:eJx8m3dczWH7x5NKy0p2Q1QqISSF+rRDJElmJJLIiKxEKaVBSiIhIVHaUwOl
pJK09zp7fM9BQyXF7/b8/n6ev3q5X6dz7u99v6/ren9KKs6n7FxERUREisVF
RCaSr5ZHZlj0hlLISftY2q4ugNjy+NL9LRQSLp702XyMgn7dxy2v5gvg0n8n
0Y1NQSQ48cTLSRQ+xY7OKB2lIL6kZuJDOQESal9U/3bjoyNhAX1ZOYUnt9zp
hrsF+DZZUTcphoeVgy3GstcozKmsqVHKFaCoP6ryygsuAn7r/Nm4nAK/r3T1
z0VCDLsc6RPx5UCzLGV3VgIPyhc+y19YK4RX/Of9PZZsrD0+T/ReGgeNSt/j
t68Soumev8zWqSz4tLD2jhew4CAs2WOgLUT2lIWP+lkMFMW139HrYmDVs5QB
DzUhBNviZ7k10XGt7YOj3WI6fHL6j69TFuJG5LlL/FYaHttlxMqE9uLj8Dmf
C40CFOe4CjZV9sKJ3aAe5NKFZUOXupMcKEw99/uzMtWDKU4vbBDQjozsup+T
l/IxK3yfvUdpNzJadeQW+bdCR2bjHDjywN466eeOBd04Oce2JNi1BRFiq38/
4nOxQ9lfWkusG4/KLZaF6bXgwcff+2ubuQgfrnthe6obW/dPfND5owXX3kYz
lBby0GMSFbPBqQfy7lrWLZFtsLjf2XjpMw+MFNWSVLdehDpHm0ye2wk1jakv
LWv52PTjYYDIQRrMV3rvnHOuB97Pur7ylghwYscnn9Mn6OCuaOCZ+9Kw7o/B
i04Fcm7P7+jIeDCgN3Ay+KAKA7ocbuanhUL4/V1ZaxTBRI//587TP5iQsI9/
sVtTCPWMy/Psy1jQznkS2tzFRqNVTuVuHSHevvr23PMPG4mCDaG3yPPclgiV
8l8jxO+eXlGxlVyIKJxxyivj40uP3FCAkRC5hTnNt/R5UC12fWzvREGsLZMv
RxcgZhKzT30uHwHLF+5f+5pC/atyM88rArxziJ5QXs3HvKatVxdwKMyyHGP+
1hZAuar7IG8DhXcBodMDpwlgYLeidP9PCjdDqiulAymcj/Uq4KoKINef0/K7
jYJ3vpvWjk/1YNV4P1x6OAUzrELs+n/04l65Vp6xHhMbg58UGO5n4hhH7LHl
YiEcDOccqbvHxguzl/pSOlzcvcTTVV8thGK50a28Dg5WbJ3cN2UtHye/GNiF
rRfCcptMBv8QFyd0SguZ8hQW2JssT4QQDfc7J+Tt5aI/TmRBHqkntxWXtl0i
67ZzrbK/MDk4/qv7+KsNfFxOStldSt7npti6D+OKHATJBFTrS/Hwq3qP/Dp9
Iea3cTwsVNkQPDtbOX6BA6X60ZzglUKk3u210JRjQb6l8emd9yw0OTqJbCJ1
0d7p1VbzhwHttxULNcSZKFrrKTVRXQjjGzsFh8bpmHi1jRXmSod06e13qguE
EFNxL/2pQEff2FvZoT+90HJzH5aYL8S1CIV9VstouHl56VB2WTd+5wREP2aS
frA1vDXWpxduKsvHHVw6kWT09L3Cdz6iVS4WLVLqxTO5V9F75Drw3D/JbvYR
Prodt+w1mEzOO0am90ZLO7jhu8/a2vAhZ+7nf3pLLyb9dXBuzu3AQGRKcuQr
Ps6uOR4W09mLCw6lp9JedeGZyLp3Xz1I//At0/fLoUFsfNaOy+T79AQK0ZnP
BDA+9tnI9iEdWdOvtf6qpGG/cZcjV1GIuWM1Bx+GM7DZeKfGHHsGLtlP4PiQ
/qO96Evk/Vgm6IdrE+jiLFRH8YNfEs6NdVQ5X7NYcAkTimwpZcM4lObya7kQ
QfVlovkFbNSHhUXlu3Fxc8js/TDhYbXk86UKMRxUn1A/+6KWh/Nx605PXSfE
udIQJms1FxatoeaDVXy0JzrFPiL8b+2P4S86xcXXE2dnaSlSKG199MiG3Pt5
XcuCbRpczAx/IbUoh4/jKqcPbCGvX/xglFGpz8Fc2dXKVro8+BVoXmwhPMQM
HjpMP8jCo9MuR5PAxnqldebzlwnh4fHU8ehTGtxl5soHaZHz+XH/okegAEf4
kzjbCf+JV62lFAj/oqFmp/oI/2fFHhQxk7ohvte/8+yuVrC2RK35Y82DyZSz
zAhxBiYJ2+2yPOkQcRr3siecrDS8JpcGFm7+9pPJk2Tj8t6ZyduXCuFt8UXy
zkc2KAfxK4svc6FZOWHKGj0hkrTMnU2ecDBzu2YTr5WHZ/nnLiwl5zPsWyK+
r4sDwdsjAZnr+fgwdS73PjmH19PcMw884CDhY8+j8195uPrbWFWGvH6uUPJP
Rz8bOo6ZxVQpF4qPvfaB9Bl96zPnKmXYGN97pzfBloOkgh91oyuEmPdi6Lwq
uVdtkaiil0ksRKVNl/izRIiF1Mz9h8YY+CU5Um0+gYnR/er8QTIv3LytaaNS
DGyq+7ap8jIdw3vK15wkz8tzC97SZkzHni8h3U/0aZjnJ3qsldTF7Qzd7H23
aLh1SP1ayqRebNbJ3Gx+TADuuFP0bwUaLHYH3rsd1A3XXKvmLdUUPgyybh2S
ooGS+njN3bwbS25YLS9Np6DkWXwnbjsNJVExmVGWPQgKzZFSnCvAnEXt85KH
aeA7Py0KKO5FeWBAc+ZfAXas7d52LJ2OQ6bfL9EoGpJ5J68fUhLCuTzu0vNI
Bg5K31Ae3sXAFBnr6AjCuQtt0LQkiomrP3a+TRtmgsWfOHyWcB7PPbf2fhwL
aQ+3tB2LZ+Pu7TL9YMJ5YmrhphfRbMw48PXPCOnfja9CenQI57MufYhR38/B
8sGsQZvTPLjE9/lnGAiRfipjo/ZXwqfgxg6OGunThcaKFuQe2/m+J7KqOFim
X9WZp0TqfFLzxCVkfd7kg++sdTlwieYtnrqUB9Y1Jt4SnueErnx2cpiFhYWD
N/qXc/BG69qk6+Qe31wycuZKMvHhXs5+55lMtO9LHDUkfeyPkX5bhBoNL6f0
C44ndKP766X3B1opKLgteCld2Aq9y42HUmWq4XXuIRqUWThP+3/+HUX/n/+C
6//P/+FjC0py81qxYdv1/vki1fAr8Qr0VmSh+adRwA56D5ys9dKGzrVDvczM
o1edj+U379sOiDKwa5YT88ppOi5XXFlhQThhr9aQcldiAZUaxRYNLGRfWhcW
Qfqw8IVyn0UCG9Ubxzd0b+BC4ctOV19ynuW1wZXdQRx0zy3f25/Nw5KWpw1J
xH9OLuyKuvKZ8F94MnlMmY9Sl6dPlpNz+2iWXKsSwEHbRrOPP1J5iN9VKBpF
Xv8mX9JavJWNeZ3Hz1ZHc7H6y9+CZ6TulE7KCRQpFgzrLEQ0FTiovW2ksZ6c
55lly65kM5k46UmFBZ9nYdnzkTxjUhedMnGv49kMyN9vSbLvZmD+8RbR86Qu
/JlNafayDNQYRqwN96EjTlH4/TJ5Xv/sgIPTjtHJvU2/3upFg7isQX8F8Yoz
Wp+VTSfTYaqX/LCQ1Yvz20vtX88TYiR730bxERrmvntTvaCkFz/fhK/QESEe
8nTm/ctr6VAv6TzgQuZMZ9uYaRapL99jyysUSugwUPi7K0eCjo+HjIbKCOdt
0/yuagcyoCORVmFvRjhfkzzRjHC+Xe/Iik0XmXildm/BrgomnEPuTqjQEKJ/
6zTB36ss3LCZpnHmJBtvFJWWfyR9UlB+LeqXFxuGCq41mydykazMyfXXJXN/
FdPkuBUHHcsO0CtIH2wq0WrXJpxXXC9ynPmWnOMks8JmST4ihhaFdpC+VF94
lyWRx8E+bbHb8//yoLM/auUbsn57QpJn6RwOVt3Pvl4vwkPER5E7CoTzZXy5
Q7xGFmYO8oIuj7ChtHtdRAHxqOnXnU7OGGDA4eopL5t+Bu5bXYx4R87/iWfn
utGjNBi/VLFtDO9Bz4SDacpriK/OstHWTu6Apy5G7Bc1wEjm/dKFKzio15g5
3tvTCFMbzRv5Fm/Bu3vklBS5p//G/+adJhdepDfBdW5/ZcvFEpi7rSz/MEbH
89aYs/1rOtDYfmcDdtcj2d1/4EwPG9bXfjgN0XuxTfyhcvW7Ljxcp9b63otC
wZ8kpbHbDLxyP28+ZzsDo5dvWniTe8lOjmq8HsFC6pc5XqtuspHOVzBbQfrM
Sr9zDVV/2aj02r0zq5ULg56Q5hDSz9dPUciYWkZygZxCp6w8Hxb7NczFCP9m
FWe/ryS+tDRhbXGaFR935c7Uvyfru57a9FZf5mCgc7pb/xMeVm3vuLmf1IWW
rXrfwSw2ilMDPb45cuEX/JdbTeou4OCdY6w8FpZYbWnvrGRjzwG/ddPJ+cdP
W9g9OZsJda2QM/s1WNDzelWlqiXEqOWxFLlqBurHO0qeZ/37at/frirEvcrB
9GfzGfi6deGBxdF0bGZ4mDSRuvjz8Lm3ew4dNxVot4UDNJyq1X7vS7i1yjqt
eeI5HWoHTvSIttAQMfoxdzZZf586HreTQ8dxqQOzFprTsU/eRS6e5JSkyrb2
JC9Sj4FyQy06DLRvZXT+JX4ueKqme9iG9MH0s2ckApiI3Bvl3UB8Na7n8qO7
m1g4YdMwxWAeG8vOdJlFkrm8y9Hv9gkbNjaEFuXmF3IQOIVZ5EPy1AeJGMNQ
wkvXl2VrnmvwcOCJq04K4XNi2Y+H6z5xQLe57axGfDxh9fXyWeSc2QbB75aR
84+mdoslkvN3CRjL/3f+PrQQ7vYjHDyzkbE9c4UHWcMr62mkXszHF5t9MGRj
lv6uPX1xHIQ9Zngqkc8NDrgXnuXJxB6Td2p3PzCRn+A5LYvU6Wa1N0v1del4
bHJw0Q5VGmwizuWEkT5gGN2X38/owqk93O0hf5ph9na/nHYxFyxPyYVLKlpw
99A7/7nvKyCWrxivco6Jr/PCVd76NsA9Nb3nTmEWXs0oump8lvZf+adbCJiH
lzeiKlPiwUavN1g7Mv+wyDcavBmfD0cubIVffnax969KzIm/9/o14cNky8Cq
l2Q/cbdsJ04i+xl5sv7P0HsumjN1B+q06LDf9+Dv2pk07PBJbd9J9j9HaEb7
e54J5d+jrhblTOjEdV8qJs9bcCyx7bs9G9K/LEeXlXPg7OSU/4KcT9KTSOP1
4RxUXkwt/1TMg7vZ2q9NhOcgW2+1RXO4sA4YnrroIek/dhu/fzMUIlxP50za
bw5OjxUtcz/BR+hgIGMDWT+oSZvk4UTmqMffpeNneaiL2EF/R+7l4e8ZO90v
sHHgz3XO/XEOWsNDx06SvreE5/1Q/ywL3Hpv54C9bBwtzvbwJX0yvnPqJsqX
+ENU5Y3VzUxobmc6jpL9ZxjLd80uY8DIQTGwLoH0q7NnnJJJXWhssTlntIOB
qNJhYe4gHdt1os6pEW6DDKcjzoQB0Wzh0xUkl3N8WcOZKkLkhX6VvhbKwPXV
z9exrBlI6NJRdiZ9w54xd6uBFhN3YspHeZuY4K6PcBMhnJfeZqwekyLztaU8
8VQmC7auhhvnkTn7R7wutpB4YPnMW/HhxAMPspde++eB95x9DCZKkLnp8pOW
QefCPah6URrpM9uOOn1tJZzvtAsfUpnHx0vHvr3zCM/Tq+2FvkpcpNbdT3J8
wUe9d/YseeLhr/T9z2/vJp6TXD3L2IiPU1WaNx+T1yv5zjsYLWTD5qSX//lC
Lg4bfn6+gLy/tkrFlN82LJz2etm3SYXsq76uL5nUI7X+he1MDQbW5yUfWpxM
h+SqWLYiOYft4TT9Vxt70Sl9VictsYP4+Ksnps/5kFa66b/MsR3eO71v93TW
oqiK8znTgvjEh6Ub3W41IYN295Ltn2I4r5q2+S+DDst1bOmLEg2Y8CfXdqVb
OtJsxEu3Kf53/sO0Jd+bnm1A+/jm/CbHLAylmt345EYDW+/KDr9FzViV/1zK
UrIUBxIIGVsY+H1vy9sr/Hacoc/yu1Nfh60v25QnJrLhZb323MSIXnQ5vymr
f9qJtau+nbxN8q7Wji8r2YcZKB96b9w9mfi16Jd6X8LD+taENSH3SB9+61lk
fpeN/cdfhNuQuSCyPvoccy0H5y68O/tqDQ9JRSbvGaQvTRKP2SpJ8lHd0eYZ
Kdl8XNAdzbQm90LLY+g1kXwtiGh4xSGf57eudIIXydfHro+XxQ5yIBbupyrn
zIcSf/orZVIXmnsW8J6rcjDc+jOVM4MHY5mF9IPk/fPPe/2arEbm8eeTv3GJ
1GOtxYYwkq/Vaak1D5ewIG2slHKOy4L4ckv/bsLbyvH2VOXDTBg3SLn1vWTC
nq6wzY7UxVeFP98OCxlQcN5/bSmPgUe2E9wekznedrX1kkUrAx5DJQaGnxg4
v0p80UKynvB7YvmLxUwseK+yqdySzJ83fk59xG/fl9o+vlLLRFzL3V9THFi4
pLLrfRWZRzqJZW8+5pN8OsSN6K1m43B95DIFMr/WljtHdBexcevLlwjtE1y0
pnhbihEPfM49Z3b/JQe0gmXONmzSBw7UKOwnfqL5613MYhMuhn1OOEl38fHk
vrxtNznP6psDD4fsuDCf9O7Ey18kt4p4G1mS81SedpT/IZv0pcv56Rd+83Ay
pOZXEnkfOYmUmu7dbKyzKFmpUMOB4grR6x9IHwtLGum23Uv63WGxsKoHTMgP
i/CVyPlY5noZ5pG52Lfq8vP4/F6oRW1buGhUgNas103XD3bB5USj3Yf5zSi4
Z25z7TAXdzQYc2+xWqA/crzDUq0Sh8RKNCqCmajOGFl6YnMjAqcVhuqa50O2
dArNVZSOR1/nvr3bWY+MoIYVb0NTUdmas5X2t/e/8p/bV6mUMKcBKzfvnPyc
k46TH60y52jR0FNUMFDT1YhZLx9obV/zFjJzfKm7R+nYq2v+OTK1FW+cz9g4
9H6G/sVvKdNms3BQd8Jui13dyPXosflM5hJ7+p1qwXTij7UXptQfoqPrjpRn
7WkaEqc5+8UTTx50vRq94isTUwQO/r+2s+CZlbK0lNzv0sVc25/kXhtLPYwl
bpB7OH5ziTO5R+s/XPOp87jYtteyzCCWjyIpu8WjhOdZVj8VEcPFevPzkiFL
KLiwprT/IecsYei7fvw0FxTroPCTIoWNCQ/Dvch9Nc8fnVddzMFvXVmbmil8
7DyQtKaPrOeahZxyqmJDjPvsSK8fF8zX8fO2k8+dd2+1f1U1CzHs1/tOUWzs
82VphxLeFvUGFW8bI759aOljr0csPMLKoCqSIy52yn89e5WJ09mVfKN6Jrxf
ho9QZD/GdhYHfrgSvt+HpcilEh5+yEcdJev639W09xYxIVtxXT9nNQuzpYYM
d5BzCPGZ/n7mSdI/s1vLzLezscBb86IzmUcL7COPXt5P8mpx0JyAJg4O54ie
7CK8hRzQrBA7QPpGeOe3LA8egmvv3M0l885x/1OPLl0u5oeuO2BdyYeK1OT7
9wjny2vn7nhJzm1/mVFlMjm3hT4NmrVkPwbpDN1LblzEO4faWs6nsKx3441W
8nrV65MWW5/i4EZsjEp7KA9Dh2/fnknm8nUt113bc1hYeVHmeuFHNux7/q4V
Jefz7d2d8mZ3BpI6fknFzWNAyO7TSCN978AOlU0zg4g/D2bklPl1QptzoX/C
bz7UZomr72hrx/e4iNGi7DocilAfHnjEhnvcCWeRVc04oVxYp2ZUiqG4FF0n
ku8VNrCUAmIaMLo2yIJ2MhsC83NSBwJo4DnW/XCrqUdPxHaxlPIUFG6dtU/w
87/znzPqNuwtrMe+A7/V+OfTMPGX/vpSGRoKm5++rZ3WCOZ8zeOPX+RBbMXH
VL9WGlK159RKT2rB1UbFSj/lchj76F04QvpdWbo3c79EJx5apV3VLG6ALXfW
3cDTHERS0ZwSMxquelh8c5nagy4Zwws1ogJEPxoYeSLBhOpzXee86Uy4fp30
Sof0PcNn0yZlbWHDLah1QlgBB9OMNnhfJvc7WcTlcuQAB0OisWmHnfiI3b00
fC7hf37XtMtHS7g40hFo8ECfwoDKGZ+zs4n/bPBQFP/KRfYbpskiQwr+S/2c
90wn/Gze7yG7hQtPn9Qo9R985H6pyl9E+lsA1dnw7RAHo+I6Zg8u8aD/I8S0
gfAjvkLmmLQLGw5K56um9HIQNCsneyLxJRFVh3crbrFw/rNppnEAG0bzVCXm
kPlVf2yrP1+SBd0fVty8dBYg80NGnsyL2he2DOU+JkKevh2+EsKCqXB0ZTCp
F+0NDw8vJN5+JNgr5NpcNryXb0wMJ57gVxSheXMiG5m/NRrczDjwG5haVEV8
ZktueX4ZyY1em3dZH/vCRTtV03qQ+IZ0dKT8AnI+mWdumL8+wMdX5Yxvs8j5
8N7eqJvxigvx+PWl6joUFg+wY6sJh16nGjz3dHCh+vmGmrEJBbPU6ewGGVIX
HVFMPVcu5rpsUVkxj8I6RYmTReR8/rieu3pRnoPQXVSV4BcXOxXOXp9I5maB
qXbD50nEx7KCrahUFm6n1ftNJs/rIq6/ZloIHfJUvb9pKg2mB7oy/BWJ78VF
m4Q+6IZ6R/D2jWtb0fs0O7MaPHjnzewN6yG+He98LimkGiKVo5ZXDFhw/j48
NCTTBNmASfccLr6D5Zirg3gwHXEV2h2TDRogkpi3dmJlBlqpLxI9xoT/B4E/
X1fW4/1T04Lc6ylQtVLVvN//3/lPCFkSpdhWjwLn7X+D9qYiYMe0rx7jvZC+
yWucHdGAsHg76W1Ls2HU+27g3VUauBIe0n9rmzD6TO2ZA68EPl5MdZ8ZpB5r
n9aLKrdjSkvDxfLTtWiOHJGfQHLYh+kNsQOLejG/5MjLcPUOlI8dzDc9yYee
G3dwuykDldv8neya6TBXSp+WRzyQXT1DduwDC3Sjhe9SOsj3p1f1bSP95Evv
Ilu9fA6sjYKdY0X5YDbvHCgjfXvkyXiQSRMXS8KGY9eAwiyNFzq3pwjBET1K
TVXgIS7m+sZGBwqvvCXuNX8TYIHKfPsDJD/lfcn6YkzqJSFXYyOf1Ev7i2p1
134O2HsuLPLbT7x32CNPjvAzUmd2pXuQjaDwP67qn8g86p4125rwpvotcXjl
bDY0fEqEY84ceIqzjxsSX3IqrSpeQ+qiwl9lzyZSF39C9TT/1cWuLRbLTT1Z
SKz+PlvHkU08L9YnkPTzm8K7k93rWJhgM39lbz8bg1fzVyWQ5xX/bbNybwSp
h6qJWaaLuXAuHbOXIPld87w1Wz+Yg/6MVlX/HB527b9BSyZ9ODpP1EbrIhc9
U11DtBdQuGVsf9uM8Jma/7YrVoKHPfNCmlK2Uujo25biMSKA7ZYLs49I8bDm
rKXoQ1tybns8ZVcNCxAnvyj74lbi8eLNS2QG+bitF9+1gvA/pfNLYAnxXL+8
jbXnbbjQ148vuEv2o6+p/XntTiba+lKrDSKZaH0wc/qkfx5o0ymRHk1DiEt7
/P75vfA7L5uw3EuA+d2nSiR8OiHUj1cbiGiEf8xVpt1HDu7puR8q3d2CMizy
WoJPuPT9Q1Qw8cLnwsuXP1o0oimUf4GamQ+/iELfgnHiJxpLdmmKNaB2090p
6rvT8XQN71HmfNJnjYzk5lbUQ0Xc5Un9yRSY5Xyc4N333/lXFZc+dedrPWZ7
SetUNqdAqnWoqGioF19/fnRdatqAo6sOV56XzESw8+NLG6xo0Ao8sknzRyO6
p3IKh3Pfwuub+pDXOTrG1Jwv+Ua2QmzTBWqZ32esvHfKUkqMhQ1dWjOfbOzG
DqPlj+zSWiCf2CD3dBIPLVO73WcE0nGm5fqh9pc0aCgHuLuT/iA/tWS3/wri
G/1GNv19LFw7+WpEhPRDbbEdJYMnOZjtFmu7lczfVaa77s8g9+5TZjzJvJWL
yEGH2/rGFHTlfUT1JgtxV+SDxdPdPATkWVjtO07h8ZVof5MGASwNFx6MUCWf
H+XllrSbAqNiwqxJlACyTy+uYnhyIVL89Y28MoVURVOvQtL/x5C7p8ibg2Ib
1+Vnn/JwdrWn6GHyuRuXXzctjGFD8Qvrm50eF031FTKGhIcbFvqBRSSHVsnt
mXOH5FDbA56B/3Ko30/DxDzyPIsm/PlRqk7myO27Kc5kfY/yweUP7diQ5fhu
Of2Bg6u265Sjybx7s4be+H02B/biW3yu/uVimfXQu9mE50d9Y6cPTuNi4eT1
95LD+JCyT08qIXV6uiJ0kyGbC+HEHZdp5hRoD1ccGZAQ4tOvA2+6HHhg3Fe0
P32Mwo69Oj5XGwXYa/DTqlGdh8dezeeO76GQLjX97US+AMcTNiX/VCM5mX3q
yq4MPoJmLokB8R+98i6v1FVsWNy33FcczkFNB14wSL2LGsRtmvqKgXvpo2Xl
lxhQq2J8lFQlvjpRLekGyYPNXlP9Y593on7FFPONkhTqJh8rzX7TjqqZFadE
veuw57ZtvXggGwoXHE/t0WlGTNaQ5Q/dUtiq7Cvyd2Dg5Mbyo59LGtDSnykt
6ZuDfn6v9a84GmYIjnJSOfWwm9VjskQ9DY/psbWpk2iQreRuu0s4L15SJvfI
NQWb6AY5Sv+D/4J1buYqn+vhvsXa+W90Cs6I3Qp8PNCLXfV920jvRo1xwlBe
XjrSl5nJm6jRILXs9NPDNo2QrGVNoG/Lh0hSTk7lRDo0jngZeuxogUL/fKaq
zicIKlW1fVWZULqql7UtpBP+ZaN5US8akWtYkGL6hYPsaAex7GIakL1gab9T
L2RmcGpPZgrwLL3IU/QxE7a944U7J7LQGftkS6ymEF03n61aN4ecuzA6epjw
oJNWf34u4UFp8SaHxGoubjV38Xavp2C6y7P3qJwQsonVD5SCeeR8XN1XXqYQ
V5sn/futAOFNtDkaV3j4mT+msfoCuQ+NE9I7SwUoX2ctcpvOBV+kxvilGamL
ZIfQB5JCWCm9PzFlnINV7TqKcaf4YKR2MWwJbxM1+zapkf18kB0/3Ej2k75x
aGgO2U+2bJNvzXU2NJeHfZ4zg4uDi5NnvyW+VJbYuK/JjY31S2sXf+Bw4GCw
IkWZrDdOHrw3qYaN1vW0b++CiKe46rkfJbmjJXH2t9f3yfMmMD0Lqkmf/6mw
egKZd2/4yqmFIVxc/KOR5KhOwZhtPbmfzBc3GS9x2kbSzztsns4/QuGtjPfP
re0CcL5udfrxgIfDtvwNNb4UtF5/m3ImVwAX3VOqvqt5KD8W92PrAfK8w7mK
HgwBDCmm5lshB222HoUTd/Kx+eg2n+H1JHdLh7J/E8+XW2PrUFXOhv69dDkJ
MqfMHVvq/cfpMLZUXfzBlY6a0MKLaguESHdkn++y7MHktuyFL1zbcOpqZuij
fOKVy5bJLTVsI/eq37em9gvUam6NbLjMIp40uctmaxNS7A7t3qNejDNH5r/Z
/YYOptjwg1vHGpAUcHCVpUoWlF6ldr46RMP0VToJZ1vrsX2kEVvsUuFrkes0
OtaL9TtNWo8Szk/emLYTLinQM9VZLPI/+NfyXE+TI75kp+Jx3MU7BQLXVZFL
iC9FXfErXTtYj7DJUrlpjWkwUy9X9Z1Gw+Lw2MUf2xtQ/sB6UtHSXOg5WzAC
M2nYPXl234OdzRhYqirv/rYUd9rur517hgHBy2LNOvEObLmknDhTtB7mK7ru
rikiOcll9TmDnl5UjBherM7oQrjKu/Kr5yjonNw16bAkEwpF23JvyTOx32n9
0FqSCyQPTdAdzmOjwEX3prULyWffNF9xSL9t3vH54Ols0g8XnphqqUvhvqcW
25TMkTfMgsi61zxYMatelQVS+BM+culUqgBGHBF5XhUPU850/lgYQaGmOTju
WpwA+75uZTRY8XDm0Rx/dxcK/LzuNes6BJCe0K2SQ+ZC4Pmfe8XJXFhhXqFY
S+aCbKjh8Q+3OTAsmSMhVszDwh+6kg1kLthGLRjMJ35uLn5nbBfx81nGfQ/+
+fl921ssdicb5zO2r4mP44KzLmvNe8L54i/Tc/8Svz+cKrNgkyWp16UXmXPI
+5v4F4pzSZ+vsl1df/02Hz9+zCsqI3VXYT9tc84gqfenlq+zN1JI+SkqelGE
vF6qJTnnOQ+5W4qPTLtOPP9OkNd00k9Kf4auoNfyoMhZ3rkgksLO1KyoxsfE
c8rGG+au4cFdRut2K+E/6GhZZD5dANdVJrXeiRwcKhwJ3MPjwczw8jI3Unfl
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
V+98piAut+6iiJ0Ap6h22o2NfJSZTTu2j9RFbj1V/8lVgJolk0V97/OIDyvO
+ONDweCIfXlwHvGlixvq9T9z0To0Jt6zjnDllDEyeYYQ+764+i3Q5+JyjsTs
4Bo+Lpb4xiWS/ezr5czaOY8Lax1PzZRYPiKo81W/ybxwfxY0//p1Lh4n8vib
VCmc3Kw3o5Dkyo8aKXxZYx5mn70e2ehM4Z6IYEletwBV29remEvxUSAiefjb
C8LZthphxHUBTCndCxO9+dgUWjpzZTWF0aaB6VrbBNhwd3WfrR4fV5NWyA9m
U0h+tvzaodMCiDzpP6IyxsW+Zalblm2m8H6mbqnquAA0une5ZxIbvr8l6u5t
5WK6xdvaaOKZ3nmSh6RIzlWNstjwluTc7conn//LufebMg+MLOrFzvWSy5+q
d6Atq9V140k+fEeD5KeltUE/dPY2k31fsa/707Htn1mI37Hcod2nCcPpJw5p
fS3Gzn3JvRfa6RipPKd153oDjGZbMw2as6B6Q2S07xwNj/66XXzFqEdLxvnZ
y76looMZ8rhdjIbal6d6Yom32MZ//TT7fAr+BFvKtBNuVc4lLvjH/xTWNy1l
wnmSd9n9/8X/4vktCq5knf1uHRaTvPDY7Nb3P2Q9aKvarhlfSI72PhY2NZvU
Ed/u7m8yX97RLxS2SjYgs3dmduGldOid0gwbV6LhvOOm3JjpjXhbzlWY9zoP
UYm7nk5ro8FC/PctuaZmTDcJ1X/n8REVF7K+WVUxMNKl0qAn24mabbuu25G6
1/l5+vtTTw7Gjwd+uFtBw3Jdp/fxJ3vhah19/xrJrWHuphgjebhqx8Lqz69Y
mD3uYDG8hPi2wbmtD3gcpMZXtOwj/kQPFXHoIf3Wu/bOu4VfeAhlf+H2Es/3
X1hxzO+JAGf0lTLsnvMRXKvE2dJG/EH6V/EtCOBgdfaZYwQfI66KXNsGCkfS
DdY9sBLAS8FQ7KyQeHIi7crLRxS0nXackYwQIFlca+YSVR6OqlzZHLSbguOz
FXxdSoA6ropX0V0uNOgbn2RpUlDev7ruPNnnofDKVRGXuOhyWWEQv4BCU7dW
+TPSVxttr3gt6OLCNEfiVgvxq7K0DT6SxK+Ut1GPlkfz8Oas4zN933855d68
daTuAnkntnzYxUdj3p+Tp4sp2Oyr3vHTSYAA1m6dedl8pLGWOLC7KWw4/feA
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
9CFnqavc2geucusQ8t+c/z+u7KGd
         "]], {}}, AspectRatio -> 1, Frame -> True, 
      FrameLabel -> {None, None}, Method -> {}, 
      PlotRange -> {{1., 10.}, {0., 3.1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}],TemplateBox[{
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{
            RasterBox[
             NCache[{{0}, {
                Rational[1, 200]}, {
                Rational[1, 100]}, {
                Rational[3, 200]}, {
                Rational[1, 50]}, {
                Rational[1, 40]}, {
                Rational[3, 100]}, {
                Rational[7, 200]}, {
                Rational[1, 25]}, {
                Rational[9, 200]}, {
                Rational[1, 20]}, {
                Rational[11, 200]}, {
                Rational[3, 50]}, {
                Rational[13, 200]}, {
                Rational[7, 100]}, {
                Rational[3, 40]}, {
                Rational[2, 25]}, {
                Rational[17, 200]}, {
                Rational[9, 100]}, {
                Rational[19, 200]}, {
                Rational[1, 10]}, {
                Rational[21, 200]}, {
                Rational[11, 100]}, {
                Rational[23, 200]}, {
                Rational[3, 25]}, {
                Rational[1, 8]}, {
                Rational[13, 100]}, {
                Rational[27, 200]}, {
                Rational[7, 50]}, {
                Rational[29, 200]}, {
                Rational[3, 20]}, {
                Rational[31, 200]}, {
                Rational[4, 25]}, {
                Rational[33, 200]}, {
                Rational[17, 100]}, {
                Rational[7, 40]}, {
                Rational[9, 50]}, {
                Rational[37, 200]}, {
                Rational[19, 100]}, {
                Rational[39, 200]}, {
                Rational[1, 5]}, {
                Rational[41, 200]}, {
                Rational[21, 100]}, {
                Rational[43, 200]}, {
                Rational[11, 50]}, {
                Rational[9, 40]}, {
                Rational[23, 100]}, {
                Rational[47, 200]}, {
                Rational[6, 25]}, {
                Rational[49, 200]}, {
                Rational[1, 4]}, {
                Rational[51, 200]}, {
                Rational[13, 50]}, {
                Rational[53, 200]}, {
                Rational[27, 100]}, {
                Rational[11, 40]}, {
                Rational[7, 25]}, {
                Rational[57, 200]}, {
                Rational[29, 100]}, {
                Rational[59, 200]}, {
                Rational[3, 10]}, {
                Rational[61, 200]}, {
                Rational[31, 100]}, {
                Rational[63, 200]}, {
                Rational[8, 25]}, {
                Rational[13, 40]}, {
                Rational[33, 100]}, {
                Rational[67, 200]}, {
                Rational[17, 50]}, {
                Rational[69, 200]}, {
                Rational[7, 20]}, {
                Rational[71, 200]}, {
                Rational[9, 25]}, {
                Rational[73, 200]}, {
                Rational[37, 100]}, {
                Rational[3, 8]}, {
                Rational[19, 50]}, {
                Rational[77, 200]}, {
                Rational[39, 100]}, {
                Rational[79, 200]}, {
                Rational[2, 5]}, {
                Rational[81, 200]}, {
                Rational[41, 100]}, {
                Rational[83, 200]}, {
                Rational[21, 50]}, {
                Rational[17, 40]}, {
                Rational[43, 100]}, {
                Rational[87, 200]}, {
                Rational[11, 25]}, {
                Rational[89, 200]}, {
                Rational[9, 20]}, {
                Rational[91, 200]}, {
                Rational[23, 50]}, {
                Rational[93, 200]}, {
                Rational[47, 100]}, {
                Rational[19, 40]}, {
                Rational[12, 25]}, {
                Rational[97, 200]}, {
                Rational[49, 100]}, {
                Rational[99, 200]}, {
                Rational[1, 2]}, {
                Rational[101, 200]}, {
                Rational[51, 100]}, {
                Rational[103, 200]}, {
                Rational[13, 25]}, {
                Rational[21, 40]}, {
                Rational[53, 100]}, {
                Rational[107, 200]}, {
                Rational[27, 50]}, {
                Rational[109, 200]}, {
                Rational[11, 20]}, {
                Rational[111, 200]}, {
                Rational[14, 25]}, {
                Rational[113, 200]}, {
                Rational[57, 100]}, {
                Rational[23, 40]}, {
                Rational[29, 50]}, {
                Rational[117, 200]}, {
                Rational[59, 100]}, {
                Rational[119, 200]}, {
                Rational[3, 5]}, {
                Rational[121, 200]}, {
                Rational[61, 100]}, {
                Rational[123, 200]}, {
                Rational[31, 50]}, {
                Rational[5, 8]}, {
                Rational[63, 100]}, {
                Rational[127, 200]}, {
                Rational[16, 25]}, {
                Rational[129, 200]}, {
                Rational[13, 20]}, {
                Rational[131, 200]}, {
                Rational[33, 50]}, {
                Rational[133, 200]}, {
                Rational[67, 100]}, {
                Rational[27, 40]}, {
                Rational[17, 25]}, {
                Rational[137, 200]}, {
                Rational[69, 100]}, {
                Rational[139, 200]}, {
                Rational[7, 10]}, {
                Rational[141, 200]}, {
                Rational[71, 100]}, {
                Rational[143, 200]}, {
                Rational[18, 25]}, {
                Rational[29, 40]}, {
                Rational[73, 100]}, {
                Rational[147, 200]}, {
                Rational[37, 50]}, {
                Rational[149, 200]}, {
                Rational[3, 4]}, {
                Rational[151, 200]}, {
                Rational[19, 25]}, {
                Rational[153, 200]}, {
                Rational[77, 100]}, {
                Rational[31, 40]}, {
                Rational[39, 50]}, {
                Rational[157, 200]}, {
                Rational[79, 100]}, {
                Rational[159, 200]}, {
                Rational[4, 5]}, {
                Rational[161, 200]}, {
                Rational[81, 100]}, {
                Rational[163, 200]}, {
                Rational[41, 50]}, {
                Rational[33, 40]}, {
                Rational[83, 100]}, {
                Rational[167, 200]}, {
                Rational[21, 25]}, {
                Rational[169, 200]}, {
                Rational[17, 20]}, {
                Rational[171, 200]}, {
                Rational[43, 50]}, {
                Rational[173, 200]}, {
                Rational[87, 100]}, {
                Rational[7, 8]}, {
                Rational[22, 25]}, {
                Rational[177, 200]}, {
                Rational[89, 100]}, {
                Rational[179, 200]}, {
                Rational[9, 10]}, {
                Rational[181, 200]}, {
                Rational[91, 100]}, {
                Rational[183, 200]}, {
                Rational[23, 25]}, {
                Rational[37, 40]}, {
                Rational[93, 100]}, {
                Rational[187, 200]}, {
                Rational[47, 50]}, {
                Rational[189, 200]}, {
                Rational[19, 20]}, {
                Rational[191, 200]}, {
                Rational[24, 25]}, {
                Rational[193, 200]}, {
                Rational[97, 100]}, {
                Rational[39, 40]}, {
                Rational[49, 50]}, {
                Rational[197, 200]}, {
                Rational[99, 100]}, {
                Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
               0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
               0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
               0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
               0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
               0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
               0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
               0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
               0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
               0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
               0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
               0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
               0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
               0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
               0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
               0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
               0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
               0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
               0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
               0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
               0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
               0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
               0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
               0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
               0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
               0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
               0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
               0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
               0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
               1}}], {{
               Rational[-15, 2], 
               Rational[-225, 2]}, {
               Rational[15, 2], 
               Rational[225, 2]}}, ColorFunction -> (Blend[{
                RGBColor[0.293416, 0.0574044, 0.529412], 
                RGBColor[
                0.563820859082933, 0.527565423056382, 0.909498741130694], 
                RGBColor[0.762631, 0.846998, 0.914031], 
                RGBColor[0.941176, 0.906538, 0.834043]}, #]& )], 
            StyleBox[{}, Antialiasing -> False], 
            StyleBox[
             StyleBox[{{
                GrayLevel[0], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}]}, {{{
                  GrayLevel[0.4], 
                  AbsoluteThickness[0.2], 
                  LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -65.23109243697479}, 
                    Offset[{4., 0}, {7.5, -65.23109243697479}]}, {{
                    7.5, -17.962184873949575`}, 
                    Offset[{4., 0}, {7.5, -17.962184873949575`}]}, {{7.5, 
                    29.306722689075638`}, 
                    Offset[{4., 0}, {7.5, 29.306722689075638`}]}, {{7.5, 
                    76.57563025210085}, 
                    Offset[{4., 0}, {7.5, 76.57563025210085}]}}]}, {
                  GrayLevel[0.4], 
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  LineBox[{{{7.5, -103.04621848739495`}, 
                    Offset[{2.5, 0.}, {7.5, -103.04621848739495`}]}, {{
                    7.5, -93.59243697478992}, 
                    Offset[{2.5, 0.}, {7.5, -93.59243697478992}]}, {{
                    7.5, -84.13865546218487}, 
                    Offset[{2.5, 0.}, {7.5, -84.13865546218487}]}, {{
                    7.5, -74.68487394957982}, 
                    Offset[{2.5, 0.}, {7.5, -74.68487394957982}]}, {{
                    7.5, -55.77731092436974}, 
                    Offset[{2.5, 0.}, {7.5, -55.77731092436974}]}, {{
                    7.5, -46.323529411764696`}, 
                    Offset[{2.5, 0.}, {7.5, -46.323529411764696`}]}, {{
                    7.5, -36.86974789915966}, 
                    Offset[{2.5, 0.}, {7.5, -36.86974789915966}]}, {{
                    7.5, -27.41596638655462}, 
                    Offset[{2.5, 0.}, {7.5, -27.41596638655462}]}, {{
                    7.5, -8.508403361344532}, 
                    Offset[{2.5, 0.}, {7.5, -8.508403361344532}]}, {{7.5, 
                    0.9453781512605102}, 
                    Offset[{2.5, 0.}, {7.5, 0.9453781512605102}]}, {{7.5, 
                    10.399159663865552`}, 
                    Offset[{2.5, 0.}, {7.5, 10.399159663865552`}]}, {{7.5, 
                    19.85294117647061}, 
                    Offset[{2.5, 0.}, {7.5, 19.85294117647061}]}, {{7.5, 
                    38.76050420168068}, 
                    Offset[{2.5, 0.}, {7.5, 38.76050420168068}]}, {{7.5, 
                    48.21428571428572}, 
                    Offset[{2.5, 0.}, {7.5, 48.21428571428572}]}, {{7.5, 
                    57.66806722689076}, 
                    Offset[{2.5, 0.}, {7.5, 57.66806722689076}]}, {{7.5, 
                    67.1218487394958}, 
                    Offset[{2.5, 0.}, {7.5, 67.1218487394958}]}, {{7.5, 
                    86.0294117647059}, 
                    Offset[{2.5, 0.}, {7.5, 86.0294117647059}]}, {{7.5, 
                    95.48319327731093}, 
                    Offset[{2.5, 0.}, {7.5, 95.48319327731093}]}, {{7.5, 
                    104.93697478991598`}, 
                    Offset[{2.5, 0.}, {7.5, 104.93697478991598`}]}}]}}, {
                 GrayLevel[0.3], 
                 DynamicBox[
                  Directive[
                   CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                  ImageSizeCache -> {{
                   4.503599627370496*^15, -4.503599627370496*^15}, {
                   4.503599627370496*^15, -4.503599627370496*^15}}], {{
                   GrayLevel[0.3], 
                   InsetBox["0", 
                    Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    Offset[{7., 0.}, {7.5, -65.23109243697479}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    Offset[{7., 0.}, {7.5, -17.962184873949575`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.3\"", 0.3, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    Offset[{7., 0.}, {7.5, 29.306722689075638`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    Offset[{7., 0.}, {7.5, 76.57563025210085}], {-1, 0.}, 
                    Automatic, {1, 0}]}, {
                   GrayLevel[
                   0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, {}}}}, Antialiasing -> False], "GraphicsAxes", 
             StripOnInput -> False]}, AspectRatio -> Automatic, Frame -> True,
            FrameStyle -> Directive[
             Opacity[0.3], 
             GrayLevel[0]], FrameTicks -> False, 
           ImageSize -> {Automatic, 225}, PlotRange -> All, PlotRangePadding -> 
           None], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          StripOnInput -> False, LineIndent -> 0], StripOnInput -> False, 
        FontFamily -> "Times", Background -> Automatic]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.293416`", ",", "0.0574044`", ",", "0.529412`"}], "]"}],
                     ",", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.563820859082933`", ",", "0.527565423056382`", ",", 
                    "0.909498741130694`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.762631`", ",", "0.846998`", ",", "0.914031`"}],
                     "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.941176`", ",", "0.906538`", ",", "0.834043`"}],
                     "]"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "2.578752217601666`*^-290", ",", "0.4764769055166953`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[{
       GraphicsComplexBox[CompressedData["
1:eJxl3M2K3dgVxfFT9x5Jx9g05a/290c5foPOvM4z5BEC6QzzPMmbeJbphWTU
o5oJBIECDyQkhISECMbsfVj/qolZXfv8jruXrbtVhNz89R9/+dsphPDvKoQf
v/786m+DfPW3//rnj69vt5ovnv/824+vP/D9u1v1Wsx3nv/++4+v/+H8vef/
/ufH13d4PeYH+CPOT7hvhrPAW+Ft8HZ4B7yQdb7kn/5V1vMnzz/vO2f1IrwI
r4JXw2vgJXgp/yb/3UKwbP1rvni2/vX7d7fqtZjvPFv/ev7es/WvXo/5Af6I
8xPum+Et8FZ4G7wd3gEvZJ0v2frX86es953RR4QX4VXwangNvAQv5d/l70UI
lq1/zRfP1r9+/+5WvRbznWfrX8/fe7b+1esxP8AfcX7CfTO8Bd4Kb4O3wzvg
hazzJVv/ev7k2fpXL8KL8Cp4NbwGXoKXsj73QrBs/Wu+eLb+9ft3eI62mO88
W/96/t6z9c/nss4P8Eecn3DfDG+Bt8Lb4O3wDngh63zJ1r+eP2W974w+IrwI
r4JXw2vgJXgp6+daCPrv+Q3/3hfP1r9+/w6fky3mO8/Wv56/92z983NX5wf4
I85PuG+GtzzoVb0N3g7vgBeyzpVs/ev5U9b7zugjwovwKng1vAZegmf7gO0p
/pV1/7N88az7n33/zrP1r/OdZ93/7Pw9/jt+h9djfoA/4vyE+2Z4y4O/t+pt
D3pV74BXftX9z/yrrOdPnnX/s3PRs+5/5lWedf8zr/H885fStz7//fcV9Dn1
Dc+ti2d9/l95/+q1mO886/P/yvvXvyff4fWYH+CPOD/hvhne8uC5rN724O+t
escte9X5kvmrPv+vsj7/zYvwIpwKXg2vgZfgJf65C/r7+IbPpYtn61+/f4f3
mBbznWfrX8/f4zn4/cF7kc4P8Eecn3DfDG958Lmr3vbguazeccu/tzofHvSq
509Z7zujjwgvwqvg1XAaeAle4nMl6J+zb9g7Lrf6+/gD37+7Va/FfOdZP/+j
96+fc9/h9Zgf4I84P+G+Gd4Cb4W3PfjcVe+AV57T+vn/8O+xfv4/7Nn6Vy/C
q+DV8Bp4CY69D/jnRrCs73+19/+7/Dn7A9+/u1WvxXznWd//au/fsr7/lZ9r
6PwAf8T5CffN8BZ4K7wN3g7vgBeyzpes73+196/3ndFHhBfhVfBqeA28BC/5
Pw/ylbx/zRfPuv8l71+9FvOdZ93/kvevf06/w+sxP8AfcX7CfTO8Bd4Kb4O3
wzvglT1L9z/uWQn7Hz+HzXv491a9Cl4Nr4GX4JnzyH7/wbLuf4+8f8u6/z3y
/tVrMd951v3vkfdvWfc/83rMD/BHnJ9w3wxvgbfC2+Dt8A54Iet8ybq3PcL+
9wif6+ZFeBFeBa+G18BL8OzPyWPv37Luf4+9f8u6/z32/tVrMd951v3vsfdv
Wfc/83rMD/BHnJ9w3wxvgbfC2+Dt8A54Iet8ybr/Pcb+99j7Vy/Ci/AqeDW8
Bl6CZ8+BJ96/Zd3/nnj/lnX/e+L9q9divvOs+98T79+y7n/m9Zgf4I84P+G+
Gd4Cb4W3wdvhHfBC1vmSdf97gv3vifevXoQX4VXwangNvATPPjd+8f4tW/+a
L56tf/3+3a16LeY7z9a/nr/3bP2r12N+gD/i/IT7ZngLvBXeBm+Hd8ALWedL
1vf0X7x/ve+MPiK8CK+CV8Nr4CV4tg9ce/+Wdf+79v4t6/537f2r12K+86z7
37X3b1n3P/N6zA/wR5yfcN8Mb4G3wtvg7fAOeLbvXXv/6l9lPX/yrPufeRFe
hFfBq+E18BI8ex6U/i3r8/8az/9rPP+v8fwv/et851mf/9d4/l/j+V/61/kB
/ojzE+6b4S3wVngbvB3eAS9knS9Zn//XeP5f4/lf+lcvwqvg1fAaeAme7YNP
vX/Luv8/9f4t6/7/1PtXr8V851n3/6fev2Xd/83rMT/AH3F+wn0zvAXeCm+D
t8M74IWs8yXr/v/U+9f7zugjwovwKng1vAZegmc/D3jm/Vu2/jVfPOvPf555
/+q1mO88689/nnn/lvXnP+b1mB/gjzg/4b4Z3gJvhbfB2+Ed8ELW+ZKtfz1/
8qw//zEvwovwKng1vAZegmfvA8+9f8v6/vfc+7es73/PvX/1Wsx3nvX977n3
b1nf/8zrMT/AH3F+wn0zvAXeCm+Dt8M74IWs8yXr+99z71/vO6OPCC/Cq+DV
8Bp4CZ7tAy+8f8u6/73w/i3r/vfC+1evxXznWfe/F96/Zd3/zOsxP8AfcX7C
fTO8Bd4Kb4O3wzvg2b73wvtX/yrr+ZNn3f/Mi/AivApeDa+Bl+DZPlD6t6z7
X+nfsu5/pX/1Wsx3nnX/K/1b1v2v9K/zA/wR5yfcN8Nb4K3wNng7vANeyDpf
su5/L7D/lf7Vi/AivApeDa+Bl+DZPvDS+7es+99L79+y7n8vvX/1Wsx3nnX/
e+n9W9b9z7we8wP8Eecn3DfDW+Ct8DZ4O7wDXsg6X7Lufy+x/730/tWL8CK8
Cl4Nr4GX4NnPA371/i1b/5ovnvXnP796/+q1mO88689/fvX+LevPf8zrMT/A
H3F+wn0zvAXeCm+Dt8M74IWs8yVb/3r+lPW+M/qI8CK8Cl4Nr4GX4Nk+8Mr7
t6z73yvv37Luf6+8f/VazHeedf975f1b1v3PvB7zA/wR5yfcN8Nb4K3wNng7
vANeyDpfsu5/r7x/ve+MPiK8CK+CV8Nr4CV4tg+89v4t6/732vu3rPvfa+9f
vRbznWfd/157/5Z1/zOvx/wAf8T5CffN8BZ4K7wN3g7vgGf73mvvX/2rrOdP
nnX/My/Ci/AqeDW8Bl6CZ/tA6d+y7n+lf8u6/5X+1Wsx33nW/a/0b1n3v9K/
zg/wR5yfcN8Mb4G3wtvg7fAOeCHrfMm6/5X+9b4z+ojwIrwKXg2vgZfg2T7w
xvu3rPvfG+/fsu5/b7x/9VrMd551/3vj/VvW/c+8HvMD/BHnJ9w3w1vgrfA2
eDu8A17IOl+y7n9vvH+974w+IrwIr4JXw2vgJXi2D7z1/i3r/vfW+7es+99b
71+9FvOdZ93/3nr/lnX/M6/H/AB/xPkJ983wFngrvA3eDu+AF7LOl6z731vv
X+87o48IL8Kr4NXwGngJnu0D77x/y7r/vfP+Lev+9877V6/FfOdZ97933r9l
3f/M6zE/wB9xfsJ9M7wF3gpvg7fDO+CFrPMl6/73zvvX+87oI8KL8Cp4NbwG
XoJn+8B779+y7n/vvX/Luv+99/7VazHfedb97733b1n3P/N6zA/wR5yfcN8M
b4G3wtvg7fAOeLbvvff+1b/Kev7kWfc/8yK8CK+CV8Nr4CV4tg+U/i3r/lf6
t6z7X+lfvRbznWfd/0r/lnX/K/3r/AB/xPkJ983wFngrvA3eDu+AF7LOl6z7
X+lf7zujjwgvwqvg1fAaeAme7QMfvH/Luv998P4t6/73wftXr8V851n3vw/e
v2Xd/8zrMT/AH3F+wn0zvAXeCm+Dt8M74IWs8yXr/vfB+9f7zugjwovwKng1
vAZegmf7wEfv37Lufx+9f8u6/330/tVrMd951v3vo/dvWfc/83rMD/BHnJ9w
3wxvgbfC2+Dt8A54Iet8ybr/ffT+9b4z+ojwIrwKXg2vgZfg2T7wyfu3rPvf
J+/fsu5/n7x/9VrMd551//vk/VvW/c+8HvMD/BHnJ9w3w1vgrfA2eDu8A17I
Ol+y7n+fvH+974w+IrwIr4JXw2vgJXi2D3z2/i3r/vfZ+7es+99n71+9FvOd
Z93/Pnv/lnX/M6/H/AB/xPkJ983wFngrvA3eDu+AZ/veZ+9f/aus50+edf8z
L8KL8Cp4NbwGXoJn/3uQ0r9l61/zxbP1r9+/u1WvxXzn2frX8/eerX/1eswP
8Eecn3DfDG+Bt8Lb4O3wDngh63zJ1r+eP3m2/tWL8CK8Cl4Nr4GX4Nk+WPq3
rPt/6d+y7v+lf/VazHeedf8v/VvW/b/0r/MD/BHnJ9w3w1vgrfA2eDu8A17I
Ol+y7v+lf73vjD4ivAivglfDa+AlePZ5cOP9W9bP/xt8/t/g8/8Gn//mtZjv
POvn/w0+/2/w+W9ej/kB/ojzE+6b4S3wVngbvB3eAS9knS9ZP/9v8Pl/4/2r
F+FFeBW8Gl4DL8Gz94HSv2V9/yv9W9b3v9K/ei3mO8/6/lf6t6zvf6V/nR/g
jzg/4b4Z3gJvhbfB2+Ed8ELW+ZL1/a/0r/ed0UeEF+FV8Gp4DbwEz/aBL96/
Zd3/vnj/lnX/++L9q9divvOs+98X79+y7n/m9Zgf4I84P+G+Gd4Cb4W3wdvh
HfBs3/vi/at/lfX8ybPuf+ZFeBFeBa+G18BL8Ox90H//wbK+/5f+Lev7f+lf
vRbznWd9/y/9W9b3f/N6zA/wR5yfcN8Mb4G3wtvg7fAOeCHrfMn6/l/61/vO
6CPCi/AqeDW8Bl6CZ/tA6d+y7n+lf8u6/5X+1Wsx33nW/a/0b1n3v9K/zg/w
R5yfcN8Mb4G3wtvg7fAOeCHrfMm6/5X+9b4z+ojwIrwKXg2vgZfg2f8f5J+8
f8vWv+aLZ+tfv393q16L+c6z9a/n7z1b/+r1mB/gjzg/4b4Z3gJvhbfB2+Ed
8ELW+ZKtfz1/ynrfGX1EeBFeBa+G18BL8GwfKP1b1v2v9G9Z97/Sv3ot5jvP
uv+V/i3r/lf61/kB/ojzE+6b4S3wVngbvB3eAS9knS9Z97/Sv953Rh8RXoRX
wavhNfASPNsHvnr/lnX/++r9W9b976v3r16L+c6z7n9fvX/Luv+Z12N+gD/i
/IT7ZngLvBXeBm+Hd8Czfe+r96/+VdbzJ8+6/5kX4UV4FbwaXgMvwUv5/xWW
PiU=
        "], {{
          GrayLevel[0.8], 
          EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[CompressedData["
1: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
YizeI76LThpplf8Tje7/QcQ4O0P+fsTuR8xeJX+a2gPi+7CR2LP3SIxefd+h
eYDmF3RZnWVz9m/E3vs36qmcX8Sze1L+Gswlw1cupxd/VzH2N5w9hDmd7+/0
JPcs/ou64hSeMau+f+i9CY8pPTP50n2P5hEzk9ObAs11+lW/gOYaa99knt7p
ESxeYN3z7Ocx+Vj9Mbz+CHMReC3qrJhn9X8jcb4vEuu8xJ6+DbH7grMXPdOo
/l/E5jyJTtyl8YwHserBvfJPeVbTzNg3J1afpC7/D+JU6G6ybk7uJRd3lJM1
n6LX59sKWOMeTEbpye2soLNC3F1aNGlgPUSXmJ8bealLJybVn4daAc/uIT9z
0qGJso4092E5HbMS0Z/RM2YewKtq+Vg3H5zfpy+9swyeaWN+xgTxA76RJPQm
5Zkf/wF8noUJ+Rnh9ixxct5HZ/O0ZwxJm9kzPv9GkwxdJjTSPmTe05xrCs5W
mszo8tObFFb/YXYR2NMdZ4G/R1hmcoX5ZgrBQ2H6UpEvTC0la2uGvv9/eSrW
nP9gNRtrNoT5+s56OOuJRvXsaFKzt1LccUlnxWGuGPVixBH6n/HM5GenVhxG
9c1UhVExUs1ZdVhVvQTaEsTS5kRfDTarYrmoaeYbztqyv7TMS8OckvTr+3uB
dXMxLy3vJs5qeMZmbnKlyVenlhuuajqr5Rl76dApn5daDfw8xHnJ6dcp/Xqj
33uJ4bKecVPbM6bESHm4eZqZtcjXQpefPvWXwS/nxfkrx4yXmFmbfEZqytXx
jPMKrFWeM2zLuape1zOmMqGLsfics4r010FTgbw0uu/Kzqo4q+cZm3XpzYyu
rhdnVrOyUhePvZz1JlfJMxYrEVekT7wW4dnAM05jcVE09YizM6MycyoTp+fe
yrBuUWYV4OzqcB5vORvt7HnPmNZ7NfbinOrcxJT4a0Qu9l01JNacdpxtI/qL
M+sZ9liSmap1cNbRM2aaUHuZZ2P89p7xq7nViTvgVyNuh691SzGrNH5JYr1/
Bs6jOjNi6zZF35A7aYRe+VfYY4z3zs66eMabamXR1qJWG1/6TvidqL2KXn1i
tJmz5tyB7qKrs9e5gzas8xIzu+J3YU4zZpRjhthu4RmjsZnq6UZcAY3u+B1n
77KXV5khXXfPmH3NM4ZakatHXky3JN+DfHfyylWkT/2VyVUiXx99D/bSgj79
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
4lFci9dG1BviNybWfbXzjdMmvrH1MvUSaEriK9feN1bbMb8tvSWpv0ytGnkx
0dTZK1hZcqXoaYKvp76N6vS2x+/gG79NmFOa/tLE1dFK19E3TqXvhK9cD860
u2/sqNbZWQvf+Gju7FX2pj128Y272ui64Ncilt/MN7bL0tsMvyu96imPphlr
1+NOa7E37aMOPd3wXyJuzt7K89Ren0PXnTl1iOuia0afdC2dtaKvJbnYGdUg
Vr0iM6Ywtz7npX95Sny1dtaGfD1qr/nGXyt0YrgBmp74ldBV5sz0rhN8Y32G
s5nUNFvMvs6zDfMaMuf5BHX9THnHt59h4k5cv8U6rZkntvv4xmIf4t70jvGN
zbbE7dD09ePsyu/nbKxvXI3B2qNXrQna/vixnOKmnHN7ZnTgOY536s2eFI/n
PjpzNhN9408zBjBvAHHsm+yLthP94/E7stY4/IG+cRn77gaQG0Q+VlfcjLUn
+cZtZ2L5YmOyb3w0RzuYXFd6JuF3Yd5gdEN84685NpjccO4sxs80Z9PRDvWN
V6031Tcmh1Ibgj/Mj/PdklgzetDTjf1MRjOMNaei6c6d6Sxns4cezBAXYuod
9jjCj38DI52NQq/99qI+MoGmNbHqM9DM4N7li/stzrayN30nFZnzGvt80zfe
tZZY/8S3X7N70y9mZ/FMGPdFr1/bx9D/Ovuaxbv25R3fRbPKNz5XYmPJ90M/
B+tPbq6zeb7xNI7+1fhjifujG0BtjW+czqWmeQucLfSNiYFo56GdgH4gufnO
3iOv+kTitfgTiDVzEPpxrD0e3TrfOB2EbjC9a8kPIbeQu1jGPQ4ht4gZk9Fv
cLbRN6ZUG4pW3K6nvh69+hajWYRmMvX57Gkg+Q3MXMY+lrLONPKb8Dcyc4kf
53sJ+qX0DseGUZtO7yZ8PTf79vu/2K+risXnDPaw3I9zP5JYLP7P2U9oZ6If
RX0F9iY5sf6ls6+cvU1+Bfn36d/uGx9zuLeDzg75xq00s1n3M984nUXf+9g2
NLPxtzNjFT3iXd/0J2i2s9ZnaFZyP4s5r9XkNUO8fOgbB9rjDj/O5QfOdqLX
ftdQ/yCBZh6x6ofR6Pke/hH8w9zLZs5zB+tpr2vRHGEvC1h3Lbmj2DHfeFtL
vA79Lva/k17t63PfGDxGTZrdxOvpXUhuEc/F+B/hKxdjXfNO+MbVcTR70H1B
biPvpXf6lvoSNBvQSbOU/B76NpHf52y/b5xtJn8CX8+T9Kpvr28ML6VvGc/l
PJei2UzfFp5f4u9gj7q7FfTtp74Vzce+MX0Ae9uPsy3exaa+FT+w7+VrZ9+Q
V3zZNwa/Jqcecf4JfYpvOfuD/E/oxZLYvIIdZJbOdRtrrGC/B6gdpHc79VM8
t7H2IWb9zHtvR6O/56a/d6y/r6faVd9Y1dl97+yCb1zpnE7Te5pYDIrPX7Aj
9F/F1xxxc83Z787O+MbrTuw0uaP0/+rsOzTKn/ONM3F41jeGP0Qv7TH0Z8nv
RnOWNbX2b2h/Qx+bdY7c5+QPcTaxPWu/4nUD8ReY8sd5XsfXGe3jzM5zbjFG
9xB/RE3xDfrUfwL/BvWP2NtJcjd9Y0SsfJkg/pI1f4CDk8y6gX8TjeoX0fxA
j/b7n7MfnV2idjGBr+cBnh/ja31xKpbFrhcY97JnneUIbP9/874x/u7Qc5tY
+iAwZm9T09wwMD5VO0XfXe4kGhhTV/B/pvYt6wT0XkajWdLdQyPtT6x9mRmJ
mKm6dKfZzx32qdyffpzR08RJXF/SwJiSJQ4sd4b6few7+qT5Bd0D9/zLN/4e
oJFW82KcJnd+isDYOIdWPeJNTCcLbJZmJmIvyv9G7RrzEqG5yhzNeMj9nMf/
nR6t+ZD8OfLJ2YP0/3CnOQM7W513ysBY014vUJfuMZw9oibNdZj7h7xYecHZ
i4FxqlmpAqv9gFb5G9R+YK4Yza7/WEZg/F4i9y/1f4k164nAvhNpxbn0yom1
W8xPFcR//qqWOrCZ/6L/jns6i0b129xZOuenh/ucnIlqTwZxdp9yfhq+kRxo
VH8KzZP0aG4uzlaz7sLhU/R6fGNpYFr1vHCQh1zawPhLS5yGb0Bzc2N54CJK
HPNDdPdhWO+mOemYWdE9szrLwozE9Cp+LrB6BvhOz/cgjfZYnHcu5qxAYLzl
d5aPZ1L0+fA1Q7PEa370yj8dGIviNJPzMwfGU3I0BeBYz4LwnJG+TPTGZmSi
V+tkZK3k9KXgWQj/Id9ORvhUn9YuzDdQiLPJFhg3qcgX5nwew3wqckXQK58F
jtWXjVzWBHOKwPGTnKN4eCYwpvUd6Pt5w1lb9pGSPf/HPGmKBsbXE+w/M/tK
TU33kgO+XiBfjDWrsF5sraqB8ZmDOCfnW85Z+cCY0x5LsN8SxLnhqxqWi1lV
8XNy/+KlprOSgfGXBitBLjf91Z2VQqN8mcDuMj350oGxmxttHrSlyKdDU4b1
tG4NtDXQp6Oenlxe8oof8DMgH/21AmM4L++Rj1x+nrXxK3BeOquynFuM0YzE
GahlpK8AvS/h16aegf0VpFbHWd3AGCuUIJafibUzoy9AT0F0hag/hyYTe1Ku
HjM1Kwt16YpQq49fmLibsynOugfGcqXAWKxEXJE70502dtYgMN6KMqc+vvSV
6a2PTvns5MVmG2fP44tHfQdVeb7lbDSzGwbGYzHmNEQv3vX9NKLekPnZWENz
2jGzOLoSrPkM6zbiPZRvHxif7bBq9L4cGHslscbkxFuHIM5ee+ImzpoGxmgT
emP6auheDl3eWUlnnQLjsGNgbIiLV511dtYlMGbKMPMVdDVZtwzrNKWnDJqy
xGKyFvpO+J2YXYtnbXTNnDV3NsrZ69yP1n8JTVd85cRWi8BYKkdfeZ4V8MXA
a9xFHXq74uvZjRkV6FMs7sSqmBGPPbB61CqyZkvmdEPfHU1dNKq3Yn5Leuoz
qye1SmhLcU+l2W8l6q9yJnq/KrxHazSticVc78A40pk9z7n1otaAdXsGcXZ7
0VOFOW2o90Ij7t9x9q6zMYHx0o78GHyt1ycwFsW5voO38EejUb0vmj70aN2x
zNSsl6lLJ3bFVg3yyvXDmpDTPqezV+X6B8Zef2JpxwfGmGaNI+6IbmBgfEo/
gFwHdDHNAHRic4Kzic4GORvMfYxwNpKzG8Q9xfSd6BlI/hWeg4I4382Y1ZnZ
XXhOwm/D7JHM6sQ7qN4VjfgQV8MCY0xzhwbG4+TAfoZ2Qz8ZzVB6pgXG4VR0
enanPgzNZHonUe+B5jXevzVr6j2GOBtOrRU2jNxQdEO4u2ncn2wG9ziC3uFo
eqDTz3P9zNbvPd4MjO9RnO08Z/OdzeUu53BuI9Fodm/mzwqMv5nkZuD3odaX
fCy3gvU0R9/AJ84+DYzr2Dcxh3XFm/gR0+OINW82s2cTq28lvavQr6RH8Wp6
ZzN7JRrpF/DO89mDvrN3WF/vP4D+NYFxMpfzGcD81eTF2HvO1jJvADrlJ1Bb
gz+eeAK5cexHex3EnnT36wJjZRLn0B7dRNaZxHMd/iDWXoAtZI5sUWCcrGfm
OvILqVV3v1a1d9YhtHgo+ino15NbHMT5W+JsqbMNzjYGceY34A9HK92mwLjb
yIwl1A45O8w5aNYI+qajV98y8kvJK7cZ2xIYc9OJZ6BfHhivG5mj/bwdGHti
cBT15cyYSe8ocivIqbY1MMbExSfklRODYvd/zn5y9j65mF61leS3Bcafcp+R
n0VtNu+3jD3NIace8bYjMJbmkNvOjFXMOcC7raA2F63YPMgZH0T/GfPmol1N
/iD+Ie5Cmg9Ydx7+TmdHAmNXdybGPgyMoXnU5/NcgL+WnqP0xL6DD9HsRPMe
OrEh/j7C13MJ+l1BnNeFxGuZLZ6PBcbpOjSq72bGIvyj6KTZgP5zfD2/cHbJ
2cecq+LjgXG0z9n+wPjQzD3sTdyJyRPYJnqO46t3Kfq9+EuIN9Nzktoy6mLo
q8D42MA+NqL7MjAuNxNvoW9fEGd3OXvVe7zNu3zJ3C1ol7HmVmpf0bsf/eec
j85LfHvuZ4Pv7BZa9XzNHhVfDoyjz8ipto3ey+SV+yaIc7yN+FN0n/Guv3N+
26mfCozNK85+DuJMX6G2A62e3wbGq3RXA+PuEPFheg6yp51oT9N3mviXwHi8
ih2hdyeaM86+C4xL+Ufp+RX/CPGH6HbxPBvEudxFfJS+Yzx/w/+W99H7XeM+
fuNsrnM+5wJjcTd2ltwZ1t7JeV6j7wvmXGPW56ylGecDY/I88Tn874M4u3uI
bwTG7XXsBPu5GRgfYuNCYJyp7yQ9N/FPEO9lXkz7Q2D8/UCsvLjQz1jxdzsw
hv4IjFFpLzr7MTDWL9F7MYhzfJH8V+xNvf8503+w90f2c5M9i+9nneUITf8H
693n/s4Qax/iUkxFQ2PkJ/ovkw9Dq51Ce4ec+AtCM/mXmXcH3V3u/hR2h5y+
kU84C5/+y2jvBcal1kvEfu5Ru4v/ZxBn9zRx4tA4VY/2fIU9nqF+n5o0mqmf
yfp9gH6e/kp/EmcPOB/pFScNjS/lVBOXOtOc7Fts/eXsIfW/gji7Z4l/ZdZv
6M5TF8fiN5mrpQyNoxSh1f+Gp7/RP0QvbXJM2uvkk+Orrpna9wVm/MOcf4iT
hvHvJgXrqvcCmkfOUofGzBOhcfgY/sSX9NrvYxiVPlVo2lv0/AGjN6nJv8SM
f7n3HJzhJXJi+Um+Da3/iPnaV3YXPxMa69L9yLyb7CUVa6am/zaz7rCWl+B7
eMHZi6HVnwrjXOr5FGdbwFlB7jlkn7nwlROHaUNj6y59abB75MRDhtAYiNKb
i29Jz9yhzZA+DXEeuBcvYjIvlpjafXhOx5zc6POgSYRG9fTMT8c+kzArH7UH
cP6Y87/IfpVPz5nqbAuHxp/eI2Nomoy8l84qGedVAD8/lozvJwlryn86NBYf
YhnJ5aNHmkxolM8CZ2JB+cyhMZqc+0mBNlMYZ1fPzOxb+y+EthD6R9SzkEtJ
PhU9RZxlZV1p9P3+ws+IVNSf4FkUP3sCNtWbLYwzrWc23rEW76m+1PQWwy9K
fzbmVXH2fGjcp4HVEs6Kh8au+sSzuH6BGcWoPYlOPWK9amjcyn/DWVvqJdDk
oCZNWWfluONqobFalT1Irz8PLAVb8nOjq46fizgtunQ8S4dxLtMR56YvD88a
+FWZo/3UDI3bGpxfbc6wTGgspsdKkyvJ2mk485r05WNOTWblZa0MvHNGnhmY
o78G1O8bN8BiRs5FZ9yQ83uaXHn2VYC91XFWNzS+VMuEVhy+RL2+swbcewU0
5dEUQJeJWmbydZgpxsRmJdYpTL4efl36ngvjrMuvSE8W/CzUVStCbz38euzx
JfZTm97KYfz70FN8N+Rc9D5iNxs6cfaWs9HUivG+2alX4ZmNmW2cvR4a96o9
g7YIe1GvOBXvb3DXjUP7s+oXWa8qz3b4jbirhvjSxzguQVycmuL29Km/Gr5y
sX+vTP9OWXVqyteLunNzVjdqf+7QMTS+mjhrGhr7rzlrzbuWIf8Kz9JoyuAr
p/kdmPMqNenFbidnnZ115W66hMatdOXwyxDXRFuLZxfuMRbXZl5N9q3+Zs6a
09+MXMcw/t10Yd3a1KQVtz1CY6Z7aOy1CI2rOui7kqtAj3R1qXenV3E3YuUr
MqMlZ6czbENeuVbOeoXGVn3mVmA/9dlTT3SV6KvDXrqhqZdA14tcJe6sMs9K
zOgdGke9sIasrbOc4Gwi+4vxW5lYvvjqExpvb4bGeRtm9KYuZvqHxoAYFuOx
7+cdZ+8yoxE9yo8JjVXxIh7HYu2pab2+zvoxczT6MWjaoVH9Zeb3JdeBWeOo
N0HTgvN/jv02od6Ns53MOwxwNhDNAHI6q06c1wT88Zj8jqw7Dl/9YjH2vQzE
H0ePNIPQqDaE/TUnPzg0jjtzP13QDgrjrDdDN5n9T0I7CX1z6kPIdSX/qbP/
OfuJd1f/FGcznW11Nou8ct15TsXX/lfzDsND46wVprMd5mxaaGyqZyg51XpS
m+5sBL2aMSM0LnpRm4EvzUh0PZk5DX86GtVbo5mKpjvv0ptZbdCMZJ/DWLcN
uVGhsd0GX0yIpdmcRR/mieNPOD/xKMbfoT6LnlWhsbcSvZ5jqM9GM9fZvNDY
Wolemv7UlF/h7G32NYdaP2w2ud7sqw/3soq7ka3hjubSOwfNWHQDWUf7eC80
ptdwrjrjTWhUn09tAjPXOlsXGlOqDUI7kVmqb3C2kTtZgGY+mgnoBlEbTH4t
MxeHxs0i1plMfj3+OvoWhnG+F6JfRO8QbDC1KfSux1/PHqVtgXYoaw8jp7gl
ZzGN9xlOfYmzZaExupTaNN53OPWlzFtCz3RmbaY2Au0U9jKVnOaKywPOPg6N
g1HkllNfTqxZW0LjXN/uTOIt+DNYdzO+uHqTeaOYo5xYFcvi+/3QeNW8P5x9
5exWaNx/Fhqzs9DN5l4/cLYzNM62OdtOfVsY53U28bvMWoluLnVxKzYPOjsS
GiOHqe8IjcUdxNvRS3sIk3YN+UP4B5n5Gfucx1538JxHbRX7Ocy6a3ifBfSt
ZU9HnX1Ifif596h9HhpXx6hLt5BY+XXoj+IfpSb/B2ePnV10tjs0bsSyuPgi
NL7EjFjaQ349a27g+QU9u5jxEXNi/h76pTvOzMXUlD8RGp/HWUv6vZylzvFK
aBxJd5LaMrT7nO0PjafNzDlBfhla/XpzmfNW/5ehcboMXaz3JPkV5DT369B4
Eov6Lt6mvoL6AWpbmXvJ2Y+hfT9bqb1PbSvzxaB4j/1a6LnfC/tRu7dd3N37
rL2Nc9nEuV3hTPQ+26l/4+zb0Ng6Re0g77ud+inmfUPPIWb9TG0H2k/Z02fk
NFe8iplfnP0aGn/KnaZ+mlizrobGsrRHiK/iH2bdn/HPhPbOO7HT5BZxBrtY
9wjzvkMvzW1nd3gf5c8m0GuP4lu8XXP2e2gs7kKn/OfUfsM/Rvw5ud1oz4XG
6fnQuLweGl/HObdv2McXrHOc53X88/Sfw/8+jPMt/4KzG8y8Tn4PtTBqdxRE
4/vQvk7SczM0/vTtXiKvnFgT1/q295O7Rf4H9Pvp+ZgZB8hdRPsV+gvM0r7+
CyP//z/PE9/iVfu6zLon2JPyzzrLEbUZ+jn+NevuY574Evvi/id6LqO7zZne
Jla/fs+jn91jOAudyWXOWXeWLGp3niRqd3c3NC5PYXfIibto1Hj8mfNVfM/5
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
FczYT24f8T7ivZz/22j/Dww0Ntw=
            "]]]}, {}, {}, {}, {}}, VertexColors -> CompressedData["
1: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
im+14rOi4NHPo5XYef1KInOCgde6nTPDnjbDRDn77KvXxVgUcGtty0s6lr6L
fOT5qglPRvuCKvZ8h+ngBEFw2v/Mv213hyj7quohNiZhmfI6Hdp1fVPP/aYg
Y6W6fNP8Bow/dnyv/zkTlBX2FlZKVJzsLh6OkW7ENvqZNbTqT7C3jDkW2UlF
nMO9PJ+dzXBPCn8g/7AImSEyN+940DFYO3FerbANFON53KzYGkROXafwvZWJ
kNfhW2/M74ZTprRouWULbkk+W6lN4eDTupnXgg2paLhwirJ+uBtjXTEBsX/4
CGlYp8f9ScNkMn2CIkdDETvq8iKi88wVjneq3tFRkGqa53WTjo+vwp8ZEU5g
mqu3qEgwkHN/eV/5IgamT286DcLtbWfc7+xjkrxMiRDV7aSjs9p1nzfxn8na
Os1MbzoeGR9/G72McA2/avAL8c8Hb4yemhJuebpLy9VKlYbVSQtMzMhzB7+I
DGpZ0XDbtixjoRUVhULTg6vlhJj723BhCMmh193f719IcuizQoPsBJJDeT5f
v8zuoMIj02xV0T0KlI58/nKxRYCny12mn1cg83LSMadKjAotCXEpZaJPR9+H
HIUY8ryrXhmLykiOdDa+QiX9S1lffrpGk47k88unr8uhYfqPWU3WZM4+nrpi
l+FX4qc14uuioukQ3mZnXCT7IOkTO2MnyS8X1k3TqyD5ZaRm173/8supTomA
dhYdsYHZK1O7SQ78wjK8QPahz8Uol7mZjtVjuf+0amjYMsVx43Ny/+Da6OLs
uTT8kTM984ZLwZSxzudfiM5VjkjtFPT1oEs9zebx3XbELjV1PKnJg5KV8dO7
AR0Y7+rqCqutxz0Ni+tv5rLBy7tpcy26BQ//ZGsekSlD4knW5YR9DOiflqVV
tDZiSatUhO/CPLjdDzw/x40GSbN1YfqHG1Aw+uHYtfosHNoVfei9AxWNs/It
B9vrcaLrU96ccxnoWzej7+skBWfyt/3xJzqffX/orIF7OpKLNjMkByh44sRX
/WvZBAtK/eMvKwsgFWJu5knmvV6o+AzurCbYKRyOG7rwDT9El98aI/5Lv2wn
/+xDI1R6vm/JX56LJfoSnjaEZ/fsNgxaYNOEiANy8/t0CqC7Mzz6/VcaIitK
rC/TW/DXSOTqUvlytBa1bLINYyCzUWz7x4+dOLDDMunHr0b8MkqoPydgQ9mm
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
on+t02S+YIatNVci+vu5AdWTukryvRX+RPfpuZc3RPKIumDqKhmSR2rvZj2o
JvkFx1tnWJP8Yix5KEKG5Jc6m770UyTviJ75fNH89XtkCYUPVpO8k5AhsU2C
nDcVEXWrZId0yIh9UREj5+2UqLtidSANypE62pmjBbC+KBTdziTzq6U5sda7
GWVPzeCc8w0G8s4h9QkcXDsv0/rqbCfK9MzdLKKbkdRzUfZgXS+sBxWjLUkf
Prbz0rXu2UzsnvmURl8iANf5p1c7jdQbA9XoD8c5SJeYKs8jfvuk0onUt3O5
cDbfM+2yZTc+b9izYYGaAJWbpB9+P8eFzkendkF3N/qTRwyXEV/09LDCtb3q
XFCszDIsHnUj5HaNkICMd+rseGPSzcFeW98JEZluBH6+zl9BeCs0PH3kD8nb
IUsfmamPc+EvyaMVkDy79qteTvY8LvF9EUqbjnZj53dZb3mynRNBHKHQ41wM
Ka50iKd1oyNscLB9kwD2bdaCX8ZcBKalfPqT3Q3ZYNs5N4g+5T53jsJlDhbP
f+Sz0YaLgtMW5x+SHH111aePSp9YMHNRyq4IYWE0RmvxweXkuI4I/7u0gAGD
4wktVpc6kLZ8Z0tAMZmv6XqlUcWt8LwotbnNuAGRX2kcM/1u7D/gPtzCb0QO
9ecJ9+ISvA6n9U20sHBwYfk8/c1UfMmQ+CD/8jPyKadvOwwyYHcs5vFJ+Qbw
VtTGPBL+gDMyWlTH9QwIx0zXe9RQD/fIdo2rc1IQ/sTub9BYF5TtJrLWltXj
oOcB+UaXZHju3brkHuFKIlTGy5Lw1j5nFdOKcJiovTh+hHCYJHH6v/s2i8bW
rZnk1quJ/999m3v/h/MjQv/j/Ov/y/k699hk0qcOddW+eHKLgszEghcaZP63
lYSt+VFIhciFb/fCrlNwJvT28KeDTKjctjMTJ3VeO/JChLkLBTePlcmcIHXe
K2JhdCHpFypu8/kzn5B+sXWt/EkyvwYNPWmaf6mYMvSyiDovD0Mj7wLivZjI
EXrnZfqUhpf+aRVay7/AWUXwJ66PzMf2qIzCgEbku4Q/MncpRvGxf6Xi4SwU
dI++FY6i4yOdHz1NowzaVncDI4+w4bxUcvPVGc2ItBqx9J5TjbOrX+xRtOBg
f0VOpoNWK76b5VoHHavHTIrTdFUGF3dtQ+l/rTtw7/mH4Cl1dARn6C/Xle5F
Kf/iacm2LrDNTBybY9uR6HGqcJ5bH9RP3r+6bDETs8enz5r+pwuZkZEGf2QF
+L0tJOITyXPzpYOjpJMY2N+5tNJTXoDbgXXvzgUxkerh1yb8kQErdueZh0Q3
3rqbf9uB+Di+kOf6Gwy4tgaeryN1Venh7lkCkttiVwhftXFhQLu0ZO9rorud
WDSDT87Tp9dXqFakPno2nk/Sn7zfaNz098kjJoQ4+0NCcxnYVuxomkN0p9mN
K1PJ+d7JnnJBcJyBkt0mAXZkO0+uPjh24DIDgb7NhlvzO3F7Lm1uF/FV8wrK
j++q7MQXI5O0DuMWTDT4vk2U4cEwyTPzsFsbYmt/mSh7UPHULrAvPYfM42Nx
vZ21zWjy9Y6k1dXA3zC9QYbFAWW2e24s8eeeXT+vp08hufik0mKFDDbENGj5
E+ONOLR8gVTEjxIU/Vsw0s9mYY1FoMjcnzQoHO7W1j5fiFBVvSVB61kQ9bRO
UVelYd3fA6YOF/MhvWGXr1c0E13rV1jwGqgItjs+5jtEwSJ99V+Rtkzk669Y
Kk047FajtN8jHCo0LA09RTj0PSoutY1wK7U+fv+dKxRsmXi3ZhPh9k7hp3fB
hHOpkG7pLG8KLiVpLFUgnC/Z4bhT6icdJ7jlYQXHy5GUldpx+jHxV8e2WB0d
oSPv+gx6vmU5foY82bshjI1/lr805b7TwZ8raJ/YW45Rn4TBTQ/ZsOBPY1b+
okN5x1rTrFPl+G5/mvY8nI07mtoDjtpNWLtY84+NeQUM18gHNZayYfMv4GxY
RROG/ol1ZWyvwi6pg615azjQHXtjsGt+M0rmvHg/a1s1WlMOLFc8xoHswpTM
KU5N0Ojq7TP+U4HYc18Dx3vYuPtOxmS5DR3WHxYwjhz8iitr92rMWMdGzLYE
Q2Y4HVdk54xmSJbh1jqd015mbPxI3XbznnYLHPfN/yUXU4uoT7mnv6hwYf+i
OOJ3aQembopq33evCV9Ko2ZTTvRCSWLz9JWFDMT6nLp1ya4LiikKnMvpfAwE
cwfuLGFhb1V0btVLJiL17ipwlwnwhm8w8+w3FoZnLL1rl8nCstaLD3pIXb2+
4PoPZwk29Fb98u1YSnK+sfLcUyRfV9hOL6xewAZTkGR/YD0bGfdCesOIbqpc
kHuA5MvIzy1PPk6ui58s9zd/hQB3dD4cGr/Kgl6e8iwFFeIzmjOn/FQUwMfB
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
         "]], {}}, AspectRatio -> 1, Frame -> True, 
      FrameLabel -> {None, None}, Method -> {}, 
      PlotRange -> {{1., 10.}, {0., 3.1}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}],TemplateBox[{
       StyleBox[
        StyleBox[
         PaneBox[
          GraphicsBox[{
            RasterBox[
             NCache[{{0}, {
                Rational[1, 200]}, {
                Rational[1, 100]}, {
                Rational[3, 200]}, {
                Rational[1, 50]}, {
                Rational[1, 40]}, {
                Rational[3, 100]}, {
                Rational[7, 200]}, {
                Rational[1, 25]}, {
                Rational[9, 200]}, {
                Rational[1, 20]}, {
                Rational[11, 200]}, {
                Rational[3, 50]}, {
                Rational[13, 200]}, {
                Rational[7, 100]}, {
                Rational[3, 40]}, {
                Rational[2, 25]}, {
                Rational[17, 200]}, {
                Rational[9, 100]}, {
                Rational[19, 200]}, {
                Rational[1, 10]}, {
                Rational[21, 200]}, {
                Rational[11, 100]}, {
                Rational[23, 200]}, {
                Rational[3, 25]}, {
                Rational[1, 8]}, {
                Rational[13, 100]}, {
                Rational[27, 200]}, {
                Rational[7, 50]}, {
                Rational[29, 200]}, {
                Rational[3, 20]}, {
                Rational[31, 200]}, {
                Rational[4, 25]}, {
                Rational[33, 200]}, {
                Rational[17, 100]}, {
                Rational[7, 40]}, {
                Rational[9, 50]}, {
                Rational[37, 200]}, {
                Rational[19, 100]}, {
                Rational[39, 200]}, {
                Rational[1, 5]}, {
                Rational[41, 200]}, {
                Rational[21, 100]}, {
                Rational[43, 200]}, {
                Rational[11, 50]}, {
                Rational[9, 40]}, {
                Rational[23, 100]}, {
                Rational[47, 200]}, {
                Rational[6, 25]}, {
                Rational[49, 200]}, {
                Rational[1, 4]}, {
                Rational[51, 200]}, {
                Rational[13, 50]}, {
                Rational[53, 200]}, {
                Rational[27, 100]}, {
                Rational[11, 40]}, {
                Rational[7, 25]}, {
                Rational[57, 200]}, {
                Rational[29, 100]}, {
                Rational[59, 200]}, {
                Rational[3, 10]}, {
                Rational[61, 200]}, {
                Rational[31, 100]}, {
                Rational[63, 200]}, {
                Rational[8, 25]}, {
                Rational[13, 40]}, {
                Rational[33, 100]}, {
                Rational[67, 200]}, {
                Rational[17, 50]}, {
                Rational[69, 200]}, {
                Rational[7, 20]}, {
                Rational[71, 200]}, {
                Rational[9, 25]}, {
                Rational[73, 200]}, {
                Rational[37, 100]}, {
                Rational[3, 8]}, {
                Rational[19, 50]}, {
                Rational[77, 200]}, {
                Rational[39, 100]}, {
                Rational[79, 200]}, {
                Rational[2, 5]}, {
                Rational[81, 200]}, {
                Rational[41, 100]}, {
                Rational[83, 200]}, {
                Rational[21, 50]}, {
                Rational[17, 40]}, {
                Rational[43, 100]}, {
                Rational[87, 200]}, {
                Rational[11, 25]}, {
                Rational[89, 200]}, {
                Rational[9, 20]}, {
                Rational[91, 200]}, {
                Rational[23, 50]}, {
                Rational[93, 200]}, {
                Rational[47, 100]}, {
                Rational[19, 40]}, {
                Rational[12, 25]}, {
                Rational[97, 200]}, {
                Rational[49, 100]}, {
                Rational[99, 200]}, {
                Rational[1, 2]}, {
                Rational[101, 200]}, {
                Rational[51, 100]}, {
                Rational[103, 200]}, {
                Rational[13, 25]}, {
                Rational[21, 40]}, {
                Rational[53, 100]}, {
                Rational[107, 200]}, {
                Rational[27, 50]}, {
                Rational[109, 200]}, {
                Rational[11, 20]}, {
                Rational[111, 200]}, {
                Rational[14, 25]}, {
                Rational[113, 200]}, {
                Rational[57, 100]}, {
                Rational[23, 40]}, {
                Rational[29, 50]}, {
                Rational[117, 200]}, {
                Rational[59, 100]}, {
                Rational[119, 200]}, {
                Rational[3, 5]}, {
                Rational[121, 200]}, {
                Rational[61, 100]}, {
                Rational[123, 200]}, {
                Rational[31, 50]}, {
                Rational[5, 8]}, {
                Rational[63, 100]}, {
                Rational[127, 200]}, {
                Rational[16, 25]}, {
                Rational[129, 200]}, {
                Rational[13, 20]}, {
                Rational[131, 200]}, {
                Rational[33, 50]}, {
                Rational[133, 200]}, {
                Rational[67, 100]}, {
                Rational[27, 40]}, {
                Rational[17, 25]}, {
                Rational[137, 200]}, {
                Rational[69, 100]}, {
                Rational[139, 200]}, {
                Rational[7, 10]}, {
                Rational[141, 200]}, {
                Rational[71, 100]}, {
                Rational[143, 200]}, {
                Rational[18, 25]}, {
                Rational[29, 40]}, {
                Rational[73, 100]}, {
                Rational[147, 200]}, {
                Rational[37, 50]}, {
                Rational[149, 200]}, {
                Rational[3, 4]}, {
                Rational[151, 200]}, {
                Rational[19, 25]}, {
                Rational[153, 200]}, {
                Rational[77, 100]}, {
                Rational[31, 40]}, {
                Rational[39, 50]}, {
                Rational[157, 200]}, {
                Rational[79, 100]}, {
                Rational[159, 200]}, {
                Rational[4, 5]}, {
                Rational[161, 200]}, {
                Rational[81, 100]}, {
                Rational[163, 200]}, {
                Rational[41, 50]}, {
                Rational[33, 40]}, {
                Rational[83, 100]}, {
                Rational[167, 200]}, {
                Rational[21, 25]}, {
                Rational[169, 200]}, {
                Rational[17, 20]}, {
                Rational[171, 200]}, {
                Rational[43, 50]}, {
                Rational[173, 200]}, {
                Rational[87, 100]}, {
                Rational[7, 8]}, {
                Rational[22, 25]}, {
                Rational[177, 200]}, {
                Rational[89, 100]}, {
                Rational[179, 200]}, {
                Rational[9, 10]}, {
                Rational[181, 200]}, {
                Rational[91, 100]}, {
                Rational[183, 200]}, {
                Rational[23, 25]}, {
                Rational[37, 40]}, {
                Rational[93, 100]}, {
                Rational[187, 200]}, {
                Rational[47, 50]}, {
                Rational[189, 200]}, {
                Rational[19, 20]}, {
                Rational[191, 200]}, {
                Rational[24, 25]}, {
                Rational[193, 200]}, {
                Rational[97, 100]}, {
                Rational[39, 40]}, {
                Rational[49, 50]}, {
                Rational[197, 200]}, {
                Rational[99, 100]}, {
                Rational[199, 200]}, {1}}, {{0}, {0.005}, {0.01}, {0.015}, {
               0.02}, {0.025}, {0.03}, {0.035}, {0.04}, {0.045}, {0.05}, {
               0.055}, {0.06}, {0.065}, {0.07}, {0.075}, {0.08}, {0.085}, {
               0.09}, {0.095}, {0.1}, {0.105}, {0.11}, {0.115}, {0.12}, {
               0.125}, {0.13}, {0.135}, {0.14}, {0.145}, {0.15}, {0.155}, {
               0.16}, {0.165}, {0.17}, {0.175}, {0.18}, {0.185}, {0.19}, {
               0.195}, {0.2}, {0.205}, {0.21}, {0.215}, {0.22}, {0.225}, {
               0.23}, {0.235}, {0.24}, {0.245}, {0.25}, {0.255}, {0.26}, {
               0.265}, {0.27}, {0.275}, {0.28}, {0.285}, {0.29}, {0.295}, {
               0.3}, {0.305}, {0.31}, {0.315}, {0.32}, {0.325}, {0.33}, {
               0.335}, {0.34}, {0.345}, {0.35}, {0.355}, {0.36}, {0.365}, {
               0.37}, {0.375}, {0.38}, {0.385}, {0.39}, {0.395}, {0.4}, {
               0.405}, {0.41}, {0.415}, {0.42}, {0.425}, {0.43}, {0.435}, {
               0.44}, {0.445}, {0.45}, {0.455}, {0.46}, {0.465}, {0.47}, {
               0.475}, {0.48}, {0.485}, {0.49}, {0.495}, {0.5}, {0.505}, {
               0.51}, {0.515}, {0.52}, {0.525}, {0.53}, {0.535}, {0.54}, {
               0.545}, {0.55}, {0.555}, {0.56}, {0.565}, {0.57}, {0.575}, {
               0.58}, {0.585}, {0.59}, {0.595}, {0.6}, {0.605}, {0.61}, {
               0.615}, {0.62}, {0.625}, {0.63}, {0.635}, {0.64}, {0.645}, {
               0.65}, {0.655}, {0.66}, {0.665}, {0.67}, {0.675}, {0.68}, {
               0.685}, {0.69}, {0.695}, {0.7}, {0.705}, {0.71}, {0.715}, {
               0.72}, {0.725}, {0.73}, {0.735}, {0.74}, {0.745}, {0.75}, {
               0.755}, {0.76}, {0.765}, {0.77}, {0.775}, {0.78}, {0.785}, {
               0.79}, {0.795}, {0.8}, {0.805}, {0.81}, {0.815}, {0.82}, {
               0.825}, {0.83}, {0.835}, {0.84}, {0.845}, {0.85}, {0.855}, {
               0.86}, {0.865}, {0.87}, {0.875}, {0.88}, {0.885}, {0.89}, {
               0.895}, {0.9}, {0.905}, {0.91}, {0.915}, {0.92}, {0.925}, {
               0.93}, {0.935}, {0.94}, {0.945}, {0.95}, {0.955}, {0.96}, {
               0.965}, {0.97}, {0.975}, {0.98}, {0.985}, {0.99}, {0.995}, {
               1}}], {{
               Rational[-15, 2], 
               Rational[-225, 2]}, {
               Rational[15, 2], 
               Rational[225, 2]}}, ColorFunction -> (Blend[{
                RGBColor[0.293416, 0.0574044, 0.529412], 
                RGBColor[
                0.563820859082933, 0.527565423056382, 0.909498741130694], 
                RGBColor[0.762631, 0.846998, 0.914031], 
                RGBColor[0.941176, 0.906538, 0.834043]}, #]& )], 
            StyleBox[{}, Antialiasing -> False], 
            StyleBox[
             StyleBox[{{
                GrayLevel[0], 
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                
                LineBox[{{7.500000000000001, -112.5}, {7.500000000000001, 
                 112.5}}]}, {{{
                  GrayLevel[0.4], 
                  AbsoluteThickness[0.2], 
                  LineBox[{{{7.500000000000001, -112.5}, 
                    Offset[{4., 0}, {7.500000000000001, -112.5}]}, {{
                    7.500000000000001, -55.24809160305343}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -55.24809160305343}]}, {{
                    7.500000000000001, 2.0038167938931335`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    2.0038167938931335`}]}, {{7.500000000000001, 
                    59.2557251908397}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    59.2557251908397}]}}]}, {
                  GrayLevel[0.4], 
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  LineBox[{{{7.500000000000001, -98.18702290076335}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -98.18702290076335}]}, {{
                    7.500000000000001, -83.87404580152672}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -83.87404580152672}]}, {{
                    7.500000000000001, -69.56106870229007}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -69.56106870229007}]}, {{
                    7.500000000000001, -40.93511450381679}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -40.93511450381679}]}, {{
                    7.500000000000001, -26.62213740458015}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -26.62213740458015}]}, {{
                    7.500000000000001, -12.309160305343509`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -12.309160305343509`}]}, {{
                    7.500000000000001, 16.316793893129777`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    16.316793893129777`}]}, {{7.500000000000001, 
                    30.629770992366417`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    30.629770992366417`}]}, {{7.500000000000001, 
                    44.94274809160308}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    44.94274809160308}]}, {{7.500000000000001, 
                    73.56870229007635}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    73.56870229007635}]}, {{7.500000000000001, 
                    87.88167938931298}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    87.88167938931298}]}, {{7.500000000000001, 
                    102.19465648854963`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    102.19465648854963`}]}}]}}, {
                 GrayLevel[0.3], 
                 DynamicBox[
                  Directive[
                   CurrentValue[{GraphicsBoxOptions, LabelStyle}]], 
                  ImageSizeCache -> {{
                   4.503599627370496*^15, -4.503599627370496*^15}, {
                   4.503599627370496*^15, -4.503599627370496*^15}}], {{
                   GrayLevel[0.3], 
                   InsetBox["0", 
                    Offset[{7., 0.}, {7.500000000000001, -112.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -55.24809160305343}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    2.0038167938931335`}], {-1, 0.}, Automatic, {1, 0}], 
                   InsetBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    59.2557251908397}], {-1, 0.}, Automatic, {1, 0}]}, {
                   GrayLevel[
                   0.3], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}}}, Antialiasing -> False], "GraphicsAxes", StripOnInput -> False]}, 
           AspectRatio -> Automatic, Frame -> True, FrameStyle -> Directive[
             Opacity[0.3], 
             GrayLevel[0]], FrameTicks -> False, 
           ImageSize -> {Automatic, 225}, PlotRange -> All, PlotRangePadding -> 
           None], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          StripOnInput -> False, LineIndent -> 0], StripOnInput -> False, 
        FontFamily -> "Times", Background -> Automatic]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.293416`", ",", "0.0574044`", ",", "0.529412`"}], "]"}],
                     ",", 
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.563820859082933`", ",", "0.527565423056382`", ",", 
                    "0.909498741130694`"}], "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.762631`", ",", "0.846998`", ",", "0.914031`"}],
                     "]"}], ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.941176`", ",", "0.906538`", ",", "0.834043`"}],
                     "]"}]}], "}"}], ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "6.310528319913759`*^-32", ",", "0.785654725027462`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5727415254025555`*^9, {3.5727415573646193`*^9, 3.572741571498417*^9}, {
   3.5727437607527475`*^9, 3.572743808435806*^9}, 3.572743885505603*^9, 
   3.5727892111764927`*^9, 3.572789271052004*^9, 3.5727894148114967`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"Jackson1", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"4", "*", "\[Omega]0"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.572744719051179*^9, 3.572744733180972*^9}, {
  3.572744879260542*^9, 3.572744879722604*^9}, {3.5727450667013693`*^9, 
  3.572745068852646*^9}, {3.5727451479627028`*^9, 3.5727451480496798`*^9}, {
  3.572745267743929*^9, 3.572745267841942*^9}, {3.5727466905422225`*^9, 
  3.572746690598192*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal option. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/NIntegrate\\\", ButtonNote -> \
\\\"NIntegrate::izero\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5727447209094114`*^9, 3.5727447337530446`*^9}, 
   3.57274488011265*^9, 3.572745069569734*^9, 3.572745149211858*^9, {
   3.5727452586337695`*^9, 3.5727452700262156`*^9}, 3.5727466911772995`*^9, 
   3.5727877615547543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Landau", "[", 
  RowBox[{".4", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.5727448463053217`*^9, 3.57274488428018*^9}, {
  3.5727463435476823`*^9, 3.5727463661125507`*^9}, {3.5727466423560977`*^9, 
  3.5727466727519584`*^9}}],

Cell[BoxData["0.38144035211004657`"], "Output",
 CellChangeTimes->{{3.572744858571912*^9, 3.57274488452421*^9}, 
   3.572745492997586*^9, 3.572745583938014*^9, {3.572746343982734*^9, 
   3.572746366395583*^9}, {3.5727466430741844`*^9, 3.5727466732100153`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jackson1", "[", 
  RowBox[{".4", ",", 
   RowBox[{"10", "*", "\[Omega]0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.572745495525885*^9, 3.5727455021287208`*^9}, {
  3.5727463389550953`*^9, 3.5727463390491114`*^9}, {3.5727466390646796`*^9, 
  3.572746668454415*^9}}],

Cell[BoxData["0.9755281902098073`"], "Output",
 CellChangeTimes->{
  3.5727455024997673`*^9, 3.5727455862663183`*^9, 3.572746339554171*^9, {
   3.572746635943282*^9, 3.572746675040251*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2l", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"Landau", "[", 
          RowBox[{
           RowBox[{"\[Theta]", "-", 
            RowBox[{"\[Pi]", "/", "2"}]}], ",", "4"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", ".1"}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.572744770639734*^9, 3.572744771828889*^9}, {
  3.5727448238064957`*^9, 3.5727448328926516`*^9}, {3.572744890923027*^9, 
  3.572744918677558*^9}, {3.5727451553366394`*^9, 3.5727451554546556`*^9}, {
  3.572745271763441*^9, 3.572745271836446*^9}, {3.572745608150092*^9, 
  3.5727456557551455`*^9}, {3.572746336857829*^9, 3.5727463368828354`*^9}, {
  3.5727463705691137`*^9, 3.5727463708821936`*^9}, {3.57274668008889*^9, 
  3.5727466828082047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DataLandau2", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"p2", ",", "p2l"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5727439949455156`*^9, 3.572744153128069*^9}, {
  3.5727442928198233`*^9, 3.572744293899965*^9}, {3.5727445342034197`*^9, 
  3.5727446554900994`*^9}, {3.572744743868334*^9, 3.572744752124385*^9}, {
  3.572744898705018*^9, 3.572744909301364*^9}, {3.572744975425766*^9, 
  3.5727449797543173`*^9}, {3.5727451623804975`*^9, 3.5727451807138653`*^9}, {
  3.5727452843790436`*^9, 3.57274528631429*^9}, {3.572745619621552*^9, 
  3.5727456337083397`*^9}, {3.5727463809614024`*^9, 3.5727463837627945`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQPuh64pik21cJ41EwR22m/+4Pe62BTGP2mvXLbe
LFzL0tnEGAQu2zv3S7PJqTpA5W/a3wj6MUHmi4czxLQH9lqzDzjEbQiGqn9s
37Hx7vS8PTHO6Wkg8Mw+vJ1d5uPrJKj+l/b2zD674yanOZ89AwJv7NWemp4S
2ZQBNe+DvfLJnx8qZTKh6j/az67yTu4Uy4Ca/9k+5Dn7vGhtmP4v9q7XpNsL
/iRD7ftmH+DMvJNFOglq3g/7d0Fpy85/TICa99O+J2k3q9WeBKh5v+0n74sx
bWpJhJr3x9755v6/y5Rh5v2zP/3LvVXSKRVqHoOD2irB1ddi0qHqGRwe9ZYL
xVzNgJrP6PBZQUNqvmAmVD+Tg7jXdUelVelQ+5gdAmNVw/fOSIGax+IQslXo
0/yABKh5LA5XTtkdvBQYDjWP1aHjw9qNkqF+UPPYHFx5g0IZJZ2h5rE7bJ33
OKtGxBpqHodDYgPvyt9GFlDzOBySdZ7kz6i1cAYAr/LUMg==
      "]]}, {}}, {{}, 
    {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQMH/rj4t/E90541EwR22gudkfz64vENOwj/pP3D
jZMaGdea2ZsYg8Bl+1Uskp/i12TbQ+Rv2h8zPnLvX2q/PcS0B/b7Gj/O33Jj
GVT9Y3sln1a7o8t32KengcAz+1CV0+dtYo9C9b+0f+bieeet7Xn7s2dA4I29
zEz1tx2fL0PN+2B/vlh2XeGta1D1H+3nLWTyamW5ATX/s722Koctx7rrUP1f
7Ofe2LvTu/Aa1L5v9t8SUy/cYb0KNe+Hfc8nBqUDHFeg5v20N8n936Zx8zLU
vN/2dj5mSwU7rkDN+2PvNtlq3rarV6Hm/bNf333h3Gbr61DzGBzenEjfcYP9
BlQ9g8NmjyXPbnRfh5rP6LBjkof/gxiYfiYHq4PSjHG9F6H2MTvEJb8wuF5z
Emoei4PRtdo/Sjv3Q81jcbj5caWTieUGqHmsDhxaOclnJ86EmsfmwF4mufvB
yWqoeewOTLnHlz9aHAA1j8Ohorf58gkfDqh5HA4yfcrcN98k2AEAx67oVQ==

      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 3.1}, {0, 5.654547581830991*^16}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.062000000000000006`, 0.062000000000000006`}, {
   1.1309095163661982`*^15, 1.1309095163661982`*^15}}]], "Output",
 CellChangeTimes->{{3.572744909679409*^9, 3.5727449229941006`*^9}, 
   3.57274498009836*^9, 3.572745091709551*^9, {3.5727451578009534`*^9, 
   3.572745181097911*^9}, {3.5727452636444054`*^9, 3.5727452865463204`*^9}, 
   3.572745547069435*^9, {3.572745588645611*^9, 3.572745666687533*^9}, 
   3.5727461277942553`*^9, {3.5727463726273546`*^9, 3.572746384007822*^9}, 
   3.572746696943034*^9, 3.5727877679055233`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ArrayFlatten", "[", 
  RowBox[{"DataLandau", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.5727392783255186`*^9, 3.572739315016183*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{"DataLandau", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.572739257369855*^9, 3.572739262469499*^9}, {
  3.5727393241673427`*^9, 3.572739329429011*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.572739275717183*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"Jackson1", "[", 
      RowBox[{"\[Theta]", ",", "\[Omega]"}], "]"}], "-", 
     RowBox[{"Landau", "[", 
      RowBox[{
       RowBox[{"\[Theta]", "-", 
        FractionBox["\[Pi]", "2"]}], ",", 
       FractionBox["\[Omega]", "\[Omega]0"]}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", 
     RowBox[{"10", "*", "\[Omega]0"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57272233065301*^9, 3.572722334246964*^9}, {
  3.5727223669684143`*^9, 3.572722418677391*^9}, {3.572722464603757*^9, 
  3.572722480105644*^9}, {3.5727225936470942`*^9, 3.572722614492985*^9}, {
  3.572737508855461*^9, 3.5727375191897745`*^9}, {3.57273821136103*^9, 
  3.572738211962101*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.5727214783305025`*^9, 3.572721972072895*^9, {3.572722347889284*^9, 
   3.572722421255622*^9}, 3.572722486434069*^9, 3.572722831959502*^9, 
   3.5727390236728554`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Jackson1", "[", 
    RowBox[{
     RowBox[{"\[Theta]", "-", 
      FractionBox["\[Pi]", "2"]}], ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5727224333198004`*^9, 3.572722439663904*^9}, {
  3.5727382290542774`*^9, 3.57273823276475*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) . \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\
\\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\((\\(\
\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\({\\(\\(\\(\
\\(-0.9`\\)\\)\\\\ \\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \
\\(\\(0.9`\\\\ \\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0}\\)\\))\\)\
\\)\\)\\)\\)\[NoBreak] has evaluated to non-numerical values for all sampling \
points in the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727382356991205`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) . \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\
\\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\((\\(\
\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\({\\(\\(\\(\
\\(-0.9`\\)\\)\\\\ \\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \
\\(\\(0.9`\\\\ \\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0}\\)\\))\\)\
\\)\\)\\)\\)\[NoBreak] has evaluated to non-numerical values for all sampling \
points in the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.572738235769128*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "inumr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The integrand \
\[NoBreak]\\!\\(\[ExponentialE]\\^\\(10000000\\\\ \[ImaginaryI]\\\\ \\(\\((t \
- \\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) . \\(\\({\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)\\)\\/300000000)\\)\\)\\)\\\\ \\(\
\\(\\(\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\((\\(\
\\(0.002145`[\\(\\(-1.570571702920165`\\)\\)]\\)\\) \[Cross] \\(\\({\\(\\(\\(\
\\(-0.9`\\)\\)\\\\ \\(\\(Sin[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), \
\\(\\(0.9`\\\\ \\(\\(Cos[\\(\\(2.7`*^6\\\\ t\\)\\)]\\)\\)\\)\\), 0}\\)\\))\\)\
\\)\\)\\)\\)\[NoBreak] has evaluated to non-numerical values for all sampling \
points in the region with boundaries \
\[NoBreak]\\!\\({\\({\\(\\(-1.1635528346628863`*^-6\\)\\), \
1.1635528346628863`*^-6}\\)}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/inumr\\\", ButtonNote -> \
\\\"NIntegrate::inumr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727382358181334`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: inumr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5727382359211464`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.572722440570181*^9, {3.572738222733472*^9, 3.5727382373403263`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Landau", "[", 
  RowBox[{"2.5", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.5727206462566996`*^9, 3.572720665211917*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.374232152277177`"}]], "Output",
 CellChangeTimes->{{3.5727206608523145`*^9, 3.572720665571282*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Jackson1", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"10", "*", "\[Omega]0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5727212939114532`*^9, 3.5727213197565613`*^9}, {
  3.572721364227642*^9, 3.5727213808535156`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->
   NCache[{{0, Pi}, {0., 3.9342110043117575`}}, {{0, 3.141592653589793}, {0., 
     3.9342110043117575`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5727213071933727`*^9, 3.572721320100298*^9}, 
   3.572721394588581*^9, 3.572722023968296*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.57272165562726*^9, 3.572721655642886*^9}}]
},
WindowSize->{1348, 729},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 4009, 113, 545, "Input"],
Cell[4591, 137, 143, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4771, 144, 210, 4, 45, "Input"],
Cell[4984, 150, 211, 5, 44, "Output"]
}, Open  ]],
Cell[5210, 158, 141, 2, 45, "Input"],
Cell[5354, 162, 96, 1, 45, "Input"],
Cell[5453, 165, 1447, 31, 76, "Input"],
Cell[6903, 198, 115, 1, 75, "Input"],
Cell[7021, 201, 1916, 61, 175, "Input"],
Cell[8940, 264, 179, 3, 45, "Input"],
Cell[9122, 269, 2367, 70, 151, "Input"],
Cell[11492, 341, 94, 1, 45, "Input"],
Cell[CellGroupData[{
Cell[11611, 346, 840, 18, 45, "Input"],
Cell[12454, 366, 664, 13, 65, "Message"],
Cell[13121, 381, 1450, 27, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14608, 413, 592, 14, 45, "Input"],
Cell[15203, 429, 1252, 26, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16492, 460, 183, 4, 45, "Input"],
Cell[16678, 466, 113, 1, 44, "Output"]
}, Open  ]],
Cell[16806, 470, 801, 22, 75, "Input"],
Cell[17610, 494, 731, 20, 75, "Input"],
Cell[CellGroupData[{
Cell[18366, 518, 154, 3, 45, "Input"],
Cell[18523, 523, 1784, 35, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20344, 563, 1561, 36, 104, "Input"],
Cell[21908, 601, 1493, 25, 125, "Message"],
Cell[23404, 628, 1495, 25, 125, "Message"],
Cell[24902, 655, 1498, 25, 125, "Message"],
Cell[26403, 682, 802, 15, 35, "Message"],
Cell[27208, 699, 851, 15, 65, "Message"],
Cell[28062, 716, 849, 15, 65, "Message"],
Cell[28914, 733, 846, 15, 65, "Message"],
Cell[29763, 750, 1141, 20, 74, "Message"],
Cell[30907, 772, 1223, 22, 103, "Message"],
Cell[32133, 796, 849, 15, 65, "Message"],
Cell[32985, 813, 802, 15, 35, "Message"],
Cell[33790, 830, 846, 15, 65, "Message"],
Cell[34639, 847, 1156, 20, 74, "Message"],
Cell[35798, 869, 801, 15, 35, "Message"],
Cell[36602, 886, 846, 15, 65, "Message"],
Cell[37451, 903, 803, 15, 35, "Message"],
Cell[38257, 920, 45878, 874, 567, "Output"]
}, Open  ]],
Cell[84150, 1797, 1818, 36, 191, "Input"],
Cell[85971, 1835, 96, 1, 45, InheritFromParent],
Cell[86070, 1838, 1874, 48, 139, "Input"],
Cell[CellGroupData[{
Cell[87969, 1890, 1026, 25, 104, "Input"],
Cell[88998, 1917, 1280, 22, 125, "Message"],
Cell[90281, 1941, 1236, 21, 125, "Message"],
Cell[91520, 1964, 1236, 21, 125, "Message"],
Cell[92759, 1987, 655, 13, 35, "Message"],
Cell[93417, 2002, 704, 13, 65, "Message"],
Cell[94124, 2017, 706, 13, 65, "Message"],
Cell[94833, 2032, 701, 13, 65, "Message"],
Cell[95537, 2047, 654, 13, 35, "Message"],
Cell[96194, 2062, 75776, 1253, 427, "Output"]
}, Open  ]],
Cell[171985, 3318, 866, 23, 104, "Input"],
Cell[172854, 3343, 2615, 61, 131, "Input"],
Cell[CellGroupData[{
Cell[175494, 3408, 410, 8, 45, "Input"],
Cell[175907, 3418, 362, 5, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176306, 3428, 282, 6, 45, "Input"],
Cell[176591, 3436, 195, 2, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176823, 3443, 137, 4, 45, "Input"],
Cell[176963, 3449, 361, 12, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177361, 3466, 992, 25, 112, "Input"],
Cell[178356, 3493, 1554, 25, 125, "Message"],
Cell[179913, 3520, 1554, 25, 125, "Message"],
Cell[181470, 3547, 1554, 25, 125, "Message"],
Cell[183027, 3574, 863, 15, 35, "Message"],
Cell[183893, 3591, 910, 15, 65, "Message"],
Cell[184806, 3608, 910, 15, 65, "Message"],
Cell[185719, 3625, 910, 15, 65, "Message"],
Cell[186632, 3642, 861, 15, 35, "Message"],
Cell[187496, 3659, 905, 15, 65, "Message"],
Cell[188404, 3676, 1198, 20, 74, "Message"],
Cell[189605, 3698, 1279, 22, 103, "Message"],
Cell[190887, 3722, 905, 15, 65, "Message"],
Cell[191795, 3739, 1215, 20, 74, "Message"],
Cell[193013, 3761, 858, 15, 35, "Message"],
Cell[193874, 3778, 903, 15, 65, "Message"],
Cell[194780, 3795, 862, 15, 35, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195679, 3815, 467, 9, 45, "Input"],
Cell[196149, 3826, 30722, 637, 563, "Output"]
}, Open  ]],
Cell[226886, 4466, 886, 16, 133, "Input"],
Cell[CellGroupData[{
Cell[227797, 4486, 1849, 44, 215, "Input"],
Cell[229649, 4532, 1380, 24, 125, "Message"],
Cell[231032, 4558, 1385, 24, 125, "Message"],
Cell[232420, 4584, 1385, 24, 125, "Message"],
Cell[233808, 4610, 687, 14, 35, "Message"],
Cell[234498, 4626, 736, 14, 65, "Message"],
Cell[235237, 4642, 736, 14, 65, "Message"],
Cell[235976, 4658, 738, 14, 65, "Message"],
Cell[236717, 4674, 689, 14, 35, "Message"],
Cell[237409, 4690, 733, 14, 65, "Message"],
Cell[238145, 4706, 1026, 19, 74, "Message"],
Cell[239174, 4727, 1110, 21, 103, "Message"],
Cell[240287, 4750, 733, 14, 65, "Message"],
Cell[241023, 4766, 1043, 19, 74, "Message"],
Cell[242069, 4787, 685, 14, 35, "Message"],
Cell[242757, 4803, 731, 14, 65, "Message"],
Cell[243491, 4819, 688, 14, 35, "Message"],
Cell[244182, 4835, 165795, 2955, 410, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410014, 7795, 752, 18, 45, "Input"],
Cell[410769, 7815, 786, 14, 65, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411592, 7834, 257, 5, 45, "Input"],
Cell[411852, 7841, 260, 3, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412149, 7849, 290, 6, 45, "Input"],
Cell[412442, 7857, 189, 3, 44, "Output"]
}, Open  ]],
Cell[412646, 7863, 1010, 23, 45, "Input"],
Cell[CellGroupData[{
Cell[413681, 7890, 641, 10, 45, "Input"],
Cell[414325, 7902, 2060, 39, 344, "Output"]
}, Open  ]],
Cell[416400, 7944, 165, 3, 45, "Input"],
Cell[CellGroupData[{
Cell[416590, 7951, 257, 5, 45, "Input"],
Cell[416850, 7958, 77, 1, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416964, 7964, 940, 22, 112, "Input"],
Cell[417907, 7988, 226, 4, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418170, 7997, 460, 12, 68, "Input"],
Cell[418633, 8011, 1172, 20, 125, "Message"],
Cell[419808, 8033, 1170, 20, 125, "Message"],
Cell[420981, 8055, 1172, 20, 125, "Message"],
Cell[422156, 8077, 536, 11, 35, "Message"],
Cell[422695, 8090, 128, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422860, 8097, 153, 3, 45, "Input"],
Cell[423016, 8102, 130, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423183, 8109, 371, 9, 45, "Input"],
Cell[423557, 8120, 18322, 308, 378, "Output"]
}, Open  ]],
Cell[441894, 8431, 91, 1, 45, "Input"]
}
]
*)

(* End of internal cache information *)
